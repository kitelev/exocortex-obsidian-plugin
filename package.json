{
  "name": "exocortex-obsidian-plugin",
  "version": "7.11.0",
  "description": "Exocortex: A configurable UI system for Obsidian that transforms knowledge management through ontology-driven layouts and semantic capabilities",
  "main": "main.js",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "dev": "node esbuild.config.mjs",
    "build": "tsc -noEmit -skipLibCheck && node esbuild.config.mjs production",
    "lint": "eslint src --ext .ts,.tsx",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "format": "prettier --write 'src/**/*.{ts,tsx}'",
    "format:check": "prettier --check 'src/**/*.{ts,tsx}'",
    "check:compile": "./scripts/check-compilation.sh",
    "check:types": "tsc --noEmit --skipLibCheck",
    "check:unused": "ts-unused-exports tsconfig.json --showLineNumber --excludePathsFromReport=tests",
    "check:all": "npm run check:types && npm run lint && npm run format:check",
    "prepare": "husky install",
    "version": "node version-bump.mjs && git add manifest.json versions.json",
    "validate": "node scripts/validate-plugin.js",
    "generate-changelog": "node scripts/generate-changelog.js",
    "prepare-release": "node scripts/prepare-release.js",
    "test": "npm run test:unit",
    "test:unit": "./scripts/test-ci-batched.sh",
    "test:unit:safe": "jest --runInBand --forceExit --maxWorkers=1",
    "test:unit:emergency": "./scripts/emergency-ci-test-runner.sh",
    "test:integration": "jest -c jest.integration.config.js",
    "test:watch": "jest --watch --testPathIgnorePatterns='/tests/e2e/'",
    "test:coverage": "jest --coverage --testPathIgnorePatterns='/tests/e2e/'",
    "test:e2e": "./run-e2e-local.sh",
    "test:e2e:legacy": "node tests/e2e/plugin-loading.test.js",
    "test:e2e:query": "node tests/e2e/query-functionality.test.js",
    "test:e2e:all": "npm run test:e2e && npm run test:e2e:query",
    "test:e2e:quick": "./run-e2e-quick.sh",
    "test:e2e:stable": "./run-e2e-stable.sh",
    "test:e2e:modal": "wdio run wdio.e2e.conf.ts --spec tests/e2e/specs/create-asset-modal.spec.ts",
    "test:e2e:layout": "wdio run wdio.e2e.conf.ts --spec tests/e2e/specs/dynamic-layout.spec.ts",
    "test:e2e:universal": "wdio run wdio.e2e.conf.ts --spec tests/e2e/specs/universal-layout.spec.ts",
    "test:e2e:docker": "wdio run wdio.e2e.conf.ts",
    "test:e2e:docker:dynamic": "wdio run wdio.e2e.conf.ts --spec tests/e2e/specs/dynamic-layout.spec.ts",
    "test:e2e:docker:modal": "wdio run wdio.e2e.conf.ts --spec tests/e2e/specs/create-asset-modal.spec.ts",
    "test:e2e:docker:universal": "wdio run wdio.e2e.conf.ts --spec tests/e2e/specs/universal-layout.spec.ts",
    "test:e2e:docker:stability": "./tests/e2e/docker/run-stable-quick.sh",
    "test:screenshots": "docker-compose -f docker-compose.screenshot-test.yml run --rm screenshot-test",
    "test:screenshots:debug": "docker-compose -f docker-compose.screenshot-test.yml run --rm debug-test",
    "test:screenshots:verify": "docker-compose -f docker-compose.screenshot-test.yml run --rm verify-screenshots",
    "test:screenshots:clean": "docker-compose -f docker-compose.screenshot-test.yml down && docker system prune -f",
    "test:e2e:playwright": "playwright test",
    "test:e2e:playwright:ui": "playwright test --ui",
    "test:e2e:playwright:headed": "playwright test --headed",
    "test:e2e:playwright:debug": "playwright test --debug",
    "test:bdd": "jest -c tests/bdd/jest.config.js",
    "test:bdd:watch": "jest -c tests/bdd/jest.config.js --watch",
    "test:bdd:coverage": "jest -c tests/bdd/jest.config.js --coverage",
    "test:bdd:smoke": "./scripts/run-bdd-tests.sh smoke",
    "test:bdd:security": "./scripts/run-bdd-tests.sh security",
    "test:bdd:api": "./scripts/run-bdd-tests.sh api",
    "bdd:validate-coverage": "node scripts/validate-bdd-coverage.js",
    "bdd:validate-coverage:strict": "node scripts/validate-bdd-coverage.js --threshold=90 --verbose",
    "bdd:generate-report": "node scripts/generate-bdd-report.js",
    "bdd:coverage-check": "npm run bdd:validate-coverage && npm run bdd:generate-report",
    "cucumber": "cucumber-js",
    "cucumber:run": "cucumber-js features/**/*.feature --require features/step_definitions/**/*.ts --require features/support/**/*.ts --require-module ts-node/register",
    "cucumber:watch": "cucumber-js features/**/*.feature --require features/step_definitions/**/*.ts --require features/support/**/*.ts --require-module ts-node/register --watch",
    "cucumber:ci": "cucumber-js features/**/*.feature --require features/step_definitions/**/*.ts --require features/support/**/*.ts --require-module ts-node/register --profile ci",
    "cucumber:smoke": "cucumber-js features/**/*.feature --tags @smoke --require features/step_definitions/**/*.ts --require features/support/**/*.ts --require-module ts-node/register",
    "cucumber:semantic": "cucumber-js features/**/*.feature --tags @semantic --require features/step_definitions/**/*.ts --require features/support/**/*.ts --require-module ts-node/register",
    "cucumber:mobile": "cucumber-js features/**/*.feature --tags @mobile --require features/step_definitions/**/*.ts --require features/support/**/*.ts --require-module ts-node/register",
    "cucumber:business": "cucumber-js features/**/*.feature --tags @business --require features/step_definitions/**/*.ts --require features/support/**/*.ts --require-module ts-node/register",
    "cucumber:report": "cucumber-html-reporter -c cucumber-html-reporter.js",
    "test:mobile": "./scripts/run-mobile-tests.sh",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e:all",
    "test:all:interactive": "./scripts/run-all-tests.sh",
    "test:all:parallel": "./scripts/run-tests-parallel.sh",
    "test:ci": "npm run test:unit && npm run test:integration && npm run test:e2e:all",
    "test:contract": "jest tests/contract/*.test.ts",
    "test:mutation": "./scripts/run-mutation-tests.sh",
    "test:e2e-obsidian": "jest -c jest.e2e-obsidian.config.js",
    "test:e2e-obsidian:watch": "jest -c jest.e2e-obsidian.config.js --watch",
    "test:e2e-obsidian:docker": "docker-compose -f docker-compose.e2e-obsidian.yml up --build --abort-on-container-exit"
  },
  "keywords": [
    "obsidian",
    "obsidian-plugin",
    "exocortex",
    "knowledge-base",
    "ontology",
    "semantic"
  ],
  "author": "A. Kitelev",
  "license": "MIT",
  "devDependencies": {
    "@cucumber/cucumber": "^11.3.0",
    "@cucumber/pretty-formatter": "^2.1.0",
    "@playwright/test": "^1.40.0",
    "@types/chai": "^5.2.2",
    "@types/jest": "^30.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/jsdom": "^21.1.7",
    "@types/mocha": "^10.0.10",
    "@types/node": "^18.19.0",
    "@typescript-eslint/eslint-plugin": "^5.29.0",
    "@typescript-eslint/parser": "^5.29.0",
    "@wdio/allure-reporter": "^9.19.2",
    "@wdio/cli": "^9.19.2",
    "@wdio/json-reporter": "^9.19.2",
    "@wdio/local-runner": "^9.19.2",
    "@wdio/mocha-framework": "^9.19.2",
    "@wdio/spec-reporter": "^9.19.2",
    "@wdio/types": "^8.41.0",
    "allure-commandline": "^2.34.1",
    "builtin-modules": "3.3.0",
    "chai": "^5.3.3",
    "cucumber-html-reporter": "^7.2.0",
    "esbuild": "0.17.3",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-prettier": "^5.5.4",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-cucumber": "^4.5.0",
    "jest-environment-jsdom": "^30.0.5",
    "jest-environment-obsidian": "^0.0.1",
    "jsdom": "^26.1.0",
    "json5": "^2.2.3",
    "obsidian": "latest",
    "obsidian-launcher": "^2.1.1",
    "playwright": "^1.40.0",
    "playwright-core": "^1.40.0",
    "prettier": "^3.6.2",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "ts-unused-exports": "^11.0.1",
    "tslib": "^2.4.0",
    "tsx": "^4.20.5",
    "typescript": "4.7.4",
    "wdio-obsidian-reporter": "^2.1.1",
    "wdio-obsidian-service": "^2.1.1",
    "webdriverio": "^9.19.2"
  },
  "dependencies": {
    "@types/uuid": "^10.0.0",
    "js-yaml": "^4.1.0",
    "uuid": "^11.1.0"
  }
}
