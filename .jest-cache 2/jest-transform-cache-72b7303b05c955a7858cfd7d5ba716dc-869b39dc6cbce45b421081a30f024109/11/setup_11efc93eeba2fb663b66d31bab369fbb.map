{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/tests/setup.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/tests/setup.ts"],"sourcesContent":["/**\n * Jest Test Setup\n * Configures the testing environment for CI and local development\n */\n\n// Note: jest-dom is not available, using custom DOM extensions\n\n// Setup DOM globals that might be missing in CI\nObject.defineProperty(global, 'ResizeObserver', {\n  writable: true,\n  value: jest.fn().mockImplementation(() => ({\n    observe: jest.fn(),\n    unobserve: jest.fn(),\n    disconnect: jest.fn(),\n  })),\n});\n\n// Mock HTMLElement methods that might not exist in JSDOM\nif (typeof HTMLElement !== 'undefined') {\n  HTMLElement.prototype.scrollIntoView = jest.fn();\n  HTMLElement.prototype.scrollTo = jest.fn();\n  HTMLElement.prototype.focus = jest.fn();\n  HTMLElement.prototype.blur = jest.fn();\n  \n  // Add addClass/removeClass methods for compatibility with Obsidian\n  HTMLElement.prototype.addClass = function(className: string) {\n    this.classList.add(className);\n    return this;\n  };\n  \n  HTMLElement.prototype.removeClass = function(className: string) {\n    this.classList.remove(className);\n    return this;\n  };\n  \n  HTMLElement.prototype.toggleClass = function(className: string, force?: boolean) {\n    this.classList.toggle(className, force);\n    return this;\n  };\n  \n  HTMLElement.prototype.hasClass = function(className: string) {\n    return this.classList.contains(className);\n  };\n}\n\n// Mock window.matchMedia if it doesn't exist\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// Mock window.getComputedStyle\nObject.defineProperty(window, 'getComputedStyle', {\n  value: jest.fn().mockImplementation(() => ({\n    getPropertyValue: jest.fn().mockReturnValue(''),\n    setProperty: jest.fn(),\n    removeProperty: jest.fn(),\n  })),\n});\n\n// Suppress console logs during tests unless explicitly enabled\nconst originalConsoleLog = console.log;\nconst originalConsoleWarn = console.warn;\nconst originalConsoleError = console.error;\n\nbeforeEach(() => {\n  if (process.env.CI && !process.env.JEST_VERBOSE) {\n    // Suppress logs in CI unless verbose mode is enabled\n    console.log = jest.fn();\n    console.warn = jest.fn();\n    console.error = jest.fn();\n  }\n});\n\nafterEach(() => {\n  // Restore console methods after each test\n  console.log = originalConsoleLog;\n  console.warn = originalConsoleWarn;\n  console.error = originalConsoleError;\n});\n\n// Global CI environment detection\n(global as any).isCI = process.env.CI === 'true' || process.env.GITHUB_ACTIONS === 'true';\n\n// Note: Removed automatic fake timers as they can cause timeout issues in CI\n// Individual tests should use jest.useFakeTimers() when needed"],"version":3}