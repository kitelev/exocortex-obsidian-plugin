6029b8557a25504986b0884c9ee26c3e
"use strict";

/* istanbul ignore next */
function cov_1415xdtsds() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/RenderClassButtonsUseCase.ts";
  var hash = "e09188eae6eaa2a03fd5b0731cff822346756329";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/RenderClassButtonsUseCase.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 43
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 52
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 67
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 55
        }
      },
      "6": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 49
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "8": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 18,
          column: 13
        }
      },
      "9": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 70
        }
      },
      "10": {
        start: {
          line: 20,
          column: 36
        },
        end: {
          line: 20,
          column: 83
        }
      },
      "11": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 23,
          column: 13
        }
      },
      "12": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 67
        }
      },
      "13": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 56
        }
      },
      "14": {
        start: {
          line: 26,
          column: 36
        },
        end: {
          line: 26,
          column: 93
        }
      },
      "15": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 29,
          column: 13
        }
      },
      "16": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 99
        }
      },
      "17": {
        start: {
          line: 30,
          column: 30
        },
        end: {
          line: 30,
          column: 56
        }
      },
      "18": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "19": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 39,
          column: 19
        }
      },
      "20": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "21": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "22": {
        start: {
          line: 52,
          column: 35
        },
        end: {
          line: 52,
          column: 64
        }
      },
      "23": {
        start: {
          line: 54,
          column: 37
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "24": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "25": {
        start: {
          line: 56,
          column: 38
        },
        end: {
          line: 56,
          column: 99
        }
      },
      "26": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 60,
          column: 17
        }
      },
      "27": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 107
        }
      },
      "28": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 29
        }
      },
      "29": {
        start: {
          line: 61,
          column: 32
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "30": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 65,
          column: 17
        }
      },
      "31": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 78
        }
      },
      "32": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 29
        }
      },
      "33": {
        start: {
          line: 67,
          column: 35
        },
        end: {
          line: 70,
          column: 18
        }
      },
      "34": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 86,
          column: 17
        }
      },
      "35": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 85,
          column: 23
        }
      },
      "36": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 63
        }
      },
      "37": {
        start: {
          line: 89,
          column: 44
        },
        end: {
          line: 89,
          column: 61
        }
      },
      "38": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "39": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 100,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 55
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 55
          },
          end: {
            line: 14,
            column: 56
          }
        },
        loc: {
          start: {
            line: 14,
            column: 68
          },
          end: {
            line: 97,
            column: 9
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 89,
            column: 34
          },
          end: {
            line: 89,
            column: 35
          }
        },
        loc: {
          start: {
            line: 89,
            column: 44
          },
          end: {
            line: 89,
            column: 61
          }
        },
        line: 89
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 23,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 23,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 60,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 60,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 34
          },
          end: {
            line: 69,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 69,
            column: 110
          }
        }, {
          start: {
            line: 69,
            column: 115
          },
          end: {
            line: 69,
            column: 120
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 69,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 86
          },
          end: {
            line: 69,
            column: 92
          }
        }, {
          start: {
            line: 69,
            column: 95
          },
          end: {
            line: 69,
            column: 110
          }
        }],
        line: 69
      },
      "9": {
        loc: {
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 69,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 69,
            column: 66
          }
        }, {
          start: {
            line: 69,
            column: 70
          },
          end: {
            line: 69,
            column: 83
          }
        }],
        line: 69
      },
      "10": {
        loc: {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 86,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 86,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/RenderClassButtonsUseCase.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/RenderClassButtonsUseCase.ts"],
      sourcesContent: ["import { UseCase } from '../core/UseCase';\nimport { Result } from '../../domain/core/Result';\nimport { IClassViewRepository } from '../../domain/repositories/IClassViewRepository';\nimport { IButtonRepository } from '../../domain/repositories/IButtonRepository';\nimport { ClassName } from '../../domain/value-objects/ClassName';\nimport { UIButton } from '../../domain/entities/UIButton';\nimport { ButtonCommand } from '../../domain/entities/ButtonCommand';\n\n/**\n * Use Case for rendering buttons in an asset view\n * Following Clean Architecture - orchestrates domain logic\n */\nexport interface RenderClassButtonsRequest {\n    className: string;\n    assetId?: string;\n    context?: {\n        hasSelection: boolean;\n        currentUser?: string;\n    };\n}\n\nexport interface ButtonRenderData {\n    buttonId: string;\n    label: string;\n    tooltip?: string;\n    isEnabled: boolean;\n    order: number;\n    command: {\n        id: string;\n        type: string;\n        requiresInput: boolean;\n        parameters: any[];\n    };\n}\n\nexport interface RenderClassButtonsResponse {\n    buttons: ButtonRenderData[];\n    displayOptions: {\n        position: 'top' | 'bottom' | 'floating';\n        showButtons: boolean;\n    };\n}\n\nexport class RenderClassButtonsUseCase \n    implements UseCase<RenderClassButtonsRequest, RenderClassButtonsResponse> {\n    \n    constructor(\n        private classViewRepository: IClassViewRepository,\n        private buttonRepository: IButtonRepository\n    ) {}\n\n    async execute(request: RenderClassButtonsRequest): Promise<Result<RenderClassButtonsResponse>> {\n        // Validate request\n        if (!request.className) {\n            return Result.fail<RenderClassButtonsResponse>('Class name is required');\n        }\n\n        // Create ClassName value object\n        const classNameResult = ClassName.create(request.className);\n        if (classNameResult.isFailure) {\n            return Result.fail<RenderClassButtonsResponse>(classNameResult.error);\n        }\n        const className = classNameResult.getValue();\n\n        // Find ClassView configuration\n        const classViewResult = await this.classViewRepository.findByClassName(className);\n        if (classViewResult.isFailure) {\n            return Result.fail<RenderClassButtonsResponse>(\n                `Failed to load class view: ${classViewResult.error}`\n            );\n        }\n\n        const classView = classViewResult.getValue();\n        \n        // If no ClassView configured, return empty buttons\n        if (!classView) {\n            return Result.ok<RenderClassButtonsResponse>({\n                buttons: [],\n                displayOptions: {\n                    position: 'top',\n                    showButtons: false\n                }\n            });\n        }\n\n        // Check if buttons should be shown\n        if (!classView.displayOptions.showButtons) {\n            return Result.ok<RenderClassButtonsResponse>({\n                buttons: [],\n                displayOptions: {\n                    position: classView.displayOptions.buttonPosition,\n                    showButtons: false\n                }\n            });\n        }\n\n        // Get enabled buttons\n        const enabledButtons = classView.getEnabledButtons();\n        \n        // Load commands for each button\n        const buttonRenderData: ButtonRenderData[] = [];\n        \n        for (const button of enabledButtons) {\n            const commandResult = await this.buttonRepository.findCommandById(button.commandId);\n            \n            if (commandResult.isFailure) {\n                console.warn(`Failed to load command for button ${button.id}: ${commandResult.error}`);\n                continue;\n            }\n\n            const command = commandResult.getValue();\n            if (!command) {\n                console.warn(`Command not found for button ${button.id}`);\n                continue;\n            }\n\n            // Check if command can be executed in current context\n            const canExecute = command.canExecute({\n                currentClass: request.className,\n                hasSelection: request.context?.hasSelection || false\n            });\n\n            // Only include button if it can be executed\n            if (canExecute) {\n                buttonRenderData.push({\n                    buttonId: button.id.toString(),\n                    label: button.label,\n                    tooltip: button.tooltip,\n                    isEnabled: button.isEnabled,\n                    order: button.order,\n                    command: {\n                        id: command.id.toString(),\n                        type: command.type,\n                        requiresInput: command.requiresInput,\n                        parameters: command.parameters\n                    }\n                });\n            }\n        }\n\n        // Sort buttons by order\n        buttonRenderData.sort((a, b) => a.order - b.order);\n\n        return Result.ok<RenderClassButtonsResponse>({\n            buttons: buttonRenderData,\n            displayOptions: {\n                position: classView.displayOptions.buttonPosition,\n                showButtons: true\n            }\n        });\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e09188eae6eaa2a03fd5b0731cff822346756329"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1415xdtsds = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1415xdtsds();
cov_1415xdtsds().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1415xdtsds().s[1]++;
exports.RenderClassButtonsUseCase = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1415xdtsds().s[2]++, require("tslib"));
const Result_1 =
/* istanbul ignore next */
(cov_1415xdtsds().s[3]++, require("../../domain/core/Result"));
const ClassName_1 =
/* istanbul ignore next */
(cov_1415xdtsds().s[4]++, require("../../domain/value-objects/ClassName"));
class RenderClassButtonsUseCase {
  constructor(classViewRepository, buttonRepository) {
    /* istanbul ignore next */
    cov_1415xdtsds().f[0]++;
    cov_1415xdtsds().s[5]++;
    this.classViewRepository = classViewRepository;
    /* istanbul ignore next */
    cov_1415xdtsds().s[6]++;
    this.buttonRepository = buttonRepository;
  }
  execute(request) {
    /* istanbul ignore next */
    cov_1415xdtsds().f[1]++;
    var _a;
    /* istanbul ignore next */
    cov_1415xdtsds().s[7]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1415xdtsds().f[2]++;
      cov_1415xdtsds().s[8]++;
      // Validate request
      if (!request.className) {
        /* istanbul ignore next */
        cov_1415xdtsds().b[0][0]++;
        cov_1415xdtsds().s[9]++;
        return Result_1.Result.fail('Class name is required');
      } else
      /* istanbul ignore next */
      {
        cov_1415xdtsds().b[0][1]++;
      }
      // Create ClassName value object
      const classNameResult =
      /* istanbul ignore next */
      (cov_1415xdtsds().s[10]++, ClassName_1.ClassName.create(request.className));
      /* istanbul ignore next */
      cov_1415xdtsds().s[11]++;
      if (classNameResult.isFailure) {
        /* istanbul ignore next */
        cov_1415xdtsds().b[1][0]++;
        cov_1415xdtsds().s[12]++;
        return Result_1.Result.fail(classNameResult.error);
      } else
      /* istanbul ignore next */
      {
        cov_1415xdtsds().b[1][1]++;
      }
      const className =
      /* istanbul ignore next */
      (cov_1415xdtsds().s[13]++, classNameResult.getValue());
      // Find ClassView configuration
      const classViewResult =
      /* istanbul ignore next */
      (cov_1415xdtsds().s[14]++, yield this.classViewRepository.findByClassName(className));
      /* istanbul ignore next */
      cov_1415xdtsds().s[15]++;
      if (classViewResult.isFailure) {
        /* istanbul ignore next */
        cov_1415xdtsds().b[2][0]++;
        cov_1415xdtsds().s[16]++;
        return Result_1.Result.fail(`Failed to load class view: ${classViewResult.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_1415xdtsds().b[2][1]++;
      }
      const classView =
      /* istanbul ignore next */
      (cov_1415xdtsds().s[17]++, classViewResult.getValue());
      // If no ClassView configured, return empty buttons
      /* istanbul ignore next */
      cov_1415xdtsds().s[18]++;
      if (!classView) {
        /* istanbul ignore next */
        cov_1415xdtsds().b[3][0]++;
        cov_1415xdtsds().s[19]++;
        return Result_1.Result.ok({
          buttons: [],
          displayOptions: {
            position: 'top',
            showButtons: false
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1415xdtsds().b[3][1]++;
      }
      // Check if buttons should be shown
      cov_1415xdtsds().s[20]++;
      if (!classView.displayOptions.showButtons) {
        /* istanbul ignore next */
        cov_1415xdtsds().b[4][0]++;
        cov_1415xdtsds().s[21]++;
        return Result_1.Result.ok({
          buttons: [],
          displayOptions: {
            position: classView.displayOptions.buttonPosition,
            showButtons: false
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1415xdtsds().b[4][1]++;
      }
      // Get enabled buttons
      const enabledButtons =
      /* istanbul ignore next */
      (cov_1415xdtsds().s[22]++, classView.getEnabledButtons());
      // Load commands for each button
      const buttonRenderData =
      /* istanbul ignore next */
      (cov_1415xdtsds().s[23]++, []);
      /* istanbul ignore next */
      cov_1415xdtsds().s[24]++;
      for (const button of enabledButtons) {
        const commandResult =
        /* istanbul ignore next */
        (cov_1415xdtsds().s[25]++, yield this.buttonRepository.findCommandById(button.commandId));
        /* istanbul ignore next */
        cov_1415xdtsds().s[26]++;
        if (commandResult.isFailure) {
          /* istanbul ignore next */
          cov_1415xdtsds().b[5][0]++;
          cov_1415xdtsds().s[27]++;
          console.warn(`Failed to load command for button ${button.id}: ${commandResult.error}`);
          /* istanbul ignore next */
          cov_1415xdtsds().s[28]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1415xdtsds().b[5][1]++;
        }
        const command =
        /* istanbul ignore next */
        (cov_1415xdtsds().s[29]++, commandResult.getValue());
        /* istanbul ignore next */
        cov_1415xdtsds().s[30]++;
        if (!command) {
          /* istanbul ignore next */
          cov_1415xdtsds().b[6][0]++;
          cov_1415xdtsds().s[31]++;
          console.warn(`Command not found for button ${button.id}`);
          /* istanbul ignore next */
          cov_1415xdtsds().s[32]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1415xdtsds().b[6][1]++;
        }
        // Check if command can be executed in current context
        const canExecute =
        /* istanbul ignore next */
        (cov_1415xdtsds().s[33]++, command.canExecute({
          currentClass: request.className,
          hasSelection:
          /* istanbul ignore next */
          (cov_1415xdtsds().b[7][0]++,
          /* istanbul ignore next */
          (cov_1415xdtsds().b[9][0]++, (_a = request.context) === null) ||
          /* istanbul ignore next */
          (cov_1415xdtsds().b[9][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1415xdtsds().b[8][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1415xdtsds().b[8][1]++, _a.hasSelection)) ||
          /* istanbul ignore next */
          (cov_1415xdtsds().b[7][1]++, false)
        }));
        // Only include button if it can be executed
        /* istanbul ignore next */
        cov_1415xdtsds().s[34]++;
        if (canExecute) {
          /* istanbul ignore next */
          cov_1415xdtsds().b[10][0]++;
          cov_1415xdtsds().s[35]++;
          buttonRenderData.push({
            buttonId: button.id.toString(),
            label: button.label,
            tooltip: button.tooltip,
            isEnabled: button.isEnabled,
            order: button.order,
            command: {
              id: command.id.toString(),
              type: command.type,
              requiresInput: command.requiresInput,
              parameters: command.parameters
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_1415xdtsds().b[10][1]++;
        }
      }
      // Sort buttons by order
      /* istanbul ignore next */
      cov_1415xdtsds().s[36]++;
      buttonRenderData.sort((a, b) => {
        /* istanbul ignore next */
        cov_1415xdtsds().f[3]++;
        cov_1415xdtsds().s[37]++;
        return a.order - b.order;
      });
      /* istanbul ignore next */
      cov_1415xdtsds().s[38]++;
      return Result_1.Result.ok({
        buttons: buttonRenderData,
        displayOptions: {
          position: classView.displayOptions.buttonPosition,
          showButtons: true
        }
      });
    });
  }
}
/* istanbul ignore next */
cov_1415xdtsds().s[39]++;
exports.RenderClassButtonsUseCase = RenderClassButtonsUseCase;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,