13d1adbee75e379d25f6f134441dd56e
"use strict";

/* istanbul ignore next */
function cov_fapk1wk8p() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianOntologyRepository.ts";
  var hash = "89da7ea0175d142554b766c4f5f4d18c29b86e89";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianOntologyRepository.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 44
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 60
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 23
        }
      },
      "6": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 26,
          column: 11
        }
      },
      "7": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "8": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 18,
          column: 71
        }
      },
      "9": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 24,
          column: 13
        }
      },
      "10": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 20,
          column: 71
        }
      },
      "11": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 23,
          column: 17
        }
      },
      "12": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 82
        }
      },
      "13": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "15": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 31,
          column: 59
        }
      },
      "16": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "17": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "18": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 39,
          column: 17
        }
      },
      "19": {
        start: {
          line: 35,
          column: 34
        },
        end: {
          line: 35,
          column: 75
        }
      },
      "20": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 38,
          column: 21
        }
      },
      "21": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 96
        }
      },
      "22": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "24": {
        start: {
          line: 46,
          column: 29
        },
        end: {
          line: 46,
          column: 69
        }
      },
      "25": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 56
        }
      },
      "26": {
        start: {
          line: 49,
          column: 30
        },
        end: {
          line: 49,
          column: 37
        }
      },
      "27": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "28": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "29": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 46
        }
      },
      "30": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 55,
          column: 21
        }
      },
      "31": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 54,
          column: 54
        }
      },
      "32": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 55
        }
      },
      "33": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 38
        }
      },
      "34": {
        start: {
          line: 62,
          column: 28
        },
        end: {
          line: 62,
          column: 48
        }
      },
      "35": {
        start: {
          line: 64,
          column: 33
        },
        end: {
          line: 64,
          column: 79
        }
      },
      "36": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "37": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 67
        }
      },
      "38": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 63
        }
      },
      "39": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "40": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 75,
          column: 55
        }
      },
      "41": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 76,
          column: 71
        }
      },
      "42": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 52
        }
      },
      "43": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 81,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 55
          },
          end: {
            line: 16,
            column: 56
          }
        },
        loc: {
          start: {
            line: 16,
            column: 68
          },
          end: {
            line: 26,
            column: 9
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 14
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 55
          },
          end: {
            line: 30,
            column: 56
          }
        },
        loc: {
          start: {
            line: 30,
            column: 68
          },
          end: {
            line: 42,
            column: 9
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 44
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 45,
            column: 55
          },
          end: {
            line: 45,
            column: 56
          }
        },
        loc: {
          start: {
            line: 45,
            column: 68
          },
          end: {
            line: 71,
            column: 9
          }
        },
        line: 45
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 19
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 74,
            column: 55
          },
          end: {
            line: 74,
            column: 56
          }
        },
        loc: {
          start: {
            line: 74,
            column: 68
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 74
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 24,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 24,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 23,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 23,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 21,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 57
          },
          end: {
            line: 21,
            column: 63
          }
        }, {
          start: {
            line: 21,
            column: 66
          },
          end: {
            line: 21,
            column: 83
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 21,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 21,
            column: 34
          }
        }, {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 21,
            column: 54
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 39,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 39,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 38,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 38,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 158
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 123
          },
          end: {
            line: 36,
            column: 129
          }
        }, {
          start: {
            line: 36,
            column: 132
          },
          end: {
            line: 36,
            column: 158
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 103
          }
        }, {
          start: {
            line: 36,
            column: 107
          },
          end: {
            line: 36,
            column: 120
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 36,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 67
          },
          end: {
            line: 36,
            column: 73
          }
        }, {
          start: {
            line: 36,
            column: 76
          },
          end: {
            line: 36,
            column: 93
          }
        }],
        line: 36
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 36,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 36,
            column: 44
          }
        }, {
          start: {
            line: 36,
            column: 48
          },
          end: {
            line: 36,
            column: 64
          }
        }],
        line: 36
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 59,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 59,
            column: 17
          }
        }, {
          start: {
            line: 57,
            column: 21
          },
          end: {
            line: 59,
            column: 17
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: 68,
            column: 17
          },
          end: {
            line: 70,
            column: 13
          }
        }],
        line: 65
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianOntologyRepository.ts",
      mappings: ";;;;AAAA,uCAAsC;AAEtC,6DAA0D;AAG1D;;;GAGG;AACH,MAAa,0BAA0B;IACnC,YAAoB,GAAQ;QAAR,QAAG,GAAH,GAAG,CAAK;IAAG,CAAC;IAE1B,YAAY,CAAC,MAAsB;;YACrC,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC;YAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YAE5D,IAAI,IAAI,YAAY,gBAAK,EAAE;gBACvB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxD,IAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,EAAE;oBACpB,OAAO,mBAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBACtD;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAEK,OAAO;;;YACT,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YAChD,MAAM,UAAU,GAAe,EAAE,CAAC;YAElC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACtB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;oBAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACxD,IAAI,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,0CAAG,sBAAsB,CAAC,EAAE;wBAC9C,UAAU,CAAC,IAAI,CAAC,mBAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;qBAChE;iBACJ;aACJ;YAED,OAAO,UAAU,CAAC;;KACrB;IAEK,IAAI,CAAC,QAAkB;;YACzB,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC;YAC1D,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,EAAE,CAAC;YAE7C,yBAAyB;YACzB,MAAM,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC;YAC1B,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBACpD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACtB,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC1B,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;wBACtB,SAAS,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;qBACjC;iBACJ;qBAAM;oBACH,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,KAAK,EAAE,CAAC,CAAC;iBACtC;aACJ;YACD,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAE1B,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAErC,uBAAuB;YACvB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YACpE,IAAI,YAAY,YAAY,gBAAK,EAAE;gBAC/B,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;aACtD;iBAAM;gBACH,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aAClD;QACL,CAAC;KAAA;IAEK,MAAM,CAAC,MAAsB;;YAC/B,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC;YAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YAC5D,OAAO,IAAI,YAAY,gBAAK,CAAC;QACjC,CAAC;KAAA;CACJ;AAnED,gEAmEC",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianOntologyRepository.ts"],
      sourcesContent: ["import { App, TFile } from 'obsidian';\nimport { IOntologyRepository } from '../../domain/repositories/IOntologyRepository';\nimport { Ontology } from '../../domain/entities/Ontology';\nimport { OntologyPrefix } from '../../domain/value-objects/OntologyPrefix';\n\n/**\n * Obsidian implementation of IOntologyRepository\n * Handles ontology persistence using Obsidian vault\n */\nexport class ObsidianOntologyRepository implements IOntologyRepository {\n    constructor(private app: App) {}\n\n    async findByPrefix(prefix: OntologyPrefix): Promise<Ontology | null> {\n        const fileName = `!${prefix.toString()}.md`;\n        const file = this.app.vault.getAbstractFileByPath(fileName);\n        \n        if (file instanceof TFile) {\n            const cache = this.app.metadataCache.getFileCache(file);\n            if (cache?.frontmatter) {\n                return Ontology.fromFrontmatter(cache.frontmatter);\n            }\n        }\n        \n        return null;\n    }\n\n    async findAll(): Promise<Ontology[]> {\n        const files = this.app.vault.getMarkdownFiles();\n        const ontologies: Ontology[] = [];\n        \n        for (const file of files) {\n            if (file.name.startsWith('!')) {\n                const cache = this.app.metadataCache.getFileCache(file);\n                if (cache?.frontmatter?.['exo__Ontology_prefix']) {\n                    ontologies.push(Ontology.fromFrontmatter(cache.frontmatter));\n                }\n            }\n        }\n        \n        return ontologies;\n    }\n\n    async save(ontology: Ontology): Promise<void> {\n        const fileName = `!${ontology.getPrefix().toString()}.md`;\n        const frontmatter = ontology.toFrontmatter();\n        \n        // Build YAML frontmatter\n        const yamlLines = ['---'];\n        for (const [key, value] of Object.entries(frontmatter)) {\n            if (Array.isArray(value)) {\n                yamlLines.push(`${key}:`);\n                for (const item of value) {\n                    yamlLines.push(`  - ${item}`);\n                }\n            } else {\n                yamlLines.push(`${key}: ${value}`);\n            }\n        }\n        yamlLines.push('---', '');\n        \n        const content = yamlLines.join('\\n');\n        \n        // Check if file exists\n        const existingFile = this.app.vault.getAbstractFileByPath(fileName);\n        if (existingFile instanceof TFile) {\n            await this.app.vault.modify(existingFile, content);\n        } else {\n            await this.app.vault.create(fileName, content);\n        }\n    }\n\n    async exists(prefix: OntologyPrefix): Promise<boolean> {\n        const fileName = `!${prefix.toString()}.md`;\n        const file = this.app.vault.getAbstractFileByPath(fileName);\n        return file instanceof TFile;\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "89da7ea0175d142554b766c4f5f4d18c29b86e89"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fapk1wk8p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fapk1wk8p();
cov_fapk1wk8p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_fapk1wk8p().s[1]++;
exports.ObsidianOntologyRepository = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_fapk1wk8p().s[2]++, require("tslib"));
const obsidian_1 =
/* istanbul ignore next */
(cov_fapk1wk8p().s[3]++, require("obsidian"));
const Ontology_1 =
/* istanbul ignore next */
(cov_fapk1wk8p().s[4]++, require("../../domain/entities/Ontology"));
/**
 * Obsidian implementation of IOntologyRepository
 * Handles ontology persistence using Obsidian vault
 */
class ObsidianOntologyRepository {
  constructor(app) {
    /* istanbul ignore next */
    cov_fapk1wk8p().f[0]++;
    cov_fapk1wk8p().s[5]++;
    this.app = app;
  }
  findByPrefix(prefix) {
    /* istanbul ignore next */
    cov_fapk1wk8p().f[1]++;
    cov_fapk1wk8p().s[6]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_fapk1wk8p().f[2]++;
      const fileName =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[7]++, `!${prefix.toString()}.md`);
      const file =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[8]++, this.app.vault.getAbstractFileByPath(fileName));
      /* istanbul ignore next */
      cov_fapk1wk8p().s[9]++;
      if (file instanceof obsidian_1.TFile) {
        /* istanbul ignore next */
        cov_fapk1wk8p().b[0][0]++;
        const cache =
        /* istanbul ignore next */
        (cov_fapk1wk8p().s[10]++, this.app.metadataCache.getFileCache(file));
        /* istanbul ignore next */
        cov_fapk1wk8p().s[11]++;
        if (
        /* istanbul ignore next */
        (cov_fapk1wk8p().b[3][0]++, cache === null) ||
        /* istanbul ignore next */
        (cov_fapk1wk8p().b[3][1]++, cache === void 0) ?
        /* istanbul ignore next */
        (cov_fapk1wk8p().b[2][0]++, void 0) :
        /* istanbul ignore next */
        (cov_fapk1wk8p().b[2][1]++, cache.frontmatter)) {
          /* istanbul ignore next */
          cov_fapk1wk8p().b[1][0]++;
          cov_fapk1wk8p().s[12]++;
          return Ontology_1.Ontology.fromFrontmatter(cache.frontmatter);
        } else
        /* istanbul ignore next */
        {
          cov_fapk1wk8p().b[1][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_fapk1wk8p().b[0][1]++;
      }
      cov_fapk1wk8p().s[13]++;
      return null;
    });
  }
  findAll() {
    /* istanbul ignore next */
    cov_fapk1wk8p().f[3]++;
    var _a;
    /* istanbul ignore next */
    cov_fapk1wk8p().s[14]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_fapk1wk8p().f[4]++;
      const files =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[15]++, this.app.vault.getMarkdownFiles());
      const ontologies =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[16]++, []);
      /* istanbul ignore next */
      cov_fapk1wk8p().s[17]++;
      for (const file of files) {
        /* istanbul ignore next */
        cov_fapk1wk8p().s[18]++;
        if (file.name.startsWith('!')) {
          /* istanbul ignore next */
          cov_fapk1wk8p().b[4][0]++;
          const cache =
          /* istanbul ignore next */
          (cov_fapk1wk8p().s[19]++, this.app.metadataCache.getFileCache(file));
          /* istanbul ignore next */
          cov_fapk1wk8p().s[20]++;
          if (
          /* istanbul ignore next */
          (cov_fapk1wk8p().b[7][0]++, (_a =
          /* istanbul ignore next */
          (cov_fapk1wk8p().b[9][0]++, cache === null) ||
          /* istanbul ignore next */
          (cov_fapk1wk8p().b[9][1]++, cache === void 0) ?
          /* istanbul ignore next */
          (cov_fapk1wk8p().b[8][0]++, void 0) :
          /* istanbul ignore next */
          (cov_fapk1wk8p().b[8][1]++, cache.frontmatter)) === null) ||
          /* istanbul ignore next */
          (cov_fapk1wk8p().b[7][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_fapk1wk8p().b[6][0]++, void 0) :
          /* istanbul ignore next */
          (cov_fapk1wk8p().b[6][1]++, _a['exo__Ontology_prefix'])) {
            /* istanbul ignore next */
            cov_fapk1wk8p().b[5][0]++;
            cov_fapk1wk8p().s[21]++;
            ontologies.push(Ontology_1.Ontology.fromFrontmatter(cache.frontmatter));
          } else
          /* istanbul ignore next */
          {
            cov_fapk1wk8p().b[5][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_fapk1wk8p().b[4][1]++;
        }
      }
      /* istanbul ignore next */
      cov_fapk1wk8p().s[22]++;
      return ontologies;
    });
  }
  save(ontology) {
    /* istanbul ignore next */
    cov_fapk1wk8p().f[5]++;
    cov_fapk1wk8p().s[23]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_fapk1wk8p().f[6]++;
      const fileName =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[24]++, `!${ontology.getPrefix().toString()}.md`);
      const frontmatter =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[25]++, ontology.toFrontmatter());
      // Build YAML frontmatter
      const yamlLines =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[26]++, ['---']);
      /* istanbul ignore next */
      cov_fapk1wk8p().s[27]++;
      for (const [key, value] of Object.entries(frontmatter)) {
        /* istanbul ignore next */
        cov_fapk1wk8p().s[28]++;
        if (Array.isArray(value)) {
          /* istanbul ignore next */
          cov_fapk1wk8p().b[10][0]++;
          cov_fapk1wk8p().s[29]++;
          yamlLines.push(`${key}:`);
          /* istanbul ignore next */
          cov_fapk1wk8p().s[30]++;
          for (const item of value) {
            /* istanbul ignore next */
            cov_fapk1wk8p().s[31]++;
            yamlLines.push(`  - ${item}`);
          }
        } else {
          /* istanbul ignore next */
          cov_fapk1wk8p().b[10][1]++;
          cov_fapk1wk8p().s[32]++;
          yamlLines.push(`${key}: ${value}`);
        }
      }
      /* istanbul ignore next */
      cov_fapk1wk8p().s[33]++;
      yamlLines.push('---', '');
      const content =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[34]++, yamlLines.join('\n'));
      // Check if file exists
      const existingFile =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[35]++, this.app.vault.getAbstractFileByPath(fileName));
      /* istanbul ignore next */
      cov_fapk1wk8p().s[36]++;
      if (existingFile instanceof obsidian_1.TFile) {
        /* istanbul ignore next */
        cov_fapk1wk8p().b[11][0]++;
        cov_fapk1wk8p().s[37]++;
        yield this.app.vault.modify(existingFile, content);
      } else {
        /* istanbul ignore next */
        cov_fapk1wk8p().b[11][1]++;
        cov_fapk1wk8p().s[38]++;
        yield this.app.vault.create(fileName, content);
      }
    });
  }
  exists(prefix) {
    /* istanbul ignore next */
    cov_fapk1wk8p().f[7]++;
    cov_fapk1wk8p().s[39]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_fapk1wk8p().f[8]++;
      const fileName =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[40]++, `!${prefix.toString()}.md`);
      const file =
      /* istanbul ignore next */
      (cov_fapk1wk8p().s[41]++, this.app.vault.getAbstractFileByPath(fileName));
      /* istanbul ignore next */
      cov_fapk1wk8p().s[42]++;
      return file instanceof obsidian_1.TFile;
    });
  }
}
/* istanbul ignore next */
cov_fapk1wk8p().s[43]++;
exports.ObsidianOntologyRepository = ObsidianOntologyRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,