5f8674ebecb88b389e7ef9ca4b5a8c99
"use strict";

/* istanbul ignore next */
function cov_1xnhundxyn() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianAssetRepository.ts";
  var hash = "f35c41c327007040b9b936778a8c5021ae82274e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianAssetRepository.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 41
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 23
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "7": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "8": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 25,
          column: 13
        }
      },
      "9": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 20,
          column: 71
        }
      },
      "10": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 24,
          column: 17
        }
      },
      "11": {
        start: {
          line: 22,
          column: 36
        },
        end: {
          line: 22,
          column: 67
        }
      },
      "12": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 91
        }
      },
      "13": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "15": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 31,
          column: 59
        }
      },
      "16": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 29
        }
      },
      "17": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "18": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 34,
          column: 71
        }
      },
      "19": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "20": {
        start: {
          line: 36,
          column: 36
        },
        end: {
          line: 36,
          column: 76
        }
      },
      "21": {
        start: {
          line: 37,
          column: 39
        },
        end: {
          line: 37,
          column: 83
        }
      },
      "22": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 43,
          column: 21
        }
      },
      "23": {
        start: {
          line: 38,
          column: 45
        },
        end: {
          line: 38,
          column: 103
        }
      },
      "24": {
        start: {
          line: 39,
          column: 38
        },
        end: {
          line: 39,
          column: 101
        }
      },
      "25": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 42,
          column: 25
        }
      },
      "26": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 47
        }
      },
      "27": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "29": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "30": {
        start: {
          line: 52,
          column: 27
        },
        end: {
          line: 52,
          column: 29
        }
      },
      "31": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "32": {
        start: {
          line: 54,
          column: 30
        },
        end: {
          line: 54,
          column: 71
        }
      },
      "33": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "34": {
        start: {
          line: 56,
          column: 37
        },
        end: {
          line: 56,
          column: 80
        }
      },
      "35": {
        start: {
          line: 57,
          column: 42
        },
        end: {
          line: 57,
          column: 130
        }
      },
      "36": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 63,
          column: 21
        }
      },
      "37": {
        start: {
          line: 59,
          column: 38
        },
        end: {
          line: 59,
          column: 101
        }
      },
      "38": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "39": {
        start: {
          line: 61,
          column: 28
        },
        end: {
          line: 61,
          column: 47
        }
      },
      "40": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 26
        }
      },
      "41": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "42": {
        start: {
          line: 72,
          column: 32
        },
        end: {
          line: 72,
          column: 53
        }
      },
      "43": {
        start: {
          line: 74,
          column: 29
        },
        end: {
          line: 74,
          column: 33
        }
      },
      "44": {
        start: {
          line: 76,
          column: 31
        },
        end: {
          line: 76,
          column: 98
        }
      },
      "45": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "46": {
        start: {
          line: 78,
          column: 29
        },
        end: {
          line: 78,
          column: 77
        }
      },
      "47": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 81,
          column: 17
        }
      },
      "48": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 80,
          column: 38
        }
      },
      "49": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "50": {
        start: {
          line: 85,
          column: 32
        },
        end: {
          line: 85,
          column: 61
        }
      },
      "51": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 95,
          column: 17
        }
      },
      "52": {
        start: {
          line: 87,
          column: 34
        },
        end: {
          line: 87,
          column: 67
        }
      },
      "53": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 94,
          column: 21
        }
      },
      "54": {
        start: {
          line: 89,
          column: 38
        },
        end: {
          line: 89,
          column: 79
        }
      },
      "55": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 93,
          column: 25
        }
      },
      "56": {
        start: {
          line: 91,
          column: 28
        },
        end: {
          line: 91,
          column: 46
        }
      },
      "57": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 92,
          column: 34
        }
      },
      "58": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "59": {
        start: {
          line: 99,
          column: 33
        },
        end: {
          line: 99,
          column: 57
        }
      },
      "60": {
        start: {
          line: 100,
          column: 29
        },
        end: {
          line: 100,
          column: 75
        }
      },
      "61": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 103,
          column: 17
        }
      },
      "62": {
        start: {
          line: 102,
          column: 20
        },
        end: {
          line: 102,
          column: 38
        }
      },
      "63": {
        start: {
          line: 106,
          column: 30
        },
        end: {
          line: 106,
          column: 37
        }
      },
      "64": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "65": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 133,
          column: 17
        }
      },
      "66": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 46
        }
      },
      "67": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 119,
          column: 21
        }
      },
      "68": {
        start: {
          line: 112,
          column: 40
        },
        end: {
          line: 112,
          column: 52
        }
      },
      "69": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 118,
          column: 25
        }
      },
      "70": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 114,
          column: 63
        }
      },
      "71": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 61
        }
      },
      "72": {
        start: {
          line: 121,
          column: 21
        },
        end: {
          line: 133,
          column: 17
        }
      },
      "73": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 122,
          column: 71
        }
      },
      "74": {
        start: {
          line: 126,
          column: 37
        },
        end: {
          line: 126,
          column: 50
        }
      },
      "75": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 132,
          column: 21
        }
      },
      "76": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 128,
          column: 64
        }
      },
      "77": {
        start: {
          line: 131,
          column: 24
        },
        end: {
          line: 131,
          column: 62
        }
      },
      "78": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 34
        }
      },
      "79": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "80": {
        start: {
          line: 138,
          column: 40
        },
        end: {
          line: 138,
          column: 77
        }
      },
      "81": {
        start: {
          line: 139,
          column: 37
        },
        end: {
          line: 139,
          column: 93
        }
      },
      "82": {
        start: {
          line: 140,
          column: 36
        },
        end: {
          line: 140,
          column: 71
        }
      },
      "83": {
        start: {
          line: 141,
          column: 35
        },
        end: {
          line: 141,
          column: 76
        }
      },
      "84": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 68
        }
      },
      "85": {
        start: {
          line: 146,
          column: 33
        },
        end: {
          line: 146,
          column: 57
        }
      },
      "86": {
        start: {
          line: 147,
          column: 32
        },
        end: {
          line: 147,
          column: 59
        }
      },
      "87": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 63
        }
      },
      "88": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 162,
          column: 11
        }
      },
      "89": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 49
        }
      },
      "90": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "91": {
        start: {
          line: 156,
          column: 33
        },
        end: {
          line: 156,
          column: 57
        }
      },
      "92": {
        start: {
          line: 157,
          column: 29
        },
        end: {
          line: 157,
          column: 75
        }
      },
      "93": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 160,
          column: 17
        }
      },
      "94": {
        start: {
          line: 159,
          column: 20
        },
        end: {
          line: 159,
          column: 54
        }
      },
      "95": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "96": {
        start: {
          line: 166,
          column: 26
        },
        end: {
          line: 166,
          column: 49
        }
      },
      "97": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 34
        }
      },
      "98": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 185,
          column: 11
        }
      },
      "99": {
        start: {
          line: 173,
          column: 26
        },
        end: {
          line: 173,
          column: 59
        }
      },
      "100": {
        start: {
          line: 174,
          column: 27
        },
        end: {
          line: 174,
          column: 29
        }
      },
      "101": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "102": {
        start: {
          line: 176,
          column: 30
        },
        end: {
          line: 176,
          column: 71
        }
      },
      "103": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 182,
          column: 17
        }
      },
      "104": {
        start: {
          line: 178,
          column: 34
        },
        end: {
          line: 178,
          column: 97
        }
      },
      "105": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 181,
          column: 21
        }
      },
      "106": {
        start: {
          line: 180,
          column: 24
        },
        end: {
          line: 180,
          column: 43
        }
      },
      "107": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 26
        }
      },
      "108": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "109": {
        start: {
          line: 190,
          column: 29
        },
        end: {
          line: 190,
          column: 37
        }
      },
      "110": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "111": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 48
        }
      },
      "112": {
        start: {
          line: 196,
          column: 23
        },
        end: {
          line: 196,
          column: 71
        }
      },
      "113": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "114": {
        start: {
          line: 199,
          column: 30
        },
        end: {
          line: 199,
          column: 63
        }
      },
      "115": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 95
        }
      },
      "116": {
        start: {
          line: 200,
          column: 39
        },
        end: {
          line: 200,
          column: 85
        }
      },
      "117": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "118": {
        start: {
          line: 203,
          column: 30
        },
        end: {
          line: 203,
          column: 71
        }
      },
      "119": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 211,
          column: 17
        }
      },
      "120": {
        start: {
          line: 205,
          column: 34
        },
        end: {
          line: 205,
          column: 97
        }
      },
      "121": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 210,
          column: 21
        }
      },
      "122": {
        start: {
          line: 208,
          column: 24
        },
        end: {
          line: 208,
          column: 57
        }
      },
      "123": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 209,
          column: 37
        }
      },
      "124": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 24
        }
      },
      "125": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 296,
          column: 11
        }
      },
      "126": {
        start: {
          line: 221,
          column: 25
        },
        end: {
          line: 221,
          column: 71
        }
      },
      "127": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "128": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 63
        }
      },
      "129": {
        start: {
          line: 225,
          column: 28
        },
        end: {
          line: 225,
          column: 59
        }
      },
      "130": {
        start: {
          line: 226,
          column: 26
        },
        end: {
          line: 226,
          column: 67
        }
      },
      "131": {
        start: {
          line: 227,
          column: 39
        },
        end: {
          line: 227,
          column: 110
        }
      },
      "132": {
        start: {
          line: 229,
          column: 35
        },
        end: {
          line: 229,
          column: 96
        }
      },
      "133": {
        start: {
          line: 231,
          column: 30
        },
        end: {
          line: 231,
          column: 37
        }
      },
      "134": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "135": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 234,
          column: 29
        }
      },
      "136": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 234,
          column: 29
        }
      },
      "137": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 272,
          column: 17
        }
      },
      "138": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 46
        }
      },
      "139": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 245,
          column: 21
        }
      },
      "140": {
        start: {
          line: 238,
          column: 40
        },
        end: {
          line: 238,
          column: 52
        }
      },
      "141": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 244,
          column: 25
        }
      },
      "142": {
        start: {
          line: 240,
          column: 28
        },
        end: {
          line: 240,
          column: 63
        }
      },
      "143": {
        start: {
          line: 243,
          column: 28
        },
        end: {
          line: 243,
          column: 61
        }
      },
      "144": {
        start: {
          line: 247,
          column: 21
        },
        end: {
          line: 272,
          column: 17
        }
      },
      "145": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 248,
          column: 71
        }
      },
      "146": {
        start: {
          line: 250,
          column: 21
        },
        end: {
          line: 272,
          column: 17
        }
      },
      "147": {
        start: {
          line: 251,
          column: 20
        },
        end: {
          line: 251,
          column: 55
        }
      },
      "148": {
        start: {
          line: 253,
          column: 21
        },
        end: {
          line: 272,
          column: 17
        }
      },
      "149": {
        start: {
          line: 254,
          column: 20
        },
        end: {
          line: 254,
          column: 55
        }
      },
      "150": {
        start: {
          line: 257,
          column: 37
        },
        end: {
          line: 257,
          column: 50
        }
      },
      "151": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 271,
          column: 21
        }
      },
      "152": {
        start: {
          line: 267,
          column: 24
        },
        end: {
          line: 267,
          column: 85
        }
      },
      "153": {
        start: {
          line: 270,
          column: 24
        },
        end: {
          line: 270,
          column: 62
        }
      },
      "154": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 34
        }
      },
      "155": {
        start: {
          line: 276,
          column: 30
        },
        end: {
          line: 276,
          column: 32
        }
      },
      "156": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "157": {
        start: {
          line: 280,
          column: 41
        },
        end: {
          line: 280,
          column: 70
        }
      },
      "158": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 288,
          column: 17
        }
      },
      "159": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 74
        }
      },
      "160": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 287,
          column: 42
        }
      },
      "161": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 292,
          column: 38
        }
      },
      "162": {
        start: {
          line: 294,
          column: 31
        },
        end: {
          line: 294,
          column: 72
        }
      },
      "163": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 58
        }
      },
      "164": {
        start: {
          line: 299,
          column: 0
        },
        end: {
          line: 299,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 17
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 55
          },
          end: {
            line: 17,
            column: 56
          }
        },
        loc: {
          start: {
            line: 17,
            column: 68
          },
          end: {
            line: 27,
            column: 9
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 55
          },
          end: {
            line: 30,
            column: 56
          }
        },
        loc: {
          start: {
            line: 30,
            column: 68
          },
          end: {
            line: 47,
            column: 9
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 40
          },
          end: {
            line: 38,
            column: 41
          }
        },
        loc: {
          start: {
            line: 38,
            column: 45
          },
          end: {
            line: 38,
            column: 103
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 49
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 50,
            column: 55
          },
          end: {
            line: 50,
            column: 56
          }
        },
        loc: {
          start: {
            line: 50,
            column: 68
          },
          end: {
            line: 67,
            column: 9
          }
        },
        line: 50
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 69
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 71,
            column: 55
          },
          end: {
            line: 71,
            column: 56
          }
        },
        loc: {
          start: {
            line: 71,
            column: 68
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 71
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 15
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 152
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 153,
            column: 55
          },
          end: {
            line: 153,
            column: 56
          }
        },
        loc: {
          start: {
            line: 153,
            column: 68
          },
          end: {
            line: 162,
            column: 9
          }
        },
        line: 153
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 164
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 165,
            column: 55
          },
          end: {
            line: 165,
            column: 56
          }
        },
        loc: {
          start: {
            line: 165,
            column: 68
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 165
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 14
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 170
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 172,
            column: 55
          },
          end: {
            line: 172,
            column: 56
          }
        },
        loc: {
          start: {
            line: 172,
            column: 68
          },
          end: {
            line: 185,
            column: 9
          }
        },
        line: 172
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 29
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 187
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 188,
            column: 55
          },
          end: {
            line: 188,
            column: 56
          }
        },
        loc: {
          start: {
            line: 188,
            column: 68
          },
          end: {
            line: 214,
            column: 9
          }
        },
        line: 188
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 200,
            column: 34
          },
          end: {
            line: 200,
            column: 35
          }
        },
        loc: {
          start: {
            line: 200,
            column: 39
          },
          end: {
            line: 200,
            column: 85
          }
        },
        line: 200
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 47
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 219
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 220,
            column: 55
          },
          end: {
            line: 220,
            column: 56
          }
        },
        loc: {
          start: {
            line: 220,
            column: 68
          },
          end: {
            line: 296,
            column: 9
          }
        },
        line: 220
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 24,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 24,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 149
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 120
          },
          end: {
            line: 21,
            column: 126
          }
        }, {
          start: {
            line: 21,
            column: 129
          },
          end: {
            line: 21,
            column: 149
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 100
          }
        }, {
          start: {
            line: 21,
            column: 104
          },
          end: {
            line: 21,
            column: 117
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 64
          },
          end: {
            line: 21,
            column: 70
          }
        }, {
          start: {
            line: 21,
            column: 73
          },
          end: {
            line: 21,
            column: 90
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 41
          }
        }, {
          start: {
            line: 21,
            column: 45
          },
          end: {
            line: 21,
            column: 61
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 35,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 57
          },
          end: {
            line: 35,
            column: 63
          }
        }, {
          start: {
            line: 35,
            column: 66
          },
          end: {
            line: 35,
            column: 83
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 35,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 35,
            column: 34
          }
        }, {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 35,
            column: 54
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 37,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 64
          },
          end: {
            line: 37,
            column: 71
          }
        }, {
          start: {
            line: 37,
            column: 74
          },
          end: {
            line: 37,
            column: 83
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 43,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 43,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "10": {
        loc: {
          start: {
            line: 38,
            column: 45
          },
          end: {
            line: 38,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 45
          },
          end: {
            line: 38,
            column: 73
          }
        }, {
          start: {
            line: 38,
            column: 77
          },
          end: {
            line: 38,
            column: 103
          }
        }],
        line: 38
      },
      "11": {
        loc: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 42,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 42,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "12": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "13": {
        loc: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 57
          },
          end: {
            line: 55,
            column: 63
          }
        }, {
          start: {
            line: 55,
            column: 66
          },
          end: {
            line: 55,
            column: 83
          }
        }],
        line: 55
      },
      "14": {
        loc: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 34
          }
        }, {
          start: {
            line: 55,
            column: 38
          },
          end: {
            line: 55,
            column: 54
          }
        }],
        line: 55
      },
      "15": {
        loc: {
          start: {
            line: 57,
            column: 42
          },
          end: {
            line: 57,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 85
          },
          end: {
            line: 57,
            column: 91
          }
        }, {
          start: {
            line: 57,
            column: 94
          },
          end: {
            line: 57,
            column: 130
          }
        }],
        line: 57
      },
      "16": {
        loc: {
          start: {
            line: 57,
            column: 42
          },
          end: {
            line: 57,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 42
          },
          end: {
            line: 57,
            column: 59
          }
        }, {
          start: {
            line: 57,
            column: 63
          },
          end: {
            line: 57,
            column: 82
          }
        }],
        line: 57
      },
      "17": {
        loc: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 63,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 63,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "18": {
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 62,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 62,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "19": {
        loc: {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 78
          },
          end: {
            line: 76,
            column: 84
          }
        }, {
          start: {
            line: 76,
            column: 87
          },
          end: {
            line: 76,
            column: 98
          }
        }],
        line: 76
      },
      "20": {
        loc: {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 58
          }
        }, {
          start: {
            line: 76,
            column: 62
          },
          end: {
            line: 76,
            column: 75
          }
        }],
        line: 76
      },
      "21": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "22": {
        loc: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 81,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 81,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "23": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "24": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 95,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 95,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "25": {
        loc: {
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 93,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 93,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "26": {
        loc: {
          start: {
            line: 90,
            column: 29
          },
          end: {
            line: 90,
            column: 157
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 128
          },
          end: {
            line: 90,
            column: 134
          }
        }, {
          start: {
            line: 90,
            column: 137
          },
          end: {
            line: 90,
            column: 157
          }
        }],
        line: 90
      },
      "27": {
        loc: {
          start: {
            line: 90,
            column: 29
          },
          end: {
            line: 90,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 29
          },
          end: {
            line: 90,
            column: 108
          }
        }, {
          start: {
            line: 90,
            column: 112
          },
          end: {
            line: 90,
            column: 125
          }
        }],
        line: 90
      },
      "28": {
        loc: {
          start: {
            line: 90,
            column: 35
          },
          end: {
            line: 90,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 72
          },
          end: {
            line: 90,
            column: 78
          }
        }, {
          start: {
            line: 90,
            column: 81
          },
          end: {
            line: 90,
            column: 98
          }
        }],
        line: 90
      },
      "29": {
        loc: {
          start: {
            line: 90,
            column: 35
          },
          end: {
            line: 90,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 35
          },
          end: {
            line: 90,
            column: 49
          }
        }, {
          start: {
            line: 90,
            column: 53
          },
          end: {
            line: 90,
            column: 69
          }
        }],
        line: 90
      },
      "30": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "31": {
        loc: {
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 103,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 103,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "32": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 133,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 133,
            column: 17
          }
        }, {
          start: {
            line: 121,
            column: 21
          },
          end: {
            line: 133,
            column: 17
          }
        }],
        line: 108
      },
      "33": {
        loc: {
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 118,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 118,
            column: 25
          }
        }, {
          start: {
            line: 116,
            column: 29
          },
          end: {
            line: 118,
            column: 25
          }
        }],
        line: 113
      },
      "34": {
        loc: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 50
          }
        }, {
          start: {
            line: 113,
            column: 54
          },
          end: {
            line: 113,
            column: 76
          }
        }],
        line: 113
      },
      "35": {
        loc: {
          start: {
            line: 121,
            column: 21
          },
          end: {
            line: 133,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 21
          },
          end: {
            line: 133,
            column: 17
          }
        }, {
          start: {
            line: 124,
            column: 21
          },
          end: {
            line: 133,
            column: 17
          }
        }],
        line: 121
      },
      "36": {
        loc: {
          start: {
            line: 121,
            column: 25
          },
          end: {
            line: 121,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 25
          },
          end: {
            line: 121,
            column: 50
          }
        }, {
          start: {
            line: 121,
            column: 54
          },
          end: {
            line: 121,
            column: 68
          }
        }],
        line: 121
      },
      "37": {
        loc: {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 132,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 132,
            column: 21
          }
        }, {
          start: {
            line: 130,
            column: 25
          },
          end: {
            line: 132,
            column: 21
          }
        }],
        line: 127
      },
      "38": {
        loc: {
          start: {
            line: 127,
            column: 24
          },
          end: {
            line: 127,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 24
          },
          end: {
            line: 127,
            column: 47
          }
        }, {
          start: {
            line: 127,
            column: 51
          },
          end: {
            line: 127,
            column: 74
          }
        }],
        line: 127
      },
      "39": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: 144,
            column: 17
          },
          end: {
            line: 149,
            column: 13
          }
        }],
        line: 136
      },
      "40": {
        loc: {
          start: {
            line: 140,
            column: 36
          },
          end: {
            line: 140,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 51
          },
          end: {
            line: 140,
            column: 66
          }
        }, {
          start: {
            line: 140,
            column: 69
          },
          end: {
            line: 140,
            column: 71
          }
        }],
        line: 140
      },
      "41": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "42": {
        loc: {
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 160,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 160,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "43": {
        loc: {
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "44": {
        loc: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 119
          },
          end: {
            line: 177,
            column: 125
          }
        }, {
          start: {
            line: 177,
            column: 128
          },
          end: {
            line: 177,
            column: 148
          }
        }],
        line: 177
      },
      "45": {
        loc: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 99
          }
        }, {
          start: {
            line: 177,
            column: 103
          },
          end: {
            line: 177,
            column: 116
          }
        }],
        line: 177
      },
      "46": {
        loc: {
          start: {
            line: 177,
            column: 26
          },
          end: {
            line: 177,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 63
          },
          end: {
            line: 177,
            column: 69
          }
        }, {
          start: {
            line: 177,
            column: 72
          },
          end: {
            line: 177,
            column: 89
          }
        }],
        line: 177
      },
      "47": {
        loc: {
          start: {
            line: 177,
            column: 26
          },
          end: {
            line: 177,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 26
          },
          end: {
            line: 177,
            column: 40
          }
        }, {
          start: {
            line: 177,
            column: 44
          },
          end: {
            line: 177,
            column: 60
          }
        }],
        line: 177
      },
      "48": {
        loc: {
          start: {
            line: 179,
            column: 20
          },
          end: {
            line: 181,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 20
          },
          end: {
            line: 181,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "49": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "50": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "51": {
        loc: {
          start: {
            line: 200,
            column: 23
          },
          end: {
            line: 200,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 23
          },
          end: {
            line: 200,
            column: 86
          }
        }, {
          start: {
            line: 200,
            column: 90
          },
          end: {
            line: 200,
            column: 94
          }
        }],
        line: 200
      },
      "52": {
        loc: {
          start: {
            line: 200,
            column: 39
          },
          end: {
            line: 200,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 39
          },
          end: {
            line: 200,
            column: 60
          }
        }, {
          start: {
            line: 200,
            column: 64
          },
          end: {
            line: 200,
            column: 85
          }
        }],
        line: 200
      },
      "53": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 212,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 212,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "54": {
        loc: {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 211,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 211,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "55": {
        loc: {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 57
          },
          end: {
            line: 204,
            column: 63
          }
        }, {
          start: {
            line: 204,
            column: 66
          },
          end: {
            line: 204,
            column: 83
          }
        }],
        line: 204
      },
      "56": {
        loc: {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 34
          }
        }, {
          start: {
            line: 204,
            column: 38
          },
          end: {
            line: 204,
            column: 54
          }
        }],
        line: 204
      },
      "57": {
        loc: {
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 210,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 210,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "58": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "59": {
        loc: {
          start: {
            line: 227,
            column: 39
          },
          end: {
            line: 227,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 40
          },
          end: {
            line: 227,
            column: 103
          }
        }, {
          start: {
            line: 227,
            column: 108
          },
          end: {
            line: 227,
            column: 110
          }
        }],
        line: 227
      },
      "60": {
        loc: {
          start: {
            line: 227,
            column: 40
          },
          end: {
            line: 227,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 227,
            column: 77
          },
          end: {
            line: 227,
            column: 83
          }
        }, {
          start: {
            line: 227,
            column: 86
          },
          end: {
            line: 227,
            column: 103
          }
        }],
        line: 227
      },
      "61": {
        loc: {
          start: {
            line: 227,
            column: 40
          },
          end: {
            line: 227,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 40
          },
          end: {
            line: 227,
            column: 54
          }
        }, {
          start: {
            line: 227,
            column: 58
          },
          end: {
            line: 227,
            column: 74
          }
        }],
        line: 227
      },
      "62": {
        loc: {
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 234,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 234,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "63": {
        loc: {
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 233,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 233,
            column: 39
          }
        }, {
          start: {
            line: 233,
            column: 43
          },
          end: {
            line: 233,
            column: 57
          }
        }],
        line: 233
      },
      "64": {
        loc: {
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 272,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 272,
            column: 17
          }
        }, {
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        }],
        line: 235
      },
      "65": {
        loc: {
          start: {
            line: 239,
            column: 24
          },
          end: {
            line: 244,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 24
          },
          end: {
            line: 244,
            column: 25
          }
        }, {
          start: {
            line: 242,
            column: 29
          },
          end: {
            line: 244,
            column: 25
          }
        }],
        line: 239
      },
      "66": {
        loc: {
          start: {
            line: 239,
            column: 28
          },
          end: {
            line: 239,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 28
          },
          end: {
            line: 239,
            column: 50
          }
        }, {
          start: {
            line: 239,
            column: 54
          },
          end: {
            line: 239,
            column: 76
          }
        }],
        line: 239
      },
      "67": {
        loc: {
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        }, {
          start: {
            line: 250,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        }],
        line: 247
      },
      "68": {
        loc: {
          start: {
            line: 247,
            column: 25
          },
          end: {
            line: 247,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 25
          },
          end: {
            line: 247,
            column: 50
          }
        }, {
          start: {
            line: 247,
            column: 54
          },
          end: {
            line: 247,
            column: 68
          }
        }],
        line: 247
      },
      "69": {
        loc: {
          start: {
            line: 250,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        }, {
          start: {
            line: 253,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        }],
        line: 250
      },
      "70": {
        loc: {
          start: {
            line: 253,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        }, {
          start: {
            line: 256,
            column: 21
          },
          end: {
            line: 272,
            column: 17
          }
        }],
        line: 253
      },
      "71": {
        loc: {
          start: {
            line: 259,
            column: 20
          },
          end: {
            line: 271,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 20
          },
          end: {
            line: 271,
            column: 21
          }
        }, {
          start: {
            line: 269,
            column: 25
          },
          end: {
            line: 271,
            column: 21
          }
        }],
        line: 259
      },
      "72": {
        loc: {
          start: {
            line: 259,
            column: 24
          },
          end: {
            line: 265,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 24
          },
          end: {
            line: 259,
            column: 46
          }
        }, {
          start: {
            line: 259,
            column: 50
          },
          end: {
            line: 259,
            column: 72
          }
        }, {
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 260,
            column: 46
          }
        }, {
          start: {
            line: 260,
            column: 50
          },
          end: {
            line: 260,
            column: 72
          }
        }, {
          start: {
            line: 261,
            column: 24
          },
          end: {
            line: 261,
            column: 46
          }
        }, {
          start: {
            line: 261,
            column: 50
          },
          end: {
            line: 261,
            column: 72
          }
        }, {
          start: {
            line: 262,
            column: 24
          },
          end: {
            line: 262,
            column: 46
          }
        }, {
          start: {
            line: 262,
            column: 50
          },
          end: {
            line: 262,
            column: 72
          }
        }, {
          start: {
            line: 263,
            column: 24
          },
          end: {
            line: 263,
            column: 46
          }
        }, {
          start: {
            line: 263,
            column: 50
          },
          end: {
            line: 263,
            column: 72
          }
        }, {
          start: {
            line: 264,
            column: 24
          },
          end: {
            line: 264,
            column: 46
          }
        }, {
          start: {
            line: 264,
            column: 50
          },
          end: {
            line: 264,
            column: 72
          }
        }, {
          start: {
            line: 265,
            column: 24
          },
          end: {
            line: 265,
            column: 48
          }
        }, {
          start: {
            line: 265,
            column: 52
          },
          end: {
            line: 265,
            column: 74
          }
        }],
        line: 259
      },
      "73": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        }, {
          start: {
            line: 290,
            column: 17
          },
          end: {
            line: 293,
            column: 13
          }
        }],
        line: 278
      },
      "74": {
        loc: {
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 288,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 288,
            column: 17
          }
        }, {
          start: {
            line: 285,
            column: 21
          },
          end: {
            line: 288,
            column: 17
          }
        }],
        line: 281
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "73": [0, 0],
      "74": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianAssetRepository.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianAssetRepository.ts"],
      sourcesContent: ["import { App, TFile } from 'obsidian';\nimport { IAssetRepository } from '../../domain/repositories/IAssetRepository';\nimport { Asset } from '../../domain/entities/Asset';\nimport { AssetId } from '../../domain/value-objects/AssetId';\nimport { ClassName } from '../../domain/value-objects/ClassName';\nimport { OntologyPrefix } from '../../domain/value-objects/OntologyPrefix';\n\n/**\n * Obsidian implementation of IAssetRepository\n * Handles asset persistence using Obsidian vault\n */\nexport class ObsidianAssetRepository implements IAssetRepository {\n    constructor(private app: App) {}\n\n    async findById(id: AssetId): Promise<Asset | null> {\n        const files = this.app.vault.getMarkdownFiles();\n        \n        for (const file of files) {\n            const cache = this.app.metadataCache.getFileCache(file);\n            if (cache?.frontmatter?.['exo__Asset_uid'] === id.toString()) {\n                const content = await this.app.vault.read(file);\n                return Asset.fromFrontmatter(cache.frontmatter, file.basename);\n            }\n        }\n        \n        return null;\n    }\n\n    async findByClass(className: ClassName): Promise<Asset[]> {\n        const files = this.app.vault.getMarkdownFiles();\n        const assets: Asset[] = [];\n        \n        for (const file of files) {\n            const cache = this.app.metadataCache.getFileCache(file);\n            if (cache?.frontmatter) {\n                const classes = cache.frontmatter['exo__Instance_class'];\n                const classArray = Array.isArray(classes) ? classes : [classes];\n                \n                if (classArray.some(c => c === className.toWikiLink() || c === className.toString())) {\n                    const asset = Asset.fromFrontmatter(cache.frontmatter, file.basename);\n                    if (asset) {\n                        assets.push(asset);\n                    }\n                }\n            }\n        }\n        \n        return assets;\n    }\n\n    async findByOntology(prefix: OntologyPrefix): Promise<Asset[]> {\n        const files = this.app.vault.getMarkdownFiles();\n        const assets: Asset[] = [];\n        \n        for (const file of files) {\n            const cache = this.app.metadataCache.getFileCache(file);\n            if (cache?.frontmatter) {\n                const ontology = cache.frontmatter['exo__Asset_isDefinedBy'];\n                const ontologyValue = ontology?.replace(/\\[\\[!?|\\]\\]/g, '');\n                \n                if (ontologyValue === prefix.toString()) {\n                    const asset = Asset.fromFrontmatter(cache.frontmatter, file.basename);\n                    if (asset) {\n                        assets.push(asset);\n                    }\n                }\n            }\n        }\n        \n        return assets;\n    }\n\n    async save(asset: Asset): Promise<void> {\n        const frontmatter = asset.toFrontmatter();\n        \n        // Try to find the existing file by asset ID, stored path, or filename\n        let targetFile: TFile | null = null;\n        \n        // First check if asset has a stored file path\n        const storedPath = (asset as any).props?.filePath;\n        if (storedPath) {\n            const file = this.app.vault.getAbstractFileByPath(storedPath);\n            if (file instanceof TFile) {\n                targetFile = file;\n            }\n        }\n        \n        // If not found by stored path, try by asset ID\n        if (!targetFile) {\n            const assetId = frontmatter['exo__Asset_uid'];\n            if (assetId) {\n                const files = this.app.vault.getMarkdownFiles();\n                for (const file of files) {\n                    const cache = this.app.metadataCache.getFileCache(file);\n                    if (cache?.frontmatter?.['exo__Asset_uid'] === assetId) {\n                        targetFile = file;\n                        break;\n                    }\n                }\n            }\n        }\n        \n        // If not found by ID, try by filename\n        if (!targetFile) {\n            const fileName = `${asset.getTitle()}.md`;\n            const file = this.app.vault.getAbstractFileByPath(fileName);\n            if (file instanceof TFile) {\n                targetFile = file;\n            }\n        }\n        \n        // Build YAML frontmatter\n        const yamlLines = ['---'];\n        for (const [key, value] of Object.entries(frontmatter)) {\n            if (Array.isArray(value)) {\n                yamlLines.push(`${key}:`);\n                for (const item of value) {\n                    // Check if item contains wikilinks that need quotes\n                    const itemStr = String(item);\n                    if (itemStr.includes('[[') && itemStr.includes(']]')) {\n                        yamlLines.push(`  - \"${itemStr}\"`);\n                    } else {\n                        yamlLines.push(`  - ${itemStr}`);\n                    }\n                }\n            } else if (typeof value === 'object' && value !== null) {\n                yamlLines.push(`${key}: ${JSON.stringify(value)}`);\n            } else {\n                // Check if value contains wikilinks that need quotes\n                const valueStr = String(value);\n                if (valueStr.includes('[[') && valueStr.includes(']]')) {\n                    yamlLines.push(`${key}: \"${valueStr}\"`);\n                } else {\n                    yamlLines.push(`${key}: ${valueStr}`);\n                }\n            }\n        }\n        yamlLines.push('---');\n        \n        if (targetFile) {\n            // Preserve existing content after frontmatter\n            const existingContent = await this.app.vault.read(targetFile);\n            const contentMatch = existingContent.match(/^---\\n[\\s\\S]*?\\n---\\n([\\s\\S]*)$/);\n            const bodyContent = contentMatch ? contentMatch[1] : '';\n            \n            const newContent = yamlLines.join('\\n') + '\\n' + bodyContent;\n            await this.app.vault.modify(targetFile, newContent);\n        } else {\n            // Create new file if it doesn't exist\n            const fileName = `${asset.getTitle()}.md`;\n            const content = yamlLines.join('\\n') + '\\n';\n            await this.app.vault.create(fileName, content);\n        }\n    }\n\n    async delete(id: AssetId): Promise<void> {\n        const asset = await this.findById(id);\n        if (asset) {\n            const fileName = `${asset.getTitle()}.md`;\n            const file = this.app.vault.getAbstractFileByPath(fileName);\n            if (file) {\n                await this.app.vault.delete(file);\n            }\n        }\n    }\n\n    async exists(id: AssetId): Promise<boolean> {\n        const asset = await this.findById(id);\n        return asset !== null;\n    }\n\n    async findAll(): Promise<Asset[]> {\n        const files = this.app.vault.getMarkdownFiles();\n        const assets: Asset[] = [];\n        \n        for (const file of files) {\n            const cache = this.app.metadataCache.getFileCache(file);\n            if (cache?.frontmatter?.['exo__Asset_uid']) {\n                const asset = Asset.fromFrontmatter(cache.frontmatter, file.basename);\n                if (asset) {\n                    assets.push(asset);\n                }\n            }\n        }\n        \n        return assets;\n    }\n\n    async findByFilename(filename: string): Promise<Asset | null> {\n        // Handle different filename formats\n        let searchPath = filename;\n        \n        // Add .md extension if not present\n        if (!searchPath.endsWith('.md')) {\n            searchPath = `${searchPath}.md`;\n        }\n        \n        // Try to find by path first\n        let file = this.app.vault.getAbstractFileByPath(searchPath);\n        \n        // If not found, search all files by basename\n        if (!file) {\n            const files = this.app.vault.getMarkdownFiles();\n            file = files.find(f => f.path === searchPath || f.name === searchPath) || null;\n        }\n        \n        if (file instanceof TFile) {\n            const cache = this.app.metadataCache.getFileCache(file);\n            if (cache?.frontmatter) {\n                const asset = Asset.fromFrontmatter(cache.frontmatter, file.basename);\n                if (asset) {\n                    // Store the file path for later use in save\n                    (asset as any).props.filePath = file.path;\n                    return asset;\n                }\n            }\n        }\n        \n        return null;\n    }\n\n    /**\n     * Update only the frontmatter of a file by path\n     */\n    async updateFrontmatterByPath(filePath: string, updates: Record<string, any>): Promise<void> {\n        const file = this.app.vault.getAbstractFileByPath(filePath);\n        \n        if (!(file instanceof TFile)) {\n            throw new Error(`File not found: ${filePath}`);\n        }\n\n        const content = await this.app.vault.read(file);\n        const cache = this.app.metadataCache.getFileCache(file);\n        const currentFrontmatter = cache?.frontmatter || {};\n        \n        // Merge updates with current frontmatter\n        const newFrontmatter = { ...currentFrontmatter, ...updates };\n        \n        // Build new YAML frontmatter\n        const yamlLines = ['---'];\n        for (const [key, value] of Object.entries(newFrontmatter)) {\n            if (value === undefined || value === null) continue; // Skip undefined/null values\n            \n            if (Array.isArray(value)) {\n                yamlLines.push(`${key}:`);\n                for (const item of value) {\n                    const itemStr = String(item);\n                    if (itemStr.includes('[[') && itemStr.includes(']]')) {\n                        yamlLines.push(`  - \"${itemStr}\"`);\n                    } else {\n                        yamlLines.push(`  - ${itemStr}`);\n                    }\n                }\n            } else if (typeof value === 'object' && value !== null) {\n                yamlLines.push(`${key}: ${JSON.stringify(value)}`);\n            } else if (typeof value === 'boolean') {\n                yamlLines.push(`${key}: ${value}`);\n            } else if (typeof value === 'number') {\n                yamlLines.push(`${key}: ${value}`);\n            } else {\n                const valueStr = String(value);\n                // Check if value needs quoting\n                if (valueStr.includes(':') || valueStr.includes('#') || \n                    valueStr.includes('[') || valueStr.includes(']') ||\n                    valueStr.includes('{') || valueStr.includes('}') ||\n                    valueStr.includes('|') || valueStr.includes('>') ||\n                    valueStr.includes('@') || valueStr.includes('`') ||\n                    valueStr.includes('\"') || valueStr.includes(\"'\") ||\n                    valueStr.startsWith(' ') || valueStr.endsWith(' ')) {\n                    // Escape quotes and wrap in quotes\n                    yamlLines.push(`${key}: \"${valueStr.replace(/\"/g, '\\\\\"')}\"`);\n                } else {\n                    yamlLines.push(`${key}: ${valueStr}`);\n                }\n            }\n        }\n        yamlLines.push('---');\n        \n        // Extract body content - handle multiple cases\n        let bodyContent = '';\n        \n        // Check if content has frontmatter\n        if (content.startsWith('---\\n')) {\n            // Find the end of frontmatter\n            const endOfFrontmatter = content.indexOf('\\n---\\n', 4);\n            if (endOfFrontmatter !== -1) {\n                // Extract content after frontmatter\n                bodyContent = content.substring(endOfFrontmatter + 5);\n            } else {\n                // Malformed frontmatter, preserve original content\n                bodyContent = content;\n            }\n        } else {\n            // No frontmatter, entire content is body\n            bodyContent = content;\n        }\n        \n        const newContent = yamlLines.join('\\n') + '\\n' + bodyContent;\n        await this.app.vault.modify(file, newContent);\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f35c41c327007040b9b936778a8c5021ae82274e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xnhundxyn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xnhundxyn();
cov_1xnhundxyn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xnhundxyn().s[1]++;
exports.ObsidianAssetRepository = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1xnhundxyn().s[2]++, require("tslib"));
const obsidian_1 =
/* istanbul ignore next */
(cov_1xnhundxyn().s[3]++, require("obsidian"));
const Asset_1 =
/* istanbul ignore next */
(cov_1xnhundxyn().s[4]++, require("../../domain/entities/Asset"));
/**
 * Obsidian implementation of IAssetRepository
 * Handles asset persistence using Obsidian vault
 */
class ObsidianAssetRepository {
  constructor(app) {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[0]++;
    cov_1xnhundxyn().s[5]++;
    this.app = app;
  }
  findById(id) {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[1]++;
    var _a;
    /* istanbul ignore next */
    cov_1xnhundxyn().s[6]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1xnhundxyn().f[2]++;
      const files =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[7]++, this.app.vault.getMarkdownFiles());
      /* istanbul ignore next */
      cov_1xnhundxyn().s[8]++;
      for (const file of files) {
        const cache =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[9]++, this.app.metadataCache.getFileCache(file));
        /* istanbul ignore next */
        cov_1xnhundxyn().s[10]++;
        if ((
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[2][0]++, (_a =
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[4][0]++, cache === null) ||
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[4][1]++, cache === void 0) ?
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[3][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[3][1]++, cache.frontmatter)) === null) ||
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[2][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[1][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[1][1]++, _a['exo__Asset_uid'])) === id.toString()) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[0][0]++;
          const content =
          /* istanbul ignore next */
          (cov_1xnhundxyn().s[11]++, yield this.app.vault.read(file));
          /* istanbul ignore next */
          cov_1xnhundxyn().s[12]++;
          return Asset_1.Asset.fromFrontmatter(cache.frontmatter, file.basename);
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[0][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1xnhundxyn().s[13]++;
      return null;
    });
  }
  findByClass(className) {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[3]++;
    cov_1xnhundxyn().s[14]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1xnhundxyn().f[4]++;
      const files =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[15]++, this.app.vault.getMarkdownFiles());
      const assets =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[16]++, []);
      /* istanbul ignore next */
      cov_1xnhundxyn().s[17]++;
      for (const file of files) {
        const cache =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[18]++, this.app.metadataCache.getFileCache(file));
        /* istanbul ignore next */
        cov_1xnhundxyn().s[19]++;
        if (
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[7][0]++, cache === null) ||
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[7][1]++, cache === void 0) ?
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[6][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[6][1]++, cache.frontmatter)) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[5][0]++;
          const classes =
          /* istanbul ignore next */
          (cov_1xnhundxyn().s[20]++, cache.frontmatter['exo__Instance_class']);
          const classArray =
          /* istanbul ignore next */
          (cov_1xnhundxyn().s[21]++, Array.isArray(classes) ?
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[8][0]++, classes) :
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[8][1]++, [classes]));
          /* istanbul ignore next */
          cov_1xnhundxyn().s[22]++;
          if (classArray.some(c => {
            /* istanbul ignore next */
            cov_1xnhundxyn().f[5]++;
            cov_1xnhundxyn().s[23]++;
            return /* istanbul ignore next */(cov_1xnhundxyn().b[10][0]++, c === className.toWikiLink()) ||
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[10][1]++, c === className.toString());
          })) {
            /* istanbul ignore next */
            cov_1xnhundxyn().b[9][0]++;
            const asset =
            /* istanbul ignore next */
            (cov_1xnhundxyn().s[24]++, Asset_1.Asset.fromFrontmatter(cache.frontmatter, file.basename));
            /* istanbul ignore next */
            cov_1xnhundxyn().s[25]++;
            if (asset) {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[11][0]++;
              cov_1xnhundxyn().s[26]++;
              assets.push(asset);
            } else
            /* istanbul ignore next */
            {
              cov_1xnhundxyn().b[11][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_1xnhundxyn().b[9][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[5][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1xnhundxyn().s[27]++;
      return assets;
    });
  }
  findByOntology(prefix) {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[6]++;
    cov_1xnhundxyn().s[28]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1xnhundxyn().f[7]++;
      const files =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[29]++, this.app.vault.getMarkdownFiles());
      const assets =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[30]++, []);
      /* istanbul ignore next */
      cov_1xnhundxyn().s[31]++;
      for (const file of files) {
        const cache =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[32]++, this.app.metadataCache.getFileCache(file));
        /* istanbul ignore next */
        cov_1xnhundxyn().s[33]++;
        if (
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[14][0]++, cache === null) ||
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[14][1]++, cache === void 0) ?
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[13][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[13][1]++, cache.frontmatter)) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[12][0]++;
          const ontology =
          /* istanbul ignore next */
          (cov_1xnhundxyn().s[34]++, cache.frontmatter['exo__Asset_isDefinedBy']);
          const ontologyValue =
          /* istanbul ignore next */
          (cov_1xnhundxyn().s[35]++,
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[16][0]++, ontology === null) ||
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[16][1]++, ontology === void 0) ?
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[15][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[15][1]++, ontology.replace(/\[\[!?|\]\]/g, '')));
          /* istanbul ignore next */
          cov_1xnhundxyn().s[36]++;
          if (ontologyValue === prefix.toString()) {
            /* istanbul ignore next */
            cov_1xnhundxyn().b[17][0]++;
            const asset =
            /* istanbul ignore next */
            (cov_1xnhundxyn().s[37]++, Asset_1.Asset.fromFrontmatter(cache.frontmatter, file.basename));
            /* istanbul ignore next */
            cov_1xnhundxyn().s[38]++;
            if (asset) {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[18][0]++;
              cov_1xnhundxyn().s[39]++;
              assets.push(asset);
            } else
            /* istanbul ignore next */
            {
              cov_1xnhundxyn().b[18][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_1xnhundxyn().b[17][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1xnhundxyn().s[40]++;
      return assets;
    });
  }
  save(asset) {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[8]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1xnhundxyn().s[41]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1xnhundxyn().f[9]++;
      const frontmatter =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[42]++, asset.toFrontmatter());
      // Try to find the existing file by asset ID, stored path, or filename
      let targetFile =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[43]++, null);
      // First check if asset has a stored file path
      const storedPath =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[44]++,
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[20][0]++, (_a = asset.props) === null) ||
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[20][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[19][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[19][1]++, _a.filePath));
      /* istanbul ignore next */
      cov_1xnhundxyn().s[45]++;
      if (storedPath) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[21][0]++;
        const file =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[46]++, this.app.vault.getAbstractFileByPath(storedPath));
        /* istanbul ignore next */
        cov_1xnhundxyn().s[47]++;
        if (file instanceof obsidian_1.TFile) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[22][0]++;
          cov_1xnhundxyn().s[48]++;
          targetFile = file;
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[22][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xnhundxyn().b[21][1]++;
      }
      // If not found by stored path, try by asset ID
      cov_1xnhundxyn().s[49]++;
      if (!targetFile) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[23][0]++;
        const assetId =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[50]++, frontmatter['exo__Asset_uid']);
        /* istanbul ignore next */
        cov_1xnhundxyn().s[51]++;
        if (assetId) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[24][0]++;
          const files =
          /* istanbul ignore next */
          (cov_1xnhundxyn().s[52]++, this.app.vault.getMarkdownFiles());
          /* istanbul ignore next */
          cov_1xnhundxyn().s[53]++;
          for (const file of files) {
            const cache =
            /* istanbul ignore next */
            (cov_1xnhundxyn().s[54]++, this.app.metadataCache.getFileCache(file));
            /* istanbul ignore next */
            cov_1xnhundxyn().s[55]++;
            if ((
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[27][0]++, (_b =
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[29][0]++, cache === null) ||
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[29][1]++, cache === void 0) ?
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[28][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[28][1]++, cache.frontmatter)) === null) ||
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[27][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[26][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[26][1]++, _b['exo__Asset_uid'])) === assetId) {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[25][0]++;
              cov_1xnhundxyn().s[56]++;
              targetFile = file;
              /* istanbul ignore next */
              cov_1xnhundxyn().s[57]++;
              break;
            } else
            /* istanbul ignore next */
            {
              cov_1xnhundxyn().b[25][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[24][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xnhundxyn().b[23][1]++;
      }
      // If not found by ID, try by filename
      cov_1xnhundxyn().s[58]++;
      if (!targetFile) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[30][0]++;
        const fileName =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[59]++, `${asset.getTitle()}.md`);
        const file =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[60]++, this.app.vault.getAbstractFileByPath(fileName));
        /* istanbul ignore next */
        cov_1xnhundxyn().s[61]++;
        if (file instanceof obsidian_1.TFile) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[31][0]++;
          cov_1xnhundxyn().s[62]++;
          targetFile = file;
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[31][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xnhundxyn().b[30][1]++;
      }
      // Build YAML frontmatter
      const yamlLines =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[63]++, ['---']);
      /* istanbul ignore next */
      cov_1xnhundxyn().s[64]++;
      for (const [key, value] of Object.entries(frontmatter)) {
        /* istanbul ignore next */
        cov_1xnhundxyn().s[65]++;
        if (Array.isArray(value)) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[32][0]++;
          cov_1xnhundxyn().s[66]++;
          yamlLines.push(`${key}:`);
          /* istanbul ignore next */
          cov_1xnhundxyn().s[67]++;
          for (const item of value) {
            // Check if item contains wikilinks that need quotes
            const itemStr =
            /* istanbul ignore next */
            (cov_1xnhundxyn().s[68]++, String(item));
            /* istanbul ignore next */
            cov_1xnhundxyn().s[69]++;
            if (
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[34][0]++, itemStr.includes('[[')) &&
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[34][1]++, itemStr.includes(']]'))) {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[33][0]++;
              cov_1xnhundxyn().s[70]++;
              yamlLines.push(`  - "${itemStr}"`);
            } else {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[33][1]++;
              cov_1xnhundxyn().s[71]++;
              yamlLines.push(`  - ${itemStr}`);
            }
          }
        } else {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[32][1]++;
          cov_1xnhundxyn().s[72]++;
          if (
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[36][0]++, typeof value === 'object') &&
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[36][1]++, value !== null)) {
            /* istanbul ignore next */
            cov_1xnhundxyn().b[35][0]++;
            cov_1xnhundxyn().s[73]++;
            yamlLines.push(`${key}: ${JSON.stringify(value)}`);
          } else {
            /* istanbul ignore next */
            cov_1xnhundxyn().b[35][1]++;
            // Check if value contains wikilinks that need quotes
            const valueStr =
            /* istanbul ignore next */
            (cov_1xnhundxyn().s[74]++, String(value));
            /* istanbul ignore next */
            cov_1xnhundxyn().s[75]++;
            if (
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[38][0]++, valueStr.includes('[[')) &&
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[38][1]++, valueStr.includes(']]'))) {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[37][0]++;
              cov_1xnhundxyn().s[76]++;
              yamlLines.push(`${key}: "${valueStr}"`);
            } else {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[37][1]++;
              cov_1xnhundxyn().s[77]++;
              yamlLines.push(`${key}: ${valueStr}`);
            }
          }
        }
      }
      /* istanbul ignore next */
      cov_1xnhundxyn().s[78]++;
      yamlLines.push('---');
      /* istanbul ignore next */
      cov_1xnhundxyn().s[79]++;
      if (targetFile) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[39][0]++;
        // Preserve existing content after frontmatter
        const existingContent =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[80]++, yield this.app.vault.read(targetFile));
        const contentMatch =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[81]++, existingContent.match(/^---\n[\s\S]*?\n---\n([\s\S]*)$/));
        const bodyContent =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[82]++, contentMatch ?
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[40][0]++, contentMatch[1]) :
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[40][1]++, ''));
        const newContent =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[83]++, yamlLines.join('\n') + '\n' + bodyContent);
        /* istanbul ignore next */
        cov_1xnhundxyn().s[84]++;
        yield this.app.vault.modify(targetFile, newContent);
      } else {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[39][1]++;
        // Create new file if it doesn't exist
        const fileName =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[85]++, `${asset.getTitle()}.md`);
        const content =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[86]++, yamlLines.join('\n') + '\n');
        /* istanbul ignore next */
        cov_1xnhundxyn().s[87]++;
        yield this.app.vault.create(fileName, content);
      }
    });
  }
  delete(id) {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[10]++;
    cov_1xnhundxyn().s[88]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1xnhundxyn().f[11]++;
      const asset =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[89]++, yield this.findById(id));
      /* istanbul ignore next */
      cov_1xnhundxyn().s[90]++;
      if (asset) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[41][0]++;
        const fileName =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[91]++, `${asset.getTitle()}.md`);
        const file =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[92]++, this.app.vault.getAbstractFileByPath(fileName));
        /* istanbul ignore next */
        cov_1xnhundxyn().s[93]++;
        if (file) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[42][0]++;
          cov_1xnhundxyn().s[94]++;
          yield this.app.vault.delete(file);
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[42][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xnhundxyn().b[41][1]++;
      }
    });
  }
  exists(id) {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[12]++;
    cov_1xnhundxyn().s[95]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1xnhundxyn().f[13]++;
      const asset =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[96]++, yield this.findById(id));
      /* istanbul ignore next */
      cov_1xnhundxyn().s[97]++;
      return asset !== null;
    });
  }
  findAll() {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[14]++;
    var _a;
    /* istanbul ignore next */
    cov_1xnhundxyn().s[98]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1xnhundxyn().f[15]++;
      const files =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[99]++, this.app.vault.getMarkdownFiles());
      const assets =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[100]++, []);
      /* istanbul ignore next */
      cov_1xnhundxyn().s[101]++;
      for (const file of files) {
        const cache =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[102]++, this.app.metadataCache.getFileCache(file));
        /* istanbul ignore next */
        cov_1xnhundxyn().s[103]++;
        if (
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[45][0]++, (_a =
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[47][0]++, cache === null) ||
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[47][1]++, cache === void 0) ?
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[46][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[46][1]++, cache.frontmatter)) === null) ||
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[45][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[44][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[44][1]++, _a['exo__Asset_uid'])) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[43][0]++;
          const asset =
          /* istanbul ignore next */
          (cov_1xnhundxyn().s[104]++, Asset_1.Asset.fromFrontmatter(cache.frontmatter, file.basename));
          /* istanbul ignore next */
          cov_1xnhundxyn().s[105]++;
          if (asset) {
            /* istanbul ignore next */
            cov_1xnhundxyn().b[48][0]++;
            cov_1xnhundxyn().s[106]++;
            assets.push(asset);
          } else
          /* istanbul ignore next */
          {
            cov_1xnhundxyn().b[48][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[43][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1xnhundxyn().s[107]++;
      return assets;
    });
  }
  findByFilename(filename) {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[16]++;
    cov_1xnhundxyn().s[108]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1xnhundxyn().f[17]++;
      // Handle different filename formats
      let searchPath =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[109]++, filename);
      // Add .md extension if not present
      /* istanbul ignore next */
      cov_1xnhundxyn().s[110]++;
      if (!searchPath.endsWith('.md')) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[49][0]++;
        cov_1xnhundxyn().s[111]++;
        searchPath = `${searchPath}.md`;
      } else
      /* istanbul ignore next */
      {
        cov_1xnhundxyn().b[49][1]++;
      }
      // Try to find by path first
      let file =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[112]++, this.app.vault.getAbstractFileByPath(searchPath));
      // If not found, search all files by basename
      /* istanbul ignore next */
      cov_1xnhundxyn().s[113]++;
      if (!file) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[50][0]++;
        const files =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[114]++, this.app.vault.getMarkdownFiles());
        /* istanbul ignore next */
        cov_1xnhundxyn().s[115]++;
        file =
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[51][0]++, files.find(f => {
          /* istanbul ignore next */
          cov_1xnhundxyn().f[18]++;
          cov_1xnhundxyn().s[116]++;
          return /* istanbul ignore next */(cov_1xnhundxyn().b[52][0]++, f.path === searchPath) ||
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[52][1]++, f.name === searchPath);
        })) ||
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[51][1]++, null);
      } else
      /* istanbul ignore next */
      {
        cov_1xnhundxyn().b[50][1]++;
      }
      cov_1xnhundxyn().s[117]++;
      if (file instanceof obsidian_1.TFile) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[53][0]++;
        const cache =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[118]++, this.app.metadataCache.getFileCache(file));
        /* istanbul ignore next */
        cov_1xnhundxyn().s[119]++;
        if (
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[56][0]++, cache === null) ||
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[56][1]++, cache === void 0) ?
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[55][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[55][1]++, cache.frontmatter)) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[54][0]++;
          const asset =
          /* istanbul ignore next */
          (cov_1xnhundxyn().s[120]++, Asset_1.Asset.fromFrontmatter(cache.frontmatter, file.basename));
          /* istanbul ignore next */
          cov_1xnhundxyn().s[121]++;
          if (asset) {
            /* istanbul ignore next */
            cov_1xnhundxyn().b[57][0]++;
            cov_1xnhundxyn().s[122]++;
            // Store the file path for later use in save
            asset.props.filePath = file.path;
            /* istanbul ignore next */
            cov_1xnhundxyn().s[123]++;
            return asset;
          } else
          /* istanbul ignore next */
          {
            cov_1xnhundxyn().b[57][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[54][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xnhundxyn().b[53][1]++;
      }
      cov_1xnhundxyn().s[124]++;
      return null;
    });
  }
  /**
   * Update only the frontmatter of a file by path
   */
  updateFrontmatterByPath(filePath, updates) {
    /* istanbul ignore next */
    cov_1xnhundxyn().f[19]++;
    cov_1xnhundxyn().s[125]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1xnhundxyn().f[20]++;
      const file =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[126]++, this.app.vault.getAbstractFileByPath(filePath));
      /* istanbul ignore next */
      cov_1xnhundxyn().s[127]++;
      if (!(file instanceof obsidian_1.TFile)) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[58][0]++;
        cov_1xnhundxyn().s[128]++;
        throw new Error(`File not found: ${filePath}`);
      } else
      /* istanbul ignore next */
      {
        cov_1xnhundxyn().b[58][1]++;
      }
      const content =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[129]++, yield this.app.vault.read(file));
      const cache =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[130]++, this.app.metadataCache.getFileCache(file));
      const currentFrontmatter =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[131]++,
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[59][0]++,
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[61][0]++, cache === null) ||
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[61][1]++, cache === void 0) ?
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[60][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[60][1]++, cache.frontmatter)) ||
      /* istanbul ignore next */
      (cov_1xnhundxyn().b[59][1]++, {}));
      // Merge updates with current frontmatter
      const newFrontmatter =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[132]++, Object.assign(Object.assign({}, currentFrontmatter), updates));
      // Build new YAML frontmatter
      const yamlLines =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[133]++, ['---']);
      /* istanbul ignore next */
      cov_1xnhundxyn().s[134]++;
      for (const [key, value] of Object.entries(newFrontmatter)) {
        /* istanbul ignore next */
        cov_1xnhundxyn().s[135]++;
        if (
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[63][0]++, value === undefined) ||
        /* istanbul ignore next */
        (cov_1xnhundxyn().b[63][1]++, value === null)) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[62][0]++;
          cov_1xnhundxyn().s[136]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1xnhundxyn().b[62][1]++;
        } // Skip undefined/null values
        cov_1xnhundxyn().s[137]++;
        if (Array.isArray(value)) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[64][0]++;
          cov_1xnhundxyn().s[138]++;
          yamlLines.push(`${key}:`);
          /* istanbul ignore next */
          cov_1xnhundxyn().s[139]++;
          for (const item of value) {
            const itemStr =
            /* istanbul ignore next */
            (cov_1xnhundxyn().s[140]++, String(item));
            /* istanbul ignore next */
            cov_1xnhundxyn().s[141]++;
            if (
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[66][0]++, itemStr.includes('[[')) &&
            /* istanbul ignore next */
            (cov_1xnhundxyn().b[66][1]++, itemStr.includes(']]'))) {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[65][0]++;
              cov_1xnhundxyn().s[142]++;
              yamlLines.push(`  - "${itemStr}"`);
            } else {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[65][1]++;
              cov_1xnhundxyn().s[143]++;
              yamlLines.push(`  - ${itemStr}`);
            }
          }
        } else {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[64][1]++;
          cov_1xnhundxyn().s[144]++;
          if (
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[68][0]++, typeof value === 'object') &&
          /* istanbul ignore next */
          (cov_1xnhundxyn().b[68][1]++, value !== null)) {
            /* istanbul ignore next */
            cov_1xnhundxyn().b[67][0]++;
            cov_1xnhundxyn().s[145]++;
            yamlLines.push(`${key}: ${JSON.stringify(value)}`);
          } else {
            /* istanbul ignore next */
            cov_1xnhundxyn().b[67][1]++;
            cov_1xnhundxyn().s[146]++;
            if (typeof value === 'boolean') {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[69][0]++;
              cov_1xnhundxyn().s[147]++;
              yamlLines.push(`${key}: ${value}`);
            } else {
              /* istanbul ignore next */
              cov_1xnhundxyn().b[69][1]++;
              cov_1xnhundxyn().s[148]++;
              if (typeof value === 'number') {
                /* istanbul ignore next */
                cov_1xnhundxyn().b[70][0]++;
                cov_1xnhundxyn().s[149]++;
                yamlLines.push(`${key}: ${value}`);
              } else {
                /* istanbul ignore next */
                cov_1xnhundxyn().b[70][1]++;
                const valueStr =
                /* istanbul ignore next */
                (cov_1xnhundxyn().s[150]++, String(value));
                // Check if value needs quoting
                /* istanbul ignore next */
                cov_1xnhundxyn().s[151]++;
                if (
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][0]++, valueStr.includes(':')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][1]++, valueStr.includes('#')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][2]++, valueStr.includes('[')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][3]++, valueStr.includes(']')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][4]++, valueStr.includes('{')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][5]++, valueStr.includes('}')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][6]++, valueStr.includes('|')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][7]++, valueStr.includes('>')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][8]++, valueStr.includes('@')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][9]++, valueStr.includes('`')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][10]++, valueStr.includes('"')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][11]++, valueStr.includes("'")) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][12]++, valueStr.startsWith(' ')) ||
                /* istanbul ignore next */
                (cov_1xnhundxyn().b[72][13]++, valueStr.endsWith(' '))) {
                  /* istanbul ignore next */
                  cov_1xnhundxyn().b[71][0]++;
                  cov_1xnhundxyn().s[152]++;
                  // Escape quotes and wrap in quotes
                  yamlLines.push(`${key}: "${valueStr.replace(/"/g, '\\"')}"`);
                } else {
                  /* istanbul ignore next */
                  cov_1xnhundxyn().b[71][1]++;
                  cov_1xnhundxyn().s[153]++;
                  yamlLines.push(`${key}: ${valueStr}`);
                }
              }
            }
          }
        }
      }
      /* istanbul ignore next */
      cov_1xnhundxyn().s[154]++;
      yamlLines.push('---');
      // Extract body content - handle multiple cases
      let bodyContent =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[155]++, '');
      // Check if content has frontmatter
      /* istanbul ignore next */
      cov_1xnhundxyn().s[156]++;
      if (content.startsWith('---\n')) {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[73][0]++;
        // Find the end of frontmatter
        const endOfFrontmatter =
        /* istanbul ignore next */
        (cov_1xnhundxyn().s[157]++, content.indexOf('\n---\n', 4));
        /* istanbul ignore next */
        cov_1xnhundxyn().s[158]++;
        if (endOfFrontmatter !== -1) {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[74][0]++;
          cov_1xnhundxyn().s[159]++;
          // Extract content after frontmatter
          bodyContent = content.substring(endOfFrontmatter + 5);
        } else {
          /* istanbul ignore next */
          cov_1xnhundxyn().b[74][1]++;
          cov_1xnhundxyn().s[160]++;
          // Malformed frontmatter, preserve original content
          bodyContent = content;
        }
      } else {
        /* istanbul ignore next */
        cov_1xnhundxyn().b[73][1]++;
        cov_1xnhundxyn().s[161]++;
        // No frontmatter, entire content is body
        bodyContent = content;
      }
      const newContent =
      /* istanbul ignore next */
      (cov_1xnhundxyn().s[162]++, yamlLines.join('\n') + '\n' + bodyContent);
      /* istanbul ignore next */
      cov_1xnhundxyn().s[163]++;
      yield this.app.vault.modify(file, newContent);
    });
  }
}
/* istanbul ignore next */
cov_1xnhundxyn().s[164]++;
exports.ObsidianAssetRepository = ObsidianAssetRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,