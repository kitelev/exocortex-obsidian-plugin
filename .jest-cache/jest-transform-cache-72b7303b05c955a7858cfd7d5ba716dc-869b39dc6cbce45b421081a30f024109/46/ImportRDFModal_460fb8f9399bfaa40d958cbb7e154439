0551a3a31d18f882ba02278b5125b955
"use strict";

/**
 * Modal for RDF Import functionality
 * Allows users to import RDF data from files and merge with existing graph
 */
/* istanbul ignore next */
function cov_17ridlsypw() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/ImportRDFModal.ts";
  var hash = "36b980fd192ccd5a4e4db70bc5e9931c8ee447ea";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/ImportRDFModal.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 32
        }
      },
      "2": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "3": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "4": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 67
        }
      },
      "5": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 81
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 19,
          column: 10
        }
      },
      "8": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 30
        }
      },
      "10": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 27
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 94
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 71
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "14": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 28,
          column: 34
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "17": {
        start: {
          line: 33,
          column: 31
        },
        end: {
          line: 33,
          column: 67
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "19": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 65
        }
      },
      "20": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 60
        }
      },
      "21": {
        start: {
          line: 55,
          column: 35
        },
        end: {
          line: 55,
          column: 80
        }
      },
      "22": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "23": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 63,
          column: 59
        }
      },
      "24": {
        start: {
          line: 63,
          column: 31
        },
        end: {
          line: 63,
          column: 57
        }
      },
      "25": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 66,
          column: 80
        }
      },
      "26": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 71
        }
      },
      "27": {
        start: {
          line: 68,
          column: 26
        },
        end: {
          line: 68,
          column: 77
        }
      },
      "28": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 60
        }
      },
      "29": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 78
        }
      },
      "30": {
        start: {
          line: 70,
          column: 52
        },
        end: {
          line: 70,
          column: 76
        }
      },
      "31": {
        start: {
          line: 72,
          column: 31
        },
        end: {
          line: 72,
          column: 69
        }
      },
      "32": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 46
        }
      },
      "33": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "34": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 89,
          column: 15
        }
      },
      "35": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 64
        }
      },
      "36": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 37
        }
      },
      "37": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "38": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 102,
          column: 15
        }
      },
      "39": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 47
        }
      },
      "40": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "41": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 115,
          column: 15
        }
      },
      "42": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 58
        }
      },
      "43": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 37
        }
      },
      "44": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "45": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "46": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 51
        }
      },
      "47": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "48": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 136,
          column: 15
        }
      },
      "49": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 48
        }
      },
      "50": {
        start: {
          line: 139,
          column: 33
        },
        end: {
          line: 139,
          column: 70
        }
      },
      "51": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 61
        }
      },
      "52": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 141,
          column: 86
        }
      },
      "53": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 70
        }
      },
      "54": {
        start: {
          line: 144,
          column: 32
        },
        end: {
          line: 144,
          column: 69
        }
      },
      "55": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 59
        }
      },
      "56": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "57": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "58": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 57
        }
      },
      "59": {
        start: {
          line: 152,
          column: 37
        },
        end: {
          line: 152,
          column: 56
        }
      },
      "60": {
        start: {
          line: 154,
          column: 29
        },
        end: {
          line: 154,
          column: 83
        }
      },
      "61": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 50
        }
      },
      "62": {
        start: {
          line: 155,
          column: 37
        },
        end: {
          line: 155,
          column: 49
        }
      },
      "63": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 24
        }
      },
      "64": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 25
        }
      },
      "65": {
        start: {
          line: 166,
          column: 22
        },
        end: {
          line: 166,
          column: 117
        }
      },
      "66": {
        start: {
          line: 166,
          column: 63
        },
        end: {
          line: 166,
          column: 116
        }
      },
      "67": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "68": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 65
        }
      },
      "69": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 19
        }
      },
      "70": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 55
        }
      },
      "71": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 70
        }
      },
      "72": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "73": {
        start: {
          line: 175,
          column: 27
        },
        end: {
          line: 175,
          column: 59
        }
      },
      "74": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 37
        }
      },
      "75": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 43
        }
      },
      "76": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 39
        }
      },
      "77": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 188,
          column: 12
        }
      },
      "78": {
        start: {
          line: 180,
          column: 49
        },
        end: {
          line: 188,
          column: 10
        }
      },
      "79": {
        start: {
          line: 181,
          column: 33
        },
        end: {
          line: 181,
          column: 47
        }
      },
      "80": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "81": {
        start: {
          line: 183,
          column: 29
        },
        end: {
          line: 183,
          column: 79
        }
      },
      "82": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 186,
          column: 17
        }
      },
      "83": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 185,
          column: 53
        }
      },
      "84": {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 190,
          column: 79
        }
      },
      "85": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "86": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 42
        }
      },
      "87": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 215,
          column: 11
        }
      },
      "88": {
        start: {
          line: 201,
          column: 26
        },
        end: {
          line: 201,
          column: 38
        }
      },
      "89": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 202,
          column: 86
        }
      },
      "90": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "91": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 213,
          column: 17
        }
      },
      "92": {
        start: {
          line: 205,
          column: 36
        },
        end: {
          line: 205,
          column: 61
        }
      },
      "93": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 206,
          column: 45
        }
      },
      "94": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 47
        }
      },
      "95": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 36
        }
      },
      "96": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 209,
          column: 41
        }
      },
      "97": {
        start: {
          line: 212,
          column: 20
        },
        end: {
          line: 212,
          column: 82
        }
      },
      "98": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 232,
          column: 11
        }
      },
      "99": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 231,
          column: 13
        }
      },
      "100": {
        start: {
          line: 223,
          column: 32
        },
        end: {
          line: 223,
          column: 63
        }
      },
      "101": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 41
        }
      },
      "102": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 225,
          column: 43
        }
      },
      "103": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 32
        }
      },
      "104": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 37
        }
      },
      "105": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 84
        }
      },
      "106": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 243,
          column: 11
        }
      },
      "107": {
        start: {
          line: 239,
          column: 27
        },
        end: {
          line: 239,
          column: 43
        }
      },
      "108": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 127
        }
      },
      "109": {
        start: {
          line: 240,
          column: 45
        },
        end: {
          line: 240,
          column: 124
        }
      },
      "110": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 77
        }
      },
      "111": {
        start: {
          line: 241,
          column: 36
        },
        end: {
          line: 241,
          column: 76
        }
      },
      "112": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 36
        }
      },
      "113": {
        start: {
          line: 250,
          column: 31
        },
        end: {
          line: 250,
          column: 77
        }
      },
      "114": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "115": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "116": {
        start: {
          line: 253,
          column: 33
        },
        end: {
          line: 255,
          column: 44
        }
      },
      "117": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 261,
          column: 18
        }
      },
      "118": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 55
        }
      },
      "119": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 54
        }
      },
      "120": {
        start: {
          line: 269,
          column: 29
        },
        end: {
          line: 269,
          column: 75
        }
      },
      "121": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "122": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 55
        }
      },
      "123": {
        start: {
          line: 279,
          column: 26
        },
        end: {
          line: 279,
          column: 74
        }
      },
      "124": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 281,
          column: 19
        }
      },
      "125": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 19
        }
      },
      "126": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 352,
          column: 9
        }
      },
      "127": {
        start: {
          line: 283,
          column: 33
        },
        end: {
          line: 289,
          column: 13
        }
      },
      "128": {
        start: {
          line: 290,
          column: 27
        },
        end: {
          line: 290,
          column: 76
        }
      },
      "129": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "130": {
        start: {
          line: 292,
          column: 36
        },
        end: {
          line: 292,
          column: 53
        }
      },
      "131": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 336,
          column: 18
        }
      },
      "132": {
        start: {
          line: 316,
          column: 44
        },
        end: {
          line: 316,
          column: 72
        }
      },
      "133": {
        start: {
          line: 326,
          column: 80
        },
        end: {
          line: 326,
          column: 95
        }
      },
      "134": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 343,
          column: 18
        }
      },
      "135": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 351,
          column: 14
        }
      },
      "136": {
        start: {
          line: 358,
          column: 24
        },
        end: {
          line: 358,
          column: 51
        }
      },
      "137": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 360,
          column: 55
        }
      },
      "138": {
        start: {
          line: 359,
          column: 37
        },
        end: {
          line: 359,
          column: 54
        }
      },
      "139": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 367,
          column: 32
        }
      },
      "140": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 32
        }
      },
      "141": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 369,
          column: 52
        }
      },
      "142": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 52
        }
      },
      "143": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 57
        }
      },
      "144": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 425,
          column: 11
        }
      },
      "145": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 381,
          column: 13
        }
      },
      "146": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 379,
          column: 58
        }
      },
      "147": {
        start: {
          line: 380,
          column: 16
        },
        end: {
          line: 380,
          column: 23
        }
      },
      "148": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "149": {
        start: {
          line: 383,
          column: 37
        },
        end: {
          line: 389,
          column: 17
        }
      },
      "150": {
        start: {
          line: 390,
          column: 31
        },
        end: {
          line: 390,
          column: 80
        }
      },
      "151": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 394,
          column: 17
        }
      },
      "152": {
        start: {
          line: 392,
          column: 20
        },
        end: {
          line: 392,
          column: 83
        }
      },
      "153": {
        start: {
          line: 393,
          column: 20
        },
        end: {
          line: 393,
          column: 27
        }
      },
      "154": {
        start: {
          line: 395,
          column: 36
        },
        end: {
          line: 395,
          column: 53
        }
      },
      "155": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 405,
          column: 17
        }
      },
      "156": {
        start: {
          line: 399,
          column: 20
        },
        end: {
          line: 399,
          column: 51
        }
      },
      "157": {
        start: {
          line: 403,
          column: 20
        },
        end: {
          line: 403,
          column: 52
        }
      },
      "158": {
        start: {
          line: 404,
          column: 20
        },
        end: {
          line: 404,
          column: 56
        }
      },
      "159": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 409,
          column: 17
        }
      },
      "160": {
        start: {
          line: 408,
          column: 20
        },
        end: {
          line: 408,
          column: 67
        }
      },
      "161": {
        start: {
          line: 410,
          column: 32
        },
        end: {
          line: 412,
          column: 73
        }
      },
      "162": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 413,
          column: 47
        }
      },
      "163": {
        start: {
          line: 414,
          column: 16
        },
        end: {
          line: 416,
          column: 17
        }
      },
      "164": {
        start: {
          line: 415,
          column: 20
        },
        end: {
          line: 415,
          column: 107
        }
      },
      "165": {
        start: {
          line: 417,
          column: 16
        },
        end: {
          line: 419,
          column: 17
        }
      },
      "166": {
        start: {
          line: 418,
          column: 20
        },
        end: {
          line: 418,
          column: 101
        }
      },
      "167": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 29
        }
      },
      "168": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 423,
          column: 72
        }
      },
      "169": {
        start: {
          line: 431,
          column: 22
        },
        end: {
          line: 431,
          column: 53
        }
      },
      "170": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 579,
          column: 10
        }
      },
      "171": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 580,
          column: 41
        }
      },
      "172": {
        start: {
          line: 583,
          column: 30
        },
        end: {
          line: 583,
          column: 34
        }
      },
      "173": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 584,
          column: 26
        }
      },
      "174": {
        start: {
          line: 587,
          column: 0
        },
        end: {
          line: 587,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 56
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 13
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 60,
            column: 23
          },
          end: {
            line: 60,
            column: 24
          }
        },
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 60
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 26
          }
        },
        loc: {
          start: {
            line: 63,
            column: 31
          },
          end: {
            line: 63,
            column: 57
          }
        },
        line: 63
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 70,
            column: 45
          },
          end: {
            line: 70,
            column: 46
          }
        },
        loc: {
          start: {
            line: 70,
            column: 52
          },
          end: {
            line: 70,
            column: 76
          }
        },
        line: 70
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 78,
            column: 25
          },
          end: {
            line: 78,
            column: 26
          }
        },
        loc: {
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 90,
            column: 9
          }
        },
        line: 78
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 27
          }
        },
        loc: {
          start: {
            line: 86,
            column: 35
          },
          end: {
            line: 89,
            column: 13
          }
        },
        line: 86
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 26
          }
        },
        loc: {
          start: {
            line: 95,
            column: 37
          },
          end: {
            line: 103,
            column: 9
          }
        },
        line: 95
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 27
          }
        },
        loc: {
          start: {
            line: 100,
            column: 35
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 100
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 108,
            column: 21
          },
          end: {
            line: 108,
            column: 22
          }
        },
        loc: {
          start: {
            line: 108,
            column: 29
          },
          end: {
            line: 116,
            column: 9
          }
        },
        line: 108
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 112,
            column: 26
          },
          end: {
            line: 112,
            column: 27
          }
        },
        loc: {
          start: {
            line: 112,
            column: 35
          },
          end: {
            line: 115,
            column: 13
          }
        },
        line: 112
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 121,
            column: 23
          },
          end: {
            line: 121,
            column: 24
          }
        },
        loc: {
          start: {
            line: 121,
            column: 33
          },
          end: {
            line: 127,
            column: 9
          }
        },
        line: 121
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 124,
            column: 27
          }
        },
        loc: {
          start: {
            line: 124,
            column: 35
          },
          end: {
            line: 126,
            column: 13
          }
        },
        line: 124
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 131,
            column: 23
          },
          end: {
            line: 131,
            column: 24
          }
        },
        loc: {
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 137,
            column: 9
          }
        },
        line: 131
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 134,
            column: 26
          },
          end: {
            line: 134,
            column: 27
          }
        },
        loc: {
          start: {
            line: 134,
            column: 35
          },
          end: {
            line: 136,
            column: 13
          }
        },
        line: 134
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 152,
            column: 31
          },
          end: {
            line: 152,
            column: 32
          }
        },
        loc: {
          start: {
            line: 152,
            column: 37
          },
          end: {
            line: 152,
            column: 56
          }
        },
        line: 152
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 155,
            column: 31
          },
          end: {
            line: 155,
            column: 32
          }
        },
        loc: {
          start: {
            line: 155,
            column: 37
          },
          end: {
            line: 155,
            column: 49
          }
        },
        line: 155
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 26
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 164
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 166,
            column: 55
          },
          end: {
            line: 166,
            column: 56
          }
        },
        loc: {
          start: {
            line: 166,
            column: 63
          },
          end: {
            line: 166,
            column: 116
          }
        },
        line: 166
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 180,
            column: 42
          },
          end: {
            line: 180,
            column: 43
          }
        },
        loc: {
          start: {
            line: 180,
            column: 49
          },
          end: {
            line: 188,
            column: 10
          }
        },
        line: 180
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 180,
            column: 89
          },
          end: {
            line: 180,
            column: 90
          }
        },
        loc: {
          start: {
            line: 180,
            column: 102
          },
          end: {
            line: 188,
            column: 9
          }
        },
        line: 180
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 28
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 198
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 200,
            column: 55
          },
          end: {
            line: 200,
            column: 56
          }
        },
        loc: {
          start: {
            line: 200,
            column: 68
          },
          end: {
            line: 215,
            column: 9
          }
        },
        line: 200
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 26
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 220
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 221,
            column: 55
          },
          end: {
            line: 221,
            column: 56
          }
        },
        loc: {
          start: {
            line: 221,
            column: 68
          },
          end: {
            line: 232,
            column: 9
          }
        },
        line: 221
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 19
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 237
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 238,
            column: 27
          },
          end: {
            line: 238,
            column: 28
          }
        },
        loc: {
          start: {
            line: 238,
            column: 48
          },
          end: {
            line: 243,
            column: 9
          }
        },
        line: 238
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 240,
            column: 28
          },
          end: {
            line: 240,
            column: 29
          }
        },
        loc: {
          start: {
            line: 240,
            column: 35
          },
          end: {
            line: 240,
            column: 126
          }
        },
        line: 240
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 241,
            column: 29
          },
          end: {
            line: 241,
            column: 30
          }
        },
        loc: {
          start: {
            line: 241,
            column: 36
          },
          end: {
            line: 241,
            column: 76
          }
        },
        line: 241
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 15
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 248
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        },
        loc: {
          start: {
            line: 277,
            column: 20
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 277
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 316,
            column: 25
          },
          end: {
            line: 316,
            column: 26
          }
        },
        loc: {
          start: {
            line: 316,
            column: 44
          },
          end: {
            line: 316,
            column: 72
          }
        },
        line: 316
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 326,
            column: 75
          },
          end: {
            line: 326,
            column: 76
          }
        },
        loc: {
          start: {
            line: 326,
            column: 80
          },
          end: {
            line: 326,
            column: 95
          }
        },
        line: 326
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 31
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 357
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 359,
            column: 27
          },
          end: {
            line: 359,
            column: 28
          }
        },
        loc: {
          start: {
            line: 359,
            column: 37
          },
          end: {
            line: 359,
            column: 54
          }
        },
        line: 359
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 26
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 365
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 375,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        },
        loc: {
          start: {
            line: 375,
            column: 19
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 375
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 377,
            column: 55
          },
          end: {
            line: 377,
            column: 56
          }
        },
        loc: {
          start: {
            line: 377,
            column: 68
          },
          end: {
            line: 425,
            column: 9
          }
        },
        line: 377
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 430,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        },
        loc: {
          start: {
            line: 430,
            column: 16
          },
          end: {
            line: 581,
            column: 5
          }
        },
        line: 430
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 582,
            column: 4
          },
          end: {
            line: 582,
            column: 5
          }
        },
        loc: {
          start: {
            line: 582,
            column: 14
          },
          end: {
            line: 585,
            column: 5
          }
        },
        line: 582
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 48
          }
        }, {
          start: {
            line: 23,
            column: 52
          },
          end: {
            line: 23,
            column: 93
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 45
          }
        }, {
          start: {
            line: 85,
            column: 49
          },
          end: {
            line: 85,
            column: 51
          }
        }],
        line: 85
      },
      "2": {
        loc: {
          start: {
            line: 87,
            column: 38
          },
          end: {
            line: 87,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 46
          },
          end: {
            line: 87,
            column: 51
          }
        }, {
          start: {
            line: 87,
            column: 54
          },
          end: {
            line: 87,
            column: 63
          }
        }],
        line: 87
      },
      "3": {
        loc: {
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 111,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 111,
            column: 46
          }
        }, {
          start: {
            line: 111,
            column: 50
          },
          end: {
            line: 111,
            column: 52
          }
        }],
        line: 111
      },
      "4": {
        loc: {
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 113,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 113,
            column: 44
          }
        }, {
          start: {
            line: 113,
            column: 48
          },
          end: {
            line: 113,
            column: 57
          }
        }],
        line: 113
      },
      "5": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "6": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "7": {
        loc: {
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 186,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 186,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "8": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "9": {
        loc: {
          start: {
            line: 202,
            column: 25
          },
          end: {
            line: 202,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 72
          },
          end: {
            line: 202,
            column: 78
          }
        }, {
          start: {
            line: 202,
            column: 81
          },
          end: {
            line: 202,
            column: 86
          }
        }],
        line: 202
      },
      "10": {
        loc: {
          start: {
            line: 202,
            column: 25
          },
          end: {
            line: 202,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 25
          },
          end: {
            line: 202,
            column: 52
          }
        }, {
          start: {
            line: 202,
            column: 56
          },
          end: {
            line: 202,
            column: 69
          }
        }],
        line: 202
      },
      "11": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "12": {
        loc: {
          start: {
            line: 240,
            column: 60
          },
          end: {
            line: 240,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 104
          },
          end: {
            line: 240,
            column: 110
          }
        }, {
          start: {
            line: 240,
            column: 113
          },
          end: {
            line: 240,
            column: 122
          }
        }],
        line: 240
      },
      "13": {
        loc: {
          start: {
            line: 240,
            column: 60
          },
          end: {
            line: 240,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 60
          },
          end: {
            line: 240,
            column: 84
          }
        }, {
          start: {
            line: 240,
            column: 88
          },
          end: {
            line: 240,
            column: 101
          }
        }],
        line: 240
      },
      "14": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "15": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        }, {
          start: {
            line: 264,
            column: 17
          },
          end: {
            line: 266,
            column: 13
          }
        }],
        line: 252
      },
      "16": {
        loc: {
          start: {
            line: 253,
            column: 33
          },
          end: {
            line: 255,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 254,
            column: 22
          },
          end: {
            line: 254,
            column: 44
          }
        }, {
          start: {
            line: 255,
            column: 22
          },
          end: {
            line: 255,
            column: 44
          }
        }],
        line: 253
      },
      "17": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "18": {
        loc: {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 281,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 281,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "19": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 280,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 280,
            column: 22
          }
        }, {
          start: {
            line: 280,
            column: 26
          },
          end: {
            line: 280,
            column: 43
          }
        }],
        line: 280
      },
      "20": {
        loc: {
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 344,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 344,
            column: 13
          }
        }, {
          start: {
            line: 338,
            column: 17
          },
          end: {
            line: 344,
            column: 13
          }
        }],
        line: 291
      },
      "21": {
        loc: {
          start: {
            line: 310,
            column: 26
          },
          end: {
            line: 321,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 310,
            column: 75
          },
          end: {
            line: 321,
            column: 25
          }
        }, {
          start: {
            line: 321,
            column: 28
          },
          end: {
            line: 321,
            column: 30
          }
        }],
        line: 310
      },
      "22": {
        loc: {
          start: {
            line: 318,
            column: 38
          },
          end: {
            line: 318,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 318,
            column: 87
          },
          end: {
            line: 318,
            column: 110
          }
        }, {
          start: {
            line: 318,
            column: 113
          },
          end: {
            line: 318,
            column: 115
          }
        }],
        line: 318
      },
      "23": {
        loc: {
          start: {
            line: 322,
            column: 26
          },
          end: {
            line: 330,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 322,
            column: 105
          },
          end: {
            line: 330,
            column: 25
          }
        }, {
          start: {
            line: 330,
            column: 28
          },
          end: {
            line: 330,
            column: 30
          }
        }],
        line: 322
      },
      "24": {
        loc: {
          start: {
            line: 322,
            column: 27
          },
          end: {
            line: 322,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 322,
            column: 83
          },
          end: {
            line: 322,
            column: 89
          }
        }, {
          start: {
            line: 322,
            column: 92
          },
          end: {
            line: 322,
            column: 101
          }
        }],
        line: 322
      },
      "25": {
        loc: {
          start: {
            line: 322,
            column: 27
          },
          end: {
            line: 322,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 27
          },
          end: {
            line: 322,
            column: 63
          }
        }, {
          start: {
            line: 322,
            column: 67
          },
          end: {
            line: 322,
            column: 80
          }
        }],
        line: 322
      },
      "26": {
        loc: {
          start: {
            line: 327,
            column: 38
          },
          end: {
            line: 327,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 72
          },
          end: {
            line: 327,
            column: 95
          }
        }, {
          start: {
            line: 327,
            column: 98
          },
          end: {
            line: 327,
            column: 100
          }
        }],
        line: 327
      },
      "27": {
        loc: {
          start: {
            line: 360,
            column: 13
          },
          end: {
            line: 360,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 360,
            column: 32
          },
          end: {
            line: 360,
            column: 48
          }
        }, {
          start: {
            line: 360,
            column: 51
          },
          end: {
            line: 360,
            column: 53
          }
        }],
        line: 360
      },
      "28": {
        loc: {
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 367,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 367,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "29": {
        loc: {
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 369,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 369,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "30": {
        loc: {
          start: {
            line: 378,
            column: 12
          },
          end: {
            line: 381,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 12
          },
          end: {
            line: 381,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "31": {
        loc: {
          start: {
            line: 378,
            column: 16
          },
          end: {
            line: 378,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 16
          },
          end: {
            line: 378,
            column: 34
          }
        }, {
          start: {
            line: 378,
            column: 38
          },
          end: {
            line: 378,
            column: 55
          }
        }],
        line: 378
      },
      "32": {
        loc: {
          start: {
            line: 391,
            column: 16
          },
          end: {
            line: 394,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 16
          },
          end: {
            line: 394,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "33": {
        loc: {
          start: {
            line: 398,
            column: 16
          },
          end: {
            line: 405,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 16
          },
          end: {
            line: 405,
            column: 17
          }
        }, {
          start: {
            line: 401,
            column: 21
          },
          end: {
            line: 405,
            column: 17
          }
        }],
        line: 398
      },
      "34": {
        loc: {
          start: {
            line: 407,
            column: 16
          },
          end: {
            line: 409,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 16
          },
          end: {
            line: 409,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "35": {
        loc: {
          start: {
            line: 410,
            column: 32
          },
          end: {
            line: 412,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 411,
            column: 22
          },
          end: {
            line: 411,
            column: 78
          }
        }, {
          start: {
            line: 412,
            column: 22
          },
          end: {
            line: 412,
            column: 73
          }
        }],
        line: 410
      },
      "36": {
        loc: {
          start: {
            line: 414,
            column: 16
          },
          end: {
            line: 416,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 16
          },
          end: {
            line: 416,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "37": {
        loc: {
          start: {
            line: 414,
            column: 20
          },
          end: {
            line: 414,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 414,
            column: 76
          },
          end: {
            line: 414,
            column: 82
          }
        }, {
          start: {
            line: 414,
            column: 85
          },
          end: {
            line: 414,
            column: 94
          }
        }],
        line: 414
      },
      "38": {
        loc: {
          start: {
            line: 414,
            column: 20
          },
          end: {
            line: 414,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 20
          },
          end: {
            line: 414,
            column: 56
          }
        }, {
          start: {
            line: 414,
            column: 60
          },
          end: {
            line: 414,
            column: 73
          }
        }],
        line: 414
      },
      "39": {
        loc: {
          start: {
            line: 417,
            column: 16
          },
          end: {
            line: 419,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 16
          },
          end: {
            line: 419,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "40": {
        loc: {
          start: {
            line: 417,
            column: 20
          },
          end: {
            line: 417,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 417,
            column: 74
          },
          end: {
            line: 417,
            column: 80
          }
        }, {
          start: {
            line: 417,
            column: 83
          },
          end: {
            line: 417,
            column: 92
          }
        }],
        line: 417
      },
      "41": {
        loc: {
          start: {
            line: 417,
            column: 20
          },
          end: {
            line: 417,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 20
          },
          end: {
            line: 417,
            column: 54
          }
        }, {
          start: {
            line: 417,
            column: 58
          },
          end: {
            line: 417,
            column: 71
          }
        }],
        line: 417
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/ImportRDFModal.ts",
      mappings: ";AAAA;;;GAGG;;;;AAEH,uCAA8D;AAE9D,oEAA+E;AAE/E,kFAA+E;AAU/E,MAAa,cAAe,SAAQ,gBAAK;IAarC,YACI,GAAQ,EACR,KAAY,EACZ,gBAAmC,EACnC,QAAiE;QAEjE,KAAK,CAAC,GAAG,CAAC,CAAC;QAjBP,YAAO,GAAkB;YAC7B,SAAS,EAAE,OAAO;YAClB,aAAa,EAAE,IAAI;YACnB,UAAU,EAAE,KAAK;SACpB,CAAC;QAGM,iBAAY,GAAwB,IAAI,CAAC;QACzC,gBAAW,GAAW,EAAE,CAAC;QAU7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,IAAI,IAAI,mCAAgB,EAAE,CAAC;QACnE,IAAI,CAAC,MAAM,GAAG,IAAI,qBAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,MAAM;QACF,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAC3B,SAAS,CAAC,KAAK,EAAE,CAAC;QAElB,QAAQ;QACR,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAEtD,2BAA2B;QAC3B,MAAM,cAAc,GAAG,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAC5D,cAAc,CAAC,SAAS,GAAG;;;;;+CAKY,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;;;;+CAIjB,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,IAAI;;;;+CAI1B,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,IAAI;;;SAGlE,CAAC;QAEF,iBAAiB;QACjB,MAAM,WAAW,GAAG,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAC1D,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC;QAEpD,aAAa;QACb,MAAM,kBAAkB,GAAG,WAAW,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QAEzE,8BAA8B;QAC9B,IAAI,kBAAO,CAAC,kBAAkB,CAAC;aAC1B,OAAO,CAAC,mBAAmB,CAAC;aAC5B,OAAO,CAAC,oCAAoC,CAAC;aAC7C,SAAS,CAAC,MAAM,CAAC,EAAE;YAChB,MAAM;iBACD,aAAa,CAAC,aAAa,CAAC;iBAC5B,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEP,wBAAwB;QACxB,MAAM,eAAe,GAAG,kBAAkB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACzE,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAE/D,MAAM,SAAS,GAAG,eAAe,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QACtE,SAAS,CAAC,MAAM,GAAG,gCAAgC,CAAC;QACpD,SAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEtE,wBAAwB;QACxB,MAAM,cAAc,GAAG,WAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAC9D,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtC,mBAAmB;QACnB,IAAI,kBAAO,CAAC,SAAS,CAAC;aACjB,OAAO,CAAC,YAAY,CAAC;aACrB,OAAO,CAAC,2CAA2C,CAAC;aACpD,WAAW,CAAC,QAAQ,CAAC,EAAE;YACpB,QAAQ;iBACH,SAAS,CAAC,EAAE,EAAE,aAAa,CAAC;iBAC5B,SAAS,CAAC,QAAQ,EAAE,eAAe,CAAC;iBACpC,SAAS,CAAC,UAAU,EAAE,iBAAiB,CAAC;iBACxC,SAAS,CAAC,QAAQ,EAAE,mBAAmB,CAAC;iBACxC,SAAS,CAAC,QAAQ,EAAE,gBAAgB,CAAC;iBACrC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;iBACnC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,KAAkB,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC7D,IAAI,CAAC,aAAa,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QAEP,aAAa;QACb,IAAI,kBAAO,CAAC,SAAS,CAAC;aACjB,OAAO,CAAC,aAAa,CAAC;aACtB,OAAO,CAAC,6BAA6B,CAAC;aACtC,WAAW,CAAC,QAAQ,CAAC,EAAE;YACpB,QAAQ;iBACH,SAAS,CAAC,OAAO,EAAE,2BAA2B,CAAC;iBAC/C,SAAS,CAAC,SAAS,EAAE,sBAAsB,CAAC;iBAC5C,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;iBAChC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAA4B,CAAC;YAC1D,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QAEP,mBAAmB;QACnB,IAAI,kBAAO,CAAC,SAAS,CAAC;aACjB,OAAO,CAAC,UAAU,CAAC;aACnB,OAAO,CAAC,qCAAqC,CAAC;aAC9C,OAAO,CAAC,IAAI,CAAC,EAAE;YACZ,IAAI;iBACC,cAAc,CAAC,2BAA2B,CAAC;iBAC3C,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;iBACpC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,IAAI,SAAS,CAAC;gBAC1C,IAAI,CAAC,aAAa,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QAEP,qBAAqB;QACrB,IAAI,kBAAO,CAAC,SAAS,CAAC;aACjB,OAAO,CAAC,gBAAgB,CAAC;aACzB,OAAO,CAAC,iCAAiC,CAAC;aAC1C,SAAS,CAAC,MAAM,CAAC,EAAE;YAChB,MAAM;iBACD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;iBACpC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;YACvC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QAEP,IAAI,kBAAO,CAAC,SAAS,CAAC;aACjB,OAAO,CAAC,aAAa,CAAC;aACtB,OAAO,CAAC,mCAAmC,CAAC;aAC5C,SAAS,CAAC,MAAM,CAAC,EAAE;YAChB,MAAM;iBACD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;iBACjC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC;YACpC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QAEP,kBAAkB;QAClB,MAAM,gBAAgB,GAAG,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAC/D,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;QAErD,MAAM,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAC/E,SAAS,CAAC,SAAS,GAAG,uCAAuC,CAAC;QAE9D,UAAU;QACV,MAAM,eAAe,GAAG,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAC9D,eAAe,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;QAEnD,gBAAgB;QAChB,MAAM,YAAY,GAAG,eAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACpD,IAAI,EAAE,QAAQ;YACd,GAAG,EAAE,SAAS;SACjB,CAAC,CAAC;QACH,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,YAAY,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAEjD,gBAAgB;QAChB,MAAM,YAAY,GAAG,eAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC5E,YAAY,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAE1C,mBAAmB;QACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,aAAa;QACb,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACK,mBAAmB;QACvB,kCAAkC;QAClC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAClD,gCAAgC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CACxD,CAAC;QAEF,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACpB,IAAI,iBAAM,CAAC,6BAA6B,CAAC,CAAC;YAC1C,OAAO;SACV;QAED,oGAAoG;QACpG,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,GAAG,0CAA0C,CAAC;QAE9D,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACtB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAChD,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;YACzB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;YAC/B,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAC9B;QAED,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAO,CAAC,EAAE,EAAE;YAC1C,MAAM,YAAY,GAAI,CAAC,CAAC,MAA4B,CAAC,KAAK,CAAC;YAC3D,IAAI,YAAY,EAAE;gBACd,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;gBAChE,IAAI,IAAI,YAAY,gBAAK,EAAE;oBACvB,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;iBACpC;aACJ;QACL,CAAC,CAAA,CAAC,CAAC;QAEH,2EAA2E;QAC3E,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;QACxE,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACjC;IACL,CAAC;IAED;;OAEG;IACW,gBAAgB,CAAC,KAAY;;;YACvC,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B,CAAC;YAC/C,MAAM,IAAI,GAAG,MAAA,KAAK,CAAC,KAAK,0CAAG,CAAC,CAAC,CAAC;YAE9B,IAAI,IAAI,EAAE;gBACN,IAAI;oBACA,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;oBAC3B,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,IAAI,CAAC,aAAa,EAAE,CAAC;iBACxB;gBAAC,OAAO,KAAK,EAAE;oBACZ,IAAI,iBAAM,CAAC,uBAAuB,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;iBACtD;aACJ;;KACJ;IAED;;OAEG;IACW,eAAe,CAAC,IAAW;;YACrC,IAAI;gBACA,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;gBAC3B,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,iBAAM,CAAC,6BAA6B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;aAC5D;QACL,CAAC;KAAA;IAED;;OAEG;IACK,QAAQ,CAAC,IAAU;QACvB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,WAAC,OAAA,OAAO,CAAC,MAAA,CAAC,CAAC,MAAM,0CAAE,MAAgB,CAAC,CAAA,EAAA,CAAC;YAC3D,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;YACjE,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACK,QAAQ;QACZ,+BAA+B;QAC/B,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,gBAAgB,CAAgB,CAAC;QACrF,IAAI,cAAc,EAAE;YAChB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,YAAY,gBAAK;oBAC/C,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI;oBACxB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBAE7B,cAAc,CAAC,SAAS,GAAG;;qDAEU,QAAQ;mDACV,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;;iBAE9E,CAAC;gBACF,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;aAC1C;iBAAM;gBACH,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;aACzC;SACJ;QAED,+BAA+B;QAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,gBAAgB,CAAsB,CAAC;QACzF,IAAI,YAAY,EAAE;YACd,YAAY,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;SAC9C;IACL,CAAC;IAED;;OAEG;IACK,aAAa;;QACjB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,kBAAkB,CAAgB,CAAC;QAClF,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO;QAE5C,IAAI;YACA,MAAM,YAAY,GAAiB;gBAC/B,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;gBAC3B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO;gBAC7B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,aAAa,EAAE,KAAK;gBACpB,UAAU,EAAE,KAAK;aACpB,CAAC;YAEF,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;YAEjE,IAAI,MAAM,CAAC,SAAS,EAAE;gBAClB,MAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAEtC,SAAS,CAAC,SAAS,GAAG;;;;;;2DAMqB,WAAW,CAAC,WAAW;;;;2DAIvB,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,IAAI;;;;2DAIjC,WAAW,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,IAAI;;;0BAGpE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;;;sCAIrC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC;qBACnC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;qBACX,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,OAAO,MAAM,KAAK,GAAG,OAAO,CAAC;qBACpD,IAAI,CAAC,EAAE,CAAC;sCACX,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE;;;yBAG1F,CAAC,CAAC,CAAC,EAAE;0BACJ,CAAA,MAAA,WAAW,CAAC,QAAQ,0CAAE,MAAM,EAAC,CAAC,CAAC;;;;sCAInB,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;sCACnE,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE;;;yBAG3E,CAAC,CAAC,CAAC,EAAE;;;;qDAIuB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,CAAC;;iBAE/E,CAAC;aACL;iBAAM;gBACH,SAAS,CAAC,SAAS,GAAG;;wDAEkB,MAAM,CAAC,UAAU,EAAE;;iBAE1D,CAAC;aACL;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,SAAS,CAAC,SAAS,GAAG;;sDAEoB,KAAK,CAAC,OAAO;;aAEtD,CAAC;SACL;IACL,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,KAAY;QACpC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACnD,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC;IAED;;OAEG;IACK,cAAc,CAAC,KAAa;QAChC,IAAI,KAAK,GAAG,IAAI;YAAE,OAAO,KAAK,GAAG,IAAI,CAAC;QACtC,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI;YAAE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC;QACjE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;IACrD,CAAC;IAED;;OAEG;IACW,YAAY;;;YACtB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACzC,IAAI,iBAAM,CAAC,kBAAkB,CAAC,CAAC;gBAC/B,OAAO;aACV;YAED,IAAI;gBACA,MAAM,YAAY,GAAiB;oBAC/B,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;oBAC3B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO;oBAC7B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;oBACvC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;oBACzC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;iBACtC,CAAC;gBAEF,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;gBAEjE,IAAI,MAAM,CAAC,SAAS,EAAE;oBAClB,IAAI,iBAAM,CAAC,kBAAkB,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;oBACpD,OAAO;iBACV;gBAED,MAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAEtC,oBAAoB;gBACpB,IAAI,UAAiB,CAAC;gBAEtB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,SAAS,EAAE;oBACtC,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC;iBAClC;qBAAM;oBACH,4BAA4B;oBAC5B,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;oBAChC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBACvC;gBAED,yBAAyB;gBACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;iBAClD;gBAED,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,SAAS;oBAChD,CAAC,CAAC,uBAAuB,WAAW,CAAC,WAAW,UAAU;oBAC1D,CAAC,CAAC,SAAS,WAAW,CAAC,WAAW,mBAAmB,CAAC;gBAE1D,IAAI,iBAAM,CAAC,OAAO,CAAC,CAAC;gBAEpB,IAAI,MAAA,WAAW,CAAC,QAAQ,0CAAE,MAAM,EAAE;oBAC9B,IAAI,iBAAM,CAAC,aAAa,WAAW,CAAC,QAAQ,CAAC,MAAM,iBAAiB,EAAE,IAAI,CAAC,CAAC;iBAC/E;gBAED,IAAI,MAAA,WAAW,CAAC,MAAM,0CAAE,MAAM,EAAE;oBAC5B,IAAI,iBAAM,CAAC,WAAW,WAAW,CAAC,MAAM,CAAC,MAAM,eAAe,EAAE,IAAI,CAAC,CAAC;iBACzE;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;aAEhB;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,iBAAM,CAAC,iBAAiB,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;aAChD;;KACJ;IAED;;OAEG;IACK,SAAS;QACb,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC9C,KAAK,CAAC,WAAW,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAmJnB,CAAC;QAEF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,OAAO;QACH,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAC3B,SAAS,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;CACJ;AAjnBD,wCAinBC",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/ImportRDFModal.ts"],
      sourcesContent: ["/**\n * Modal for RDF Import functionality\n * Allows users to import RDF data from files and merge with existing graph\n */\n\nimport { App, Modal, Setting, Notice, TFile } from 'obsidian';\nimport { Graph } from '../../domain/semantic/core/Graph';\nimport { RDFParser, ParseOptions } from '../../application/services/RDFParser';\nimport { RDFFormat } from '../../application/services/RDFSerializer';\nimport { NamespaceManager } from '../../application/services/NamespaceManager';\n\nexport interface ImportOptions {\n    format?: RDFFormat;\n    mergeMode: 'merge' | 'replace';\n    validateInput: boolean;\n    strictMode: boolean;\n    baseIRI?: string;\n}\n\nexport class ImportRDFModal extends Modal {\n    private graph: Graph;\n    private options: ImportOptions = {\n        mergeMode: 'merge',\n        validateInput: true,\n        strictMode: false\n    };\n    private parser: RDFParser;\n    private namespaceManager: NamespaceManager;\n    private selectedFile: File | TFile | null = null;\n    private fileContent: string = '';\n    private onImport?: (importedGraph: Graph, options: ImportOptions) => void;\n    \n    constructor(\n        app: App, \n        graph: Graph, \n        namespaceManager?: NamespaceManager,\n        onImport?: (importedGraph: Graph, options: ImportOptions) => void\n    ) {\n        super(app);\n        this.graph = graph;\n        this.namespaceManager = namespaceManager || new NamespaceManager();\n        this.parser = new RDFParser(this.namespaceManager);\n        this.onImport = onImport;\n    }\n    \n    onOpen() {\n        const { contentEl } = this;\n        contentEl.empty();\n        \n        // Title\n        contentEl.createEl('h2', { text: 'Import RDF Data' });\n        \n        // Current graph statistics\n        const currentStatsEl = contentEl.createDiv('current-stats');\n        currentStatsEl.innerHTML = `\n            <h3>Current Graph</h3>\n            <div class=\"stats-grid\">\n                <div class=\"stat-item\">\n                    <span class=\"stat-label\">Triples:</span>\n                    <span class=\"stat-value\">${this.graph.size()}</span>\n                </div>\n                <div class=\"stat-item\">\n                    <span class=\"stat-label\">Subjects:</span>\n                    <span class=\"stat-value\">${this.graph.subjects().size}</span>\n                </div>\n                <div class=\"stat-item\">\n                    <span class=\"stat-label\">Predicates:</span>\n                    <span class=\"stat-value\">${this.graph.predicates().size}</span>\n                </div>\n            </div>\n        `;\n        \n        // File selection\n        const fileSection = contentEl.createDiv('file-selection');\n        fileSection.createEl('h3', { text: 'Select File' });\n        \n        // File input\n        const fileInputContainer = fileSection.createDiv('file-input-container');\n        \n        // Option 1: Select from vault\n        new Setting(fileInputContainer)\n            .setName('Import from vault')\n            .setDesc('Select an RDF file from your vault')\n            .addButton(button => {\n                button\n                    .setButtonText('Select File')\n                    .onClick(() => this.openVaultFilePicker());\n            });\n        \n        // Option 2: Upload file\n        const uploadContainer = fileInputContainer.createDiv('upload-container');\n        uploadContainer.createEl('span', { text: 'Or upload file: ' });\n        \n        const fileInput = uploadContainer.createEl('input', { type: 'file' });\n        fileInput.accept = '.ttl,.nt,.jsonld,.rdf,.n3,.xml';\n        fileInput.addEventListener('change', (e) => this.handleFileUpload(e));\n        \n        // Selected file display\n        const selectedFileEl = fileSection.createDiv('selected-file');\n        selectedFileEl.style.display = 'none';\n        \n        // Format selection\n        new Setting(contentEl)\n            .setName('RDF format')\n            .setDesc('Specify format (auto-detected if not set)')\n            .addDropdown(dropdown => {\n                dropdown\n                    .addOption('', 'Auto-detect')\n                    .addOption('turtle', 'Turtle (.ttl)')\n                    .addOption('ntriples', 'N-Triples (.nt)')\n                    .addOption('jsonld', 'JSON-LD (.jsonld)')\n                    .addOption('rdfxml', 'RDF/XML (.rdf)')\n                    .setValue(this.options.format || '')\n                    .onChange(value => {\n                        this.options.format = value ? value as RDFFormat : undefined;\n                        this.updatePreview();\n                    });\n            });\n        \n        // Merge mode\n        new Setting(contentEl)\n            .setName('Import mode')\n            .setDesc('How to handle existing data')\n            .addDropdown(dropdown => {\n                dropdown\n                    .addOption('merge', 'Merge with existing graph')\n                    .addOption('replace', 'Replace entire graph')\n                    .setValue(this.options.mergeMode)\n                    .onChange(value => {\n                        this.options.mergeMode = value as 'merge' | 'replace';\n                    });\n            });\n        \n        // Base IRI setting\n        new Setting(contentEl)\n            .setName('Base IRI')\n            .setDesc('Optional base IRI for relative URIs')\n            .addText(text => {\n                text\n                    .setPlaceholder('https://example.org/data/')\n                    .setValue(this.options.baseIRI || '')\n                    .onChange(value => {\n                        this.options.baseIRI = value || undefined;\n                        this.updatePreview();\n                    });\n            });\n        \n        // Validation options\n        new Setting(contentEl)\n            .setName('Validate input')\n            .setDesc('Validate RDF data during import')\n            .addToggle(toggle => {\n                toggle\n                    .setValue(this.options.validateInput)\n                    .onChange(value => {\n                        this.options.validateInput = value;\n                    });\n            });\n        \n        new Setting(contentEl)\n            .setName('Strict mode')\n            .setDesc('Fail import on any parsing errors')\n            .addToggle(toggle => {\n                toggle\n                    .setValue(this.options.strictMode)\n                    .onChange(value => {\n                        this.options.strictMode = value;\n                    });\n            });\n        \n        // Preview section\n        const previewContainer = contentEl.createDiv('import-preview');\n        previewContainer.createEl('h3', { text: 'Preview' });\n        \n        const previewEl = previewContainer.createEl('div', { cls: 'preview-content' });\n        previewEl.innerHTML = '<em>Select a file to see preview</em>';\n        \n        // Buttons\n        const buttonContainer = contentEl.createDiv('import-buttons');\n        buttonContainer.addClass('modal-button-container');\n        \n        // Import button\n        const importButton = buttonContainer.createEl('button', { \n            text: 'Import',\n            cls: 'mod-cta'\n        });\n        importButton.disabled = true;\n        importButton.onclick = () => this.handleImport();\n        \n        // Cancel button\n        const cancelButton = buttonContainer.createEl('button', { text: 'Cancel' });\n        cancelButton.onclick = () => this.close();\n        \n        // Store references\n        this.updateUI();\n        \n        // Add styles\n        this.addStyles();\n    }\n    \n    /**\n     * Open vault file picker\n     */\n    private openVaultFilePicker(): void {\n        // Get all files that might be RDF\n        const files = this.app.vault.getFiles().filter(file => \n            /\\.(ttl|nt|jsonld|rdf|n3|xml)$/i.test(file.extension)\n        );\n        \n        if (files.length === 0) {\n            new Notice('No RDF files found in vault');\n            return;\n        }\n        \n        // Create a simple file picker (in a real implementation, you might use a more sophisticated picker)\n        const picker = document.createElement('select');\n        picker.innerHTML = '<option value=\"\">Select file...</option>';\n        \n        for (const file of files) {\n            const option = document.createElement('option');\n            option.value = file.path;\n            option.textContent = file.path;\n            picker.appendChild(option);\n        }\n        \n        picker.addEventListener('change', async (e) => {\n            const selectedPath = (e.target as HTMLSelectElement).value;\n            if (selectedPath) {\n                const file = this.app.vault.getAbstractFileByPath(selectedPath);\n                if (file instanceof TFile) {\n                    await this.selectVaultFile(file);\n                }\n            }\n        });\n        \n        // Add to modal (in a real implementation, this would be better integrated)\n        const container = this.contentEl.querySelector('.file-input-container');\n        if (container) {\n            container.appendChild(picker);\n        }\n    }\n    \n    /**\n     * Handle file upload from computer\n     */\n    private async handleFileUpload(event: Event): Promise<void> {\n        const input = event.target as HTMLInputElement;\n        const file = input.files?.[0];\n        \n        if (file) {\n            try {\n                const content = await this.readFile(file);\n                this.selectedFile = file;\n                this.fileContent = content;\n                this.updateUI();\n                this.updatePreview();\n            } catch (error) {\n                new Notice(`Error reading file: ${error.message}`);\n            }\n        }\n    }\n    \n    /**\n     * Select file from vault\n     */\n    private async selectVaultFile(file: TFile): Promise<void> {\n        try {\n            const content = await this.app.vault.read(file);\n            this.selectedFile = file;\n            this.fileContent = content;\n            this.updateUI();\n            this.updatePreview();\n        } catch (error) {\n            new Notice(`Error reading vault file: ${error.message}`);\n        }\n    }\n    \n    /**\n     * Read file content\n     */\n    private readFile(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = (e) => resolve(e.target?.result as string);\n            reader.onerror = (e) => reject(new Error('Failed to read file'));\n            reader.readAsText(file);\n        });\n    }\n    \n    /**\n     * Update UI state\n     */\n    private updateUI(): void {\n        // Update selected file display\n        const selectedFileEl = this.contentEl.querySelector('.selected-file') as HTMLElement;\n        if (selectedFileEl) {\n            if (this.selectedFile) {\n                const fileName = this.selectedFile instanceof TFile \n                    ? this.selectedFile.name \n                    : this.selectedFile.name;\n                \n                selectedFileEl.innerHTML = `\n                    <div class=\"selected-file-info\">\n                        <strong>Selected:</strong> ${fileName}\n                        <span class=\"file-size\">(${this.formatFileSize(this.fileContent.length)})</span>\n                    </div>\n                `;\n                selectedFileEl.style.display = 'block';\n            } else {\n                selectedFileEl.style.display = 'none';\n            }\n        }\n        \n        // Enable/disable import button\n        const importButton = this.contentEl.querySelector('button.mod-cta') as HTMLButtonElement;\n        if (importButton) {\n            importButton.disabled = !this.selectedFile;\n        }\n    }\n    \n    /**\n     * Update preview content\n     */\n    private updatePreview(): void {\n        const previewEl = this.contentEl.querySelector('.preview-content') as HTMLElement;\n        if (!previewEl || !this.fileContent) return;\n        \n        try {\n            const parseOptions: ParseOptions = {\n                format: this.options.format,\n                baseIRI: this.options.baseIRI,\n                namespaceManager: this.namespaceManager,\n                validateInput: false, // Don't validate for preview\n                strictMode: false\n            };\n            \n            const result = this.parser.parse(this.fileContent, parseOptions);\n            \n            if (result.isSuccess) {\n                const parseResult = result.getValue();\n                \n                previewEl.innerHTML = `\n                    <div class=\"preview-stats\">\n                        <h4>Import Preview</h4>\n                        <div class=\"stats-grid\">\n                            <div class=\"stat-item\">\n                                <span class=\"stat-label\">Triples:</span>\n                                <span class=\"stat-value\">${parseResult.tripleCount}</span>\n                            </div>\n                            <div class=\"stat-item\">\n                                <span class=\"stat-label\">Subjects:</span>\n                                <span class=\"stat-value\">${parseResult.graph.subjects().size}</span>\n                            </div>\n                            <div class=\"stat-item\">\n                                <span class=\"stat-label\">Predicates:</span>\n                                <span class=\"stat-value\">${parseResult.graph.predicates().size}</span>\n                            </div>\n                        </div>\n                        ${Object.keys(parseResult.namespaces).length > 0 ? `\n                            <div class=\"namespaces\">\n                                <strong>Namespaces found:</strong>\n                                <ul>\n                                    ${Object.entries(parseResult.namespaces)\n                                        .slice(0, 5)\n                                        .map(([prefix, uri]) => `<li>${prefix}: ${uri}</li>`)\n                                        .join('')}\n                                    ${Object.keys(parseResult.namespaces).length > 5 ? '<li>... and more</li>' : ''}\n                                </ul>\n                            </div>\n                        ` : ''}\n                        ${parseResult.warnings?.length ? `\n                            <div class=\"warnings\">\n                                <strong>Warnings:</strong>\n                                <ul>\n                                    ${parseResult.warnings.slice(0, 3).map(w => `<li>${w}</li>`).join('')}\n                                    ${parseResult.warnings.length > 3 ? '<li>... and more</li>' : ''}\n                                </ul>\n                            </div>\n                        ` : ''}\n                    </div>\n                    <div class=\"sample-triples\">\n                        <h4>Sample Triples</h4>\n                        <pre class=\"triple-sample\">${this.formatSampleTriples(parseResult.graph)}</pre>\n                    </div>\n                `;\n            } else {\n                previewEl.innerHTML = `\n                    <div class=\"preview-error\">\n                        <strong>Parse Error:</strong> ${result.errorValue()}\n                    </div>\n                `;\n            }\n        } catch (error) {\n            previewEl.innerHTML = `\n                <div class=\"preview-error\">\n                    <strong>Preview Error:</strong> ${error.message}\n                </div>\n            `;\n        }\n    }\n    \n    /**\n     * Format sample triples for display\n     */\n    private formatSampleTriples(graph: Graph): string {\n        const triples = graph.toArray().slice(0, 5);\n        return triples.map(triple => triple.toString()).join('\\n') + \n               (graph.size() > 5 ? '\\n... and more' : '');\n    }\n    \n    /**\n     * Format file size\n     */\n    private formatFileSize(bytes: number): string {\n        if (bytes < 1024) return bytes + ' B';\n        if (bytes < 1024 * 1024) return Math.round(bytes / 1024) + ' KB';\n        return Math.round(bytes / (1024 * 1024)) + ' MB';\n    }\n    \n    /**\n     * Handle import action\n     */\n    private async handleImport(): Promise<void> {\n        if (!this.selectedFile || !this.fileContent) {\n            new Notice('No file selected');\n            return;\n        }\n        \n        try {\n            const parseOptions: ParseOptions = {\n                format: this.options.format,\n                baseIRI: this.options.baseIRI,\n                namespaceManager: this.namespaceManager,\n                validateInput: this.options.validateInput,\n                strictMode: this.options.strictMode\n            };\n            \n            const result = this.parser.parse(this.fileContent, parseOptions);\n            \n            if (result.isFailure) {\n                new Notice(`Import failed: ${result.errorValue()}`);\n                return;\n            }\n            \n            const parseResult = result.getValue();\n            \n            // Handle merge mode\n            let finalGraph: Graph;\n            \n            if (this.options.mergeMode === 'replace') {\n                finalGraph = parseResult.graph;\n            } else {\n                // Merge with existing graph\n                finalGraph = this.graph.clone();\n                finalGraph.merge(parseResult.graph);\n            }\n            \n            // Call onImport callback\n            if (this.onImport) {\n                this.onImport(parseResult.graph, this.options);\n            }\n            \n            const message = this.options.mergeMode === 'replace'\n                ? `Replaced graph with ${parseResult.tripleCount} triples`\n                : `Added ${parseResult.tripleCount} triples to graph`;\n            \n            new Notice(message);\n            \n            if (parseResult.warnings?.length) {\n                new Notice(`Warnings: ${parseResult.warnings.length} warnings found`, 3000);\n            }\n            \n            if (parseResult.errors?.length) {\n                new Notice(`Errors: ${parseResult.errors.length} errors found`, 3000);\n            }\n            \n            this.close();\n            \n        } catch (error) {\n            new Notice(`Import error: ${error.message}`);\n        }\n    }\n    \n    /**\n     * Add custom styles\n     */\n    private addStyles(): void {\n        const style = document.createElement('style');\n        style.textContent = `\n            .current-stats, .preview-stats {\n                margin-bottom: 20px;\n                padding: 15px;\n                background: var(--background-secondary);\n                border-radius: 6px;\n            }\n            \n            .stats-grid {\n                display: flex;\n                gap: 20px;\n                margin-top: 10px;\n            }\n            \n            .stat-item {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n            }\n            \n            .stat-label {\n                font-size: 12px;\n                color: var(--text-muted);\n                margin-bottom: 2px;\n            }\n            \n            .stat-value {\n                font-size: 16px;\n                font-weight: 600;\n                color: var(--text-normal);\n            }\n            \n            .file-selection {\n                margin: 20px 0;\n                padding: 15px;\n                border: 1px solid var(--background-modifier-border);\n                border-radius: 6px;\n            }\n            \n            .file-input-container {\n                margin: 10px 0;\n            }\n            \n            .upload-container {\n                margin: 10px 0;\n                display: flex;\n                align-items: center;\n                gap: 10px;\n            }\n            \n            .selected-file {\n                margin: 10px 0;\n                padding: 10px;\n                background: var(--background-primary-alt);\n                border-radius: 4px;\n            }\n            \n            .selected-file-info {\n                display: flex;\n                align-items: center;\n                gap: 10px;\n            }\n            \n            .file-size {\n                color: var(--text-muted);\n                font-size: 12px;\n            }\n            \n            .preview-content {\n                max-height: 300px;\n                overflow-y: auto;\n                padding: 15px;\n                background: var(--background-secondary);\n                border-radius: 6px;\n            }\n            \n            .preview-error {\n                color: var(--text-error);\n                padding: 10px;\n                background: var(--background-modifier-error);\n                border-radius: 4px;\n            }\n            \n            .namespaces, .warnings {\n                margin: 10px 0;\n            }\n            \n            .namespaces ul, .warnings ul {\n                margin: 5px 0 0 20px;\n                font-size: 12px;\n            }\n            \n            .warnings {\n                color: var(--text-warning);\n            }\n            \n            .sample-triples {\n                margin-top: 15px;\n            }\n            \n            .triple-sample {\n                font-family: var(--font-monospace);\n                font-size: 11px;\n                background: var(--background-primary);\n                padding: 10px;\n                border-radius: 4px;\n                overflow-x: auto;\n                margin: 5px 0 0 0;\n            }\n            \n            .import-buttons {\n                display: flex;\n                gap: 10px;\n                justify-content: flex-end;\n                margin-top: 20px;\n                padding-top: 20px;\n                border-top: 1px solid var(--background-modifier-border);\n            }\n            \n            .modal-button-container button {\n                padding: 8px 16px;\n                border-radius: 4px;\n                border: 1px solid var(--background-modifier-border);\n                background: var(--background-primary);\n                color: var(--text-normal);\n                cursor: pointer;\n            }\n            \n            .modal-button-container button:hover:not(:disabled) {\n                background: var(--background-secondary);\n            }\n            \n            .modal-button-container button:disabled {\n                opacity: 0.5;\n                cursor: not-allowed;\n            }\n            \n            .modal-button-container button.mod-cta:not(:disabled) {\n                background: var(--interactive-accent);\n                color: var(--text-on-accent);\n                border-color: var(--interactive-accent);\n            }\n            \n            .modal-button-container button.mod-cta:hover:not(:disabled) {\n                background: var(--interactive-accent-hover);\n                border-color: var(--interactive-accent-hover);\n            }\n        `;\n        \n        document.head.appendChild(style);\n    }\n    \n    onClose() {\n        const { contentEl } = this;\n        contentEl.empty();\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "36b980fd192ccd5a4e4db70bc5e9931c8ee447ea"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17ridlsypw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17ridlsypw();
cov_17ridlsypw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_17ridlsypw().s[1]++;
exports.ImportRDFModal = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_17ridlsypw().s[2]++, require("tslib"));
const obsidian_1 =
/* istanbul ignore next */
(cov_17ridlsypw().s[3]++, require("obsidian"));
const RDFParser_1 =
/* istanbul ignore next */
(cov_17ridlsypw().s[4]++, require("../../application/services/RDFParser"));
const NamespaceManager_1 =
/* istanbul ignore next */
(cov_17ridlsypw().s[5]++, require("../../application/services/NamespaceManager"));
class ImportRDFModal extends
/* istanbul ignore next */
(obsidian_1.Modal) {
  constructor(app, graph, namespaceManager, onImport) {
    /* istanbul ignore next */
    cov_17ridlsypw().f[0]++;
    cov_17ridlsypw().s[6]++;
    super(app);
    /* istanbul ignore next */
    cov_17ridlsypw().s[7]++;
    this.options = {
      mergeMode: 'merge',
      validateInput: true,
      strictMode: false
    };
    /* istanbul ignore next */
    cov_17ridlsypw().s[8]++;
    this.selectedFile = null;
    /* istanbul ignore next */
    cov_17ridlsypw().s[9]++;
    this.fileContent = '';
    /* istanbul ignore next */
    cov_17ridlsypw().s[10]++;
    this.graph = graph;
    /* istanbul ignore next */
    cov_17ridlsypw().s[11]++;
    this.namespaceManager =
    /* istanbul ignore next */
    (cov_17ridlsypw().b[0][0]++, namespaceManager) ||
    /* istanbul ignore next */
    (cov_17ridlsypw().b[0][1]++, new NamespaceManager_1.NamespaceManager());
    /* istanbul ignore next */
    cov_17ridlsypw().s[12]++;
    this.parser = new RDFParser_1.RDFParser(this.namespaceManager);
    /* istanbul ignore next */
    cov_17ridlsypw().s[13]++;
    this.onImport = onImport;
  }
  onOpen() {
    /* istanbul ignore next */
    cov_17ridlsypw().f[1]++;
    const {
      contentEl
    } =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[14]++, this);
    /* istanbul ignore next */
    cov_17ridlsypw().s[15]++;
    contentEl.empty();
    // Title
    /* istanbul ignore next */
    cov_17ridlsypw().s[16]++;
    contentEl.createEl('h2', {
      text: 'Import RDF Data'
    });
    // Current graph statistics
    const currentStatsEl =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[17]++, contentEl.createDiv('current-stats'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[18]++;
    currentStatsEl.innerHTML = `
            <h3>Current Graph</h3>
            <div class="stats-grid">
                <div class="stat-item">
                    <span class="stat-label">Triples:</span>
                    <span class="stat-value">${this.graph.size()}</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">Subjects:</span>
                    <span class="stat-value">${this.graph.subjects().size}</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">Predicates:</span>
                    <span class="stat-value">${this.graph.predicates().size}</span>
                </div>
            </div>
        `;
    // File selection
    const fileSection =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[19]++, contentEl.createDiv('file-selection'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[20]++;
    fileSection.createEl('h3', {
      text: 'Select File'
    });
    // File input
    const fileInputContainer =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[21]++, fileSection.createDiv('file-input-container'));
    // Option 1: Select from vault
    /* istanbul ignore next */
    cov_17ridlsypw().s[22]++;
    new obsidian_1.Setting(fileInputContainer).setName('Import from vault').setDesc('Select an RDF file from your vault').addButton(button => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[2]++;
      cov_17ridlsypw().s[23]++;
      button.setButtonText('Select File').onClick(() => {
        /* istanbul ignore next */
        cov_17ridlsypw().f[3]++;
        cov_17ridlsypw().s[24]++;
        return this.openVaultFilePicker();
      });
    });
    // Option 2: Upload file
    const uploadContainer =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[25]++, fileInputContainer.createDiv('upload-container'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[26]++;
    uploadContainer.createEl('span', {
      text: 'Or upload file: '
    });
    const fileInput =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[27]++, uploadContainer.createEl('input', {
      type: 'file'
    }));
    /* istanbul ignore next */
    cov_17ridlsypw().s[28]++;
    fileInput.accept = '.ttl,.nt,.jsonld,.rdf,.n3,.xml';
    /* istanbul ignore next */
    cov_17ridlsypw().s[29]++;
    fileInput.addEventListener('change', e => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[4]++;
      cov_17ridlsypw().s[30]++;
      return this.handleFileUpload(e);
    });
    // Selected file display
    const selectedFileEl =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[31]++, fileSection.createDiv('selected-file'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[32]++;
    selectedFileEl.style.display = 'none';
    // Format selection
    /* istanbul ignore next */
    cov_17ridlsypw().s[33]++;
    new obsidian_1.Setting(contentEl).setName('RDF format').setDesc('Specify format (auto-detected if not set)').addDropdown(dropdown => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[5]++;
      cov_17ridlsypw().s[34]++;
      dropdown.addOption('', 'Auto-detect').addOption('turtle', 'Turtle (.ttl)').addOption('ntriples', 'N-Triples (.nt)').addOption('jsonld', 'JSON-LD (.jsonld)').addOption('rdfxml', 'RDF/XML (.rdf)').setValue(
      /* istanbul ignore next */
      (cov_17ridlsypw().b[1][0]++, this.options.format) ||
      /* istanbul ignore next */
      (cov_17ridlsypw().b[1][1]++, '')).onChange(value => {
        /* istanbul ignore next */
        cov_17ridlsypw().f[6]++;
        cov_17ridlsypw().s[35]++;
        this.options.format = value ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[2][0]++, value) :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[2][1]++, undefined);
        /* istanbul ignore next */
        cov_17ridlsypw().s[36]++;
        this.updatePreview();
      });
    });
    // Merge mode
    /* istanbul ignore next */
    cov_17ridlsypw().s[37]++;
    new obsidian_1.Setting(contentEl).setName('Import mode').setDesc('How to handle existing data').addDropdown(dropdown => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[7]++;
      cov_17ridlsypw().s[38]++;
      dropdown.addOption('merge', 'Merge with existing graph').addOption('replace', 'Replace entire graph').setValue(this.options.mergeMode).onChange(value => {
        /* istanbul ignore next */
        cov_17ridlsypw().f[8]++;
        cov_17ridlsypw().s[39]++;
        this.options.mergeMode = value;
      });
    });
    // Base IRI setting
    /* istanbul ignore next */
    cov_17ridlsypw().s[40]++;
    new obsidian_1.Setting(contentEl).setName('Base IRI').setDesc('Optional base IRI for relative URIs').addText(text => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[9]++;
      cov_17ridlsypw().s[41]++;
      text.setPlaceholder('https://example.org/data/').setValue(
      /* istanbul ignore next */
      (cov_17ridlsypw().b[3][0]++, this.options.baseIRI) ||
      /* istanbul ignore next */
      (cov_17ridlsypw().b[3][1]++, '')).onChange(value => {
        /* istanbul ignore next */
        cov_17ridlsypw().f[10]++;
        cov_17ridlsypw().s[42]++;
        this.options.baseIRI =
        /* istanbul ignore next */
        (cov_17ridlsypw().b[4][0]++, value) ||
        /* istanbul ignore next */
        (cov_17ridlsypw().b[4][1]++, undefined);
        /* istanbul ignore next */
        cov_17ridlsypw().s[43]++;
        this.updatePreview();
      });
    });
    // Validation options
    /* istanbul ignore next */
    cov_17ridlsypw().s[44]++;
    new obsidian_1.Setting(contentEl).setName('Validate input').setDesc('Validate RDF data during import').addToggle(toggle => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[11]++;
      cov_17ridlsypw().s[45]++;
      toggle.setValue(this.options.validateInput).onChange(value => {
        /* istanbul ignore next */
        cov_17ridlsypw().f[12]++;
        cov_17ridlsypw().s[46]++;
        this.options.validateInput = value;
      });
    });
    /* istanbul ignore next */
    cov_17ridlsypw().s[47]++;
    new obsidian_1.Setting(contentEl).setName('Strict mode').setDesc('Fail import on any parsing errors').addToggle(toggle => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[13]++;
      cov_17ridlsypw().s[48]++;
      toggle.setValue(this.options.strictMode).onChange(value => {
        /* istanbul ignore next */
        cov_17ridlsypw().f[14]++;
        cov_17ridlsypw().s[49]++;
        this.options.strictMode = value;
      });
    });
    // Preview section
    const previewContainer =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[50]++, contentEl.createDiv('import-preview'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[51]++;
    previewContainer.createEl('h3', {
      text: 'Preview'
    });
    const previewEl =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[52]++, previewContainer.createEl('div', {
      cls: 'preview-content'
    }));
    /* istanbul ignore next */
    cov_17ridlsypw().s[53]++;
    previewEl.innerHTML = '<em>Select a file to see preview</em>';
    // Buttons
    const buttonContainer =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[54]++, contentEl.createDiv('import-buttons'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[55]++;
    buttonContainer.addClass('modal-button-container');
    // Import button
    const importButton =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[56]++, buttonContainer.createEl('button', {
      text: 'Import',
      cls: 'mod-cta'
    }));
    /* istanbul ignore next */
    cov_17ridlsypw().s[57]++;
    importButton.disabled = true;
    /* istanbul ignore next */
    cov_17ridlsypw().s[58]++;
    importButton.onclick = () => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[15]++;
      cov_17ridlsypw().s[59]++;
      return this.handleImport();
    };
    // Cancel button
    const cancelButton =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[60]++, buttonContainer.createEl('button', {
      text: 'Cancel'
    }));
    /* istanbul ignore next */
    cov_17ridlsypw().s[61]++;
    cancelButton.onclick = () => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[16]++;
      cov_17ridlsypw().s[62]++;
      return this.close();
    };
    // Store references
    /* istanbul ignore next */
    cov_17ridlsypw().s[63]++;
    this.updateUI();
    // Add styles
    /* istanbul ignore next */
    cov_17ridlsypw().s[64]++;
    this.addStyles();
  }
  /**
   * Open vault file picker
   */
  openVaultFilePicker() {
    /* istanbul ignore next */
    cov_17ridlsypw().f[17]++;
    // Get all files that might be RDF
    const files =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[65]++, this.app.vault.getFiles().filter(file => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[18]++;
      cov_17ridlsypw().s[66]++;
      return /\.(ttl|nt|jsonld|rdf|n3|xml)$/i.test(file.extension);
    }));
    /* istanbul ignore next */
    cov_17ridlsypw().s[67]++;
    if (files.length === 0) {
      /* istanbul ignore next */
      cov_17ridlsypw().b[5][0]++;
      cov_17ridlsypw().s[68]++;
      new obsidian_1.Notice('No RDF files found in vault');
      /* istanbul ignore next */
      cov_17ridlsypw().s[69]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_17ridlsypw().b[5][1]++;
    }
    // Create a simple file picker (in a real implementation, you might use a more sophisticated picker)
    const picker =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[70]++, document.createElement('select'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[71]++;
    picker.innerHTML = '<option value="">Select file...</option>';
    /* istanbul ignore next */
    cov_17ridlsypw().s[72]++;
    for (const file of files) {
      const option =
      /* istanbul ignore next */
      (cov_17ridlsypw().s[73]++, document.createElement('option'));
      /* istanbul ignore next */
      cov_17ridlsypw().s[74]++;
      option.value = file.path;
      /* istanbul ignore next */
      cov_17ridlsypw().s[75]++;
      option.textContent = file.path;
      /* istanbul ignore next */
      cov_17ridlsypw().s[76]++;
      picker.appendChild(option);
    }
    /* istanbul ignore next */
    cov_17ridlsypw().s[77]++;
    picker.addEventListener('change', e => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[19]++;
      cov_17ridlsypw().s[78]++;
      return tslib_1.__awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_17ridlsypw().f[20]++;
        const selectedPath =
        /* istanbul ignore next */
        (cov_17ridlsypw().s[79]++, e.target.value);
        /* istanbul ignore next */
        cov_17ridlsypw().s[80]++;
        if (selectedPath) {
          /* istanbul ignore next */
          cov_17ridlsypw().b[6][0]++;
          const file =
          /* istanbul ignore next */
          (cov_17ridlsypw().s[81]++, this.app.vault.getAbstractFileByPath(selectedPath));
          /* istanbul ignore next */
          cov_17ridlsypw().s[82]++;
          if (file instanceof obsidian_1.TFile) {
            /* istanbul ignore next */
            cov_17ridlsypw().b[7][0]++;
            cov_17ridlsypw().s[83]++;
            yield this.selectVaultFile(file);
          } else
          /* istanbul ignore next */
          {
            cov_17ridlsypw().b[7][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_17ridlsypw().b[6][1]++;
        }
      });
    });
    // Add to modal (in a real implementation, this would be better integrated)
    const container =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[84]++, this.contentEl.querySelector('.file-input-container'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[85]++;
    if (container) {
      /* istanbul ignore next */
      cov_17ridlsypw().b[8][0]++;
      cov_17ridlsypw().s[86]++;
      container.appendChild(picker);
    } else
    /* istanbul ignore next */
    {
      cov_17ridlsypw().b[8][1]++;
    }
  }
  /**
   * Handle file upload from computer
   */
  handleFileUpload(event) {
    /* istanbul ignore next */
    cov_17ridlsypw().f[21]++;
    var _a;
    /* istanbul ignore next */
    cov_17ridlsypw().s[87]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17ridlsypw().f[22]++;
      const input =
      /* istanbul ignore next */
      (cov_17ridlsypw().s[88]++, event.target);
      const file =
      /* istanbul ignore next */
      (cov_17ridlsypw().s[89]++,
      /* istanbul ignore next */
      (cov_17ridlsypw().b[10][0]++, (_a = input.files) === null) ||
      /* istanbul ignore next */
      (cov_17ridlsypw().b[10][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_17ridlsypw().b[9][0]++, void 0) :
      /* istanbul ignore next */
      (cov_17ridlsypw().b[9][1]++, _a[0]));
      /* istanbul ignore next */
      cov_17ridlsypw().s[90]++;
      if (file) {
        /* istanbul ignore next */
        cov_17ridlsypw().b[11][0]++;
        cov_17ridlsypw().s[91]++;
        try {
          const content =
          /* istanbul ignore next */
          (cov_17ridlsypw().s[92]++, yield this.readFile(file));
          /* istanbul ignore next */
          cov_17ridlsypw().s[93]++;
          this.selectedFile = file;
          /* istanbul ignore next */
          cov_17ridlsypw().s[94]++;
          this.fileContent = content;
          /* istanbul ignore next */
          cov_17ridlsypw().s[95]++;
          this.updateUI();
          /* istanbul ignore next */
          cov_17ridlsypw().s[96]++;
          this.updatePreview();
        } catch (error) {
          /* istanbul ignore next */
          cov_17ridlsypw().s[97]++;
          new obsidian_1.Notice(`Error reading file: ${error.message}`);
        }
      } else
      /* istanbul ignore next */
      {
        cov_17ridlsypw().b[11][1]++;
      }
    });
  }
  /**
   * Select file from vault
   */
  selectVaultFile(file) {
    /* istanbul ignore next */
    cov_17ridlsypw().f[23]++;
    cov_17ridlsypw().s[98]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17ridlsypw().f[24]++;
      cov_17ridlsypw().s[99]++;
      try {
        const content =
        /* istanbul ignore next */
        (cov_17ridlsypw().s[100]++, yield this.app.vault.read(file));
        /* istanbul ignore next */
        cov_17ridlsypw().s[101]++;
        this.selectedFile = file;
        /* istanbul ignore next */
        cov_17ridlsypw().s[102]++;
        this.fileContent = content;
        /* istanbul ignore next */
        cov_17ridlsypw().s[103]++;
        this.updateUI();
        /* istanbul ignore next */
        cov_17ridlsypw().s[104]++;
        this.updatePreview();
      } catch (error) {
        /* istanbul ignore next */
        cov_17ridlsypw().s[105]++;
        new obsidian_1.Notice(`Error reading vault file: ${error.message}`);
      }
    });
  }
  /**
   * Read file content
   */
  readFile(file) {
    /* istanbul ignore next */
    cov_17ridlsypw().f[25]++;
    cov_17ridlsypw().s[106]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[26]++;
      const reader =
      /* istanbul ignore next */
      (cov_17ridlsypw().s[107]++, new FileReader());
      /* istanbul ignore next */
      cov_17ridlsypw().s[108]++;
      reader.onload = e => {
        /* istanbul ignore next */
        cov_17ridlsypw().f[27]++;
        var _a;
        /* istanbul ignore next */
        cov_17ridlsypw().s[109]++;
        return resolve(
        /* istanbul ignore next */
        (cov_17ridlsypw().b[13][0]++, (_a = e.target) === null) ||
        /* istanbul ignore next */
        (cov_17ridlsypw().b[13][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[12][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[12][1]++, _a.result));
      };
      /* istanbul ignore next */
      cov_17ridlsypw().s[110]++;
      reader.onerror = e => {
        /* istanbul ignore next */
        cov_17ridlsypw().f[28]++;
        cov_17ridlsypw().s[111]++;
        return reject(new Error('Failed to read file'));
      };
      /* istanbul ignore next */
      cov_17ridlsypw().s[112]++;
      reader.readAsText(file);
    });
  }
  /**
   * Update UI state
   */
  updateUI() {
    /* istanbul ignore next */
    cov_17ridlsypw().f[29]++;
    // Update selected file display
    const selectedFileEl =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[113]++, this.contentEl.querySelector('.selected-file'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[114]++;
    if (selectedFileEl) {
      /* istanbul ignore next */
      cov_17ridlsypw().b[14][0]++;
      cov_17ridlsypw().s[115]++;
      if (this.selectedFile) {
        /* istanbul ignore next */
        cov_17ridlsypw().b[15][0]++;
        const fileName =
        /* istanbul ignore next */
        (cov_17ridlsypw().s[116]++, this.selectedFile instanceof obsidian_1.TFile ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[16][0]++, this.selectedFile.name) :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[16][1]++, this.selectedFile.name));
        /* istanbul ignore next */
        cov_17ridlsypw().s[117]++;
        selectedFileEl.innerHTML = `
                    <div class="selected-file-info">
                        <strong>Selected:</strong> ${fileName}
                        <span class="file-size">(${this.formatFileSize(this.fileContent.length)})</span>
                    </div>
                `;
        /* istanbul ignore next */
        cov_17ridlsypw().s[118]++;
        selectedFileEl.style.display = 'block';
      } else {
        /* istanbul ignore next */
        cov_17ridlsypw().b[15][1]++;
        cov_17ridlsypw().s[119]++;
        selectedFileEl.style.display = 'none';
      }
    } else
    /* istanbul ignore next */
    {
      cov_17ridlsypw().b[14][1]++;
    }
    // Enable/disable import button
    const importButton =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[120]++, this.contentEl.querySelector('button.mod-cta'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[121]++;
    if (importButton) {
      /* istanbul ignore next */
      cov_17ridlsypw().b[17][0]++;
      cov_17ridlsypw().s[122]++;
      importButton.disabled = !this.selectedFile;
    } else
    /* istanbul ignore next */
    {
      cov_17ridlsypw().b[17][1]++;
    }
  }
  /**
   * Update preview content
   */
  updatePreview() {
    /* istanbul ignore next */
    cov_17ridlsypw().f[30]++;
    var _a;
    const previewEl =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[123]++, this.contentEl.querySelector('.preview-content'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[124]++;
    if (
    /* istanbul ignore next */
    (cov_17ridlsypw().b[19][0]++, !previewEl) ||
    /* istanbul ignore next */
    (cov_17ridlsypw().b[19][1]++, !this.fileContent)) {
      /* istanbul ignore next */
      cov_17ridlsypw().b[18][0]++;
      cov_17ridlsypw().s[125]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_17ridlsypw().b[18][1]++;
    }
    cov_17ridlsypw().s[126]++;
    try {
      const parseOptions =
      /* istanbul ignore next */
      (cov_17ridlsypw().s[127]++, {
        format: this.options.format,
        baseIRI: this.options.baseIRI,
        namespaceManager: this.namespaceManager,
        validateInput: false,
        strictMode: false
      });
      const result =
      /* istanbul ignore next */
      (cov_17ridlsypw().s[128]++, this.parser.parse(this.fileContent, parseOptions));
      /* istanbul ignore next */
      cov_17ridlsypw().s[129]++;
      if (result.isSuccess) {
        /* istanbul ignore next */
        cov_17ridlsypw().b[20][0]++;
        const parseResult =
        /* istanbul ignore next */
        (cov_17ridlsypw().s[130]++, result.getValue());
        /* istanbul ignore next */
        cov_17ridlsypw().s[131]++;
        previewEl.innerHTML = `
                    <div class="preview-stats">
                        <h4>Import Preview</h4>
                        <div class="stats-grid">
                            <div class="stat-item">
                                <span class="stat-label">Triples:</span>
                                <span class="stat-value">${parseResult.tripleCount}</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-label">Subjects:</span>
                                <span class="stat-value">${parseResult.graph.subjects().size}</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-label">Predicates:</span>
                                <span class="stat-value">${parseResult.graph.predicates().size}</span>
                            </div>
                        </div>
                        ${Object.keys(parseResult.namespaces).length > 0 ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[21][0]++, `
                            <div class="namespaces">
                                <strong>Namespaces found:</strong>
                                <ul>
                                    ${Object.entries(parseResult.namespaces).slice(0, 5).map(([prefix, uri]) => {
          /* istanbul ignore next */
          cov_17ridlsypw().f[31]++;
          cov_17ridlsypw().s[132]++;
          return `<li>${prefix}: ${uri}</li>`;
        }).join('')}
                                    ${Object.keys(parseResult.namespaces).length > 5 ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[22][0]++, '<li>... and more</li>') :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[22][1]++, '')}
                                </ul>
                            </div>
                        `) :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[21][1]++, '')}
                        ${(
        /* istanbul ignore next */
        (cov_17ridlsypw().b[25][0]++, (_a = parseResult.warnings) === null) ||
        /* istanbul ignore next */
        (cov_17ridlsypw().b[25][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[24][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[24][1]++, _a.length)) ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[23][0]++, `
                            <div class="warnings">
                                <strong>Warnings:</strong>
                                <ul>
                                    ${parseResult.warnings.slice(0, 3).map(w => {
          /* istanbul ignore next */
          cov_17ridlsypw().f[32]++;
          cov_17ridlsypw().s[133]++;
          return `<li>${w}</li>`;
        }).join('')}
                                    ${parseResult.warnings.length > 3 ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[26][0]++, '<li>... and more</li>') :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[26][1]++, '')}
                                </ul>
                            </div>
                        `) :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[23][1]++, '')}
                    </div>
                    <div class="sample-triples">
                        <h4>Sample Triples</h4>
                        <pre class="triple-sample">${this.formatSampleTriples(parseResult.graph)}</pre>
                    </div>
                `;
      } else {
        /* istanbul ignore next */
        cov_17ridlsypw().b[20][1]++;
        cov_17ridlsypw().s[134]++;
        previewEl.innerHTML = `
                    <div class="preview-error">
                        <strong>Parse Error:</strong> ${result.errorValue()}
                    </div>
                `;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_17ridlsypw().s[135]++;
      previewEl.innerHTML = `
                <div class="preview-error">
                    <strong>Preview Error:</strong> ${error.message}
                </div>
            `;
    }
  }
  /**
   * Format sample triples for display
   */
  formatSampleTriples(graph) {
    /* istanbul ignore next */
    cov_17ridlsypw().f[33]++;
    const triples =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[136]++, graph.toArray().slice(0, 5));
    /* istanbul ignore next */
    cov_17ridlsypw().s[137]++;
    return triples.map(triple => {
      /* istanbul ignore next */
      cov_17ridlsypw().f[34]++;
      cov_17ridlsypw().s[138]++;
      return triple.toString();
    }).join('\n') + (graph.size() > 5 ?
    /* istanbul ignore next */
    (cov_17ridlsypw().b[27][0]++, '\n... and more') :
    /* istanbul ignore next */
    (cov_17ridlsypw().b[27][1]++, ''));
  }
  /**
   * Format file size
   */
  formatFileSize(bytes) {
    /* istanbul ignore next */
    cov_17ridlsypw().f[35]++;
    cov_17ridlsypw().s[139]++;
    if (bytes < 1024) {
      /* istanbul ignore next */
      cov_17ridlsypw().b[28][0]++;
      cov_17ridlsypw().s[140]++;
      return bytes + ' B';
    } else
    /* istanbul ignore next */
    {
      cov_17ridlsypw().b[28][1]++;
    }
    cov_17ridlsypw().s[141]++;
    if (bytes < 1024 * 1024) {
      /* istanbul ignore next */
      cov_17ridlsypw().b[29][0]++;
      cov_17ridlsypw().s[142]++;
      return Math.round(bytes / 1024) + ' KB';
    } else
    /* istanbul ignore next */
    {
      cov_17ridlsypw().b[29][1]++;
    }
    cov_17ridlsypw().s[143]++;
    return Math.round(bytes / (1024 * 1024)) + ' MB';
  }
  /**
   * Handle import action
   */
  handleImport() {
    /* istanbul ignore next */
    cov_17ridlsypw().f[36]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_17ridlsypw().s[144]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17ridlsypw().f[37]++;
      cov_17ridlsypw().s[145]++;
      if (
      /* istanbul ignore next */
      (cov_17ridlsypw().b[31][0]++, !this.selectedFile) ||
      /* istanbul ignore next */
      (cov_17ridlsypw().b[31][1]++, !this.fileContent)) {
        /* istanbul ignore next */
        cov_17ridlsypw().b[30][0]++;
        cov_17ridlsypw().s[146]++;
        new obsidian_1.Notice('No file selected');
        /* istanbul ignore next */
        cov_17ridlsypw().s[147]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_17ridlsypw().b[30][1]++;
      }
      cov_17ridlsypw().s[148]++;
      try {
        const parseOptions =
        /* istanbul ignore next */
        (cov_17ridlsypw().s[149]++, {
          format: this.options.format,
          baseIRI: this.options.baseIRI,
          namespaceManager: this.namespaceManager,
          validateInput: this.options.validateInput,
          strictMode: this.options.strictMode
        });
        const result =
        /* istanbul ignore next */
        (cov_17ridlsypw().s[150]++, this.parser.parse(this.fileContent, parseOptions));
        /* istanbul ignore next */
        cov_17ridlsypw().s[151]++;
        if (result.isFailure) {
          /* istanbul ignore next */
          cov_17ridlsypw().b[32][0]++;
          cov_17ridlsypw().s[152]++;
          new obsidian_1.Notice(`Import failed: ${result.errorValue()}`);
          /* istanbul ignore next */
          cov_17ridlsypw().s[153]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_17ridlsypw().b[32][1]++;
        }
        const parseResult =
        /* istanbul ignore next */
        (cov_17ridlsypw().s[154]++, result.getValue());
        // Handle merge mode
        let finalGraph;
        /* istanbul ignore next */
        cov_17ridlsypw().s[155]++;
        if (this.options.mergeMode === 'replace') {
          /* istanbul ignore next */
          cov_17ridlsypw().b[33][0]++;
          cov_17ridlsypw().s[156]++;
          finalGraph = parseResult.graph;
        } else {
          /* istanbul ignore next */
          cov_17ridlsypw().b[33][1]++;
          cov_17ridlsypw().s[157]++;
          // Merge with existing graph
          finalGraph = this.graph.clone();
          /* istanbul ignore next */
          cov_17ridlsypw().s[158]++;
          finalGraph.merge(parseResult.graph);
        }
        // Call onImport callback
        /* istanbul ignore next */
        cov_17ridlsypw().s[159]++;
        if (this.onImport) {
          /* istanbul ignore next */
          cov_17ridlsypw().b[34][0]++;
          cov_17ridlsypw().s[160]++;
          this.onImport(parseResult.graph, this.options);
        } else
        /* istanbul ignore next */
        {
          cov_17ridlsypw().b[34][1]++;
        }
        const message =
        /* istanbul ignore next */
        (cov_17ridlsypw().s[161]++, this.options.mergeMode === 'replace' ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[35][0]++, `Replaced graph with ${parseResult.tripleCount} triples`) :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[35][1]++, `Added ${parseResult.tripleCount} triples to graph`));
        /* istanbul ignore next */
        cov_17ridlsypw().s[162]++;
        new obsidian_1.Notice(message);
        /* istanbul ignore next */
        cov_17ridlsypw().s[163]++;
        if (
        /* istanbul ignore next */
        (cov_17ridlsypw().b[38][0]++, (_a = parseResult.warnings) === null) ||
        /* istanbul ignore next */
        (cov_17ridlsypw().b[38][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[37][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[37][1]++, _a.length)) {
          /* istanbul ignore next */
          cov_17ridlsypw().b[36][0]++;
          cov_17ridlsypw().s[164]++;
          new obsidian_1.Notice(`Warnings: ${parseResult.warnings.length} warnings found`, 3000);
        } else
        /* istanbul ignore next */
        {
          cov_17ridlsypw().b[36][1]++;
        }
        cov_17ridlsypw().s[165]++;
        if (
        /* istanbul ignore next */
        (cov_17ridlsypw().b[41][0]++, (_b = parseResult.errors) === null) ||
        /* istanbul ignore next */
        (cov_17ridlsypw().b[41][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_17ridlsypw().b[40][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17ridlsypw().b[40][1]++, _b.length)) {
          /* istanbul ignore next */
          cov_17ridlsypw().b[39][0]++;
          cov_17ridlsypw().s[166]++;
          new obsidian_1.Notice(`Errors: ${parseResult.errors.length} errors found`, 3000);
        } else
        /* istanbul ignore next */
        {
          cov_17ridlsypw().b[39][1]++;
        }
        cov_17ridlsypw().s[167]++;
        this.close();
      } catch (error) {
        /* istanbul ignore next */
        cov_17ridlsypw().s[168]++;
        new obsidian_1.Notice(`Import error: ${error.message}`);
      }
    });
  }
  /**
   * Add custom styles
   */
  addStyles() {
    /* istanbul ignore next */
    cov_17ridlsypw().f[38]++;
    const style =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[169]++, document.createElement('style'));
    /* istanbul ignore next */
    cov_17ridlsypw().s[170]++;
    style.textContent = `
            .current-stats, .preview-stats {
                margin-bottom: 20px;
                padding: 15px;
                background: var(--background-secondary);
                border-radius: 6px;
            }
            
            .stats-grid {
                display: flex;
                gap: 20px;
                margin-top: 10px;
            }
            
            .stat-item {
                display: flex;
                flex-direction: column;
                align-items: center;
            }
            
            .stat-label {
                font-size: 12px;
                color: var(--text-muted);
                margin-bottom: 2px;
            }
            
            .stat-value {
                font-size: 16px;
                font-weight: 600;
                color: var(--text-normal);
            }
            
            .file-selection {
                margin: 20px 0;
                padding: 15px;
                border: 1px solid var(--background-modifier-border);
                border-radius: 6px;
            }
            
            .file-input-container {
                margin: 10px 0;
            }
            
            .upload-container {
                margin: 10px 0;
                display: flex;
                align-items: center;
                gap: 10px;
            }
            
            .selected-file {
                margin: 10px 0;
                padding: 10px;
                background: var(--background-primary-alt);
                border-radius: 4px;
            }
            
            .selected-file-info {
                display: flex;
                align-items: center;
                gap: 10px;
            }
            
            .file-size {
                color: var(--text-muted);
                font-size: 12px;
            }
            
            .preview-content {
                max-height: 300px;
                overflow-y: auto;
                padding: 15px;
                background: var(--background-secondary);
                border-radius: 6px;
            }
            
            .preview-error {
                color: var(--text-error);
                padding: 10px;
                background: var(--background-modifier-error);
                border-radius: 4px;
            }
            
            .namespaces, .warnings {
                margin: 10px 0;
            }
            
            .namespaces ul, .warnings ul {
                margin: 5px 0 0 20px;
                font-size: 12px;
            }
            
            .warnings {
                color: var(--text-warning);
            }
            
            .sample-triples {
                margin-top: 15px;
            }
            
            .triple-sample {
                font-family: var(--font-monospace);
                font-size: 11px;
                background: var(--background-primary);
                padding: 10px;
                border-radius: 4px;
                overflow-x: auto;
                margin: 5px 0 0 0;
            }
            
            .import-buttons {
                display: flex;
                gap: 10px;
                justify-content: flex-end;
                margin-top: 20px;
                padding-top: 20px;
                border-top: 1px solid var(--background-modifier-border);
            }
            
            .modal-button-container button {
                padding: 8px 16px;
                border-radius: 4px;
                border: 1px solid var(--background-modifier-border);
                background: var(--background-primary);
                color: var(--text-normal);
                cursor: pointer;
            }
            
            .modal-button-container button:hover:not(:disabled) {
                background: var(--background-secondary);
            }
            
            .modal-button-container button:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }
            
            .modal-button-container button.mod-cta:not(:disabled) {
                background: var(--interactive-accent);
                color: var(--text-on-accent);
                border-color: var(--interactive-accent);
            }
            
            .modal-button-container button.mod-cta:hover:not(:disabled) {
                background: var(--interactive-accent-hover);
                border-color: var(--interactive-accent-hover);
            }
        `;
    /* istanbul ignore next */
    cov_17ridlsypw().s[171]++;
    document.head.appendChild(style);
  }
  onClose() {
    /* istanbul ignore next */
    cov_17ridlsypw().f[39]++;
    const {
      contentEl
    } =
    /* istanbul ignore next */
    (cov_17ridlsypw().s[172]++, this);
    /* istanbul ignore next */
    cov_17ridlsypw().s[173]++;
    contentEl.empty();
  }
}
/* istanbul ignore next */
cov_17ridlsypw().s[174]++;
exports.ImportRDFModal = ImportRDFModal;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,