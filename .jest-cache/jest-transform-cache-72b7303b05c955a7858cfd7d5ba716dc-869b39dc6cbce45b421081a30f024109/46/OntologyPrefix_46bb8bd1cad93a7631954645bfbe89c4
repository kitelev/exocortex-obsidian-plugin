c6c7d46d269beb249452e40cd4908fba
"use strict";

/* istanbul ignore next */
function cov_23ybis5gp5() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/OntologyPrefix.ts";
  var hash = "1cf9710b8ed0d67628690798de46d047d9f20f77";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/OntologyPrefix.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 27
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "5": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 74
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "7": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 139
        }
      },
      "8": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 61
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 26
        }
      },
      "10": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "11": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 42
        }
      },
      "12": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 18
          }
        }, {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 47
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/OntologyPrefix.ts",
      mappings: ";;;AAAA,2CAAwC;AAExC;;;GAGG;AACH,MAAa,cAAc;IAGzB,YAAoB,KAAa;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,KAAa;QACzB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,OAAO,eAAM,CAAC,IAAI,CAAiB,gCAAgC,CAAC,CAAC;SACtE;QAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACnC,OAAO,eAAM,CAAC,IAAI,CAAiB,mCAAmC,KAAK,yDAAyD,CAAC,CAAC;SACvI;QAED,OAAO,eAAM,CAAC,EAAE,CAAiB,IAAI,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,UAAU;QACR,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,MAAM,CAAC,KAAqB;QAC1B,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC;IACpC,CAAC;CACF;AA9BD,wCA8BC",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/OntologyPrefix.ts"],
      sourcesContent: ["import { Result } from '../core/Result';\n\n/**\n * Value object representing an ontology prefix\n * Validates prefix format and ensures uniqueness\n */\nexport class OntologyPrefix {\n  private readonly value: string;\n\n  private constructor(value: string) {\n    this.value = value;\n  }\n\n  static create(value: string): Result<OntologyPrefix> {\n    if (!value || value.trim().length === 0) {\n      return Result.fail<OntologyPrefix>('OntologyPrefix cannot be empty');\n    }\n    \n    if (!/^[a-z][a-z0-9]*$/.test(value)) {\n      return Result.fail<OntologyPrefix>(`Invalid ontology prefix format: ${value}. Must be lowercase alphanumeric starting with a letter`);\n    }\n    \n    return Result.ok<OntologyPrefix>(new OntologyPrefix(value));\n  }\n\n  toString(): string {\n    return this.value;\n  }\n\n  toFileName(): string {\n    return `!${this.value}`;\n  }\n\n  equals(other: OntologyPrefix): boolean {\n    return this.value === other.value;\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1cf9710b8ed0d67628690798de46d047d9f20f77"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23ybis5gp5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23ybis5gp5();
cov_23ybis5gp5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_23ybis5gp5().s[1]++;
exports.OntologyPrefix = void 0;
const Result_1 =
/* istanbul ignore next */
(cov_23ybis5gp5().s[2]++, require("../core/Result"));
/**
 * Value object representing an ontology prefix
 * Validates prefix format and ensures uniqueness
 */
class OntologyPrefix {
  constructor(value) {
    /* istanbul ignore next */
    cov_23ybis5gp5().f[0]++;
    cov_23ybis5gp5().s[3]++;
    this.value = value;
  }
  static create(value) {
    /* istanbul ignore next */
    cov_23ybis5gp5().f[1]++;
    cov_23ybis5gp5().s[4]++;
    if (
    /* istanbul ignore next */
    (cov_23ybis5gp5().b[1][0]++, !value) ||
    /* istanbul ignore next */
    (cov_23ybis5gp5().b[1][1]++, value.trim().length === 0)) {
      /* istanbul ignore next */
      cov_23ybis5gp5().b[0][0]++;
      cov_23ybis5gp5().s[5]++;
      return Result_1.Result.fail('OntologyPrefix cannot be empty');
    } else
    /* istanbul ignore next */
    {
      cov_23ybis5gp5().b[0][1]++;
    }
    cov_23ybis5gp5().s[6]++;
    if (!/^[a-z][a-z0-9]*$/.test(value)) {
      /* istanbul ignore next */
      cov_23ybis5gp5().b[2][0]++;
      cov_23ybis5gp5().s[7]++;
      return Result_1.Result.fail(`Invalid ontology prefix format: ${value}. Must be lowercase alphanumeric starting with a letter`);
    } else
    /* istanbul ignore next */
    {
      cov_23ybis5gp5().b[2][1]++;
    }
    cov_23ybis5gp5().s[8]++;
    return Result_1.Result.ok(new OntologyPrefix(value));
  }
  toString() {
    /* istanbul ignore next */
    cov_23ybis5gp5().f[2]++;
    cov_23ybis5gp5().s[9]++;
    return this.value;
  }
  toFileName() {
    /* istanbul ignore next */
    cov_23ybis5gp5().f[3]++;
    cov_23ybis5gp5().s[10]++;
    return `!${this.value}`;
  }
  equals(other) {
    /* istanbul ignore next */
    cov_23ybis5gp5().f[4]++;
    cov_23ybis5gp5().s[11]++;
    return this.value === other.value;
  }
}
/* istanbul ignore next */
cov_23ybis5gp5().s[12]++;
exports.OntologyPrefix = OntologyPrefix;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjN5YmlzNWdwNSIsImFjdHVhbENvdmVyYWdlIiwicyIsIlJlc3VsdF8xIiwicmVxdWlyZSIsIk9udG9sb2d5UHJlZml4IiwiY29uc3RydWN0b3IiLCJ2YWx1ZSIsImYiLCJjcmVhdGUiLCJiIiwidHJpbSIsImxlbmd0aCIsIlJlc3VsdCIsImZhaWwiLCJ0ZXN0Iiwib2siLCJ0b1N0cmluZyIsInRvRmlsZU5hbWUiLCJlcXVhbHMiLCJvdGhlciIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvVXNlcnMva2l0ZWxldi9Eb2N1bWVudHMvZXhvY29ydGV4LW9ic2lkaWFuLXBsdWdpbi9zcmMvZG9tYWluL3ZhbHVlLW9iamVjdHMvT250b2xvZ3lQcmVmaXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzdWx0IH0gZnJvbSAnLi4vY29yZS9SZXN1bHQnO1xuXG4vKipcbiAqIFZhbHVlIG9iamVjdCByZXByZXNlbnRpbmcgYW4gb250b2xvZ3kgcHJlZml4XG4gKiBWYWxpZGF0ZXMgcHJlZml4IGZvcm1hdCBhbmQgZW5zdXJlcyB1bmlxdWVuZXNzXG4gKi9cbmV4cG9ydCBjbGFzcyBPbnRvbG9neVByZWZpeCB7XG4gIHByaXZhdGUgcmVhZG9ubHkgdmFsdWU6IHN0cmluZztcblxuICBwcml2YXRlIGNvbnN0cnVjdG9yKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cblxuICBzdGF0aWMgY3JlYXRlKHZhbHVlOiBzdHJpbmcpOiBSZXN1bHQ8T250b2xvZ3lQcmVmaXg+IHtcbiAgICBpZiAoIXZhbHVlIHx8IHZhbHVlLnRyaW0oKS5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBSZXN1bHQuZmFpbDxPbnRvbG9neVByZWZpeD4oJ09udG9sb2d5UHJlZml4IGNhbm5vdCBiZSBlbXB0eScpO1xuICAgIH1cbiAgICBcbiAgICBpZiAoIS9eW2Etel1bYS16MC05XSokLy50ZXN0KHZhbHVlKSkge1xuICAgICAgcmV0dXJuIFJlc3VsdC5mYWlsPE9udG9sb2d5UHJlZml4PihgSW52YWxpZCBvbnRvbG9neSBwcmVmaXggZm9ybWF0OiAke3ZhbHVlfS4gTXVzdCBiZSBsb3dlcmNhc2UgYWxwaGFudW1lcmljIHN0YXJ0aW5nIHdpdGggYSBsZXR0ZXJgKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIFJlc3VsdC5vazxPbnRvbG9neVByZWZpeD4obmV3IE9udG9sb2d5UHJlZml4KHZhbHVlKSk7XG4gIH1cblxuICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICB9XG5cbiAgdG9GaWxlTmFtZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBgISR7dGhpcy52YWx1ZX1gO1xuICB9XG5cbiAgZXF1YWxzKG90aGVyOiBPbnRvbG9neVByZWZpeCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnZhbHVlID09PSBvdGhlci52YWx1ZTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWdCSztJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OztBQWhCTCxNQUFBQyxRQUFBO0FBQUE7QUFBQSxDQUFBSCxjQUFBLEdBQUFFLENBQUEsT0FBQUUsT0FBQTtBQUVBOzs7O0FBSUEsTUFBYUMsY0FBYztFQUd6QkMsWUFBb0JDLEtBQWE7SUFBQTtJQUFBUCxjQUFBLEdBQUFRLENBQUE7SUFBQVIsY0FBQSxHQUFBRSxDQUFBO0lBQy9CLElBQUksQ0FBQ0ssS0FBSyxHQUFHQSxLQUFLO0VBQ3BCO0VBRUEsT0FBT0UsTUFBTUEsQ0FBQ0YsS0FBYTtJQUFBO0lBQUFQLGNBQUEsR0FBQVEsQ0FBQTtJQUFBUixjQUFBLEdBQUFFLENBQUE7SUFDekI7SUFBSTtJQUFBLENBQUFGLGNBQUEsR0FBQVUsQ0FBQSxXQUFDSCxLQUFLO0lBQUE7SUFBQSxDQUFBUCxjQUFBLEdBQUFVLENBQUEsVUFBSUgsS0FBSyxDQUFDSSxJQUFJLEVBQUUsQ0FBQ0MsTUFBTSxLQUFLLENBQUMsR0FBRTtNQUFBO01BQUFaLGNBQUEsR0FBQVUsQ0FBQTtNQUFBVixjQUFBLEdBQUFFLENBQUE7TUFDdkMsT0FBT0MsUUFBQSxDQUFBVSxNQUFNLENBQUNDLElBQUksQ0FBaUIsZ0NBQWdDLENBQUM7S0FDckU7SUFBQTtJQUFBO01BQUFkLGNBQUEsR0FBQVUsQ0FBQTtJQUFBO0lBQUFWLGNBQUEsR0FBQUUsQ0FBQTtJQUVELElBQUksQ0FBQyxrQkFBa0IsQ0FBQ2EsSUFBSSxDQUFDUixLQUFLLENBQUMsRUFBRTtNQUFBO01BQUFQLGNBQUEsR0FBQVUsQ0FBQTtNQUFBVixjQUFBLEdBQUFFLENBQUE7TUFDbkMsT0FBT0MsUUFBQSxDQUFBVSxNQUFNLENBQUNDLElBQUksQ0FBaUIsbUNBQW1DUCxLQUFLLHlEQUF5RCxDQUFDO0tBQ3RJO0lBQUE7SUFBQTtNQUFBUCxjQUFBLEdBQUFVLENBQUE7SUFBQTtJQUFBVixjQUFBLEdBQUFFLENBQUE7SUFFRCxPQUFPQyxRQUFBLENBQUFVLE1BQU0sQ0FBQ0csRUFBRSxDQUFpQixJQUFJWCxjQUFjLENBQUNFLEtBQUssQ0FBQyxDQUFDO0VBQzdEO0VBRUFVLFFBQVFBLENBQUE7SUFBQTtJQUFBakIsY0FBQSxHQUFBUSxDQUFBO0lBQUFSLGNBQUEsR0FBQUUsQ0FBQTtJQUNOLE9BQU8sSUFBSSxDQUFDSyxLQUFLO0VBQ25CO0VBRUFXLFVBQVVBLENBQUE7SUFBQTtJQUFBbEIsY0FBQSxHQUFBUSxDQUFBO0lBQUFSLGNBQUEsR0FBQUUsQ0FBQTtJQUNSLE9BQU8sSUFBSSxJQUFJLENBQUNLLEtBQUssRUFBRTtFQUN6QjtFQUVBWSxNQUFNQSxDQUFDQyxLQUFxQjtJQUFBO0lBQUFwQixjQUFBLEdBQUFRLENBQUE7SUFBQVIsY0FBQSxHQUFBRSxDQUFBO0lBQzFCLE9BQU8sSUFBSSxDQUFDSyxLQUFLLEtBQUthLEtBQUssQ0FBQ2IsS0FBSztFQUNuQzs7QUFDRDtBQUFBUCxjQUFBLEdBQUFFLENBQUE7QUE5QkRtQixPQUFBLENBQUFoQixjQUFBLEdBQUFBLGNBQUEiLCJpZ25vcmVMaXN0IjpbXX0=