{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/command-controllers/SPARQLCommandController.ts","mappings":";;;AAAA,uCAA0C;AAI1C;;;GAGG;AACH,MAAa,uBAAuB;IAClC,YACmB,MAAc,EACd,eAAgC;QADhC,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;IAChD,CAAC;IAEJ,KAAK,CAAC,gBAAgB;QACpB,iDAAiD;QACjD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YACrB,EAAE,EAAE,yBAAyB;YAC7B,IAAI,EAAE,8BAA8B;YACpC,QAAQ,EAAE,GAAG,EAAE;gBACb,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC;gBACxD,MAAM,OAAO,GAAG;oBACd,gCAAgC;oBAChC,iBAAiB,KAAK,CAAC,IAAI,EAAE;oBAC7B,mBAAmB,KAAK,CAAC,MAAM,EAAE;oBACjC,eAAe,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;oBAC1C,qBAAqB,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,EAAE;oBAClD,oBAAoB,KAAK,CAAC,YAAY,EAAE;oBACxC,gBAAgB,KAAK,CAAC,SAAS,EAAE;iBAClC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACb,IAAI,iBAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAC5B,CAAC;SACF,CAAC,CAAC;QAEH,uCAAuC;QACvC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YACrB,EAAE,EAAE,oBAAoB;YACxB,IAAI,EAAE,oBAAoB;YAC1B,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;gBACvC,IAAI,iBAAM,CAAC,6BAA6B,CAAC,CAAC;YAC5C,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,OAAO;QACX,iDAAiD;IACnD,CAAC;IAED,eAAe;QACb,OAAO,yBAAyB,CAAC;IACnC,CAAC;CACF;AA5CD,0DA4CC","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/command-controllers/SPARQLCommandController.ts"],"sourcesContent":["import { Plugin, Notice } from \"obsidian\";\nimport { ICommandController } from \"../../application/ports/ICommandController\";\nimport { SPARQLProcessor } from \"../processors/SPARQLProcessor\";\n\n/**\n * SPARQL Command Controller following Controller Pattern (GRASP)\n * Single Responsibility: Handle SPARQL-related commands only\n */\nexport class SPARQLCommandController implements ICommandController {\n  constructor(\n    private readonly plugin: Plugin,\n    private readonly sparqlProcessor: SPARQLProcessor,\n  ) {}\n\n  async registerCommands(): Promise<void> {\n    // Register command: View SPARQL cache statistics\n    this.plugin.addCommand({\n      id: \"view-sparql-cache-stats\",\n      name: \"View SPARQL cache statistics\",\n      callback: () => {\n        const stats = this.sparqlProcessor.getCacheStatistics();\n        const message = [\n          `SPARQL Query Cache Statistics:`,\n          `• Cache hits: ${stats.hits}`,\n          `• Cache misses: ${stats.misses}`,\n          `• Hit rate: ${stats.hitRate.toFixed(1)}%`,\n          `• Cached entries: ${stats.size}/${stats.maxSize}`,\n          `• Total queries: ${stats.totalQueries}`,\n          `• Evictions: ${stats.evictions}`,\n        ].join(\"\\n\");\n        new Notice(message, 8000);\n      },\n    });\n\n    // Register command: Clear SPARQL cache\n    this.plugin.addCommand({\n      id: \"clear-sparql-cache\",\n      name: \"Clear SPARQL cache\",\n      callback: () => {\n        this.sparqlProcessor.invalidateCache();\n        new Notice(\"SPARQL query cache cleared!\");\n      },\n    });\n  }\n\n  async cleanup(): Promise<void> {\n    // No specific cleanup needed for SPARQL commands\n  }\n\n  getControllerId(): string {\n    return \"SPARQLCommandController\";\n  }\n}\n"],"version":3}