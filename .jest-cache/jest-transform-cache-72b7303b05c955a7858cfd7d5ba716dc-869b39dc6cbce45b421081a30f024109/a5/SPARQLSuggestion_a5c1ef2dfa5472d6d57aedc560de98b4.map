{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/autocomplete/SPARQLSuggestion.ts","mappings":";;;AAAA,IAAY,cAUX;AAVD,WAAY,cAAc;IACxB,qCAAmB,CAAA;IACnB,uCAAqB,CAAA;IACrB,mCAAiB,CAAA;IACjB,uCAAqB,CAAA;IACrB,uCAAqB,CAAA;IACrB,iCAAe,CAAA;IACf,yCAAuB,CAAA;IACvB,uCAAqB,CAAA;IACrB,uCAAqB,CAAA;AACvB,CAAC,EAVW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAUzB;AAWD,MAAa,gBAAgB;IAC3B,YACmB,EAAU,EACV,IAAY,EACZ,UAAkB,EAClB,IAAoB,EACpB,UAAkB,EAClB,eAAuB,EACvB,QAA6B;QAN7B,OAAE,GAAF,EAAE,CAAQ;QACV,SAAI,GAAJ,IAAI,CAAQ;QACZ,eAAU,GAAV,UAAU,CAAQ;QAClB,SAAI,GAAJ,IAAI,CAAgB;QACpB,eAAU,GAAV,UAAU,CAAQ;QAClB,oBAAe,GAAf,eAAe,CAAQ;QACvB,aAAQ,GAAR,QAAQ,CAAqB;QAE9C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,mBAAmB,CAAC,cAAsB,GAAG;QAC3C,OAAO,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,GAAG,WAAW,CAAC;IAC5E,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,MAQb;QACC,OAAO,IAAI,gBAAgB,CACzB,MAAM,CAAC,EAAE,EACT,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,IAAI,EAChC,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,UAAU,EACjB,MAAM,CAAC,eAAe,EACtB,MAAM,CAAC,QAAQ,CAChB,CAAC;IACJ,CAAC;CACF;AAhED,4CAgEC","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/autocomplete/SPARQLSuggestion.ts"],"sourcesContent":["export enum SuggestionType {\n  KEYWORD = \"keyword\",\n  FUNCTION = \"function\",\n  PREFIX = \"prefix\",\n  VARIABLE = \"variable\",\n  PROPERTY = \"property\",\n  CLASS = \"class\",\n  NAMESPACE = \"namespace\",\n  OPERATOR = \"operator\",\n  TEMPLATE = \"template\",\n}\n\nexport interface SuggestionMetadata {\n  description?: string;\n  usage?: string;\n  examples?: string[];\n  namespace?: string;\n  deprecated?: boolean;\n  documentation?: string;\n}\n\nexport class SPARQLSuggestion {\n  constructor(\n    private readonly id: string,\n    private readonly text: string,\n    private readonly insertText: string,\n    private readonly type: SuggestionType,\n    private readonly confidence: number,\n    private readonly contextualScore: number,\n    private readonly metadata?: SuggestionMetadata,\n  ) {\n    Object.freeze(this);\n  }\n\n  getId(): string {\n    return this.id;\n  }\n\n  getText(): string {\n    return this.text;\n  }\n\n  getInsertText(): string {\n    return this.insertText;\n  }\n\n  getType(): SuggestionType {\n    return this.type;\n  }\n\n  getConfidence(): number {\n    return this.confidence;\n  }\n\n  getContextualScore(): number {\n    return this.contextualScore;\n  }\n\n  getMetadata(): SuggestionMetadata | undefined {\n    return this.metadata;\n  }\n\n  calculateFinalScore(boostFactor: number = 1.0): number {\n    return (this.confidence * 0.6 + this.contextualScore * 0.4) * boostFactor;\n  }\n\n  static create(params: {\n    id: string;\n    text: string;\n    insertText?: string;\n    type: SuggestionType;\n    confidence: number;\n    contextualScore: number;\n    metadata?: SuggestionMetadata;\n  }): SPARQLSuggestion {\n    return new SPARQLSuggestion(\n      params.id,\n      params.text,\n      params.insertText || params.text,\n      params.type,\n      params.confidence,\n      params.contextualScore,\n      params.metadata,\n    );\n  }\n}\n"],"version":3}