{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/entities/Ontology.ts","mappings":";;;AAAA,oEAAiE;AAEjE;;;GAGG;AACH,MAAa,QAAQ;IAOnB,YAAY,MAMX;QACC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;IACxC,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,cAAc;QACZ,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;IACrD,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,KAAe;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,aAAa;QACX,OAAO;YACL,oBAAoB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC5C,mBAAmB,EAAE,IAAI,CAAC,KAAK;YAC/B,uBAAuB,EAAE,IAAI,CAAC,SAAS,IAAI,EAAE;YAC7C,yBAAyB,EAAE,IAAI,CAAC,WAAW,IAAI,EAAE;SAClD,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,eAAe,CAAC,WAAgC;QACrD,MAAM,YAAY,GAAG,+BAAc,CAAC,MAAM,CACxC,WAAW,CAAC,sBAAsB,CAAC,IAAI,KAAK,CAC7C,CAAC;QACF,MAAM,MAAM,GAAG,YAAY,CAAC,SAAS;YACnC,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE;YACzB,CAAC,CAAC,+BAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAG,CAAC;QAE7C,OAAO,IAAI,QAAQ,CAAC;YAClB,MAAM;YACN,KAAK,EAAE,WAAW,CAAC,qBAAqB,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE;YAC9D,QAAQ,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK;YACpC,SAAS,EAAE,WAAW,CAAC,yBAAyB,CAAC;YACjD,WAAW,EAAE,WAAW,CAAC,2BAA2B,CAAC;SACtD,CAAC,CAAC;IACL,CAAC;CACF;AA9ED,4BA8EC","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/entities/Ontology.ts"],"sourcesContent":["import { OntologyPrefix } from \"../value-objects/OntologyPrefix\";\n\n/**\n * Domain entity representing an ontology\n * Manages ontology metadata and relationships\n */\nexport class Ontology {\n  private readonly prefix: OntologyPrefix;\n  private readonly label: string;\n  private readonly fileName: string;\n  private readonly namespace?: string;\n  private readonly description?: string;\n\n  constructor(params: {\n    prefix: OntologyPrefix;\n    label: string;\n    fileName: string;\n    namespace?: string;\n    description?: string;\n  }) {\n    this.prefix = params.prefix;\n    this.label = params.label;\n    this.fileName = params.fileName;\n    this.namespace = params.namespace;\n    this.description = params.description;\n  }\n\n  getPrefix(): OntologyPrefix {\n    return this.prefix;\n  }\n\n  getLabel(): string {\n    return this.label;\n  }\n\n  getFileName(): string {\n    return this.fileName;\n  }\n\n  getNamespace(): string | undefined {\n    return this.namespace;\n  }\n\n  getDescription(): string | undefined {\n    return this.description;\n  }\n\n  getDisplayName(): string {\n    return `${this.prefix.toString()} - ${this.label}`;\n  }\n\n  isInternal(): boolean {\n    return this.fileName.startsWith(\"!\");\n  }\n\n  equals(other: Ontology): boolean {\n    return this.prefix.equals(other.prefix);\n  }\n\n  toFrontmatter(): Record<string, any> {\n    return {\n      exo__Ontology_prefix: this.prefix.toString(),\n      exo__Ontology_label: this.label,\n      exo__Ontology_namespace: this.namespace || \"\",\n      exo__Ontology_description: this.description || \"\",\n    };\n  }\n\n  static fromFrontmatter(frontmatter: Record<string, any>): Ontology {\n    const prefixResult = OntologyPrefix.create(\n      frontmatter[\"exo__Ontology_prefix\"] || \"exo\",\n    );\n    const prefix = prefixResult.isSuccess\n      ? prefixResult.getValue()\n      : OntologyPrefix.create(\"exo\").getValue()!;\n\n    return new Ontology({\n      prefix,\n      label: frontmatter[\"exo__Ontology_label\"] || prefix.toString(),\n      fileName: `!${prefix.toString()}.md`,\n      namespace: frontmatter[\"exo__Ontology_namespace\"],\n      description: frontmatter[\"exo__Ontology_description\"],\n    });\n  }\n}\n"],"version":3}