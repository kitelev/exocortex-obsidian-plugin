369f57924f35fe69c5a9dea4f413ee99
"use strict";

/* istanbul ignore next */
function cov_x13fv011x() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/processors/SPARQLProcessor.ts";
  var hash = "2f33798acdef38499da20985a6d74ae072a9c65a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/processors/SPARQLProcessor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "4": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 64
        }
      },
      "5": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 69
        }
      },
      "6": {
        start: {
          line: 8,
          column: 25
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "7": {
        start: {
          line: 9,
          column: 26
        },
        end: {
          line: 9,
          column: 79
        }
      },
      "8": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "9": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "10": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 74
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 66
        }
      },
      "13": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 65
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "15": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 23
        }
      },
      "16": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 59
        }
      },
      "17": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "18": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 137
        }
      },
      "19": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 38
        }
      },
      "20": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "21": {
        start: {
          line: 32,
          column: 34
        },
        end: {
          line: 32,
          column: 63
        }
      },
      "22": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 49
        }
      },
      "23": {
        start: {
          line: 35,
          column: 34
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "24": {
        start: {
          line: 36,
          column: 31
        },
        end: {
          line: 36,
          column: 69
        }
      },
      "25": {
        start: {
          line: 37,
          column: 38
        },
        end: {
          line: 37,
          column: 60
        }
      },
      "26": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "27": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 58
        }
      },
      "28": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 59
        }
      },
      "29": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 68
        }
      },
      "30": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 45
        }
      },
      "31": {
        start: {
          line: 46,
          column: 33
        },
        end: {
          line: 46,
          column: 62
        }
      },
      "32": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "33": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 136
        }
      },
      "34": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 48
        }
      },
      "35": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 54,
          column: 17
        }
      },
      "36": {
        start: {
          line: 52,
          column: 43
        },
        end: {
          line: 52,
          column: 83
        }
      },
      "37": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 58
        }
      },
      "38": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "39": {
        start: {
          line: 57,
          column: 41
        },
        end: {
          line: 57,
          column: 70
        }
      },
      "40": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 67
        }
      },
      "41": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 66
        }
      },
      "42": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 98
        }
      },
      "43": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "44": {
        start: {
          line: 64,
          column: 34
        },
        end: {
          line: 64,
          column: 72
        }
      },
      "45": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 49
        }
      },
      "46": {
        start: {
          line: 67,
          column: 43
        },
        end: {
          line: 67,
          column: 99
        }
      },
      "47": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 58
        }
      },
      "48": {
        start: {
          line: 70,
          column: 34
        },
        end: {
          line: 70,
          column: 110
        }
      },
      "49": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 49
        }
      },
      "50": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 41
        }
      },
      "51": {
        start: {
          line: 76,
          column: 32
        },
        end: {
          line: 76,
          column: 62
        }
      },
      "52": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 47
        }
      },
      "53": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "54": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "55": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 47
        }
      },
      "56": {
        start: {
          line: 89,
          column: 39
        },
        end: {
          line: 89,
          column: 70
        }
      },
      "57": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "58": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 95
        }
      },
      "59": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 93,
          column: 59
        }
      },
      "60": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "61": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 96
        }
      },
      "62": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 98,
          column: 45
        }
      },
      "63": {
        start: {
          line: 99,
          column: 31
        },
        end: {
          line: 99,
          column: 54
        }
      },
      "64": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "65": {
        start: {
          line: 103,
          column: 31
        },
        end: {
          line: 103,
          column: 63
        }
      },
      "66": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "67": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 108,
          column: 21
        }
      },
      "68": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 107,
          column: 47
        }
      },
      "69": {
        start: {
          line: 111,
          column: 34
        },
        end: {
          line: 111,
          column: 66
        }
      },
      "70": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 100
        }
      },
      "71": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 122,
          column: 18
        }
      },
      "72": {
        start: {
          line: 115,
          column: 54
        },
        end: {
          line: 120,
          column: 21
        }
      },
      "73": {
        start: {
          line: 124,
          column: 17
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "74": {
        start: {
          line: 126,
          column: 37
        },
        end: {
          line: 126,
          column: 66
        }
      },
      "75": {
        start: {
          line: 127,
          column: 30
        },
        end: {
          line: 127,
          column: 50
        }
      },
      "76": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 131,
          column: 17
        }
      },
      "77": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 130,
          column: 77
        }
      },
      "78": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 135,
          column: 18
        }
      },
      "79": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 93
        }
      },
      "80": {
        start: {
          line: 143,
          column: 22
        },
        end: {
          line: 143,
          column: 53
        }
      },
      "81": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 49
        }
      },
      "82": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "83": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 25
        }
      },
      "84": {
        start: {
          line: 149,
          column: 24
        },
        end: {
          line: 149,
          column: 47
        }
      },
      "85": {
        start: {
          line: 151,
          column: 22
        },
        end: {
          line: 151,
          column: 41
        }
      },
      "86": {
        start: {
          line: 152,
          column: 26
        },
        end: {
          line: 152,
          column: 43
        }
      },
      "87": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "88": {
        start: {
          line: 154,
          column: 23
        },
        end: {
          line: 154,
          column: 51
        }
      },
      "89": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 36
        }
      },
      "90": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 38
        }
      },
      "91": {
        start: {
          line: 159,
          column: 22
        },
        end: {
          line: 159,
          column: 41
        }
      },
      "92": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "93": {
        start: {
          line: 161,
          column: 23
        },
        end: {
          line: 161,
          column: 40
        }
      },
      "94": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "95": {
        start: {
          line: 163,
          column: 27
        },
        end: {
          line: 163,
          column: 42
        }
      },
      "96": {
        start: {
          line: 164,
          column: 30
        },
        end: {
          line: 164,
          column: 41
        }
      },
      "97": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 171,
          column: 17
        }
      },
      "98": {
        start: {
          line: 166,
          column: 33
        },
        end: {
          line: 166,
          column: 59
        }
      },
      "99": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 167,
          column: 41
        }
      },
      "100": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 170,
          column: 49
        }
      },
      "101": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 21
        }
      },
      "102": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 178,
          column: 25
        }
      },
      "103": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 25
        }
      },
      "104": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 66
        }
      },
      "105": {
        start: {
          line: 182,
          column: 21
        },
        end: {
          line: 182,
          column: 48
        }
      },
      "106": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 41
        }
      },
      "107": {
        start: {
          line: 185,
          column: 25
        },
        end: {
          line: 185,
          column: 75
        }
      },
      "108": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 36
        }
      },
      "109": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 190,
          column: 11
        }
      },
      "110": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 31
        }
      },
      "111": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 65
        }
      },
      "112": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 20
        }
      },
      "113": {
        start: {
          line: 194,
          column: 24
        },
        end: {
          line: 194,
          column: 53
        }
      },
      "114": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 45
        }
      },
      "115": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 51
        }
      },
      "116": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 23
        }
      },
      "117": {
        start: {
          line: 200,
          column: 25
        },
        end: {
          line: 200,
          column: 54
        }
      },
      "118": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 44
        }
      },
      "119": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 133
        }
      },
      "120": {
        start: {
          line: 203,
          column: 22
        },
        end: {
          line: 203,
          column: 54
        }
      },
      "121": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 44
        }
      },
      "122": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 36
        }
      },
      "123": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 54
        }
      },
      "124": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 44
        }
      },
      "125": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 38
        }
      },
      "126": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 24
        }
      },
      "127": {
        start: {
          line: 212,
          column: 22
        },
        end: {
          line: 212,
          column: 51
        }
      },
      "128": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 41
        }
      },
      "129": {
        start: {
          line: 214,
          column: 26
        },
        end: {
          line: 214,
          column: 58
        }
      },
      "130": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 83
        }
      },
      "131": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 82
        }
      },
      "132": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 21
        }
      },
      "133": {
        start: {
          line: 220,
          column: 26
        },
        end: {
          line: 220,
          column: 55
        }
      },
      "134": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 55
        }
      },
      "135": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "136": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 55
        }
      },
      "137": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 210
        }
      },
      "138": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 54
        }
      },
      "139": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 210
        }
      },
      "140": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 25
        }
      },
      "141": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 48
        }
      },
      "142": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 38
        }
      },
      "143": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 42
        }
      },
      "144": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 30
        }
      },
      "145": {
        start: {
          line: 260,
          column: 32
        },
        end: {
          line: 260,
          column: 61
        }
      },
      "146": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 61
        }
      },
      "147": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 141
        }
      },
      "148": {
        start: {
          line: 264,
          column: 22
        },
        end: {
          line: 264,
          column: 52
        }
      },
      "149": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 47
        }
      },
      "150": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 71
        }
      },
      "151": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 43
        }
      },
      "152": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "153": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "154": {
        start: {
          line: 276,
          column: 27
        },
        end: {
          line: 276,
          column: 59
        }
      },
      "155": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 39
        }
      },
      "156": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 54
        }
      },
      "157": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 181
        }
      },
      "158": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 282,
          column: 15
        }
      },
      "159": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 52
        }
      },
      "160": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 285,
          column: 15
        }
      },
      "161": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 52
        }
      },
      "162": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 289,
          column: 16
        }
      },
      "163": {
        start: {
          line: 286,
          column: 52
        },
        end: {
          line: 289,
          column: 14
        }
      },
      "164": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 35
        }
      },
      "165": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 70
        }
      },
      "166": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 48
        }
      },
      "167": {
        start: {
          line: 293,
          column: 31
        },
        end: {
          line: 293,
          column: 63
        }
      },
      "168": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 51
        }
      },
      "169": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 60
        }
      },
      "170": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 186
        }
      },
      "171": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 299,
          column: 11
        }
      },
      "172": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 56
        }
      },
      "173": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 11
        }
      },
      "174": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 56
        }
      },
      "175": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 306,
          column: 11
        }
      },
      "176": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 31
        }
      },
      "177": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 57
        }
      },
      "178": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 52
        }
      },
      "179": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 31
        }
      },
      "180": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 330,
          column: 11
        }
      },
      "181": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 329,
          column: 13
        }
      },
      "182": {
        start: {
          line: 316,
          column: 33
        },
        end: {
          line: 316,
          column: 63
        }
      },
      "183": {
        start: {
          line: 317,
          column: 31
        },
        end: {
          line: 317,
          column: 98
        }
      },
      "184": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 324,
          column: 17
        }
      },
      "185": {
        start: {
          line: 319,
          column: 39
        },
        end: {
          line: 319,
          column: 56
        }
      },
      "186": {
        start: {
          line: 320,
          column: 20
        },
        end: {
          line: 320,
          column: 115
        }
      },
      "187": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 323,
          column: 83
        }
      },
      "188": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 72
        }
      },
      "189": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "190": {
        start: {
          line: 338,
          column: 33
        },
        end: {
          line: 338,
          column: 87
        }
      },
      "191": {
        start: {
          line: 339,
          column: 26
        },
        end: {
          line: 345,
          column: 14
        }
      },
      "192": {
        start: {
          line: 341,
          column: 34
        },
        end: {
          line: 341,
          column: 58
        }
      },
      "193": {
        start: {
          line: 342,
          column: 33
        },
        end: {
          line: 342,
          column: 108
        }
      },
      "194": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 87
        }
      },
      "195": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 25
        }
      },
      "196": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 83
        }
      },
      "197": {
        start: {
          line: 354,
          column: 0
        },
        end: {
          line: 354,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 58
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 38
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 55
          },
          end: {
            line: 23,
            column: 56
          }
        },
        loc: {
          start: {
            line: 23,
            column: 68
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 25
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 82
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 83,
            column: 55
          },
          end: {
            line: 83,
            column: 56
          }
        },
        loc: {
          start: {
            line: 83,
            column: 68
          },
          end: {
            line: 140,
            column: 9
          }
        },
        line: 83
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 115,
            column: 48
          },
          end: {
            line: 115,
            column: 49
          }
        },
        loc: {
          start: {
            line: 115,
            column: 54
          },
          end: {
            line: 120,
            column: 21
          }
        },
        line: 115
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 31
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 142
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 176
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 24
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 181
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 187,
            column: 39
          },
          end: {
            line: 187,
            column: 40
          }
        },
        loc: {
          start: {
            line: 187,
            column: 46
          },
          end: {
            line: 190,
            column: 9
          }
        },
        line: 187
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 29
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 193
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 30
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 199
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 44
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 211
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 33
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 219
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 25
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 235
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 22
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 241
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 19
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 247
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 14
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 253
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 41
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 259
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 280,
            column: 50
          },
          end: {
            line: 280,
            column: 51
          }
        },
        loc: {
          start: {
            line: 280,
            column: 56
          },
          end: {
            line: 282,
            column: 13
          }
        },
        line: 280
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 283,
            column: 50
          },
          end: {
            line: 283,
            column: 51
          }
        },
        loc: {
          start: {
            line: 283,
            column: 56
          },
          end: {
            line: 285,
            column: 13
          }
        },
        line: 283
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 286,
            column: 45
          },
          end: {
            line: 286,
            column: 46
          }
        },
        loc: {
          start: {
            line: 286,
            column: 52
          },
          end: {
            line: 289,
            column: 14
          }
        },
        line: 286
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 286,
            column: 92
          },
          end: {
            line: 286,
            column: 93
          }
        },
        loc: {
          start: {
            line: 286,
            column: 105
          },
          end: {
            line: 289,
            column: 13
          }
        },
        line: 286
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 297,
            column: 54
          },
          end: {
            line: 297,
            column: 55
          }
        },
        loc: {
          start: {
            line: 297,
            column: 60
          },
          end: {
            line: 299,
            column: 9
          }
        },
        line: 297
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 300,
            column: 54
          },
          end: {
            line: 300,
            column: 55
          }
        },
        loc: {
          start: {
            line: 300,
            column: 60
          },
          end: {
            line: 302,
            column: 9
          }
        },
        line: 300
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 303,
            column: 49
          },
          end: {
            line: 303,
            column: 50
          }
        },
        loc: {
          start: {
            line: 303,
            column: 56
          },
          end: {
            line: 306,
            column: 9
          }
        },
        line: 303
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 47
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 313
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 314,
            column: 55
          },
          end: {
            line: 314,
            column: 56
          }
        },
        loc: {
          start: {
            line: 314,
            column: 68
          },
          end: {
            line: 330,
            column: 9
          }
        },
        line: 314
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 335,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        loc: {
          start: {
            line: 335,
            column: 44
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 335
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 339,
            column: 132
          },
          end: {
            line: 339,
            column: 133
          }
        },
        loc: {
          start: {
            line: 339,
            column: 144
          },
          end: {
            line: 345,
            column: 13
          }
        },
        line: 339
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 72,
            column: 17
          }
        }, {
          start: {
            line: 63,
            column: 21
          },
          end: {
            line: 72,
            column: 17
          }
        }],
        line: 56
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 56,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 56,
            column: 35
          }
        }, {
          start: {
            line: 56,
            column: 39
          },
          end: {
            line: 56,
            column: 66
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "4": {
        loc: {
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 85,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 85,
            column: 23
          }
        }, {
          start: {
            line: 85,
            column: 27
          },
          end: {
            line: 85,
            column: 53
          }
        }],
        line: 85
      },
      "5": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        }, {
          start: {
            line: 124,
            column: 17
          },
          end: {
            line: 139,
            column: 13
          }
        }],
        line: 101
      },
      "8": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "9": {
        loc: {
          start: {
            line: 111,
            column: 34
          },
          end: {
            line: 111,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 50
          },
          end: {
            line: 111,
            column: 61
          }
        }, {
          start: {
            line: 111,
            column: 64
          },
          end: {
            line: 111,
            column: 66
          }
        }],
        line: 111
      },
      "10": {
        loc: {
          start: {
            line: 124,
            column: 17
          },
          end: {
            line: 139,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 17
          },
          end: {
            line: 139,
            column: 13
          }
        }, {
          start: {
            line: 137,
            column: 17
          },
          end: {
            line: 139,
            column: 13
          }
        }],
        line: 124
      },
      "11": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "12": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "13": {
        loc: {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 171,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 171,
            column: 17
          }
        }, {
          start: {
            line: 169,
            column: 21
          },
          end: {
            line: 171,
            column: 17
          }
        }],
        line: 165
      },
      "14": {
        loc: {
          start: {
            line: 170,
            column: 37
          },
          end: {
            line: 170,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 37
          },
          end: {
            line: 170,
            column: 42
          }
        }, {
          start: {
            line: 170,
            column: 46
          },
          end: {
            line: 170,
            column: 48
          }
        }],
        line: 170
      },
      "15": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 178,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 178,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "16": {
        loc: {
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 179,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 179,
            column: 42
          }
        }, {
          start: {
            line: 179,
            column: 46
          },
          end: {
            line: 179,
            column: 65
          }
        }],
        line: 179
      },
      "17": {
        loc: {
          start: {
            line: 185,
            column: 25
          },
          end: {
            line: 185,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 25
          },
          end: {
            line: 185,
            column: 68
          }
        }, {
          start: {
            line: 185,
            column: 72
          },
          end: {
            line: 185,
            column: 75
          }
        }],
        line: 185
      },
      "18": {
        loc: {
          start: {
            line: 214,
            column: 26
          },
          end: {
            line: 214,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 35
          },
          end: {
            line: 214,
            column: 53
          }
        }, {
          start: {
            line: 214,
            column: 56
          },
          end: {
            line: 214,
            column: 58
          }
        }],
        line: 214
      },
      "19": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        }, {
          start: {
            line: 226,
            column: 13
          },
          end: {
            line: 229,
            column: 9
          }
        }],
        line: 222
      },
      "20": {
        loc: {
          start: {
            line: 318,
            column: 16
          },
          end: {
            line: 324,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 16
          },
          end: {
            line: 324,
            column: 17
          }
        }, {
          start: {
            line: 322,
            column: 21
          },
          end: {
            line: 324,
            column: 17
          }
        }],
        line: 318
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/processors/SPARQLProcessor.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/processors/SPARQLProcessor.ts"],
      sourcesContent: ["import { MarkdownPostProcessorContext, Plugin, Notice, App } from 'obsidian';\nimport { SPARQLEngine, ConstructResult, SelectResult } from '../../application/SPARQLEngine';\nimport { Graph } from '../../domain/semantic/core/Graph';\nimport { ExoFocusService } from '../../application/services/ExoFocusService';\nimport { QueryCacheConfig } from '../../application/services/QueryCache';\nimport { RDFService } from '../../application/services/RDFService';\nimport { ExportRDFModal } from '../modals/ExportRDFModal';\nimport { RDFFormat } from '../../application/services/RDFSerializer';\nimport { SPARQLSanitizer } from '../../application/services/SPARQLSanitizer';\n\nexport class SPARQLProcessor {\n    private plugin: Plugin;\n    private engine: SPARQLEngine;\n    private graph: Graph;\n    private focusService?: ExoFocusService;\n    private rdfService: RDFService;\n    private sanitizer: SPARQLSanitizer;\n    \n    constructor(plugin: Plugin, graph: Graph, focusService?: ExoFocusService, cacheConfig?: Partial<QueryCacheConfig>) {\n        this.plugin = plugin;\n        this.graph = graph;\n        this.engine = new SPARQLEngine(graph, cacheConfig);\n        this.focusService = focusService;\n        this.rdfService = new RDFService(plugin.app);\n        this.sanitizer = new SPARQLSanitizer();\n    }\n    \n    /**\n     * Main processor method called by Obsidian\n     */\n    async processCodeBlock(\n        source: string,\n        el: HTMLElement,\n        ctx: MarkdownPostProcessorContext\n    ): Promise<void> {\n        el.empty();\n        \n        // Create main container for UI tests\n        const container = document.createElement('div');\n        container.className = 'exocortex-sparql-container';\n        container.style.cssText = 'border: 1px solid #e0e0e0; padding: 1em; margin: 1em 0; border-radius: 4px; background: #fafafa;';\n        el.appendChild(container);\n        \n        try {\n            // Show loading indicator\n            const loadingEl = this.createLoadingIndicator();\n            container.appendChild(loadingEl);\n            \n            // Execute query\n            const startTime = Date.now();\n            const result = await this.executeQuery(source.trim());\n            const executionTime = Date.now() - startTime;\n            \n            // Remove loading indicator\n            loadingEl.remove();\n            \n            // Add query title\n            const title = document.createElement('h3');\n            title.textContent = 'SPARQL Query Results';\n            title.style.cssText = 'margin-top: 0; color: #333;';\n            container.appendChild(title);\n            \n            // Add query display\n            const queryPre = document.createElement('pre');\n            queryPre.textContent = source.trim();\n            queryPre.style.cssText = 'background: #f5f5f5; padding: 0.5em; border-radius: 3px; font-size: 0.9em; overflow-x: auto;';\n            container.appendChild(queryPre);\n            \n            // Add cache status indicator\n            if (result.cached) {\n                const cacheIndicator = this.createCacheIndicator(result.cached);\n                container.appendChild(cacheIndicator);\n            }\n\n            // Display results\n            if (!result.results || result.results.length === 0) {\n                const emptyMessage = document.createElement('div');\n                emptyMessage.className = 'sparql-empty-result';\n                emptyMessage.textContent = 'No results found';\n                emptyMessage.style.cssText = 'padding: 1em; text-align: center; color: #666;';\n                container.appendChild(emptyMessage);\n            } else {\n                const table = this.createResultTable(result.results);\n                container.appendChild(table);\n                \n                // Add export controls\n                const exportControls = this.createExportControls(result.results, source.trim());\n                container.appendChild(exportControls);\n                \n                // Add stats with cache information\n                const stats = this.createStatsElement(result.results.length, executionTime, result.cached);\n                container.appendChild(stats);\n            }\n            \n        } catch (error: any) {\n            container.innerHTML = '';\n            const errorEl = this.createErrorMessage(error);\n            container.appendChild(errorEl);\n            // SPARQL execution error\n        }\n    }\n    \n    public async executeQuery(sparql: string): Promise<{results: any[], cached?: boolean}> {\n        // Basic query validation\n        if (!sparql || sparql.trim().length === 0) {\n            throw new Error('Empty query');\n        }\n        \n        // Sanitize query for security\n        const sanitizationResult = this.sanitizer.sanitize(sparql);\n        if (sanitizationResult.isFailure) {\n            throw new Error(`Query validation failed: ${sanitizationResult.errorValue()}`);\n        }\n        \n        const sanitized = sanitizationResult.getValue();\n        if (sanitized.warnings.length > 0) {\n            // SPARQL query has warnings\n            new Notice(`Query executed with warnings: ${sanitized.warnings[0]}`);\n        }\n        \n        const safeQuery = sanitized.query;\n        const upperQuery = safeQuery.toUpperCase();\n        \n        // Check query type\n        if (upperQuery.includes('CONSTRUCT')) {\n            // Execute CONSTRUCT query\n            const result: ConstructResult = this.engine.construct(safeQuery);\n            \n            // Add generated triples to graph (only if not cached to avoid duplicates)\n            if (!result.cached) {\n                for (const triple of result.triples) {\n                    this.graph.add(triple);\n                }\n            }\n            \n            // Show notification\n            const cacheInfo = result.cached ? ' (cached)' : '';\n            new Notice(`Generated ${result.triples.length} new triples${cacheInfo}`);\n            \n            // Return triples as results for display\n            return {\n                results: result.triples.map(t => ({\n                    subject: t.getSubject().toString(),\n                    predicate: t.getPredicate().toString(),\n                    object: t.getObject().toString(),\n                    provenance: result.provenance\n                })),\n                cached: result.cached\n            };\n        } else if (upperQuery.includes('SELECT')) {\n            // Execute SELECT query\n            const selectResult: SelectResult = this.engine.select(safeQuery);\n            let results = selectResult.results;\n            \n            // Apply ExoFocus filtering if available\n            if (this.focusService) {\n                results = this.focusService.filterSPARQLResults(results);\n            }\n            \n            return {\n                results,\n                cached: selectResult.cached\n            };\n        } else {\n            throw new Error('Only SELECT and CONSTRUCT queries are currently supported');\n        }\n    }\n    \n    protected createResultTable(results: any[]): HTMLTableElement {\n        const table = document.createElement('table');\n        table.className = 'sparql-results-table';\n        \n        if (results.length === 0) {\n            return table;\n        }\n        \n        // Get column names from first result\n        const columns = Object.keys(results[0]);\n        \n        // Create header\n        const thead = table.createTHead();\n        const headerRow = thead.insertRow();\n        \n        for (const column of columns) {\n            const th = document.createElement('th');\n            th.textContent = column;\n            headerRow.appendChild(th);\n        }\n        \n        // Create body\n        const tbody = table.createTBody();\n        \n        for (const row of results) {\n            const tr = tbody.insertRow();\n            \n            for (const column of columns) {\n                const td = tr.insertCell();\n                const value = row[column];\n                \n                if (this.isNoteLink(value)) {\n                    const link = this.createNoteLink(value);\n                    td.appendChild(link);\n                } else {\n                    td.textContent = value || '';\n                }\n            }\n        }\n        \n        return table;\n    }\n    \n    private isNoteLink(value: any): boolean {\n        if (typeof value !== 'string') return false;\n        return value.startsWith('file://') || value.includes('/');\n    }\n    \n    private createNoteLink(uri: string): HTMLAnchorElement {\n        const link = document.createElement('a');\n        link.className = 'internal-link';\n        \n        // Extract note name from URI\n        const noteName = uri.replace('file://', '').split('/').pop() || uri;\n        link.textContent = noteName;\n        \n        link.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.plugin.app.workspace.openLinkText(noteName, '');\n        });\n        \n        return link;\n    }\n    \n    protected createLoadingIndicator(): HTMLElement {\n        const loading = document.createElement('div');\n        loading.className = 'sparql-loading';\n        loading.textContent = 'Executing query...';\n        return loading;\n    }\n    \n    private createErrorMessage(error: Error): HTMLElement {\n        const errorDiv = document.createElement('div');\n        errorDiv.className = 'sparql-error';\n        errorDiv.style.cssText = 'background: #ffebee; color: #c62828; padding: 1em; border-radius: 4px; border: 1px solid #ef5350;';\n        \n        const title = document.createElement('strong');\n        title.textContent = 'Query Error: ';\n        errorDiv.appendChild(title);\n        \n        const message = document.createElement('span');\n        message.textContent = error.message;\n        errorDiv.appendChild(message);\n        \n        return errorDiv;\n    }\n    \n    protected createStatsElement(count: number, time: number, cached?: boolean): HTMLElement {\n        const stats = document.createElement('div');\n        stats.className = 'sparql-stats';\n        const cacheInfo = cached ? ' (cached result)' : '';\n        stats.textContent = `Executed in ${time}ms - ${count} results${cacheInfo}`;\n        stats.style.cssText = 'margin-top: 0.5em; color: #666; font-size: 0.9em;';\n        return stats;\n    }\n\n    protected createCacheIndicator(cached: boolean): HTMLElement {\n        const indicator = document.createElement('div');\n        indicator.className = 'sparql-cache-indicator';\n        \n        if (cached) {\n            indicator.textContent = '\uD83D\uDCCB Cached Result';\n            indicator.style.cssText = 'background: #e8f5e8; color: #2e7d32; padding: 0.4em 0.8em; border-radius: 15px; font-size: 0.8em; display: inline-block; margin-bottom: 0.5em; border: 1px solid #c8e6c9;';\n        } else {\n            indicator.textContent = '\uD83D\uDD04 Fresh Result';\n            indicator.style.cssText = 'background: #e3f2fd; color: #1565c0; padding: 0.4em 0.8em; border-radius: 15px; font-size: 0.8em; display: inline-block; margin-bottom: 0.5em; border: 1px solid #bbdefb;';\n        }\n        \n        return indicator;\n    }\n\n    /**\n     * Get cache statistics for display\n     */\n    getCacheStatistics() {\n        return this.engine.getCacheStatistics();\n    }\n\n    /**\n     * Invalidate all cached queries\n     */\n    invalidateCache(): void {\n        this.engine.invalidateCache();\n    }\n\n    /**\n     * Cleanup expired cache entries\n     */\n    cleanupCache(): number {\n        return this.engine.cleanupCache();\n    }\n\n    /**\n     * Destroy cache and cleanup resources\n     */\n    destroy(): void {\n        this.engine.destroy();\n    }\n    \n    /**\n     * Create export controls for SPARQL results\n     */\n    protected createExportControls(results: any[], query: string): HTMLElement {\n        const exportContainer = document.createElement('div');\n        exportContainer.className = 'sparql-export-controls';\n        exportContainer.style.cssText = 'margin: 1em 0; padding: 0.8em; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 4px;';\n        \n        // Export label\n        const label = document.createElement('span');\n        label.textContent = 'Export results: ';\n        label.style.cssText = 'margin-right: 0.5em; font-weight: 500;';\n        exportContainer.appendChild(label);\n        \n        // Quick export buttons\n        const formats: Array<{ format: RDFFormat; label: string }> = [\n            { format: 'turtle', label: 'Turtle' },\n            { format: 'json-ld', label: 'JSON-LD' },\n            { format: 'n-triples', label: 'N-Triples' },\n            { format: 'rdf-xml', label: 'RDF/XML' }\n        ];\n        \n        for (const { format, label } of formats) {\n            const button = document.createElement('button');\n            button.textContent = label;\n            button.className = 'sparql-export-button';\n            button.style.cssText = 'margin: 0 0.3em; padding: 0.4em 0.8em; background: #007acc; color: white; border: none; border-radius: 3px; cursor: pointer; font-size: 0.85em;';\n            \n            button.addEventListener('mouseenter', () => {\n                button.style.background = '#005a9e';\n            });\n            \n            button.addEventListener('mouseleave', () => {\n                button.style.background = '#007acc';\n            });\n            \n            button.addEventListener('click', async (e) => {\n                e.preventDefault();\n                await this.exportQueryResults(results, format, query);\n            });\n            \n            exportContainer.appendChild(button);\n        }\n        \n        // Advanced export button\n        const advancedButton = document.createElement('button');\n        advancedButton.textContent = 'Advanced...';\n        advancedButton.className = 'sparql-export-advanced';\n        advancedButton.style.cssText = 'margin-left: 1em; padding: 0.4em 0.8em; background: #6c757d; color: white; border: none; border-radius: 3px; cursor: pointer; font-size: 0.85em;';\n        \n        advancedButton.addEventListener('mouseenter', () => {\n            advancedButton.style.background = '#545b62';\n        });\n        \n        advancedButton.addEventListener('mouseleave', () => {\n            advancedButton.style.background = '#6c757d';\n        });\n        \n        advancedButton.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.openAdvancedExportModal(results, query);\n        });\n        \n        exportContainer.appendChild(advancedButton);\n        \n        return exportContainer;\n    }\n    \n    /**\n     * Export query results in specified format\n     */\n    private async exportQueryResults(results: any[], format: RDFFormat, query: string): Promise<void> {\n        try {\n            const fileName = `sparql-results-${Date.now()}`;\n            const result = await this.rdfService.exportQueryResults(results, format, fileName);\n            \n            if (result.isSuccess) {\n                const exportData = result.getValue();\n                new Notice(`Exported ${exportData.tripleCount} triples as ${format.toUpperCase()}`);\n            } else {\n                new Notice(`Export failed: ${result.errorValue()}`);\n            }\n        } catch (error: any) {\n            new Notice(`Export error: ${error.message}`);\n            // SPARQL export error\n        }\n    }\n    \n    /**\n     * Open advanced export modal for query results\n     */\n    private openAdvancedExportModal(results: any[], query: string): void {\n        try {\n            // Convert query results to a graph for the export modal\n            const resultsGraph = this.rdfService['convertQueryResultsToGraph'](results);\n            \n            const modal = new ExportRDFModal(\n                this.plugin.app,\n                resultsGraph,\n                this.rdfService.getNamespaceManager(),\n                (result) => {\n                    // Add query metadata as comment\n                    const timestamp = new Date().toISOString();\n                    const metadata = `\\n\\n# Query executed at ${timestamp}\\n# ${query.replace(/\\n/g, '\\n# ')}\\n`;\n                    \n                    // You could save this enhanced content or provide additional processing\n                    new Notice(`Advanced export completed: ${result.fileName}`);\n                }\n            );\n            \n            modal.open();\n        } catch (error: any) {\n            new Notice(`Failed to open export modal: ${error.message}`);\n            // Export modal error\n        }\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f33798acdef38499da20985a6d74ae072a9c65a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_x13fv011x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_x13fv011x();
cov_x13fv011x().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_x13fv011x().s[1]++;
exports.SPARQLProcessor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_x13fv011x().s[2]++, require("tslib"));
const obsidian_1 =
/* istanbul ignore next */
(cov_x13fv011x().s[3]++, require("obsidian"));
const SPARQLEngine_1 =
/* istanbul ignore next */
(cov_x13fv011x().s[4]++, require("../../application/SPARQLEngine"));
const RDFService_1 =
/* istanbul ignore next */
(cov_x13fv011x().s[5]++, require("../../application/services/RDFService"));
const ExportRDFModal_1 =
/* istanbul ignore next */
(cov_x13fv011x().s[6]++, require("../modals/ExportRDFModal"));
const SPARQLSanitizer_1 =
/* istanbul ignore next */
(cov_x13fv011x().s[7]++, require("../../application/services/SPARQLSanitizer"));
class SPARQLProcessor {
  constructor(plugin, graph, focusService, cacheConfig) {
    /* istanbul ignore next */
    cov_x13fv011x().f[0]++;
    cov_x13fv011x().s[8]++;
    this.plugin = plugin;
    /* istanbul ignore next */
    cov_x13fv011x().s[9]++;
    this.graph = graph;
    /* istanbul ignore next */
    cov_x13fv011x().s[10]++;
    this.engine = new SPARQLEngine_1.SPARQLEngine(graph, cacheConfig);
    /* istanbul ignore next */
    cov_x13fv011x().s[11]++;
    this.focusService = focusService;
    /* istanbul ignore next */
    cov_x13fv011x().s[12]++;
    this.rdfService = new RDFService_1.RDFService(plugin.app);
    /* istanbul ignore next */
    cov_x13fv011x().s[13]++;
    this.sanitizer = new SPARQLSanitizer_1.SPARQLSanitizer();
  }
  /**
   * Main processor method called by Obsidian
   */
  processCodeBlock(source, el, ctx) {
    /* istanbul ignore next */
    cov_x13fv011x().f[1]++;
    cov_x13fv011x().s[14]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_x13fv011x().f[2]++;
      cov_x13fv011x().s[15]++;
      el.empty();
      // Create main container for UI tests
      const container =
      /* istanbul ignore next */
      (cov_x13fv011x().s[16]++, document.createElement('div'));
      /* istanbul ignore next */
      cov_x13fv011x().s[17]++;
      container.className = 'exocortex-sparql-container';
      /* istanbul ignore next */
      cov_x13fv011x().s[18]++;
      container.style.cssText = 'border: 1px solid #e0e0e0; padding: 1em; margin: 1em 0; border-radius: 4px; background: #fafafa;';
      /* istanbul ignore next */
      cov_x13fv011x().s[19]++;
      el.appendChild(container);
      /* istanbul ignore next */
      cov_x13fv011x().s[20]++;
      try {
        // Show loading indicator
        const loadingEl =
        /* istanbul ignore next */
        (cov_x13fv011x().s[21]++, this.createLoadingIndicator());
        /* istanbul ignore next */
        cov_x13fv011x().s[22]++;
        container.appendChild(loadingEl);
        // Execute query
        const startTime =
        /* istanbul ignore next */
        (cov_x13fv011x().s[23]++, Date.now());
        const result =
        /* istanbul ignore next */
        (cov_x13fv011x().s[24]++, yield this.executeQuery(source.trim()));
        const executionTime =
        /* istanbul ignore next */
        (cov_x13fv011x().s[25]++, Date.now() - startTime);
        // Remove loading indicator
        /* istanbul ignore next */
        cov_x13fv011x().s[26]++;
        loadingEl.remove();
        // Add query title
        const title =
        /* istanbul ignore next */
        (cov_x13fv011x().s[27]++, document.createElement('h3'));
        /* istanbul ignore next */
        cov_x13fv011x().s[28]++;
        title.textContent = 'SPARQL Query Results';
        /* istanbul ignore next */
        cov_x13fv011x().s[29]++;
        title.style.cssText = 'margin-top: 0; color: #333;';
        /* istanbul ignore next */
        cov_x13fv011x().s[30]++;
        container.appendChild(title);
        // Add query display
        const queryPre =
        /* istanbul ignore next */
        (cov_x13fv011x().s[31]++, document.createElement('pre'));
        /* istanbul ignore next */
        cov_x13fv011x().s[32]++;
        queryPre.textContent = source.trim();
        /* istanbul ignore next */
        cov_x13fv011x().s[33]++;
        queryPre.style.cssText = 'background: #f5f5f5; padding: 0.5em; border-radius: 3px; font-size: 0.9em; overflow-x: auto;';
        /* istanbul ignore next */
        cov_x13fv011x().s[34]++;
        container.appendChild(queryPre);
        // Add cache status indicator
        /* istanbul ignore next */
        cov_x13fv011x().s[35]++;
        if (result.cached) {
          /* istanbul ignore next */
          cov_x13fv011x().b[0][0]++;
          const cacheIndicator =
          /* istanbul ignore next */
          (cov_x13fv011x().s[36]++, this.createCacheIndicator(result.cached));
          /* istanbul ignore next */
          cov_x13fv011x().s[37]++;
          container.appendChild(cacheIndicator);
        } else
        /* istanbul ignore next */
        {
          cov_x13fv011x().b[0][1]++;
        }
        // Display results
        cov_x13fv011x().s[38]++;
        if (
        /* istanbul ignore next */
        (cov_x13fv011x().b[2][0]++, !result.results) ||
        /* istanbul ignore next */
        (cov_x13fv011x().b[2][1]++, result.results.length === 0)) {
          /* istanbul ignore next */
          cov_x13fv011x().b[1][0]++;
          const emptyMessage =
          /* istanbul ignore next */
          (cov_x13fv011x().s[39]++, document.createElement('div'));
          /* istanbul ignore next */
          cov_x13fv011x().s[40]++;
          emptyMessage.className = 'sparql-empty-result';
          /* istanbul ignore next */
          cov_x13fv011x().s[41]++;
          emptyMessage.textContent = 'No results found';
          /* istanbul ignore next */
          cov_x13fv011x().s[42]++;
          emptyMessage.style.cssText = 'padding: 1em; text-align: center; color: #666;';
          /* istanbul ignore next */
          cov_x13fv011x().s[43]++;
          container.appendChild(emptyMessage);
        } else {
          /* istanbul ignore next */
          cov_x13fv011x().b[1][1]++;
          const table =
          /* istanbul ignore next */
          (cov_x13fv011x().s[44]++, this.createResultTable(result.results));
          /* istanbul ignore next */
          cov_x13fv011x().s[45]++;
          container.appendChild(table);
          // Add export controls
          const exportControls =
          /* istanbul ignore next */
          (cov_x13fv011x().s[46]++, this.createExportControls(result.results, source.trim()));
          /* istanbul ignore next */
          cov_x13fv011x().s[47]++;
          container.appendChild(exportControls);
          // Add stats with cache information
          const stats =
          /* istanbul ignore next */
          (cov_x13fv011x().s[48]++, this.createStatsElement(result.results.length, executionTime, result.cached));
          /* istanbul ignore next */
          cov_x13fv011x().s[49]++;
          container.appendChild(stats);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_x13fv011x().s[50]++;
        container.innerHTML = '';
        const errorEl =
        /* istanbul ignore next */
        (cov_x13fv011x().s[51]++, this.createErrorMessage(error));
        /* istanbul ignore next */
        cov_x13fv011x().s[52]++;
        container.appendChild(errorEl);
        // SPARQL execution error
      }
    });
  }
  executeQuery(sparql) {
    /* istanbul ignore next */
    cov_x13fv011x().f[3]++;
    cov_x13fv011x().s[53]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_x13fv011x().f[4]++;
      cov_x13fv011x().s[54]++;
      // Basic query validation
      if (
      /* istanbul ignore next */
      (cov_x13fv011x().b[4][0]++, !sparql) ||
      /* istanbul ignore next */
      (cov_x13fv011x().b[4][1]++, sparql.trim().length === 0)) {
        /* istanbul ignore next */
        cov_x13fv011x().b[3][0]++;
        cov_x13fv011x().s[55]++;
        throw new Error('Empty query');
      } else
      /* istanbul ignore next */
      {
        cov_x13fv011x().b[3][1]++;
      }
      // Sanitize query for security
      const sanitizationResult =
      /* istanbul ignore next */
      (cov_x13fv011x().s[56]++, this.sanitizer.sanitize(sparql));
      /* istanbul ignore next */
      cov_x13fv011x().s[57]++;
      if (sanitizationResult.isFailure) {
        /* istanbul ignore next */
        cov_x13fv011x().b[5][0]++;
        cov_x13fv011x().s[58]++;
        throw new Error(`Query validation failed: ${sanitizationResult.errorValue()}`);
      } else
      /* istanbul ignore next */
      {
        cov_x13fv011x().b[5][1]++;
      }
      const sanitized =
      /* istanbul ignore next */
      (cov_x13fv011x().s[59]++, sanitizationResult.getValue());
      /* istanbul ignore next */
      cov_x13fv011x().s[60]++;
      if (sanitized.warnings.length > 0) {
        /* istanbul ignore next */
        cov_x13fv011x().b[6][0]++;
        cov_x13fv011x().s[61]++;
        // SPARQL query has warnings
        new obsidian_1.Notice(`Query executed with warnings: ${sanitized.warnings[0]}`);
      } else
      /* istanbul ignore next */
      {
        cov_x13fv011x().b[6][1]++;
      }
      const safeQuery =
      /* istanbul ignore next */
      (cov_x13fv011x().s[62]++, sanitized.query);
      const upperQuery =
      /* istanbul ignore next */
      (cov_x13fv011x().s[63]++, safeQuery.toUpperCase());
      // Check query type
      /* istanbul ignore next */
      cov_x13fv011x().s[64]++;
      if (upperQuery.includes('CONSTRUCT')) {
        /* istanbul ignore next */
        cov_x13fv011x().b[7][0]++;
        // Execute CONSTRUCT query
        const result =
        /* istanbul ignore next */
        (cov_x13fv011x().s[65]++, this.engine.construct(safeQuery));
        // Add generated triples to graph (only if not cached to avoid duplicates)
        /* istanbul ignore next */
        cov_x13fv011x().s[66]++;
        if (!result.cached) {
          /* istanbul ignore next */
          cov_x13fv011x().b[8][0]++;
          cov_x13fv011x().s[67]++;
          for (const triple of result.triples) {
            /* istanbul ignore next */
            cov_x13fv011x().s[68]++;
            this.graph.add(triple);
          }
        } else
        /* istanbul ignore next */
        {
          cov_x13fv011x().b[8][1]++;
        }
        // Show notification
        const cacheInfo =
        /* istanbul ignore next */
        (cov_x13fv011x().s[69]++, result.cached ?
        /* istanbul ignore next */
        (cov_x13fv011x().b[9][0]++, ' (cached)') :
        /* istanbul ignore next */
        (cov_x13fv011x().b[9][1]++, ''));
        /* istanbul ignore next */
        cov_x13fv011x().s[70]++;
        new obsidian_1.Notice(`Generated ${result.triples.length} new triples${cacheInfo}`);
        // Return triples as results for display
        /* istanbul ignore next */
        cov_x13fv011x().s[71]++;
        return {
          results: result.triples.map(t => {
            /* istanbul ignore next */
            cov_x13fv011x().f[5]++;
            cov_x13fv011x().s[72]++;
            return {
              subject: t.getSubject().toString(),
              predicate: t.getPredicate().toString(),
              object: t.getObject().toString(),
              provenance: result.provenance
            };
          }),
          cached: result.cached
        };
      } else {
        /* istanbul ignore next */
        cov_x13fv011x().b[7][1]++;
        cov_x13fv011x().s[73]++;
        if (upperQuery.includes('SELECT')) {
          /* istanbul ignore next */
          cov_x13fv011x().b[10][0]++;
          // Execute SELECT query
          const selectResult =
          /* istanbul ignore next */
          (cov_x13fv011x().s[74]++, this.engine.select(safeQuery));
          let results =
          /* istanbul ignore next */
          (cov_x13fv011x().s[75]++, selectResult.results);
          // Apply ExoFocus filtering if available
          /* istanbul ignore next */
          cov_x13fv011x().s[76]++;
          if (this.focusService) {
            /* istanbul ignore next */
            cov_x13fv011x().b[11][0]++;
            cov_x13fv011x().s[77]++;
            results = this.focusService.filterSPARQLResults(results);
          } else
          /* istanbul ignore next */
          {
            cov_x13fv011x().b[11][1]++;
          }
          cov_x13fv011x().s[78]++;
          return {
            results,
            cached: selectResult.cached
          };
        } else {
          /* istanbul ignore next */
          cov_x13fv011x().b[10][1]++;
          cov_x13fv011x().s[79]++;
          throw new Error('Only SELECT and CONSTRUCT queries are currently supported');
        }
      }
    });
  }
  createResultTable(results) {
    /* istanbul ignore next */
    cov_x13fv011x().f[6]++;
    const table =
    /* istanbul ignore next */
    (cov_x13fv011x().s[80]++, document.createElement('table'));
    /* istanbul ignore next */
    cov_x13fv011x().s[81]++;
    table.className = 'sparql-results-table';
    /* istanbul ignore next */
    cov_x13fv011x().s[82]++;
    if (results.length === 0) {
      /* istanbul ignore next */
      cov_x13fv011x().b[12][0]++;
      cov_x13fv011x().s[83]++;
      return table;
    } else
    /* istanbul ignore next */
    {
      cov_x13fv011x().b[12][1]++;
    }
    // Get column names from first result
    const columns =
    /* istanbul ignore next */
    (cov_x13fv011x().s[84]++, Object.keys(results[0]));
    // Create header
    const thead =
    /* istanbul ignore next */
    (cov_x13fv011x().s[85]++, table.createTHead());
    const headerRow =
    /* istanbul ignore next */
    (cov_x13fv011x().s[86]++, thead.insertRow());
    /* istanbul ignore next */
    cov_x13fv011x().s[87]++;
    for (const column of columns) {
      const th =
      /* istanbul ignore next */
      (cov_x13fv011x().s[88]++, document.createElement('th'));
      /* istanbul ignore next */
      cov_x13fv011x().s[89]++;
      th.textContent = column;
      /* istanbul ignore next */
      cov_x13fv011x().s[90]++;
      headerRow.appendChild(th);
    }
    // Create body
    const tbody =
    /* istanbul ignore next */
    (cov_x13fv011x().s[91]++, table.createTBody());
    /* istanbul ignore next */
    cov_x13fv011x().s[92]++;
    for (const row of results) {
      const tr =
      /* istanbul ignore next */
      (cov_x13fv011x().s[93]++, tbody.insertRow());
      /* istanbul ignore next */
      cov_x13fv011x().s[94]++;
      for (const column of columns) {
        const td =
        /* istanbul ignore next */
        (cov_x13fv011x().s[95]++, tr.insertCell());
        const value =
        /* istanbul ignore next */
        (cov_x13fv011x().s[96]++, row[column]);
        /* istanbul ignore next */
        cov_x13fv011x().s[97]++;
        if (this.isNoteLink(value)) {
          /* istanbul ignore next */
          cov_x13fv011x().b[13][0]++;
          const link =
          /* istanbul ignore next */
          (cov_x13fv011x().s[98]++, this.createNoteLink(value));
          /* istanbul ignore next */
          cov_x13fv011x().s[99]++;
          td.appendChild(link);
        } else {
          /* istanbul ignore next */
          cov_x13fv011x().b[13][1]++;
          cov_x13fv011x().s[100]++;
          td.textContent =
          /* istanbul ignore next */
          (cov_x13fv011x().b[14][0]++, value) ||
          /* istanbul ignore next */
          (cov_x13fv011x().b[14][1]++, '');
        }
      }
    }
    /* istanbul ignore next */
    cov_x13fv011x().s[101]++;
    return table;
  }
  isNoteLink(value) {
    /* istanbul ignore next */
    cov_x13fv011x().f[7]++;
    cov_x13fv011x().s[102]++;
    if (typeof value !== 'string') {
      /* istanbul ignore next */
      cov_x13fv011x().b[15][0]++;
      cov_x13fv011x().s[103]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_x13fv011x().b[15][1]++;
    }
    cov_x13fv011x().s[104]++;
    return /* istanbul ignore next */(cov_x13fv011x().b[16][0]++, value.startsWith('file://')) ||
    /* istanbul ignore next */
    (cov_x13fv011x().b[16][1]++, value.includes('/'));
  }
  createNoteLink(uri) {
    /* istanbul ignore next */
    cov_x13fv011x().f[8]++;
    const link =
    /* istanbul ignore next */
    (cov_x13fv011x().s[105]++, document.createElement('a'));
    /* istanbul ignore next */
    cov_x13fv011x().s[106]++;
    link.className = 'internal-link';
    // Extract note name from URI
    const noteName =
    /* istanbul ignore next */
    (cov_x13fv011x().s[107]++,
    /* istanbul ignore next */
    (cov_x13fv011x().b[17][0]++, uri.replace('file://', '').split('/').pop()) ||
    /* istanbul ignore next */
    (cov_x13fv011x().b[17][1]++, uri));
    /* istanbul ignore next */
    cov_x13fv011x().s[108]++;
    link.textContent = noteName;
    /* istanbul ignore next */
    cov_x13fv011x().s[109]++;
    link.addEventListener('click', e => {
      /* istanbul ignore next */
      cov_x13fv011x().f[9]++;
      cov_x13fv011x().s[110]++;
      e.preventDefault();
      /* istanbul ignore next */
      cov_x13fv011x().s[111]++;
      this.plugin.app.workspace.openLinkText(noteName, '');
    });
    /* istanbul ignore next */
    cov_x13fv011x().s[112]++;
    return link;
  }
  createLoadingIndicator() {
    /* istanbul ignore next */
    cov_x13fv011x().f[10]++;
    const loading =
    /* istanbul ignore next */
    (cov_x13fv011x().s[113]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_x13fv011x().s[114]++;
    loading.className = 'sparql-loading';
    /* istanbul ignore next */
    cov_x13fv011x().s[115]++;
    loading.textContent = 'Executing query...';
    /* istanbul ignore next */
    cov_x13fv011x().s[116]++;
    return loading;
  }
  createErrorMessage(error) {
    /* istanbul ignore next */
    cov_x13fv011x().f[11]++;
    const errorDiv =
    /* istanbul ignore next */
    (cov_x13fv011x().s[117]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_x13fv011x().s[118]++;
    errorDiv.className = 'sparql-error';
    /* istanbul ignore next */
    cov_x13fv011x().s[119]++;
    errorDiv.style.cssText = 'background: #ffebee; color: #c62828; padding: 1em; border-radius: 4px; border: 1px solid #ef5350;';
    const title =
    /* istanbul ignore next */
    (cov_x13fv011x().s[120]++, document.createElement('strong'));
    /* istanbul ignore next */
    cov_x13fv011x().s[121]++;
    title.textContent = 'Query Error: ';
    /* istanbul ignore next */
    cov_x13fv011x().s[122]++;
    errorDiv.appendChild(title);
    const message =
    /* istanbul ignore next */
    (cov_x13fv011x().s[123]++, document.createElement('span'));
    /* istanbul ignore next */
    cov_x13fv011x().s[124]++;
    message.textContent = error.message;
    /* istanbul ignore next */
    cov_x13fv011x().s[125]++;
    errorDiv.appendChild(message);
    /* istanbul ignore next */
    cov_x13fv011x().s[126]++;
    return errorDiv;
  }
  createStatsElement(count, time, cached) {
    /* istanbul ignore next */
    cov_x13fv011x().f[12]++;
    const stats =
    /* istanbul ignore next */
    (cov_x13fv011x().s[127]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_x13fv011x().s[128]++;
    stats.className = 'sparql-stats';
    const cacheInfo =
    /* istanbul ignore next */
    (cov_x13fv011x().s[129]++, cached ?
    /* istanbul ignore next */
    (cov_x13fv011x().b[18][0]++, ' (cached result)') :
    /* istanbul ignore next */
    (cov_x13fv011x().b[18][1]++, ''));
    /* istanbul ignore next */
    cov_x13fv011x().s[130]++;
    stats.textContent = `Executed in ${time}ms - ${count} results${cacheInfo}`;
    /* istanbul ignore next */
    cov_x13fv011x().s[131]++;
    stats.style.cssText = 'margin-top: 0.5em; color: #666; font-size: 0.9em;';
    /* istanbul ignore next */
    cov_x13fv011x().s[132]++;
    return stats;
  }
  createCacheIndicator(cached) {
    /* istanbul ignore next */
    cov_x13fv011x().f[13]++;
    const indicator =
    /* istanbul ignore next */
    (cov_x13fv011x().s[133]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_x13fv011x().s[134]++;
    indicator.className = 'sparql-cache-indicator';
    /* istanbul ignore next */
    cov_x13fv011x().s[135]++;
    if (cached) {
      /* istanbul ignore next */
      cov_x13fv011x().b[19][0]++;
      cov_x13fv011x().s[136]++;
      indicator.textContent = '📋 Cached Result';
      /* istanbul ignore next */
      cov_x13fv011x().s[137]++;
      indicator.style.cssText = 'background: #e8f5e8; color: #2e7d32; padding: 0.4em 0.8em; border-radius: 15px; font-size: 0.8em; display: inline-block; margin-bottom: 0.5em; border: 1px solid #c8e6c9;';
    } else {
      /* istanbul ignore next */
      cov_x13fv011x().b[19][1]++;
      cov_x13fv011x().s[138]++;
      indicator.textContent = '🔄 Fresh Result';
      /* istanbul ignore next */
      cov_x13fv011x().s[139]++;
      indicator.style.cssText = 'background: #e3f2fd; color: #1565c0; padding: 0.4em 0.8em; border-radius: 15px; font-size: 0.8em; display: inline-block; margin-bottom: 0.5em; border: 1px solid #bbdefb;';
    }
    /* istanbul ignore next */
    cov_x13fv011x().s[140]++;
    return indicator;
  }
  /**
   * Get cache statistics for display
   */
  getCacheStatistics() {
    /* istanbul ignore next */
    cov_x13fv011x().f[14]++;
    cov_x13fv011x().s[141]++;
    return this.engine.getCacheStatistics();
  }
  /**
   * Invalidate all cached queries
   */
  invalidateCache() {
    /* istanbul ignore next */
    cov_x13fv011x().f[15]++;
    cov_x13fv011x().s[142]++;
    this.engine.invalidateCache();
  }
  /**
   * Cleanup expired cache entries
   */
  cleanupCache() {
    /* istanbul ignore next */
    cov_x13fv011x().f[16]++;
    cov_x13fv011x().s[143]++;
    return this.engine.cleanupCache();
  }
  /**
   * Destroy cache and cleanup resources
   */
  destroy() {
    /* istanbul ignore next */
    cov_x13fv011x().f[17]++;
    cov_x13fv011x().s[144]++;
    this.engine.destroy();
  }
  /**
   * Create export controls for SPARQL results
   */
  createExportControls(results, query) {
    /* istanbul ignore next */
    cov_x13fv011x().f[18]++;
    const exportContainer =
    /* istanbul ignore next */
    (cov_x13fv011x().s[145]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_x13fv011x().s[146]++;
    exportContainer.className = 'sparql-export-controls';
    /* istanbul ignore next */
    cov_x13fv011x().s[147]++;
    exportContainer.style.cssText = 'margin: 1em 0; padding: 0.8em; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 4px;';
    // Export label
    const label =
    /* istanbul ignore next */
    (cov_x13fv011x().s[148]++, document.createElement('span'));
    /* istanbul ignore next */
    cov_x13fv011x().s[149]++;
    label.textContent = 'Export results: ';
    /* istanbul ignore next */
    cov_x13fv011x().s[150]++;
    label.style.cssText = 'margin-right: 0.5em; font-weight: 500;';
    /* istanbul ignore next */
    cov_x13fv011x().s[151]++;
    exportContainer.appendChild(label);
    // Quick export buttons
    const formats =
    /* istanbul ignore next */
    (cov_x13fv011x().s[152]++, [{
      format: 'turtle',
      label: 'Turtle'
    }, {
      format: 'json-ld',
      label: 'JSON-LD'
    }, {
      format: 'n-triples',
      label: 'N-Triples'
    }, {
      format: 'rdf-xml',
      label: 'RDF/XML'
    }]);
    /* istanbul ignore next */
    cov_x13fv011x().s[153]++;
    for (const {
      format,
      label
    } of formats) {
      const button =
      /* istanbul ignore next */
      (cov_x13fv011x().s[154]++, document.createElement('button'));
      /* istanbul ignore next */
      cov_x13fv011x().s[155]++;
      button.textContent = label;
      /* istanbul ignore next */
      cov_x13fv011x().s[156]++;
      button.className = 'sparql-export-button';
      /* istanbul ignore next */
      cov_x13fv011x().s[157]++;
      button.style.cssText = 'margin: 0 0.3em; padding: 0.4em 0.8em; background: #007acc; color: white; border: none; border-radius: 3px; cursor: pointer; font-size: 0.85em;';
      /* istanbul ignore next */
      cov_x13fv011x().s[158]++;
      button.addEventListener('mouseenter', () => {
        /* istanbul ignore next */
        cov_x13fv011x().f[19]++;
        cov_x13fv011x().s[159]++;
        button.style.background = '#005a9e';
      });
      /* istanbul ignore next */
      cov_x13fv011x().s[160]++;
      button.addEventListener('mouseleave', () => {
        /* istanbul ignore next */
        cov_x13fv011x().f[20]++;
        cov_x13fv011x().s[161]++;
        button.style.background = '#007acc';
      });
      /* istanbul ignore next */
      cov_x13fv011x().s[162]++;
      button.addEventListener('click', e => {
        /* istanbul ignore next */
        cov_x13fv011x().f[21]++;
        cov_x13fv011x().s[163]++;
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_x13fv011x().f[22]++;
          cov_x13fv011x().s[164]++;
          e.preventDefault();
          /* istanbul ignore next */
          cov_x13fv011x().s[165]++;
          yield this.exportQueryResults(results, format, query);
        });
      });
      /* istanbul ignore next */
      cov_x13fv011x().s[166]++;
      exportContainer.appendChild(button);
    }
    // Advanced export button
    const advancedButton =
    /* istanbul ignore next */
    (cov_x13fv011x().s[167]++, document.createElement('button'));
    /* istanbul ignore next */
    cov_x13fv011x().s[168]++;
    advancedButton.textContent = 'Advanced...';
    /* istanbul ignore next */
    cov_x13fv011x().s[169]++;
    advancedButton.className = 'sparql-export-advanced';
    /* istanbul ignore next */
    cov_x13fv011x().s[170]++;
    advancedButton.style.cssText = 'margin-left: 1em; padding: 0.4em 0.8em; background: #6c757d; color: white; border: none; border-radius: 3px; cursor: pointer; font-size: 0.85em;';
    /* istanbul ignore next */
    cov_x13fv011x().s[171]++;
    advancedButton.addEventListener('mouseenter', () => {
      /* istanbul ignore next */
      cov_x13fv011x().f[23]++;
      cov_x13fv011x().s[172]++;
      advancedButton.style.background = '#545b62';
    });
    /* istanbul ignore next */
    cov_x13fv011x().s[173]++;
    advancedButton.addEventListener('mouseleave', () => {
      /* istanbul ignore next */
      cov_x13fv011x().f[24]++;
      cov_x13fv011x().s[174]++;
      advancedButton.style.background = '#6c757d';
    });
    /* istanbul ignore next */
    cov_x13fv011x().s[175]++;
    advancedButton.addEventListener('click', e => {
      /* istanbul ignore next */
      cov_x13fv011x().f[25]++;
      cov_x13fv011x().s[176]++;
      e.preventDefault();
      /* istanbul ignore next */
      cov_x13fv011x().s[177]++;
      this.openAdvancedExportModal(results, query);
    });
    /* istanbul ignore next */
    cov_x13fv011x().s[178]++;
    exportContainer.appendChild(advancedButton);
    /* istanbul ignore next */
    cov_x13fv011x().s[179]++;
    return exportContainer;
  }
  /**
   * Export query results in specified format
   */
  exportQueryResults(results, format, query) {
    /* istanbul ignore next */
    cov_x13fv011x().f[26]++;
    cov_x13fv011x().s[180]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_x13fv011x().f[27]++;
      cov_x13fv011x().s[181]++;
      try {
        const fileName =
        /* istanbul ignore next */
        (cov_x13fv011x().s[182]++, `sparql-results-${Date.now()}`);
        const result =
        /* istanbul ignore next */
        (cov_x13fv011x().s[183]++, yield this.rdfService.exportQueryResults(results, format, fileName));
        /* istanbul ignore next */
        cov_x13fv011x().s[184]++;
        if (result.isSuccess) {
          /* istanbul ignore next */
          cov_x13fv011x().b[20][0]++;
          const exportData =
          /* istanbul ignore next */
          (cov_x13fv011x().s[185]++, result.getValue());
          /* istanbul ignore next */
          cov_x13fv011x().s[186]++;
          new obsidian_1.Notice(`Exported ${exportData.tripleCount} triples as ${format.toUpperCase()}`);
        } else {
          /* istanbul ignore next */
          cov_x13fv011x().b[20][1]++;
          cov_x13fv011x().s[187]++;
          new obsidian_1.Notice(`Export failed: ${result.errorValue()}`);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_x13fv011x().s[188]++;
        new obsidian_1.Notice(`Export error: ${error.message}`);
        // SPARQL export error
      }
    });
  }
  /**
   * Open advanced export modal for query results
   */
  openAdvancedExportModal(results, query) {
    /* istanbul ignore next */
    cov_x13fv011x().f[28]++;
    cov_x13fv011x().s[189]++;
    try {
      // Convert query results to a graph for the export modal
      const resultsGraph =
      /* istanbul ignore next */
      (cov_x13fv011x().s[190]++, this.rdfService['convertQueryResultsToGraph'](results));
      const modal =
      /* istanbul ignore next */
      (cov_x13fv011x().s[191]++, new ExportRDFModal_1.ExportRDFModal(this.plugin.app, resultsGraph, this.rdfService.getNamespaceManager(), result => {
        /* istanbul ignore next */
        cov_x13fv011x().f[29]++;
        // Add query metadata as comment
        const timestamp =
        /* istanbul ignore next */
        (cov_x13fv011x().s[192]++, new Date().toISOString());
        const metadata =
        /* istanbul ignore next */
        (cov_x13fv011x().s[193]++, `\n\n# Query executed at ${timestamp}\n# ${query.replace(/\n/g, '\n# ')}\n`);
        // You could save this enhanced content or provide additional processing
        /* istanbul ignore next */
        cov_x13fv011x().s[194]++;
        new obsidian_1.Notice(`Advanced export completed: ${result.fileName}`);
      }));
      /* istanbul ignore next */
      cov_x13fv011x().s[195]++;
      modal.open();
    } catch (error) {
      /* istanbul ignore next */
      cov_x13fv011x().s[196]++;
      new obsidian_1.Notice(`Failed to open export modal: ${error.message}`);
      // Export modal error
    }
  }
}
/* istanbul ignore next */
cov_x13fv011x().s[197]++;
exports.SPARQLProcessor = SPARQLProcessor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,