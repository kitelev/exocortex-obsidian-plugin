a8412d868839b995c2c81441cb1dd94a
"use strict";

/* istanbul ignore next */
function cov_1l8y2w5a93() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFValidator.ts";
  var hash = "468d3307a2fc4ea693e031658fe82e9d80716ea8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFValidator.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 61
        }
      },
      "4": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "5": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 10,
          column: 27
        }
      },
      "6": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "8": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 43
        }
      },
      "9": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 47
        }
      },
      "10": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "11": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "12": {
        start: {
          line: 22,
          column: 41
        },
        end: {
          line: 22,
          column: 77
        }
      },
      "13": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 81
        }
      },
      "14": {
        start: {
          line: 23,
          column: 60
        },
        end: {
          line: 23,
          column: 78
        }
      },
      "15": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 85
        }
      },
      "16": {
        start: {
          line: 24,
          column: 62
        },
        end: {
          line: 24,
          column: 82
        }
      },
      "17": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 27,
          column: 17
        }
      },
      "18": {
        start: {
          line: 25,
          column: 47
        },
        end: {
          line: 25,
          column: 80
        }
      },
      "19": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 44
        }
      },
      "20": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 30,
          column: 17
        }
      },
      "21": {
        start: {
          line: 28,
          column: 47
        },
        end: {
          line: 28,
          column: 84
        }
      },
      "22": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "23": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "24": {
        start: {
          line: 32,
          column: 38
        },
        end: {
          line: 32,
          column: 63
        }
      },
      "25": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 43,
          column: 21
        }
      },
      "26": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 47
        }
      },
      "27": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 39,
          column: 27
        }
      },
      "28": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "29": {
        start: {
          line: 46,
          column: 27
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "30": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 46
        }
      },
      "31": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 79
        }
      },
      "32": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "33": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "34": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 47
        }
      },
      "35": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 41
        }
      },
      "36": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "37": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "38": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 26
        }
      },
      "39": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "40": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 72,
          column: 66
        }
      },
      "41": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "42": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "43": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "44": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 68
        }
      },
      "45": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "46": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 88,
          column: 19
        }
      },
      "47": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "48": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 65
        }
      },
      "49": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "50": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 98,
          column: 19
        }
      },
      "51": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "52": {
        start: {
          line: 102,
          column: 34
        },
        end: {
          line: 102,
          column: 62
        }
      },
      "53": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 42
        }
      },
      "54": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 22
        }
      },
      "55": {
        start: {
          line: 108,
          column: 23
        },
        end: {
          line: 108,
          column: 25
        }
      },
      "56": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "57": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 47
        }
      },
      "58": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 26
        }
      },
      "59": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "60": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 62
        }
      },
      "61": {
        start: {
          line: 116,
          column: 29
        },
        end: {
          line: 116,
          column: 45
        }
      },
      "62": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "63": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 59
        }
      },
      "64": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "65": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 54
        }
      },
      "66": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 22
        }
      },
      "67": {
        start: {
          line: 126,
          column: 23
        },
        end: {
          line: 126,
          column: 25
        }
      },
      "68": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 46
        }
      },
      "69": {
        start: {
          line: 128,
          column: 25
        },
        end: {
          line: 128,
          column: 46
        }
      },
      "70": {
        start: {
          line: 129,
          column: 22
        },
        end: {
          line: 129,
          column: 40
        }
      },
      "71": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "72": {
        start: {
          line: 131,
          column: 35
        },
        end: {
          line: 131,
          column: 72
        }
      },
      "73": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "74": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 136,
          column: 19
        }
      },
      "75": {
        start: {
          line: 138,
          column: 28
        },
        end: {
          line: 138,
          column: 81
        }
      },
      "76": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "77": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 143,
          column: 19
        }
      },
      "78": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "79": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "80": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "81": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 22
        }
      },
      "82": {
        start: {
          line: 157,
          column: 29
        },
        end: {
          line: 157,
          column: 64
        }
      },
      "83": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "84": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 41
        }
      },
      "85": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "86": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 49
        }
      },
      "87": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "88": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 57
        }
      },
      "89": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "90": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 70
        }
      },
      "91": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "92": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 53
        }
      },
      "93": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 20
        }
      },
      "94": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "95": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 69
        }
      },
      "96": {
        start: {
          line: 179,
          column: 29
        },
        end: {
          line: 179,
          column: 74
        }
      },
      "97": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "98": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 88
        }
      },
      "99": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "100": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 74
        }
      },
      "101": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "102": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 70
        }
      },
      "103": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 36
        }
      },
      "104": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "105": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 66
        }
      },
      "106": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "107": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 84
        }
      },
      "108": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "109": {
        start: {
          line: 199,
          column: 33
        },
        end: {
          line: 199,
          column: 78
        }
      },
      "110": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 202,
          column: 13
        }
      },
      "111": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 92
        }
      },
      "112": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 36
        }
      },
      "113": {
        start: {
          line: 207,
          column: 24
        },
        end: {
          line: 207,
          column: 43
        }
      },
      "114": {
        start: {
          line: 208,
          column: 26
        },
        end: {
          line: 208,
          column: 47
        }
      },
      "115": {
        start: {
          line: 209,
          column: 23
        },
        end: {
          line: 209,
          column: 41
        }
      },
      "116": {
        start: {
          line: 210,
          column: 27
        },
        end: {
          line: 211,
          column: 82
        }
      },
      "117": {
        start: {
          line: 212,
          column: 29
        },
        end: {
          line: 212,
          column: 49
        }
      },
      "118": {
        start: {
          line: 213,
          column: 26
        },
        end: {
          line: 215,
          column: 82
        }
      },
      "119": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 60
        }
      },
      "120": {
        start: {
          line: 219,
          column: 0
        },
        end: {
          line: 219,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 7,
            column: 21
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 39
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 55
          },
          end: {
            line: 23,
            column: 56
          }
        },
        loc: {
          start: {
            line: 23,
            column: 60
          },
          end: {
            line: 23,
            column: 78
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 57
          },
          end: {
            line: 24,
            column: 58
          }
        },
        loc: {
          start: {
            line: 24,
            column: 62
          },
          end: {
            line: 24,
            column: 82
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 42
          },
          end: {
            line: 25,
            column: 43
          }
        },
        loc: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 25,
            column: 80
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 42
          },
          end: {
            line: 28,
            column: 43
          }
        },
        loc: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 28,
            column: 84
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 41
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 58
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 107
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 29
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 125
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 45
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 156
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 35
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 175
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 35
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 191
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 25
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 206
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 25
          },
          end: {
            line: 8,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 35
          },
          end: {
            line: 8,
            column: 37
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 27,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 27,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 30,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 30,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 43,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 43,
            column: 21
          }
        }, {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 43,
            column: 21
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 27
          },
          end: {
            line: 58,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 39
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 20
          }
        }, {
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 63,
            column: 34
          }
        }, {
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 63,
            column: 45
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 75,
            column: 26
          },
          end: {
            line: 75,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 47
          },
          end: {
            line: 75,
            column: 54
          }
        }, {
          start: {
            line: 75,
            column: 57
          },
          end: {
            line: 75,
            column: 66
          }
        }],
        line: 75
      },
      "11": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "12": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "13": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "14": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "15": {
        loc: {
          start: {
            line: 95,
            column: 26
          },
          end: {
            line: 95,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 47
          },
          end: {
            line: 95,
            column: 54
          }
        }, {
          start: {
            line: 95,
            column: 57
          },
          end: {
            line: 95,
            column: 66
          }
        }],
        line: 95
      },
      "16": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "17": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 33
          }
        }, {
          start: {
            line: 101,
            column: 37
          },
          end: {
            line: 101,
            column: 71
          }
        }],
        line: 101
      },
      "18": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "19": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 109,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 109,
            column: 16
          }
        }, {
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 109,
            column: 37
          }
        }],
        line: 109
      },
      "20": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "21": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "22": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "23": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "24": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "25": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "26": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "27": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "28": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "29": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "30": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "31": {
        loc: {
          start: {
            line: 165,
            column: 19
          },
          end: {
            line: 165,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 19
          },
          end: {
            line: 165,
            column: 35
          }
        }, {
          start: {
            line: 165,
            column: 39
          },
          end: {
            line: 165,
            column: 56
          }
        }],
        line: 165
      },
      "32": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "33": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "34": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "35": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "36": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "37": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 32
          }
        }, {
          start: {
            line: 183,
            column: 36
          },
          end: {
            line: 183,
            column: 76
          }
        }],
        line: 183
      },
      "38": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "39": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 28
          }
        }, {
          start: {
            line: 186,
            column: 32
          },
          end: {
            line: 186,
            column: 68
          }
        }],
        line: 186
      },
      "40": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "41": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "42": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 41
          }
        }, {
          start: {
            line: 195,
            column: 45
          },
          end: {
            line: 195,
            column: 76
          }
        }],
        line: 195
      },
      "43": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "44": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 202,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 202,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "45": {
        loc: {
          start: {
            line: 210,
            column: 27
          },
          end: {
            line: 211,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 61
          },
          end: {
            line: 210,
            column: 79
          }
        }, {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 82
          }
        }],
        line: 210
      },
      "46": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 211,
            column: 52
          },
          end: {
            line: 211,
            column: 77
          }
        }, {
          start: {
            line: 211,
            column: 80
          },
          end: {
            line: 211,
            column: 82
          }
        }],
        line: 211
      },
      "47": {
        loc: {
          start: {
            line: 213,
            column: 26
          },
          end: {
            line: 215,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 59
          },
          end: {
            line: 213,
            column: 76
          }
        }, {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 215,
            column: 82
          }
        }],
        line: 213
      },
      "48": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 215,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 51
          },
          end: {
            line: 214,
            column: 75
          }
        }, {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 82
          }
        }],
        line: 214
      },
      "49": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 53
          },
          end: {
            line: 215,
            column: 77
          }
        }, {
          start: {
            line: 215,
            column: 80
          },
          end: {
            line: 215,
            column: 82
          }
        }],
        line: 215
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFValidator.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFValidator.ts"],
      sourcesContent: ["import { Result } from '../../domain/core/Result';\nimport { Graph } from '../../domain/semantic/core/Graph';\nimport { Triple, IRI, BlankNode, Literal } from '../../domain/semantic/core/Triple';\nimport { RDFFormat } from './RDFSerializer';\n\nexport interface ValidationError {\n    type: 'error' | 'warning';\n    message: string;\n    triple?: Triple;\n    location?: { line?: number; column?: number };\n}\n\nexport interface ValidationOptions {\n    strictMode?: boolean;\n    checkDuplicates?: boolean;\n    checkNamespaces?: boolean;\n    checkLiterals?: boolean;\n}\n\nexport interface ValidationResult {\n    isValid: boolean;\n    errors: ValidationError[];\n    warnings: ValidationError[];\n    stats: {\n        tripleCount: number;\n        duplicateCount: number;\n        invalidIRICount: number;\n        invalidLiteralCount: number;\n    };\n}\n\nexport class RDFValidator {\n    constructor() {}\n\n    validateGraph(graph: Graph, options: ValidationOptions = {}): Result<ValidationResult> {\n        const errors: ValidationError[] = [];\n        const warnings: ValidationError[] = [];\n        const stats = {\n            tripleCount: 0,\n            duplicateCount: 0,\n            invalidIRICount: 0,\n            invalidLiteralCount: 0\n        };\n\n        try {\n            const triples = graph.toArray();\n            stats.tripleCount = triples.length;\n\n            const seenTriples = new Set<string>();\n\n            for (const triple of triples) {\n                const validationErrors = this.validateTriple(triple, options);\n                errors.push(...validationErrors.filter(e => e.type === 'error'));\n                warnings.push(...validationErrors.filter(e => e.type === 'warning'));\n\n                if (validationErrors.some(e => e.message.includes('Invalid IRI'))) {\n                    stats.invalidIRICount++;\n                }\n                if (validationErrors.some(e => e.message.includes('Invalid literal'))) {\n                    stats.invalidLiteralCount++;\n                }\n\n                if (options.checkDuplicates) {\n                    const tripleKey = this.getTripleKey(triple);\n                    if (seenTriples.has(tripleKey)) {\n                        stats.duplicateCount++;\n                        warnings.push({\n                            type: 'warning',\n                            message: 'Duplicate triple detected',\n                            triple\n                        });\n                    } else {\n                        seenTriples.add(tripleKey);\n                    }\n                }\n            }\n\n            const result: ValidationResult = {\n                isValid: errors.length === 0,\n                errors,\n                warnings,\n                stats\n            };\n\n            return Result.ok(result);\n        } catch (error) {\n            return Result.fail(`Validation failed: ${error.message}`);\n        }\n    }\n\n    validateTriple(triple: Triple, options: ValidationOptions = {}): ValidationError[] {\n        const errors: ValidationError[] = [];\n\n        const subject = triple.getSubject();\n        const predicate = triple.getPredicate();\n        const object = triple.getObject();\n\n        if (!subject || !predicate || !object) {\n            errors.push({\n                type: 'error',\n                message: 'Triple is missing required components',\n                triple\n            });\n            return errors;\n        }\n\n        if (subject instanceof IRI) {\n            const iriErrors = this.validateIRI(subject.toString());\n            if (iriErrors.length > 0) {\n                errors.push({\n                    type: options.strictMode ? 'error' : 'warning',\n                    message: `Invalid IRI in subject: ${iriErrors.join(', ')}`,\n                    triple\n                });\n            }\n        }\n\n        if (predicate instanceof IRI) {\n            const iriErrors = this.validateIRI(predicate.toString());\n            if (iriErrors.length > 0) {\n                errors.push({\n                    type: 'error',\n                    message: `Invalid IRI in predicate: ${iriErrors.join(', ')}`,\n                    triple\n                });\n            }\n        }\n\n        if (object instanceof IRI) {\n            const iriErrors = this.validateIRI(object.toString());\n            if (iriErrors.length > 0) {\n                errors.push({\n                    type: options.strictMode ? 'error' : 'warning',\n                    message: `Invalid IRI in object: ${iriErrors.join(', ')}`,\n                    triple\n                });\n            }\n        }\n\n        if (options.checkLiterals && object instanceof Literal) {\n            const literalErrors = this.validateLiteral(object);\n            errors.push(...literalErrors);\n        }\n\n        return errors;\n    }\n\n    validateIRI(iri: string): string[] {\n        const errors: string[] = [];\n\n        if (!iri || iri.trim() === '') {\n            errors.push('IRI cannot be empty');\n            return errors;\n        }\n\n        if (!/^[a-zA-Z][a-zA-Z0-9+.-]*:/.test(iri)) {\n            errors.push('IRI must start with a valid scheme');\n        }\n\n        const invalidChars = /[\\s<>\"{}|\\\\^`]/;\n        if (invalidChars.test(iri)) {\n            errors.push('IRI contains invalid characters');\n        }\n\n        if (iri.length > 2048) {\n            errors.push('IRI exceeds maximum length');\n        }\n\n        return errors;\n    }\n\n    validateLiteral(literal: Literal): ValidationError[] {\n        const errors: ValidationError[] = [];\n\n        const datatype = literal.getDatatype();\n        const language = literal.getLanguage();\n        const value = literal.getValue();\n\n        if (datatype) {\n            const datatypeErrors = this.validateIRI(datatype.toString());\n            if (datatypeErrors.length > 0) {\n                errors.push({\n                    type: 'warning',\n                    message: `Invalid datatype IRI: ${datatypeErrors.join(', ')}`\n                });\n            }\n\n            const isValid = this.validateLiteralValue(value, datatype.toString());\n            if (!isValid) {\n                errors.push({\n                    type: 'warning',\n                    message: `Literal value does not match declared datatype ${datatype.toString()}`\n                });\n            }\n        }\n\n        if (language) {\n            if (!/^[a-z]{2,3}(-[A-Z]{2})?$/.test(language)) {\n                errors.push({\n                    type: 'warning',\n                    message: `Invalid language tag: ${language}`\n                });\n            }\n        }\n\n        return errors;\n    }\n\n    private validateLiteralValue(value: string, datatypeIRI: string): boolean {\n        const xsdNamespace = 'http://www.w3.org/2001/XMLSchema#';\n        \n        if (datatypeIRI === `${xsdNamespace}integer`) {\n            return /^-?\\d+$/.test(value);\n        }\n        if (datatypeIRI === `${xsdNamespace}decimal`) {\n            return /^-?\\d+(\\.\\d+)?$/.test(value);\n        }\n        if (datatypeIRI === `${xsdNamespace}boolean`) {\n            return value === 'true' || value === 'false';\n        }\n        if (datatypeIRI === `${xsdNamespace}dateTime`) {\n            return /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/.test(value);\n        }\n        if (datatypeIRI === `${xsdNamespace}date`) {\n            return /^\\d{4}-\\d{2}-\\d{2}$/.test(value);\n        }\n        \n        return true;\n    }\n\n    validateExportOptions(options: any): Result<void> {\n        if (!options.format) {\n            return Result.fail('Export format is required');\n        }\n\n        const validFormats: RDFFormat[] = ['turtle', 'n-triples', 'json-ld', 'rdf-xml'];\n        if (!validFormats.includes(options.format)) {\n            return Result.fail(`Unsupported export format: ${options.format}`);\n        }\n\n        if (options.targetFolder && typeof options.targetFolder !== 'string') {\n            return Result.fail('Target folder must be a string');\n        }\n\n        if (options.fileName && typeof options.fileName !== 'string') {\n            return Result.fail('File name must be a string');\n        }\n\n        return Result.ok();\n    }\n\n    validateImportOptions(options: any): Result<void> {\n        if (!options.mergeMode) {\n            return Result.fail('Merge mode is required');\n        }\n\n        if (options.mergeMode !== 'merge' && options.mergeMode !== 'replace') {\n            return Result.fail(`Invalid merge mode: ${options.mergeMode}`);\n        }\n\n        if (options.format) {\n            const validFormats: RDFFormat[] = ['turtle', 'n-triples', 'json-ld', 'rdf-xml'];\n            if (!validFormats.includes(options.format)) {\n                return Result.fail(`Unsupported import format: ${options.format}`);\n            }\n        }\n\n        return Result.ok();\n    }\n\n    private getTripleKey(triple: Triple): string {\n        const subject = triple.getSubject();\n        const predicate = triple.getPredicate();\n        const object = triple.getObject();\n        \n        const subjectStr = subject instanceof IRI ? subject.toString() :\n                          subject instanceof BlankNode ? `_:${subject.toString()}` : '';\n        const predicateStr = predicate.toString();\n        const objectStr = object instanceof IRI ? object.toString() :\n                         object instanceof BlankNode ? `_:${object.toString()}` :\n                         object instanceof Literal ? `\"${object.toString()}\"` : '';\n        \n        return `${subjectStr}|${predicateStr}|${objectStr}`;\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "468d3307a2fc4ea693e031658fe82e9d80716ea8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1l8y2w5a93 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1l8y2w5a93();
cov_1l8y2w5a93().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1l8y2w5a93().s[1]++;
exports.RDFValidator = void 0;
const Result_1 =
/* istanbul ignore next */
(cov_1l8y2w5a93().s[2]++, require("../../domain/core/Result"));
const Triple_1 =
/* istanbul ignore next */
(cov_1l8y2w5a93().s[3]++, require("../../domain/semantic/core/Triple"));
class RDFValidator {
  constructor() {
    /* istanbul ignore next */
    cov_1l8y2w5a93().f[0]++;
  }
  validateGraph(graph, options =
  /* istanbul ignore next */
  (cov_1l8y2w5a93().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1l8y2w5a93().f[1]++;
    const errors =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[4]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[5]++, []);
    const stats =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[6]++, {
      tripleCount: 0,
      duplicateCount: 0,
      invalidIRICount: 0,
      invalidLiteralCount: 0
    });
    /* istanbul ignore next */
    cov_1l8y2w5a93().s[7]++;
    try {
      const triples =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[8]++, graph.toArray());
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[9]++;
      stats.tripleCount = triples.length;
      const seenTriples =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[10]++, new Set());
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[11]++;
      for (const triple of triples) {
        const validationErrors =
        /* istanbul ignore next */
        (cov_1l8y2w5a93().s[12]++, this.validateTriple(triple, options));
        /* istanbul ignore next */
        cov_1l8y2w5a93().s[13]++;
        errors.push(...validationErrors.filter(e => {
          /* istanbul ignore next */
          cov_1l8y2w5a93().f[2]++;
          cov_1l8y2w5a93().s[14]++;
          return e.type === 'error';
        }));
        /* istanbul ignore next */
        cov_1l8y2w5a93().s[15]++;
        warnings.push(...validationErrors.filter(e => {
          /* istanbul ignore next */
          cov_1l8y2w5a93().f[3]++;
          cov_1l8y2w5a93().s[16]++;
          return e.type === 'warning';
        }));
        /* istanbul ignore next */
        cov_1l8y2w5a93().s[17]++;
        if (validationErrors.some(e => {
          /* istanbul ignore next */
          cov_1l8y2w5a93().f[4]++;
          cov_1l8y2w5a93().s[18]++;
          return e.message.includes('Invalid IRI');
        })) {
          /* istanbul ignore next */
          cov_1l8y2w5a93().b[1][0]++;
          cov_1l8y2w5a93().s[19]++;
          stats.invalidIRICount++;
        } else
        /* istanbul ignore next */
        {
          cov_1l8y2w5a93().b[1][1]++;
        }
        cov_1l8y2w5a93().s[20]++;
        if (validationErrors.some(e => {
          /* istanbul ignore next */
          cov_1l8y2w5a93().f[5]++;
          cov_1l8y2w5a93().s[21]++;
          return e.message.includes('Invalid literal');
        })) {
          /* istanbul ignore next */
          cov_1l8y2w5a93().b[2][0]++;
          cov_1l8y2w5a93().s[22]++;
          stats.invalidLiteralCount++;
        } else
        /* istanbul ignore next */
        {
          cov_1l8y2w5a93().b[2][1]++;
        }
        cov_1l8y2w5a93().s[23]++;
        if (options.checkDuplicates) {
          /* istanbul ignore next */
          cov_1l8y2w5a93().b[3][0]++;
          const tripleKey =
          /* istanbul ignore next */
          (cov_1l8y2w5a93().s[24]++, this.getTripleKey(triple));
          /* istanbul ignore next */
          cov_1l8y2w5a93().s[25]++;
          if (seenTriples.has(tripleKey)) {
            /* istanbul ignore next */
            cov_1l8y2w5a93().b[4][0]++;
            cov_1l8y2w5a93().s[26]++;
            stats.duplicateCount++;
            /* istanbul ignore next */
            cov_1l8y2w5a93().s[27]++;
            warnings.push({
              type: 'warning',
              message: 'Duplicate triple detected',
              triple
            });
          } else {
            /* istanbul ignore next */
            cov_1l8y2w5a93().b[4][1]++;
            cov_1l8y2w5a93().s[28]++;
            seenTriples.add(tripleKey);
          }
        } else
        /* istanbul ignore next */
        {
          cov_1l8y2w5a93().b[3][1]++;
        }
      }
      const result =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[29]++, {
        isValid: errors.length === 0,
        errors,
        warnings,
        stats
      });
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[30]++;
      return Result_1.Result.ok(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[31]++;
      return Result_1.Result.fail(`Validation failed: ${error.message}`);
    }
  }
  validateTriple(triple, options =
  /* istanbul ignore next */
  (cov_1l8y2w5a93().b[5][0]++, {})) {
    /* istanbul ignore next */
    cov_1l8y2w5a93().f[6]++;
    const errors =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[32]++, []);
    const subject =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[33]++, triple.getSubject());
    const predicate =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[34]++, triple.getPredicate());
    const object =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[35]++, triple.getObject());
    /* istanbul ignore next */
    cov_1l8y2w5a93().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[7][0]++, !subject) ||
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[7][1]++, !predicate) ||
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[7][2]++, !object)) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[6][0]++;
      cov_1l8y2w5a93().s[37]++;
      errors.push({
        type: 'error',
        message: 'Triple is missing required components',
        triple
      });
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[38]++;
      return errors;
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[6][1]++;
    }
    cov_1l8y2w5a93().s[39]++;
    if (subject instanceof Triple_1.IRI) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[8][0]++;
      const iriErrors =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[40]++, this.validateIRI(subject.toString()));
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[41]++;
      if (iriErrors.length > 0) {
        /* istanbul ignore next */
        cov_1l8y2w5a93().b[9][0]++;
        cov_1l8y2w5a93().s[42]++;
        errors.push({
          type: options.strictMode ?
          /* istanbul ignore next */
          (cov_1l8y2w5a93().b[10][0]++, 'error') :
          /* istanbul ignore next */
          (cov_1l8y2w5a93().b[10][1]++, 'warning'),
          message: `Invalid IRI in subject: ${iriErrors.join(', ')}`,
          triple
        });
      } else
      /* istanbul ignore next */
      {
        cov_1l8y2w5a93().b[9][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[8][1]++;
    }
    cov_1l8y2w5a93().s[43]++;
    if (predicate instanceof Triple_1.IRI) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[11][0]++;
      const iriErrors =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[44]++, this.validateIRI(predicate.toString()));
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[45]++;
      if (iriErrors.length > 0) {
        /* istanbul ignore next */
        cov_1l8y2w5a93().b[12][0]++;
        cov_1l8y2w5a93().s[46]++;
        errors.push({
          type: 'error',
          message: `Invalid IRI in predicate: ${iriErrors.join(', ')}`,
          triple
        });
      } else
      /* istanbul ignore next */
      {
        cov_1l8y2w5a93().b[12][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[11][1]++;
    }
    cov_1l8y2w5a93().s[47]++;
    if (object instanceof Triple_1.IRI) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[13][0]++;
      const iriErrors =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[48]++, this.validateIRI(object.toString()));
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[49]++;
      if (iriErrors.length > 0) {
        /* istanbul ignore next */
        cov_1l8y2w5a93().b[14][0]++;
        cov_1l8y2w5a93().s[50]++;
        errors.push({
          type: options.strictMode ?
          /* istanbul ignore next */
          (cov_1l8y2w5a93().b[15][0]++, 'error') :
          /* istanbul ignore next */
          (cov_1l8y2w5a93().b[15][1]++, 'warning'),
          message: `Invalid IRI in object: ${iriErrors.join(', ')}`,
          triple
        });
      } else
      /* istanbul ignore next */
      {
        cov_1l8y2w5a93().b[14][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[13][1]++;
    }
    cov_1l8y2w5a93().s[51]++;
    if (
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[17][0]++, options.checkLiterals) &&
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[17][1]++, object instanceof Triple_1.Literal)) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[16][0]++;
      const literalErrors =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[52]++, this.validateLiteral(object));
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[53]++;
      errors.push(...literalErrors);
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[16][1]++;
    }
    cov_1l8y2w5a93().s[54]++;
    return errors;
  }
  validateIRI(iri) {
    /* istanbul ignore next */
    cov_1l8y2w5a93().f[7]++;
    const errors =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[55]++, []);
    /* istanbul ignore next */
    cov_1l8y2w5a93().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[19][0]++, !iri) ||
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[19][1]++, iri.trim() === '')) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[18][0]++;
      cov_1l8y2w5a93().s[57]++;
      errors.push('IRI cannot be empty');
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[58]++;
      return errors;
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[18][1]++;
    }
    cov_1l8y2w5a93().s[59]++;
    if (!/^[a-zA-Z][a-zA-Z0-9+.-]*:/.test(iri)) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[20][0]++;
      cov_1l8y2w5a93().s[60]++;
      errors.push('IRI must start with a valid scheme');
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[20][1]++;
    }
    const invalidChars =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[61]++, /[\s<>"{}|\\^`]/);
    /* istanbul ignore next */
    cov_1l8y2w5a93().s[62]++;
    if (invalidChars.test(iri)) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[21][0]++;
      cov_1l8y2w5a93().s[63]++;
      errors.push('IRI contains invalid characters');
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[21][1]++;
    }
    cov_1l8y2w5a93().s[64]++;
    if (iri.length > 2048) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[22][0]++;
      cov_1l8y2w5a93().s[65]++;
      errors.push('IRI exceeds maximum length');
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[22][1]++;
    }
    cov_1l8y2w5a93().s[66]++;
    return errors;
  }
  validateLiteral(literal) {
    /* istanbul ignore next */
    cov_1l8y2w5a93().f[8]++;
    const errors =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[67]++, []);
    const datatype =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[68]++, literal.getDatatype());
    const language =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[69]++, literal.getLanguage());
    const value =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[70]++, literal.getValue());
    /* istanbul ignore next */
    cov_1l8y2w5a93().s[71]++;
    if (datatype) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[23][0]++;
      const datatypeErrors =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[72]++, this.validateIRI(datatype.toString()));
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[73]++;
      if (datatypeErrors.length > 0) {
        /* istanbul ignore next */
        cov_1l8y2w5a93().b[24][0]++;
        cov_1l8y2w5a93().s[74]++;
        errors.push({
          type: 'warning',
          message: `Invalid datatype IRI: ${datatypeErrors.join(', ')}`
        });
      } else
      /* istanbul ignore next */
      {
        cov_1l8y2w5a93().b[24][1]++;
      }
      const isValid =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[75]++, this.validateLiteralValue(value, datatype.toString()));
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[76]++;
      if (!isValid) {
        /* istanbul ignore next */
        cov_1l8y2w5a93().b[25][0]++;
        cov_1l8y2w5a93().s[77]++;
        errors.push({
          type: 'warning',
          message: `Literal value does not match declared datatype ${datatype.toString()}`
        });
      } else
      /* istanbul ignore next */
      {
        cov_1l8y2w5a93().b[25][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[23][1]++;
    }
    cov_1l8y2w5a93().s[78]++;
    if (language) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[26][0]++;
      cov_1l8y2w5a93().s[79]++;
      if (!/^[a-z]{2,3}(-[A-Z]{2})?$/.test(language)) {
        /* istanbul ignore next */
        cov_1l8y2w5a93().b[27][0]++;
        cov_1l8y2w5a93().s[80]++;
        errors.push({
          type: 'warning',
          message: `Invalid language tag: ${language}`
        });
      } else
      /* istanbul ignore next */
      {
        cov_1l8y2w5a93().b[27][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[26][1]++;
    }
    cov_1l8y2w5a93().s[81]++;
    return errors;
  }
  validateLiteralValue(value, datatypeIRI) {
    /* istanbul ignore next */
    cov_1l8y2w5a93().f[9]++;
    const xsdNamespace =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[82]++, 'http://www.w3.org/2001/XMLSchema#');
    /* istanbul ignore next */
    cov_1l8y2w5a93().s[83]++;
    if (datatypeIRI === `${xsdNamespace}integer`) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[28][0]++;
      cov_1l8y2w5a93().s[84]++;
      return /^-?\d+$/.test(value);
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[28][1]++;
    }
    cov_1l8y2w5a93().s[85]++;
    if (datatypeIRI === `${xsdNamespace}decimal`) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[29][0]++;
      cov_1l8y2w5a93().s[86]++;
      return /^-?\d+(\.\d+)?$/.test(value);
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[29][1]++;
    }
    cov_1l8y2w5a93().s[87]++;
    if (datatypeIRI === `${xsdNamespace}boolean`) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[30][0]++;
      cov_1l8y2w5a93().s[88]++;
      return /* istanbul ignore next */(cov_1l8y2w5a93().b[31][0]++, value === 'true') ||
      /* istanbul ignore next */
      (cov_1l8y2w5a93().b[31][1]++, value === 'false');
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[30][1]++;
    }
    cov_1l8y2w5a93().s[89]++;
    if (datatypeIRI === `${xsdNamespace}dateTime`) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[32][0]++;
      cov_1l8y2w5a93().s[90]++;
      return /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}/.test(value);
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[32][1]++;
    }
    cov_1l8y2w5a93().s[91]++;
    if (datatypeIRI === `${xsdNamespace}date`) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[33][0]++;
      cov_1l8y2w5a93().s[92]++;
      return /^\d{4}-\d{2}-\d{2}$/.test(value);
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[33][1]++;
    }
    cov_1l8y2w5a93().s[93]++;
    return true;
  }
  validateExportOptions(options) {
    /* istanbul ignore next */
    cov_1l8y2w5a93().f[10]++;
    cov_1l8y2w5a93().s[94]++;
    if (!options.format) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[34][0]++;
      cov_1l8y2w5a93().s[95]++;
      return Result_1.Result.fail('Export format is required');
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[34][1]++;
    }
    const validFormats =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[96]++, ['turtle', 'n-triples', 'json-ld', 'rdf-xml']);
    /* istanbul ignore next */
    cov_1l8y2w5a93().s[97]++;
    if (!validFormats.includes(options.format)) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[35][0]++;
      cov_1l8y2w5a93().s[98]++;
      return Result_1.Result.fail(`Unsupported export format: ${options.format}`);
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[35][1]++;
    }
    cov_1l8y2w5a93().s[99]++;
    if (
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[37][0]++, options.targetFolder) &&
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[37][1]++, typeof options.targetFolder !== 'string')) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[36][0]++;
      cov_1l8y2w5a93().s[100]++;
      return Result_1.Result.fail('Target folder must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[36][1]++;
    }
    cov_1l8y2w5a93().s[101]++;
    if (
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[39][0]++, options.fileName) &&
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[39][1]++, typeof options.fileName !== 'string')) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[38][0]++;
      cov_1l8y2w5a93().s[102]++;
      return Result_1.Result.fail('File name must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[38][1]++;
    }
    cov_1l8y2w5a93().s[103]++;
    return Result_1.Result.ok();
  }
  validateImportOptions(options) {
    /* istanbul ignore next */
    cov_1l8y2w5a93().f[11]++;
    cov_1l8y2w5a93().s[104]++;
    if (!options.mergeMode) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[40][0]++;
      cov_1l8y2w5a93().s[105]++;
      return Result_1.Result.fail('Merge mode is required');
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[40][1]++;
    }
    cov_1l8y2w5a93().s[106]++;
    if (
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[42][0]++, options.mergeMode !== 'merge') &&
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[42][1]++, options.mergeMode !== 'replace')) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[41][0]++;
      cov_1l8y2w5a93().s[107]++;
      return Result_1.Result.fail(`Invalid merge mode: ${options.mergeMode}`);
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[41][1]++;
    }
    cov_1l8y2w5a93().s[108]++;
    if (options.format) {
      /* istanbul ignore next */
      cov_1l8y2w5a93().b[43][0]++;
      const validFormats =
      /* istanbul ignore next */
      (cov_1l8y2w5a93().s[109]++, ['turtle', 'n-triples', 'json-ld', 'rdf-xml']);
      /* istanbul ignore next */
      cov_1l8y2w5a93().s[110]++;
      if (!validFormats.includes(options.format)) {
        /* istanbul ignore next */
        cov_1l8y2w5a93().b[44][0]++;
        cov_1l8y2w5a93().s[111]++;
        return Result_1.Result.fail(`Unsupported import format: ${options.format}`);
      } else
      /* istanbul ignore next */
      {
        cov_1l8y2w5a93().b[44][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1l8y2w5a93().b[43][1]++;
    }
    cov_1l8y2w5a93().s[112]++;
    return Result_1.Result.ok();
  }
  getTripleKey(triple) {
    /* istanbul ignore next */
    cov_1l8y2w5a93().f[12]++;
    const subject =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[113]++, triple.getSubject());
    const predicate =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[114]++, triple.getPredicate());
    const object =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[115]++, triple.getObject());
    const subjectStr =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[116]++, subject instanceof Triple_1.IRI ?
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[45][0]++, subject.toString()) :
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[45][1]++, subject instanceof Triple_1.BlankNode ?
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[46][0]++, `_:${subject.toString()}`) :
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[46][1]++, '')));
    const predicateStr =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[117]++, predicate.toString());
    const objectStr =
    /* istanbul ignore next */
    (cov_1l8y2w5a93().s[118]++, object instanceof Triple_1.IRI ?
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[47][0]++, object.toString()) :
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[47][1]++, object instanceof Triple_1.BlankNode ?
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[48][0]++, `_:${object.toString()}`) :
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[48][1]++, object instanceof Triple_1.Literal ?
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[49][0]++, `"${object.toString()}"`) :
    /* istanbul ignore next */
    (cov_1l8y2w5a93().b[49][1]++, ''))));
    /* istanbul ignore next */
    cov_1l8y2w5a93().s[119]++;
    return `${subjectStr}|${predicateStr}|${objectStr}`;
  }
}
/* istanbul ignore next */
cov_1l8y2w5a93().s[120]++;
exports.RDFValidator = RDFValidator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,