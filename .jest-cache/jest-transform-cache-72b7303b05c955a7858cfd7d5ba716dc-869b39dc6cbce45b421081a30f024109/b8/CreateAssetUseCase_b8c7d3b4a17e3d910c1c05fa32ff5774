a45f8a2587a9b2858762fb19e15ec478
"use strict";

/* istanbul ignore next */
function cov_14cq0pimxl() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateAssetUseCase.ts";
  var hash = "5132b682409e14efb7a367f204d6e617eb0e79ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateAssetUseCase.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 54
        }
      },
      "4": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "5": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 67
        }
      },
      "6": {
        start: {
          line: 8,
          column: 25
        },
        end: {
          line: 8,
          column: 77
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 57,
          column: 11
        }
      },
      "10": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 42
        }
      },
      "11": {
        start: {
          line: 23,
          column: 41
        },
        end: {
          line: 23,
          column: 103
        }
      },
      "12": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 26,
          column: 13
        }
      },
      "13": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 60
        }
      },
      "14": {
        start: {
          line: 27,
          column: 35
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "15": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 87
        }
      },
      "16": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 31,
          column: 13
        }
      },
      "17": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 80
        }
      },
      "18": {
        start: {
          line: 33,
          column: 36
        },
        end: {
          line: 33,
          column: 83
        }
      },
      "19": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 36,
          column: 13
        }
      },
      "20": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 55
        }
      },
      "21": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 37,
          column: 56
        }
      },
      "22": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 45,
          column: 14
        }
      },
      "23": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "24": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 51
        }
      },
      "25": {
        start: {
          line: 49,
          column: 26
        },
        end: {
          line: 49,
          column: 48
        }
      },
      "26": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 51
        }
      },
      "27": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 14
        }
      },
      "28": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "29": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 55
        }
      },
      "30": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "31": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 55
        }
      },
      "32": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "33": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "34": {
        start: {
          line: 71,
          column: 0
        },
        end: {
          line: 71,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 53
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 55
          },
          end: {
            line: 19,
            column: 56
          }
        },
        loc: {
          start: {
            line: 19,
            column: 68
          },
          end: {
            line: 57,
            column: 9
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 29
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 59
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 26,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 26,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 36,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 36,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 46
          }
        }, {
          start: {
            line: 44,
            column: 50
          },
          end: {
            line: 44,
            column: 52
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 26
          }
        }, {
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 60,
            column: 63
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateAssetUseCase.ts",
      mappings: ";;;;AAAA,uDAAoD;AACpD,gEAA6D;AAC7D,oEAAiE;AACjE,8EAA2E;AAI3E;;;GAGG;AACH,MAAa,kBAAkB;IAC7B,YACmB,eAAiC,EACjC,kBAAuC;QADvC,oBAAe,GAAf,eAAe,CAAkB;QACjC,uBAAkB,GAAlB,kBAAkB,CAAqB;IACvD,CAAC;IAEE,OAAO,CAAC,OAA2B;;YACvC,uBAAuB;YACvB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAE9B,yBAAyB;YACzB,MAAM,oBAAoB,GAAG,+BAAc,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC3E,IAAI,oBAAoB,CAAC,SAAS,EAAE;gBAClC,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;aAC7C;YACD,MAAM,cAAc,GAAG,oBAAoB,CAAC,QAAQ,EAAE,CAAC;YAEvD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;YAC5E,IAAI,CAAC,QAAQ,EAAE;gBACb,MAAM,IAAI,KAAK,CAAC,YAAY,OAAO,CAAC,cAAc,YAAY,CAAC,CAAC;aACjE;YAED,oBAAoB;YACpB,MAAM,eAAe,GAAG,qBAAS,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,eAAe,CAAC,SAAS,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aACxC;YACD,MAAM,SAAS,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAE7C,mBAAmB;YACnB,MAAM,WAAW,GAAG,aAAK,CAAC,MAAM,CAAC;gBAC/B,EAAE,EAAE,iBAAO,CAAC,QAAQ,EAAE;gBACtB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,SAAS,EAAE,SAAS;gBACpB,QAAQ,EAAE,cAAc;gBACxB,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,EAAE;aACrC,CAAC,CAAC;YAEH,IAAI,WAAW,CAAC,SAAS,EAAE;gBACzB,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACpC;YACD,MAAM,KAAK,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;YAErC,iBAAiB;YACjB,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEvC,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;gBACjC,OAAO,EAAE,kBAAkB,KAAK,CAAC,QAAQ,EAAE,EAAE;aAC9C,CAAC;QACJ,CAAC;KAAA;IAEO,eAAe,CAAC,OAA2B;QACjD,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;YACvD,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC5C;QAED,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC5C;QAED,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAChD;IACH,CAAC;CACF;AAlED,gDAkEC",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateAssetUseCase.ts"],
      sourcesContent: ["import { Asset } from '../../domain/entities/Asset';\nimport { AssetId } from '../../domain/value-objects/AssetId';\nimport { ClassName } from '../../domain/value-objects/ClassName';\nimport { OntologyPrefix } from '../../domain/value-objects/OntologyPrefix';\nimport { IAssetRepository } from '../../domain/repositories/IAssetRepository';\nimport { IOntologyRepository } from '../../domain/repositories/IOntologyRepository';\n\n/**\n * Use case for creating a new asset\n * Orchestrates the asset creation process\n */\nexport class CreateAssetUseCase {\n  constructor(\n    private readonly assetRepository: IAssetRepository,\n    private readonly ontologyRepository: IOntologyRepository\n  ) {}\n\n  async execute(request: CreateAssetRequest): Promise<CreateAssetResponse> {\n    // Validate the request\n    this.validateRequest(request);\n\n    // Verify ontology exists\n    const ontologyPrefixResult = OntologyPrefix.create(request.ontologyPrefix);\n    if (ontologyPrefixResult.isFailure) {\n      throw new Error(ontologyPrefixResult.error);\n    }\n    const ontologyPrefix = ontologyPrefixResult.getValue();\n    \n    const ontology = await this.ontologyRepository.findByPrefix(ontologyPrefix);\n    if (!ontology) {\n      throw new Error(`Ontology ${request.ontologyPrefix} not found`);\n    }\n\n    // Create class name\n    const classNameResult = ClassName.create(request.className);\n    if (classNameResult.isFailure) {\n      throw new Error(classNameResult.error);\n    }\n    const className = classNameResult.getValue();\n\n    // Create the asset\n    const assetResult = Asset.create({\n      id: AssetId.generate(),\n      label: request.title,\n      className: className,\n      ontology: ontologyPrefix,\n      properties: request.properties || {}\n    });\n    \n    if (assetResult.isFailure) {\n      throw new Error(assetResult.error);\n    }\n    const asset = assetResult.getValue();\n\n    // Save the asset\n    await this.assetRepository.save(asset);\n\n    return {\n      success: true,\n      assetId: asset.getId().toString(),\n      message: `Created asset: ${asset.getTitle()}`\n    };\n  }\n\n  private validateRequest(request: CreateAssetRequest): void {\n    if (!request.title || request.title.trim().length === 0) {\n      throw new Error('Asset title is required');\n    }\n\n    if (!request.className) {\n      throw new Error('Asset class is required');\n    }\n\n    if (!request.ontologyPrefix) {\n      throw new Error('Ontology prefix is required');\n    }\n  }\n}\n\nexport interface CreateAssetRequest {\n  title: string;\n  className: string;\n  ontologyPrefix: string;\n  properties?: Record<string, any>;\n}\n\nexport interface CreateAssetResponse {\n  success: boolean;\n  assetId: string;\n  message: string;\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5132b682409e14efb7a367f204d6e617eb0e79ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14cq0pimxl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14cq0pimxl();
cov_14cq0pimxl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_14cq0pimxl().s[1]++;
exports.CreateAssetUseCase = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_14cq0pimxl().s[2]++, require("tslib"));
const Asset_1 =
/* istanbul ignore next */
(cov_14cq0pimxl().s[3]++, require("../../domain/entities/Asset"));
const AssetId_1 =
/* istanbul ignore next */
(cov_14cq0pimxl().s[4]++, require("../../domain/value-objects/AssetId"));
const ClassName_1 =
/* istanbul ignore next */
(cov_14cq0pimxl().s[5]++, require("../../domain/value-objects/ClassName"));
const OntologyPrefix_1 =
/* istanbul ignore next */
(cov_14cq0pimxl().s[6]++, require("../../domain/value-objects/OntologyPrefix"));
/**
 * Use case for creating a new asset
 * Orchestrates the asset creation process
 */
class CreateAssetUseCase {
  constructor(assetRepository, ontologyRepository) {
    /* istanbul ignore next */
    cov_14cq0pimxl().f[0]++;
    cov_14cq0pimxl().s[7]++;
    this.assetRepository = assetRepository;
    /* istanbul ignore next */
    cov_14cq0pimxl().s[8]++;
    this.ontologyRepository = ontologyRepository;
  }
  execute(request) {
    /* istanbul ignore next */
    cov_14cq0pimxl().f[1]++;
    cov_14cq0pimxl().s[9]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_14cq0pimxl().f[2]++;
      cov_14cq0pimxl().s[10]++;
      // Validate the request
      this.validateRequest(request);
      // Verify ontology exists
      const ontologyPrefixResult =
      /* istanbul ignore next */
      (cov_14cq0pimxl().s[11]++, OntologyPrefix_1.OntologyPrefix.create(request.ontologyPrefix));
      /* istanbul ignore next */
      cov_14cq0pimxl().s[12]++;
      if (ontologyPrefixResult.isFailure) {
        /* istanbul ignore next */
        cov_14cq0pimxl().b[0][0]++;
        cov_14cq0pimxl().s[13]++;
        throw new Error(ontologyPrefixResult.error);
      } else
      /* istanbul ignore next */
      {
        cov_14cq0pimxl().b[0][1]++;
      }
      const ontologyPrefix =
      /* istanbul ignore next */
      (cov_14cq0pimxl().s[14]++, ontologyPrefixResult.getValue());
      const ontology =
      /* istanbul ignore next */
      (cov_14cq0pimxl().s[15]++, yield this.ontologyRepository.findByPrefix(ontologyPrefix));
      /* istanbul ignore next */
      cov_14cq0pimxl().s[16]++;
      if (!ontology) {
        /* istanbul ignore next */
        cov_14cq0pimxl().b[1][0]++;
        cov_14cq0pimxl().s[17]++;
        throw new Error(`Ontology ${request.ontologyPrefix} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_14cq0pimxl().b[1][1]++;
      }
      // Create class name
      const classNameResult =
      /* istanbul ignore next */
      (cov_14cq0pimxl().s[18]++, ClassName_1.ClassName.create(request.className));
      /* istanbul ignore next */
      cov_14cq0pimxl().s[19]++;
      if (classNameResult.isFailure) {
        /* istanbul ignore next */
        cov_14cq0pimxl().b[2][0]++;
        cov_14cq0pimxl().s[20]++;
        throw new Error(classNameResult.error);
      } else
      /* istanbul ignore next */
      {
        cov_14cq0pimxl().b[2][1]++;
      }
      const className =
      /* istanbul ignore next */
      (cov_14cq0pimxl().s[21]++, classNameResult.getValue());
      // Create the asset
      const assetResult =
      /* istanbul ignore next */
      (cov_14cq0pimxl().s[22]++, Asset_1.Asset.create({
        id: AssetId_1.AssetId.generate(),
        label: request.title,
        className: className,
        ontology: ontologyPrefix,
        properties:
        /* istanbul ignore next */
        (cov_14cq0pimxl().b[3][0]++, request.properties) ||
        /* istanbul ignore next */
        (cov_14cq0pimxl().b[3][1]++, {})
      }));
      /* istanbul ignore next */
      cov_14cq0pimxl().s[23]++;
      if (assetResult.isFailure) {
        /* istanbul ignore next */
        cov_14cq0pimxl().b[4][0]++;
        cov_14cq0pimxl().s[24]++;
        throw new Error(assetResult.error);
      } else
      /* istanbul ignore next */
      {
        cov_14cq0pimxl().b[4][1]++;
      }
      const asset =
      /* istanbul ignore next */
      (cov_14cq0pimxl().s[25]++, assetResult.getValue());
      // Save the asset
      /* istanbul ignore next */
      cov_14cq0pimxl().s[26]++;
      yield this.assetRepository.save(asset);
      /* istanbul ignore next */
      cov_14cq0pimxl().s[27]++;
      return {
        success: true,
        assetId: asset.getId().toString(),
        message: `Created asset: ${asset.getTitle()}`
      };
    });
  }
  validateRequest(request) {
    /* istanbul ignore next */
    cov_14cq0pimxl().f[3]++;
    cov_14cq0pimxl().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_14cq0pimxl().b[6][0]++, !request.title) ||
    /* istanbul ignore next */
    (cov_14cq0pimxl().b[6][1]++, request.title.trim().length === 0)) {
      /* istanbul ignore next */
      cov_14cq0pimxl().b[5][0]++;
      cov_14cq0pimxl().s[29]++;
      throw new Error('Asset title is required');
    } else
    /* istanbul ignore next */
    {
      cov_14cq0pimxl().b[5][1]++;
    }
    cov_14cq0pimxl().s[30]++;
    if (!request.className) {
      /* istanbul ignore next */
      cov_14cq0pimxl().b[7][0]++;
      cov_14cq0pimxl().s[31]++;
      throw new Error('Asset class is required');
    } else
    /* istanbul ignore next */
    {
      cov_14cq0pimxl().b[7][1]++;
    }
    cov_14cq0pimxl().s[32]++;
    if (!request.ontologyPrefix) {
      /* istanbul ignore next */
      cov_14cq0pimxl().b[8][0]++;
      cov_14cq0pimxl().s[33]++;
      throw new Error('Ontology prefix is required');
    } else
    /* istanbul ignore next */
    {
      cov_14cq0pimxl().b[8][1]++;
    }
  }
}
/* istanbul ignore next */
cov_14cq0pimxl().s[34]++;
exports.CreateAssetUseCase = CreateAssetUseCase;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,