0d29e6e4e7de5c58a2dbc678f431efaf
"use strict";

/**
 * Namespace Manager for handling RDF namespace prefixes and URI expansion
 * Manages common RDF vocabularies and custom namespace prefixes
 */
/* istanbul ignore next */
function cov_19syh86yzu() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/NamespaceManager.ts";
  var hash = "707e781483c0d95a5dca4d112376a3c6acc922e6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/NamespaceManager.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 34
        }
      },
      "2": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 61
        }
      },
      "3": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 43
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 78
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 73
        }
      },
      "9": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 65
        }
      },
      "10": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 68
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 64
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 72
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 60
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 70
        }
      },
      "17": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 69
        }
      },
      "18": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 54
        }
      },
      "19": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "20": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 51
        }
      },
      "21": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "22": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 56
        }
      },
      "23": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 85
        }
      },
      "24": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 51,
          column: 51
        }
      },
      "25": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "26": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 41
        }
      },
      "27": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 62
        }
      },
      "28": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 41
        }
      },
      "29": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 51
        }
      },
      "30": {
        start: {
          line: 73,
          column: 27
        },
        end: {
          line: 73,
          column: 45
        }
      },
      "31": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "32": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 74
        }
      },
      "33": {
        start: {
          line: 77,
          column: 23
        },
        end: {
          line: 77,
          column: 53
        }
      },
      "34": {
        start: {
          line: 78,
          column: 26
        },
        end: {
          line: 78,
          column: 57
        }
      },
      "35": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 79,
          column: 51
        }
      },
      "36": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "37": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 69
        }
      },
      "38": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "39": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 84,
          column: 78
        }
      },
      "40": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 47
        }
      },
      "41": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 82
        }
      },
      "42": {
        start: {
          line: 95,
          column: 26
        },
        end: {
          line: 95,
          column: 40
        }
      },
      "43": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "44": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "45": {
        start: {
          line: 99,
          column: 34
        },
        end: {
          line: 99,
          column: 71
        }
      },
      "46": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 103,
          column: 17
        }
      },
      "47": {
        start: {
          line: 102,
          column: 20
        },
        end: {
          line: 102,
          column: 52
        }
      },
      "48": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 32
        }
      },
      "49": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 59
        }
      },
      "50": {
        start: {
          line: 121,
          column: 22
        },
        end: {
          line: 121,
          column: 41
        }
      },
      "51": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "52": {
        start: {
          line: 123,
          column: 28
        },
        end: {
          line: 123,
          column: 39
        }
      },
      "53": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "54": {
        start: {
          line: 126,
          column: 36
        },
        end: {
          line: 126,
          column: 91
        }
      },
      "55": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 131,
          column: 17
        }
      },
      "56": {
        start: {
          line: 128,
          column: 50
        },
        end: {
          line: 128,
          column: 61
        }
      },
      "57": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 129,
          column: 55
        }
      },
      "58": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 130,
          column: 29
        }
      },
      "59": {
        start: {
          line: 133,
          column: 42
        },
        end: {
          line: 133,
          column: 91
        }
      },
      "60": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 137,
          column: 17
        }
      },
      "61": {
        start: {
          line: 135,
          column: 50
        },
        end: {
          line: 135,
          column: 67
        }
      },
      "62": {
        start: {
          line: 136,
          column: 20
        },
        end: {
          line: 136,
          column: 55
        }
      },
      "63": {
        start: {
          line: 145,
          column: 29
        },
        end: {
          line: 145,
          column: 31
        }
      },
      "64": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "65": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "66": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 88
        }
      },
      "67": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 151,
          column: 26
        }
      },
      "68": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 153,
          column: 85
        }
      },
      "69": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 26
        }
      },
      "70": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 39
        }
      },
      "71": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 166,
          column: 12
        }
      },
      "72": {
        start: {
          line: 163,
          column: 81
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "73": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 30
        }
      },
      "74": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 37
        }
      },
      "75": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 43
        }
      },
      "76": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 41
        }
      },
      "77": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 51
        }
      },
      "78": {
        start: {
          line: 192,
          column: 22
        },
        end: {
          line: 192,
          column: 44
        }
      },
      "79": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 36
        }
      },
      "80": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "81": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 59
        }
      },
      "82": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 21
        }
      },
      "83": {
        start: {
          line: 200,
          column: 0
        },
        end: {
          line: 200,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 26
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 25
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 60
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 72
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 94
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 32
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 112
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 37
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 120
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 39
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 144
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 21
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 162
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 163,
            column: 55
          },
          end: {
            line: 163,
            column: 56
          }
        },
        loc: {
          start: {
            line: 163,
            column: 81
          },
          end: {
            line: 166,
            column: 9
          }
        },
        line: 163
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 26
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 171
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 22
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 179
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 28
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 185
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 191
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "2": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "3": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "4": {
        loc: {
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 103,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 103,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "5": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "6": {
        loc: {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 124,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 124,
            column: 35
          }
        }, {
          start: {
            line: 124,
            column: 39
          },
          end: {
            line: 124,
            column: 54
          }
        }],
        line: 124
      },
      "7": {
        loc: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "8": {
        loc: {
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "9": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 148,
            column: 30
          }
        }, {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 151,
            column: 26
          }
        }, {
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 154,
            column: 26
          }
        }],
        line: 147
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/NamespaceManager.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/NamespaceManager.ts"],
      sourcesContent: ["/**\n * Namespace Manager for handling RDF namespace prefixes and URI expansion\n * Manages common RDF vocabularies and custom namespace prefixes\n */\n\nimport { IRI } from '../../domain/semantic/core/Triple';\nimport { Result } from '../../domain/core/Result';\n\nexport interface NamespaceBinding {\n    prefix: string;\n    namespace: IRI;\n}\n\nexport class NamespaceManager {\n    private bindings: Map<string, IRI> = new Map();\n    private reverseBindings: Map<string, string> = new Map();\n    \n    constructor() {\n        this.initializeDefaultNamespaces();\n    }\n    \n    /**\n     * Initialize common RDF namespace prefixes\n     */\n    private initializeDefaultNamespaces(): void {\n        this.addBinding('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n        this.addBinding('rdfs', 'http://www.w3.org/2000/01/rdf-schema#');\n        this.addBinding('owl', 'http://www.w3.org/2002/07/owl#');\n        this.addBinding('xsd', 'http://www.w3.org/2001/XMLSchema#');\n        this.addBinding('dc', 'http://purl.org/dc/elements/1.1/');\n        this.addBinding('dcterms', 'http://purl.org/dc/terms/');\n        this.addBinding('foaf', 'http://xmlns.com/foaf/0.1/');\n        this.addBinding('skos', 'http://www.w3.org/2004/02/skos/core#');\n        this.addBinding('void', 'http://rdfs.org/ns/void#');\n        \n        // Exocortex namespaces\n        this.addBinding('exo', 'https://exocortex.io/ontology/core#');\n        this.addBinding('ems', 'https://exocortex.io/ontology/ems#');\n        this.addBinding('vault', 'obsidian://vault/');\n    }\n    \n    /**\n     * Add a namespace binding\n     */\n    addBinding(prefix: string, namespace: string): void {\n        try {\n            const iri = new IRI(namespace);\n            this.bindings.set(prefix, iri);\n            this.reverseBindings.set(namespace, prefix);\n        } catch (error) {\n            console.warn(`Invalid namespace URI for prefix ${prefix}: ${namespace}`);\n        }\n    }\n    \n    /**\n     * Remove a namespace binding\n     */\n    removeBinding(prefix: string): void {\n        const namespace = this.bindings.get(prefix);\n        if (namespace) {\n            this.bindings.delete(prefix);\n            this.reverseBindings.delete(namespace.toString());\n        }\n    }\n    \n    /**\n     * Get namespace URI for a prefix\n     */\n    getNamespace(prefix: string): IRI | undefined {\n        return this.bindings.get(prefix);\n    }\n    \n    /**\n     * Get prefix for a namespace URI\n     */\n    getPrefix(namespace: string): string | undefined {\n        return this.reverseBindings.get(namespace);\n    }\n    \n    /**\n     * Expand a CURIE (Compact URI) to full IRI\n     */\n    expandCURIE(curie: string): Result<IRI> {\n        const colonIndex = curie.indexOf(':');\n        if (colonIndex === -1) {\n            return Result.fail(`Invalid CURIE format: ${curie}`);\n        }\n        \n        const prefix = curie.substring(0, colonIndex);\n        const localName = curie.substring(colonIndex + 1);\n        \n        const namespace = this.bindings.get(prefix);\n        if (!namespace) {\n            return Result.fail(`Unknown prefix: ${prefix}`);\n        }\n        \n        try {\n            const fullIRI = new IRI(namespace.toString() + localName);\n            return Result.ok(fullIRI);\n        } catch (error) {\n            return Result.fail(`Invalid expanded IRI: ${error.message}`);\n        }\n    }\n    \n    /**\n     * Compress a full IRI to CURIE if possible\n     */\n    compressIRI(iri: IRI): string {\n        const iriString = iri.toString();\n        \n        // Try to find a matching namespace\n        for (const [namespace, prefix] of this.reverseBindings) {\n            if (iriString.startsWith(namespace)) {\n                const localName = iriString.substring(namespace.length);\n                // Only compress if the local name is valid\n                if (this.isValidLocalName(localName)) {\n                    return `${prefix}:${localName}`;\n                }\n            }\n        }\n        \n        // Return full IRI if no compression possible\n        return `<${iriString}>`;\n    }\n    \n    /**\n     * Check if a local name is valid for CURIE compression\n     */\n    private isValidLocalName(localName: string): boolean {\n        // Basic validation - should start with letter or underscore\n        // and contain only alphanumeric characters, hyphens, underscores\n        return /^[a-zA-Z_][a-zA-Z0-9_-]*$/.test(localName);\n    }\n    \n    /**\n     * Parse and add namespace prefixes from RDF content\n     */\n    parseNamespaces(content: string, format: 'turtle' | 'n3'): void {\n        const lines = content.split('\\n');\n        \n        for (const line of lines) {\n            const trimmed = line.trim();\n            \n            if (format === 'turtle' || format === 'n3') {\n                // Parse @prefix declarations\n                const prefixMatch = trimmed.match(/^@prefix\\s+(\\w+):\\s+<([^>]+)>\\s*\\.\\s*$/);\n                if (prefixMatch) {\n                    const [, prefix, namespace] = prefixMatch;\n                    this.addBinding(prefix, namespace);\n                    continue;\n                }\n                \n                // Parse PREFIX declarations (SPARQL style)\n                const sparqlPrefixMatch = trimmed.match(/^PREFIX\\s+(\\w+):\\s+<([^>]+)>\\s*$/);\n                if (sparqlPrefixMatch) {\n                    const [, prefix, namespace] = sparqlPrefixMatch;\n                    this.addBinding(prefix, namespace);\n                }\n            }\n        }\n    }\n    \n    /**\n     * Generate namespace prefix declarations for a format\n     */\n    generatePrefixDeclarations(format: 'turtle' | 'n3' | 'sparql'): string {\n        const declarations: string[] = [];\n        \n        for (const [prefix, namespace] of this.bindings) {\n            switch (format) {\n                case 'turtle':\n                case 'n3':\n                    declarations.push(`@prefix ${prefix}: <${namespace.toString()}> .`);\n                    break;\n                case 'sparql':\n                    declarations.push(`PREFIX ${prefix}: <${namespace.toString()}>`);\n                    break;\n            }\n        }\n        \n        return declarations.join('\\n');\n    }\n    \n    /**\n     * Get all namespace bindings\n     */\n    getAllBindings(): NamespaceBinding[] {\n        return Array.from(this.bindings.entries()).map(([prefix, namespace]) => ({\n            prefix,\n            namespace\n        }));\n    }\n    \n    /**\n     * Clear all custom bindings (keeps default ones)\n     */\n    clearCustomBindings(): void {\n        this.bindings.clear();\n        this.reverseBindings.clear();\n        this.initializeDefaultNamespaces();\n    }\n    \n    /**\n     * Check if a prefix exists\n     */\n    hasPrefix(prefix: string): boolean {\n        return this.bindings.has(prefix);\n    }\n    \n    /**\n     * Check if a namespace exists\n     */\n    hasNamespace(namespace: string): boolean {\n        return this.reverseBindings.has(namespace);\n    }\n    \n    /**\n     * Create a copy of the namespace manager\n     */\n    clone(): NamespaceManager {\n        const clone = new NamespaceManager();\n        clone.clearCustomBindings();\n        \n        for (const [prefix, namespace] of this.bindings) {\n            clone.addBinding(prefix, namespace.toString());\n        }\n        \n        return clone;\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "707e781483c0d95a5dca4d112376a3c6acc922e6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19syh86yzu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19syh86yzu();
cov_19syh86yzu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_19syh86yzu().s[1]++;
exports.NamespaceManager = void 0;
const Triple_1 =
/* istanbul ignore next */
(cov_19syh86yzu().s[2]++, require("../../domain/semantic/core/Triple"));
const Result_1 =
/* istanbul ignore next */
(cov_19syh86yzu().s[3]++, require("../../domain/core/Result"));
class NamespaceManager {
  constructor() {
    /* istanbul ignore next */
    cov_19syh86yzu().f[0]++;
    cov_19syh86yzu().s[4]++;
    this.bindings = new Map();
    /* istanbul ignore next */
    cov_19syh86yzu().s[5]++;
    this.reverseBindings = new Map();
    /* istanbul ignore next */
    cov_19syh86yzu().s[6]++;
    this.initializeDefaultNamespaces();
  }
  /**
   * Initialize common RDF namespace prefixes
   */
  initializeDefaultNamespaces() {
    /* istanbul ignore next */
    cov_19syh86yzu().f[1]++;
    cov_19syh86yzu().s[7]++;
    this.addBinding('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#');
    /* istanbul ignore next */
    cov_19syh86yzu().s[8]++;
    this.addBinding('rdfs', 'http://www.w3.org/2000/01/rdf-schema#');
    /* istanbul ignore next */
    cov_19syh86yzu().s[9]++;
    this.addBinding('owl', 'http://www.w3.org/2002/07/owl#');
    /* istanbul ignore next */
    cov_19syh86yzu().s[10]++;
    this.addBinding('xsd', 'http://www.w3.org/2001/XMLSchema#');
    /* istanbul ignore next */
    cov_19syh86yzu().s[11]++;
    this.addBinding('dc', 'http://purl.org/dc/elements/1.1/');
    /* istanbul ignore next */
    cov_19syh86yzu().s[12]++;
    this.addBinding('dcterms', 'http://purl.org/dc/terms/');
    /* istanbul ignore next */
    cov_19syh86yzu().s[13]++;
    this.addBinding('foaf', 'http://xmlns.com/foaf/0.1/');
    /* istanbul ignore next */
    cov_19syh86yzu().s[14]++;
    this.addBinding('skos', 'http://www.w3.org/2004/02/skos/core#');
    /* istanbul ignore next */
    cov_19syh86yzu().s[15]++;
    this.addBinding('void', 'http://rdfs.org/ns/void#');
    // Exocortex namespaces
    /* istanbul ignore next */
    cov_19syh86yzu().s[16]++;
    this.addBinding('exo', 'https://exocortex.io/ontology/core#');
    /* istanbul ignore next */
    cov_19syh86yzu().s[17]++;
    this.addBinding('ems', 'https://exocortex.io/ontology/ems#');
    /* istanbul ignore next */
    cov_19syh86yzu().s[18]++;
    this.addBinding('vault', 'obsidian://vault/');
  }
  /**
   * Add a namespace binding
   */
  addBinding(prefix, namespace) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[2]++;
    cov_19syh86yzu().s[19]++;
    try {
      const iri =
      /* istanbul ignore next */
      (cov_19syh86yzu().s[20]++, new Triple_1.IRI(namespace));
      /* istanbul ignore next */
      cov_19syh86yzu().s[21]++;
      this.bindings.set(prefix, iri);
      /* istanbul ignore next */
      cov_19syh86yzu().s[22]++;
      this.reverseBindings.set(namespace, prefix);
    } catch (error) {
      /* istanbul ignore next */
      cov_19syh86yzu().s[23]++;
      console.warn(`Invalid namespace URI for prefix ${prefix}: ${namespace}`);
    }
  }
  /**
   * Remove a namespace binding
   */
  removeBinding(prefix) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[3]++;
    const namespace =
    /* istanbul ignore next */
    (cov_19syh86yzu().s[24]++, this.bindings.get(prefix));
    /* istanbul ignore next */
    cov_19syh86yzu().s[25]++;
    if (namespace) {
      /* istanbul ignore next */
      cov_19syh86yzu().b[0][0]++;
      cov_19syh86yzu().s[26]++;
      this.bindings.delete(prefix);
      /* istanbul ignore next */
      cov_19syh86yzu().s[27]++;
      this.reverseBindings.delete(namespace.toString());
    } else
    /* istanbul ignore next */
    {
      cov_19syh86yzu().b[0][1]++;
    }
  }
  /**
   * Get namespace URI for a prefix
   */
  getNamespace(prefix) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[4]++;
    cov_19syh86yzu().s[28]++;
    return this.bindings.get(prefix);
  }
  /**
   * Get prefix for a namespace URI
   */
  getPrefix(namespace) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[5]++;
    cov_19syh86yzu().s[29]++;
    return this.reverseBindings.get(namespace);
  }
  /**
   * Expand a CURIE (Compact URI) to full IRI
   */
  expandCURIE(curie) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[6]++;
    const colonIndex =
    /* istanbul ignore next */
    (cov_19syh86yzu().s[30]++, curie.indexOf(':'));
    /* istanbul ignore next */
    cov_19syh86yzu().s[31]++;
    if (colonIndex === -1) {
      /* istanbul ignore next */
      cov_19syh86yzu().b[1][0]++;
      cov_19syh86yzu().s[32]++;
      return Result_1.Result.fail(`Invalid CURIE format: ${curie}`);
    } else
    /* istanbul ignore next */
    {
      cov_19syh86yzu().b[1][1]++;
    }
    const prefix =
    /* istanbul ignore next */
    (cov_19syh86yzu().s[33]++, curie.substring(0, colonIndex));
    const localName =
    /* istanbul ignore next */
    (cov_19syh86yzu().s[34]++, curie.substring(colonIndex + 1));
    const namespace =
    /* istanbul ignore next */
    (cov_19syh86yzu().s[35]++, this.bindings.get(prefix));
    /* istanbul ignore next */
    cov_19syh86yzu().s[36]++;
    if (!namespace) {
      /* istanbul ignore next */
      cov_19syh86yzu().b[2][0]++;
      cov_19syh86yzu().s[37]++;
      return Result_1.Result.fail(`Unknown prefix: ${prefix}`);
    } else
    /* istanbul ignore next */
    {
      cov_19syh86yzu().b[2][1]++;
    }
    cov_19syh86yzu().s[38]++;
    try {
      const fullIRI =
      /* istanbul ignore next */
      (cov_19syh86yzu().s[39]++, new Triple_1.IRI(namespace.toString() + localName));
      /* istanbul ignore next */
      cov_19syh86yzu().s[40]++;
      return Result_1.Result.ok(fullIRI);
    } catch (error) {
      /* istanbul ignore next */
      cov_19syh86yzu().s[41]++;
      return Result_1.Result.fail(`Invalid expanded IRI: ${error.message}`);
    }
  }
  /**
   * Compress a full IRI to CURIE if possible
   */
  compressIRI(iri) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[7]++;
    const iriString =
    /* istanbul ignore next */
    (cov_19syh86yzu().s[42]++, iri.toString());
    // Try to find a matching namespace
    /* istanbul ignore next */
    cov_19syh86yzu().s[43]++;
    for (const [namespace, prefix] of this.reverseBindings) {
      /* istanbul ignore next */
      cov_19syh86yzu().s[44]++;
      if (iriString.startsWith(namespace)) {
        /* istanbul ignore next */
        cov_19syh86yzu().b[3][0]++;
        const localName =
        /* istanbul ignore next */
        (cov_19syh86yzu().s[45]++, iriString.substring(namespace.length));
        // Only compress if the local name is valid
        /* istanbul ignore next */
        cov_19syh86yzu().s[46]++;
        if (this.isValidLocalName(localName)) {
          /* istanbul ignore next */
          cov_19syh86yzu().b[4][0]++;
          cov_19syh86yzu().s[47]++;
          return `${prefix}:${localName}`;
        } else
        /* istanbul ignore next */
        {
          cov_19syh86yzu().b[4][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_19syh86yzu().b[3][1]++;
      }
    }
    // Return full IRI if no compression possible
    /* istanbul ignore next */
    cov_19syh86yzu().s[48]++;
    return `<${iriString}>`;
  }
  /**
   * Check if a local name is valid for CURIE compression
   */
  isValidLocalName(localName) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[8]++;
    cov_19syh86yzu().s[49]++;
    // Basic validation - should start with letter or underscore
    // and contain only alphanumeric characters, hyphens, underscores
    return /^[a-zA-Z_][a-zA-Z0-9_-]*$/.test(localName);
  }
  /**
   * Parse and add namespace prefixes from RDF content
   */
  parseNamespaces(content, format) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[9]++;
    const lines =
    /* istanbul ignore next */
    (cov_19syh86yzu().s[50]++, content.split('\n'));
    /* istanbul ignore next */
    cov_19syh86yzu().s[51]++;
    for (const line of lines) {
      const trimmed =
      /* istanbul ignore next */
      (cov_19syh86yzu().s[52]++, line.trim());
      /* istanbul ignore next */
      cov_19syh86yzu().s[53]++;
      if (
      /* istanbul ignore next */
      (cov_19syh86yzu().b[6][0]++, format === 'turtle') ||
      /* istanbul ignore next */
      (cov_19syh86yzu().b[6][1]++, format === 'n3')) {
        /* istanbul ignore next */
        cov_19syh86yzu().b[5][0]++;
        // Parse @prefix declarations
        const prefixMatch =
        /* istanbul ignore next */
        (cov_19syh86yzu().s[54]++, trimmed.match(/^@prefix\s+(\w+):\s+<([^>]+)>\s*\.\s*$/));
        /* istanbul ignore next */
        cov_19syh86yzu().s[55]++;
        if (prefixMatch) {
          /* istanbul ignore next */
          cov_19syh86yzu().b[7][0]++;
          const [, prefix, namespace] =
          /* istanbul ignore next */
          (cov_19syh86yzu().s[56]++, prefixMatch);
          /* istanbul ignore next */
          cov_19syh86yzu().s[57]++;
          this.addBinding(prefix, namespace);
          /* istanbul ignore next */
          cov_19syh86yzu().s[58]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_19syh86yzu().b[7][1]++;
        }
        // Parse PREFIX declarations (SPARQL style)
        const sparqlPrefixMatch =
        /* istanbul ignore next */
        (cov_19syh86yzu().s[59]++, trimmed.match(/^PREFIX\s+(\w+):\s+<([^>]+)>\s*$/));
        /* istanbul ignore next */
        cov_19syh86yzu().s[60]++;
        if (sparqlPrefixMatch) {
          /* istanbul ignore next */
          cov_19syh86yzu().b[8][0]++;
          const [, prefix, namespace] =
          /* istanbul ignore next */
          (cov_19syh86yzu().s[61]++, sparqlPrefixMatch);
          /* istanbul ignore next */
          cov_19syh86yzu().s[62]++;
          this.addBinding(prefix, namespace);
        } else
        /* istanbul ignore next */
        {
          cov_19syh86yzu().b[8][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_19syh86yzu().b[5][1]++;
      }
    }
  }
  /**
   * Generate namespace prefix declarations for a format
   */
  generatePrefixDeclarations(format) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[10]++;
    const declarations =
    /* istanbul ignore next */
    (cov_19syh86yzu().s[63]++, []);
    /* istanbul ignore next */
    cov_19syh86yzu().s[64]++;
    for (const [prefix, namespace] of this.bindings) {
      /* istanbul ignore next */
      cov_19syh86yzu().s[65]++;
      switch (format) {
        case 'turtle':
          /* istanbul ignore next */
          cov_19syh86yzu().b[9][0]++;
        case 'n3':
          /* istanbul ignore next */
          cov_19syh86yzu().b[9][1]++;
          cov_19syh86yzu().s[66]++;
          declarations.push(`@prefix ${prefix}: <${namespace.toString()}> .`);
          /* istanbul ignore next */
          cov_19syh86yzu().s[67]++;
          break;
        case 'sparql':
          /* istanbul ignore next */
          cov_19syh86yzu().b[9][2]++;
          cov_19syh86yzu().s[68]++;
          declarations.push(`PREFIX ${prefix}: <${namespace.toString()}>`);
          /* istanbul ignore next */
          cov_19syh86yzu().s[69]++;
          break;
      }
    }
    /* istanbul ignore next */
    cov_19syh86yzu().s[70]++;
    return declarations.join('\n');
  }
  /**
   * Get all namespace bindings
   */
  getAllBindings() {
    /* istanbul ignore next */
    cov_19syh86yzu().f[11]++;
    cov_19syh86yzu().s[71]++;
    return Array.from(this.bindings.entries()).map(([prefix, namespace]) => {
      /* istanbul ignore next */
      cov_19syh86yzu().f[12]++;
      cov_19syh86yzu().s[72]++;
      return {
        prefix,
        namespace
      };
    });
  }
  /**
   * Clear all custom bindings (keeps default ones)
   */
  clearCustomBindings() {
    /* istanbul ignore next */
    cov_19syh86yzu().f[13]++;
    cov_19syh86yzu().s[73]++;
    this.bindings.clear();
    /* istanbul ignore next */
    cov_19syh86yzu().s[74]++;
    this.reverseBindings.clear();
    /* istanbul ignore next */
    cov_19syh86yzu().s[75]++;
    this.initializeDefaultNamespaces();
  }
  /**
   * Check if a prefix exists
   */
  hasPrefix(prefix) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[14]++;
    cov_19syh86yzu().s[76]++;
    return this.bindings.has(prefix);
  }
  /**
   * Check if a namespace exists
   */
  hasNamespace(namespace) {
    /* istanbul ignore next */
    cov_19syh86yzu().f[15]++;
    cov_19syh86yzu().s[77]++;
    return this.reverseBindings.has(namespace);
  }
  /**
   * Create a copy of the namespace manager
   */
  clone() {
    /* istanbul ignore next */
    cov_19syh86yzu().f[16]++;
    const clone =
    /* istanbul ignore next */
    (cov_19syh86yzu().s[78]++, new NamespaceManager());
    /* istanbul ignore next */
    cov_19syh86yzu().s[79]++;
    clone.clearCustomBindings();
    /* istanbul ignore next */
    cov_19syh86yzu().s[80]++;
    for (const [prefix, namespace] of this.bindings) {
      /* istanbul ignore next */
      cov_19syh86yzu().s[81]++;
      clone.addBinding(prefix, namespace.toString());
    }
    /* istanbul ignore next */
    cov_19syh86yzu().s[82]++;
    return clone;
  }
}
/* istanbul ignore next */
cov_19syh86yzu().s[83]++;
exports.NamespaceManager = NamespaceManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,