5b9318d190830e5023eb9deb9b593cb4
"use strict";

/* istanbul ignore next */
function cov_x6qs2klu0() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/Priority.ts";
  var hash = "897b42a3b009a31b06589ee8b67b28c4cbe6e8ab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/Priority.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 50
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 74
        }
      },
      "4": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 33
        }
      },
      "5": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "6": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 35
        }
      },
      "7": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 27
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "10": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 68
        }
      },
      "11": {
        start: {
          line: 24,
          column: 32
        },
        end: {
          line: 24,
          column: 87
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "13": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 94
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "16": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 50
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "18": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "19": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 26
        }
      },
      "20": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "21": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "22": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "23": {
        start: {
          line: 56,
          column: 36
        },
        end: {
          line: 56,
          column: 45
        }
      },
      "24": {
        start: {
          line: 57,
          column: 39
        },
        end: {
          line: 57,
          column: 48
        }
      },
      "25": {
        start: {
          line: 58,
          column: 37
        },
        end: {
          line: 58,
          column: 46
        }
      },
      "26": {
        start: {
          line: 59,
          column: 39
        },
        end: {
          line: 59,
          column: 48
        }
      },
      "27": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 64
        }
      },
      "28": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 64
        }
      },
      "29": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 64
        }
      },
      "30": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 76,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 1
          },
          end: {
            line: 6,
            column: 2
          }
        },
        loc: {
          start: {
            line: 6,
            column: 26
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 23
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 18
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 15
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 18
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 22
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 54
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 66
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 24
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 69
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 72
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 40
          }
        }, {
          start: {
            line: 11,
            column: 45
          },
          end: {
            line: 11,
            column: 71
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 24,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 60
          },
          end: {
            line: 24,
            column: 79
          }
        }, {
          start: {
            line: 24,
            column: 82
          },
          end: {
            line: 24,
            column: 87
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 45
          }
        }, {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 48
          }
        }, {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 46
          }
        }, {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 48
          }
        }],
        line: 55
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/Priority.ts",
      mappings: ";;;AAAA,2CAAwC;AAExC,IAAY,aAKX;AALD,WAAY,aAAa;IACvB,4BAAW,CAAA;IACX,kCAAiB,CAAA;IACjB,8BAAa,CAAA;IACb,kCAAiB,CAAA;AACnB,CAAC,EALW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAKxB;AAED;;;GAGG;AACH,MAAa,QAAQ;IAGnB,YAAoB,KAAoB;QACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,KAA6B;QACzC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,eAAM,CAAC,IAAI,CAAW,0BAA0B,CAAC,CAAC;SAC1D;QAED,MAAM,eAAe,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QAEhF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,eAAgC,CAAC,EAAE;YAC5E,OAAO,eAAM,CAAC,IAAI,CAAW,oDAAoD,CAAC,CAAC;SACpF;QAED,OAAO,eAAM,CAAC,EAAE,CAAW,IAAI,QAAQ,CAAC,eAAgC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,MAAM,CAAC,GAAG;QACR,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,MAAM,CAAC,MAAM;QACX,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,IAAI;QACT,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,MAAM,CAAC,MAAM;QACX,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,KAAe;QACpB,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC;IACpC,CAAC;IAED;;OAEG;IACH,eAAe;QACb,QAAQ,IAAI,CAAC,KAAK,EAAE;YAClB,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;YACjC,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC;YACpC,KAAK,aAAa,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;YAClC,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC;SACrC;IACH,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,KAAe;QACrB,OAAO,IAAI,CAAC,eAAe,EAAE,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1D,CAAC;IAED,YAAY,CAAC,KAAe;QAC1B,OAAO,IAAI,CAAC,eAAe,EAAE,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1D,CAAC;IAED,WAAW,CAAC,KAAe;QACzB,OAAO,IAAI,CAAC,eAAe,EAAE,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1D,CAAC;CACF;AA5ED,4BA4EC",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/Priority.ts"],
      sourcesContent: ["import { Result } from '../core/Result';\n\nexport enum PriorityLevel {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  URGENT = 'urgent'\n}\n\n/**\n * Value object representing task priority\n * Immutable and self-validating with business rules\n */\nexport class Priority {\n  private readonly level: PriorityLevel;\n\n  private constructor(level: PriorityLevel) {\n    this.level = level;\n  }\n\n  static create(value: string | PriorityLevel): Result<Priority> {\n    if (!value) {\n      return Result.fail<Priority>('Priority cannot be empty');\n    }\n\n    const normalizedValue = typeof value === 'string' ? value.toLowerCase() : value;\n    \n    if (!Object.values(PriorityLevel).includes(normalizedValue as PriorityLevel)) {\n      return Result.fail<Priority>('Priority must be one of: low, medium, high, urgent');\n    }\n\n    return Result.ok<Priority>(new Priority(normalizedValue as PriorityLevel));\n  }\n\n  static low(): Priority {\n    return new Priority(PriorityLevel.LOW);\n  }\n\n  static medium(): Priority {\n    return new Priority(PriorityLevel.MEDIUM);\n  }\n\n  static high(): Priority {\n    return new Priority(PriorityLevel.HIGH);\n  }\n\n  static urgent(): Priority {\n    return new Priority(PriorityLevel.URGENT);\n  }\n\n  getLevel(): PriorityLevel {\n    return this.level;\n  }\n\n  toString(): string {\n    return this.level;\n  }\n\n  equals(other: Priority): boolean {\n    return this.level === other.level;\n  }\n\n  /**\n   * Returns numeric value for sorting (higher number = higher priority)\n   */\n  getNumericValue(): number {\n    switch (this.level) {\n      case PriorityLevel.LOW: return 1;\n      case PriorityLevel.MEDIUM: return 2;\n      case PriorityLevel.HIGH: return 3;\n      case PriorityLevel.URGENT: return 4;\n    }\n  }\n\n  /**\n   * Compares priorities for sorting\n   * Returns negative if this < other, positive if this > other, 0 if equal\n   */\n  compare(other: Priority): number {\n    return this.getNumericValue() - other.getNumericValue();\n  }\n\n  isHigherThan(other: Priority): boolean {\n    return this.getNumericValue() > other.getNumericValue();\n  }\n\n  isLowerThan(other: Priority): boolean {\n    return this.getNumericValue() < other.getNumericValue();\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "897b42a3b009a31b06589ee8b67b28c4cbe6e8ab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_x6qs2klu0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_x6qs2klu0();
cov_x6qs2klu0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_x6qs2klu0().s[1]++;
exports.Priority = exports.PriorityLevel = void 0;
const Result_1 =
/* istanbul ignore next */
(cov_x6qs2klu0().s[2]++, require("../core/Result"));
var PriorityLevel;
/* istanbul ignore next */
cov_x6qs2klu0().s[3]++;
(function (PriorityLevel) {
  /* istanbul ignore next */
  cov_x6qs2klu0().f[0]++;
  cov_x6qs2klu0().s[4]++;
  PriorityLevel["LOW"] = "low";
  /* istanbul ignore next */
  cov_x6qs2klu0().s[5]++;
  PriorityLevel["MEDIUM"] = "medium";
  /* istanbul ignore next */
  cov_x6qs2klu0().s[6]++;
  PriorityLevel["HIGH"] = "high";
  /* istanbul ignore next */
  cov_x6qs2klu0().s[7]++;
  PriorityLevel["URGENT"] = "urgent";
})(PriorityLevel =
/* istanbul ignore next */
(cov_x6qs2klu0().b[0][0]++, exports.PriorityLevel) ||
/* istanbul ignore next */
(cov_x6qs2klu0().b[0][1]++, exports.PriorityLevel = {}));
/**
 * Value object representing task priority
 * Immutable and self-validating with business rules
 */
class Priority {
  constructor(level) {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[1]++;
    cov_x6qs2klu0().s[8]++;
    this.level = level;
  }
  static create(value) {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[2]++;
    cov_x6qs2klu0().s[9]++;
    if (!value) {
      /* istanbul ignore next */
      cov_x6qs2klu0().b[1][0]++;
      cov_x6qs2klu0().s[10]++;
      return Result_1.Result.fail('Priority cannot be empty');
    } else
    /* istanbul ignore next */
    {
      cov_x6qs2klu0().b[1][1]++;
    }
    const normalizedValue =
    /* istanbul ignore next */
    (cov_x6qs2klu0().s[11]++, typeof value === 'string' ?
    /* istanbul ignore next */
    (cov_x6qs2klu0().b[2][0]++, value.toLowerCase()) :
    /* istanbul ignore next */
    (cov_x6qs2klu0().b[2][1]++, value));
    /* istanbul ignore next */
    cov_x6qs2klu0().s[12]++;
    if (!Object.values(PriorityLevel).includes(normalizedValue)) {
      /* istanbul ignore next */
      cov_x6qs2klu0().b[3][0]++;
      cov_x6qs2klu0().s[13]++;
      return Result_1.Result.fail('Priority must be one of: low, medium, high, urgent');
    } else
    /* istanbul ignore next */
    {
      cov_x6qs2klu0().b[3][1]++;
    }
    cov_x6qs2klu0().s[14]++;
    return Result_1.Result.ok(new Priority(normalizedValue));
  }
  static low() {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[3]++;
    cov_x6qs2klu0().s[15]++;
    return new Priority(PriorityLevel.LOW);
  }
  static medium() {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[4]++;
    cov_x6qs2klu0().s[16]++;
    return new Priority(PriorityLevel.MEDIUM);
  }
  static high() {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[5]++;
    cov_x6qs2klu0().s[17]++;
    return new Priority(PriorityLevel.HIGH);
  }
  static urgent() {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[6]++;
    cov_x6qs2klu0().s[18]++;
    return new Priority(PriorityLevel.URGENT);
  }
  getLevel() {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[7]++;
    cov_x6qs2klu0().s[19]++;
    return this.level;
  }
  toString() {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[8]++;
    cov_x6qs2klu0().s[20]++;
    return this.level;
  }
  equals(other) {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[9]++;
    cov_x6qs2klu0().s[21]++;
    return this.level === other.level;
  }
  /**
   * Returns numeric value for sorting (higher number = higher priority)
   */
  getNumericValue() {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[10]++;
    cov_x6qs2klu0().s[22]++;
    switch (this.level) {
      case PriorityLevel.LOW:
        /* istanbul ignore next */
        cov_x6qs2klu0().b[4][0]++;
        cov_x6qs2klu0().s[23]++;
        return 1;
      case PriorityLevel.MEDIUM:
        /* istanbul ignore next */
        cov_x6qs2klu0().b[4][1]++;
        cov_x6qs2klu0().s[24]++;
        return 2;
      case PriorityLevel.HIGH:
        /* istanbul ignore next */
        cov_x6qs2klu0().b[4][2]++;
        cov_x6qs2klu0().s[25]++;
        return 3;
      case PriorityLevel.URGENT:
        /* istanbul ignore next */
        cov_x6qs2klu0().b[4][3]++;
        cov_x6qs2klu0().s[26]++;
        return 4;
    }
  }
  /**
   * Compares priorities for sorting
   * Returns negative if this < other, positive if this > other, 0 if equal
   */
  compare(other) {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[11]++;
    cov_x6qs2klu0().s[27]++;
    return this.getNumericValue() - other.getNumericValue();
  }
  isHigherThan(other) {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[12]++;
    cov_x6qs2klu0().s[28]++;
    return this.getNumericValue() > other.getNumericValue();
  }
  isLowerThan(other) {
    /* istanbul ignore next */
    cov_x6qs2klu0().f[13]++;
    cov_x6qs2klu0().s[29]++;
    return this.getNumericValue() < other.getNumericValue();
  }
}
/* istanbul ignore next */
cov_x6qs2klu0().s[30]++;
exports.Priority = Priority;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,