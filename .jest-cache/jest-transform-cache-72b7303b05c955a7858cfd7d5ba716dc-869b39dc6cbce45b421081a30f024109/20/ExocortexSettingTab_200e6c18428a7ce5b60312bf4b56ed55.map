{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/settings/ExocortexSettingTab.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/settings/ExocortexSettingTab.ts"],"sourcesContent":["import { App, PluginSettingTab, Setting, Notice } from \"obsidian\";\nimport {\n  ExocortexSettings,\n  ExocortexSettingsData,\n} from \"../../domain/entities/ExocortexSettings\";\nimport { QueryEngineType } from \"../../domain/ports/IQueryEngine\";\nimport ExocortexPlugin from \"../../main\";\n\n/**\n * Exocortex Settings Tab\n * Provides a comprehensive user interface for plugin configuration\n */\nexport class ExocortexSettingTab extends PluginSettingTab {\n  plugin: ExocortexPlugin;\n  private settings: ExocortexSettings;\n\n  constructor(app: App, plugin: ExocortexPlugin) {\n    super(app, plugin);\n    this.plugin = plugin;\n    this.settings = plugin.settings;\n  }\n\n  display(): void {\n    const { containerEl } = this;\n    containerEl.empty();\n\n    // Header\n    containerEl.createEl(\"h1\", { text: \"Exocortex Settings\" });\n    containerEl.createEl(\"p\", {\n      text: \"Configure your Exocortex plugin to optimize your knowledge management experience.\",\n      cls: \"setting-item-description\",\n    });\n\n    // Folder Paths Section\n    this.addFolderPathsSection(containerEl);\n\n    // Query Engine Section\n    this.addQueryEngineSection(containerEl);\n\n    // Cache Settings Section\n    this.addCacheSettingsSection(containerEl);\n\n    // RDF Export Section\n    this.addRDFExportSection(containerEl);\n\n    // Performance Section\n    this.addPerformanceSection(containerEl);\n\n    // Mobile/Platform Section\n    this.addMobilePlatformSection(containerEl);\n\n    // Debug Section\n    this.addDebugSection(containerEl);\n\n    // Reset Section\n    this.addResetSection(containerEl);\n  }\n\n  private addFolderPathsSection(containerEl: HTMLElement): void {\n    containerEl.createEl(\"h2\", { text: \"Folder Paths\" });\n\n    new Setting(containerEl)\n      .setName(\"Layouts folder\")\n      .setDesc(\"Path to folder containing class layout files\")\n      .addText((text) =>\n        text\n          .setPlaceholder(\"layouts\")\n          .setValue(this.settings.get(\"layoutsFolderPath\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\n              \"layoutsFolderPath\",\n              value.trim() || \"layouts\",\n            );\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Templates folder\")\n      .setDesc(\"Path to folder containing query templates\")\n      .addText((text) =>\n        text\n          .setPlaceholder(\".exocortex/templates\")\n          .setValue(this.settings.get(\"templatesFolderPath\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\n              \"templatesFolderPath\",\n              value.trim() || \".exocortex/templates\",\n            );\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Template usage data path\")\n      .setDesc(\"Path to file for storing template usage statistics\")\n      .addText((text) =>\n        text\n          .setPlaceholder(\".exocortex/template-usage.json\")\n          .setValue(this.settings.get(\"templateUsageDataPath\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\n              \"templateUsageDataPath\",\n              value.trim() || \".exocortex/template-usage.json\",\n            );\n          }),\n      );\n  }\n\n  private addQueryEngineSection(containerEl: HTMLElement): void {\n    containerEl.createEl(\"h2\", { text: \"Query Engine\" });\n\n    new Setting(containerEl)\n      .setName(\"Preferred query engine\")\n      .setDesc(\"Primary query engine to use for data queries\")\n      .addDropdown((dropdown) =>\n        dropdown\n          .addOption(\"dataview\", \"Dataview\")\n          .addOption(\"datacore\", \"Datacore\")\n          .addOption(\"native\", \"Native\")\n          .setValue(this.settings.get(\"preferredQueryEngine\"))\n          .onChange(async (value: QueryEngineType) => {\n            await this.updateSetting(\"preferredQueryEngine\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Fallback query engine\")\n      .setDesc(\"Secondary query engine to use if primary fails\")\n      .addDropdown((dropdown) =>\n        dropdown\n          .addOption(\"dataview\", \"Dataview\")\n          .addOption(\"datacore\", \"Datacore\")\n          .addOption(\"native\", \"Native\")\n          .setValue(this.settings.get(\"fallbackQueryEngine\"))\n          .onChange(async (value: QueryEngineType) => {\n            await this.updateSetting(\"fallbackQueryEngine\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Auto-detect query engines\")\n      .setDesc(\"Automatically detect and use available query engines\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"enableQueryEngineAutoDetect\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"enableQueryEngineAutoDetect\", value);\n          }),\n      );\n  }\n\n  private addCacheSettingsSection(containerEl: HTMLElement): void {\n    containerEl.createEl(\"h2\", { text: \"Cache Settings\" });\n\n    // SPARQL Cache\n    new Setting(containerEl)\n      .setName(\"Enable SPARQL cache\")\n      .setDesc(\"Cache SPARQL query results for improved performance\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"enableSPARQLCache\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"enableSPARQLCache\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"SPARQL cache max size\")\n      .setDesc(\"Maximum number of cached SPARQL queries\")\n      .addSlider((slider) =>\n        slider\n          .setLimits(10, 2000, 10)\n          .setValue(this.settings.get(\"sparqlCacheMaxSize\"))\n          .setDynamicTooltip()\n          .onChange(async (value) => {\n            await this.updateSetting(\"sparqlCacheMaxSize\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"SPARQL cache TTL\")\n      .setDesc(\"Time to live for cached SPARQL queries (minutes)\")\n      .addSlider((slider) =>\n        slider\n          .setLimits(1, 60, 1)\n          .setValue(this.settings.get(\"sparqlCacheTTLMinutes\"))\n          .setDynamicTooltip()\n          .onChange(async (value) => {\n            await this.updateSetting(\"sparqlCacheTTLMinutes\", value);\n          }),\n      );\n\n    // Query Cache\n    new Setting(containerEl)\n      .setName(\"Enable query cache\")\n      .setDesc(\"Cache general query results for improved performance\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"enableQueryCache\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"enableQueryCache\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Query cache timeout\")\n      .setDesc(\"Query cache timeout (minutes)\")\n      .addSlider((slider) =>\n        slider\n          .setLimits(1, 120, 1)\n          .setValue(this.settings.get(\"queryCacheTimeout\"))\n          .setDynamicTooltip()\n          .onChange(async (value) => {\n            await this.updateSetting(\"queryCacheTimeout\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Query cache max size\")\n      .setDesc(\"Maximum number of cached query results\")\n      .addSlider((slider) =>\n        slider\n          .setLimits(10, 500, 10)\n          .setValue(this.settings.get(\"queryCacheMaxSize\"))\n          .setDynamicTooltip()\n          .onChange(async (value) => {\n            await this.updateSetting(\"queryCacheMaxSize\", value);\n          }),\n      );\n  }\n\n  private addRDFExportSection(containerEl: HTMLElement): void {\n    containerEl.createEl(\"h2\", { text: \"RDF Export Settings\" });\n\n    new Setting(containerEl)\n      .setName(\"Default RDF format\")\n      .setDesc(\"Default format for RDF exports\")\n      .addDropdown((dropdown) =>\n        dropdown\n          .addOption(\"turtle\", \"Turtle (.ttl)\")\n          .addOption(\"rdf-xml\", \"RDF/XML (.rdf)\")\n          .addOption(\"n-triples\", \"N-Triples (.nt)\")\n          .addOption(\"json-ld\", \"JSON-LD (.jsonld)\")\n          .setValue(this.settings.get(\"defaultRDFFormat\"))\n          .onChange(\n            async (value: \"turtle\" | \"rdf-xml\" | \"n-triples\" | \"json-ld\") => {\n              await this.updateSetting(\"defaultRDFFormat\", value);\n            },\n          ),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Include inferred triples\")\n      .setDesc(\"Include inferred/derived triples in exports\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"includeInferredTriples\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"includeInferredTriples\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Export namespaces\")\n      .setDesc(\"Include namespace declarations in exports\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"exportNamespaces\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"exportNamespaces\", value);\n          }),\n      );\n  }\n\n  private addPerformanceSection(containerEl: HTMLElement): void {\n    containerEl.createEl(\"h2\", { text: \"Performance Settings\" });\n\n    new Setting(containerEl)\n      .setName(\"Max graph size\")\n      .setDesc(\"Maximum number of triples in the knowledge graph\")\n      .addSlider((slider) =>\n        slider\n          .setLimits(100, 50000, 100)\n          .setValue(this.settings.get(\"maxGraphSize\"))\n          .setDynamicTooltip()\n          .onChange(async (value) => {\n            await this.updateSetting(\"maxGraphSize\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Batch processing size\")\n      .setDesc(\"Number of items to process in each batch\")\n      .addSlider((slider) =>\n        slider\n          .setLimits(1, 200, 1)\n          .setValue(this.settings.get(\"batchProcessingSize\"))\n          .setDynamicTooltip()\n          .onChange(async (value) => {\n            await this.updateSetting(\"batchProcessingSize\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Enable lazy loading\")\n      .setDesc(\"Load data on-demand to improve performance\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"enableLazyLoading\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"enableLazyLoading\", value);\n          }),\n      );\n  }\n\n  private addMobilePlatformSection(containerEl: HTMLElement): void {\n    containerEl.createEl(\"h2\", { text: \"Mobile & Platform Settings\" });\n\n    new Setting(containerEl)\n      .setName(\"Enable mobile optimizations\")\n      .setDesc(\"Apply mobile-specific performance optimizations\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"enableMobileOptimizations\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"enableMobileOptimizations\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Mobile batch size\")\n      .setDesc(\"Batch size optimized for mobile devices\")\n      .addSlider((slider) =>\n        slider\n          .setLimits(1, 50, 1)\n          .setValue(this.settings.get(\"mobileBatchSize\"))\n          .setDynamicTooltip()\n          .onChange(async (value) => {\n            await this.updateSetting(\"mobileBatchSize\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Enable touch controls\")\n      .setDesc(\"Enable touch-based interactions for mobile devices\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"enableTouchControls\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"enableTouchControls\", value);\n          }),\n      );\n  }\n\n  private addDebugSection(containerEl: HTMLElement): void {\n    containerEl.createEl(\"h2\", { text: \"Debug Settings\" });\n    containerEl.createEl(\"p\", {\n      text: \"Debug settings help with troubleshooting but may impact performance.\",\n      cls: \"setting-item-description\",\n    });\n\n    new Setting(containerEl)\n      .setName(\"Enable debug mode\")\n      .setDesc(\"Enable general debug features and extended logging\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"enableDebugMode\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"enableDebugMode\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Enable verbose logging\")\n      .setDesc(\"Enable detailed console logging for troubleshooting\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"enableVerboseLogging\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"enableVerboseLogging\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Log SPARQL queries\")\n      .setDesc(\"Log all SPARQL queries to console for debugging\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"logSPARQLQueries\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"logSPARQLQueries\", value);\n          }),\n      );\n\n    new Setting(containerEl)\n      .setName(\"Enable performance metrics\")\n      .setDesc(\"Collect and log performance metrics\")\n      .addToggle((toggle) =>\n        toggle\n          .setValue(this.settings.get(\"enablePerformanceMetrics\"))\n          .onChange(async (value) => {\n            await this.updateSetting(\"enablePerformanceMetrics\", value);\n          }),\n      );\n  }\n\n  private addResetSection(containerEl: HTMLElement): void {\n    containerEl.createEl(\"h2\", { text: \"Reset Settings\" });\n\n    new Setting(containerEl)\n      .setName(\"Reset to defaults\")\n      .setDesc(\"Reset all settings to their default values\")\n      .addButton((button) =>\n        button\n          .setButtonText(\"Reset All Settings\")\n          .setCta()\n          .onClick(async () => {\n            const confirmed = await this.confirmReset();\n            if (confirmed) {\n              await this.resetAllSettings();\n            }\n          }),\n      );\n  }\n\n  private async updateSetting<K extends keyof ExocortexSettingsData>(\n    key: K,\n    value: ExocortexSettingsData[K],\n  ): Promise<void> {\n    const result = this.settings.set(key, value);\n\n    if (result.isFailure) {\n      new Notice(`Settings error: ${result.getError()}`);\n      return;\n    }\n\n    await this.plugin.saveSettings();\n\n    // Trigger settings update in DI container\n    if (this.plugin.updateContainer) {\n      this.plugin.updateContainer();\n    }\n  }\n\n  private async confirmReset(): Promise<boolean> {\n    return new Promise((resolve) => {\n      const modal = document.createElement(\"div\");\n      modal.className = \"modal\";\n      modal.innerHTML = `\n                <div class=\"modal-bg\"></div>\n                <div class=\"modal-content\">\n                    <div class=\"modal-title\">Reset Settings</div>\n                    <div class=\"modal-text\">\n                        Are you sure you want to reset all settings to their default values?\n                        This action cannot be undone.\n                    </div>\n                    <div class=\"modal-button-container\">\n                        <button class=\"mod-cta\" id=\"confirm-reset\">Reset</button>\n                        <button id=\"cancel-reset\">Cancel</button>\n                    </div>\n                </div>\n            `;\n\n      document.body.appendChild(modal);\n\n      const confirmBtn = modal.querySelector(\n        \"#confirm-reset\",\n      ) as HTMLButtonElement;\n      const cancelBtn = modal.querySelector(\n        \"#cancel-reset\",\n      ) as HTMLButtonElement;\n      const modalBg = modal.querySelector(\".modal-bg\") as HTMLElement;\n\n      const cleanup = () => {\n        document.body.removeChild(modal);\n      };\n\n      confirmBtn.onclick = () => {\n        cleanup();\n        resolve(true);\n      };\n\n      cancelBtn.onclick = () => {\n        cleanup();\n        resolve(false);\n      };\n\n      modalBg.onclick = () => {\n        cleanup();\n        resolve(false);\n      };\n    });\n  }\n\n  private async resetAllSettings(): Promise<void> {\n    this.settings.resetToDefaults();\n    await this.plugin.saveSettings();\n\n    // Trigger settings update in DI container\n    if (this.plugin.updateContainer) {\n      this.plugin.updateContainer();\n    }\n\n    // Refresh the settings display\n    this.display();\n\n    new Notice(\"All settings have been reset to defaults\");\n  }\n}\n"],"version":3}