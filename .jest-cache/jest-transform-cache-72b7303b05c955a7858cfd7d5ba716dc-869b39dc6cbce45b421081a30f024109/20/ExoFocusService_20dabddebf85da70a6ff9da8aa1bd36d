1aaef98e45e97b99a6933f2932e09a51
"use strict";

/* istanbul ignore next */
function cov_1j76w81z0e() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/ExoFocusService.ts";
  var hash = "2b734489cf625bb1659b271f74e8f16bc5bbedd8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/ExoFocusService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 60
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 52
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 23
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 27
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 32
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 63
        }
      },
      "11": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "12": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "14": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 29,
          column: 13
        }
      },
      "15": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "16": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "17": {
        start: {
          line: 31,
          column: 32
        },
        end: {
          line: 31,
          column: 87
        }
      },
      "18": {
        start: {
          line: 32,
          column: 32
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "19": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 42,
          column: 17
        }
      },
      "20": {
        start: {
          line: 34,
          column: 40
        },
        end: {
          line: 34,
          column: 76
        }
      },
      "21": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "22": {
        start: {
          line: 36,
          column: 38
        },
        end: {
          line: 36,
          column: 60
        }
      },
      "23": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 61
        }
      },
      "24": {
        start: {
          line: 38,
          column: 24
        },
        end: {
          line: 40,
          column: 25
        }
      },
      "25": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "26": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "27": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "28": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "29": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 23
        }
      },
      "30": {
        start: {
          line: 59,
          column: 29
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "31": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "32": {
        start: {
          line: 134,
          column: 36
        },
        end: {
          line: 134,
          column: 154
        }
      },
      "33": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 141,
          column: 17
        }
      },
      "34": {
        start: {
          line: 136,
          column: 34
        },
        end: {
          line: 136,
          column: 56
        }
      },
      "35": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 57
        }
      },
      "36": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 140,
          column: 21
        }
      },
      "37": {
        start: {
          line: 139,
          column: 24
        },
        end: {
          line: 139,
          column: 49
        }
      },
      "38": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 37
        }
      },
      "39": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 172,
          column: 11
        }
      },
      "40": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "41": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 23
        }
      },
      "42": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "43": {
        start: {
          line: 156,
          column: 32
        },
        end: {
          line: 156,
          column: 89
        }
      },
      "44": {
        start: {
          line: 156,
          column: 78
        },
        end: {
          line: 156,
          column: 88
        }
      },
      "45": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 107
        }
      },
      "46": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 166,
          column: 17
        }
      },
      "47": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 165,
          column: 33
        }
      },
      "48": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 76
        }
      },
      "49": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 32
        }
      },
      "50": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "51": {
        start: {
          line: 185,
          column: 26
        },
        end: {
          line: 185,
          column: 54
        }
      },
      "52": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "53": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 63
        }
      },
      "54": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "55": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 46
        }
      },
      "56": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "57": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 37
        }
      },
      "58": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 37
        }
      },
      "59": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 40
        }
      },
      "60": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "61": {
        start: {
          line: 205,
          column: 32
        },
        end: {
          line: 213,
          column: 14
        }
      },
      "62": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "63": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 35
        }
      },
      "64": {
        start: {
          line: 217,
          column: 26
        },
        end: {
          line: 217,
          column: 48
        }
      },
      "65": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 49
        }
      },
      "66": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 37
        }
      },
      "67": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 45
        }
      },
      "68": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 243,
          column: 11
        }
      },
      "69": {
        start: {
          line: 228,
          column: 26
        },
        end: {
          line: 228,
          column: 54
        }
      },
      "70": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 231,
          column: 13
        }
      },
      "71": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 63
        }
      },
      "72": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 238,
          column: 13
        }
      },
      "73": {
        start: {
          line: 234,
          column: 31
        },
        end: {
          line: 234,
          column: 69
        }
      },
      "74": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 237,
          column: 17
        }
      },
      "75": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 34
        }
      },
      "76": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 37
        }
      },
      "77": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 40
        }
      },
      "78": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "79": {
        start: {
          line: 250,
          column: 26
        },
        end: {
          line: 250,
          column: 54
        }
      },
      "80": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "81": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 63
        }
      },
      "82": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "83": {
        start: {
          line: 256,
          column: 33
        },
        end: {
          line: 257,
          column: 48
        }
      },
      "84": {
        start: {
          line: 257,
          column: 31
        },
        end: {
          line: 257,
          column: 47
        }
      },
      "85": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 264,
          column: 17
        }
      },
      "86": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 48
        }
      },
      "87": {
        start: {
          line: 260,
          column: 20
        },
        end: {
          line: 260,
          column: 40
        }
      },
      "88": {
        start: {
          line: 263,
          column: 20
        },
        end: {
          line: 263,
          column: 44
        }
      },
      "89": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 44
        }
      },
      "90": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 37
        }
      },
      "91": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 40
        }
      },
      "92": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 52
        }
      },
      "93": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "94": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 26
        }
      },
      "95": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 76
        }
      },
      "96": {
        start: {
          line: 284,
          column: 38
        },
        end: {
          line: 284,
          column: 74
        }
      },
      "97": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "98": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 27
        }
      },
      "99": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 301,
          column: 11
        }
      },
      "100": {
        start: {
          line: 295,
          column: 30
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "101": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 61
        }
      },
      "102": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 321,
          column: 11
        }
      },
      "103": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "104": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 309,
          column: 29
        }
      },
      "105": {
        start: {
          line: 311,
          column: 34
        },
        end: {
          line: 311,
          column: 36
        }
      },
      "106": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 319,
          column: 13
        }
      },
      "107": {
        start: {
          line: 313,
          column: 30
        },
        end: {
          line: 313,
          column: 71
        }
      },
      "108": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 318,
          column: 17
        }
      },
      "109": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 317,
          column: 21
        }
      },
      "110": {
        start: {
          line: 316,
          column: 24
        },
        end: {
          line: 316,
          column: 49
        }
      },
      "111": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 33
        }
      },
      "112": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "113": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 27
        }
      },
      "114": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 337,
          column: 11
        }
      },
      "115": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 334,
          column: 13
        }
      },
      "116": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 62
        }
      },
      "117": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 57
        }
      },
      "118": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 360,
          column: 11
        }
      },
      "119": {
        start: {
          line: 345,
          column: 26
        },
        end: {
          line: 345,
          column: 59
        }
      },
      "120": {
        start: {
          line: 346,
          column: 30
        },
        end: {
          line: 346,
          column: 42
        }
      },
      "121": {
        start: {
          line: 347,
          column: 34
        },
        end: {
          line: 347,
          column: 63
        }
      },
      "122": {
        start: {
          line: 348,
          column: 35
        },
        end: {
          line: 348,
          column: 55
        }
      },
      "123": {
        start: {
          line: 349,
          column: 31
        },
        end: {
          line: 349,
          column: 65
        }
      },
      "124": {
        start: {
          line: 350,
          column: 33
        },
        end: {
          line: 350,
          column: 50
        }
      },
      "125": {
        start: {
          line: 351,
          column: 36
        },
        end: {
          line: 351,
          column: 66
        }
      },
      "126": {
        start: {
          line: 352,
          column: 41
        },
        end: {
          line: 352,
          column: 63
        }
      },
      "127": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 359,
          column: 14
        }
      },
      "128": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 366,
          column: 30
        }
      },
      "129": {
        start: {
          line: 367,
          column: 26
        },
        end: {
          line: 367,
          column: 38
        }
      },
      "130": {
        start: {
          line: 368,
          column: 21
        },
        end: {
          line: 368,
          column: 75
        }
      },
      "131": {
        start: {
          line: 369,
          column: 26
        },
        end: {
          line: 369,
          column: 53
        }
      },
      "132": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 39
        }
      },
      "133": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 39
        }
      },
      "134": {
        start: {
          line: 377,
          column: 20
        },
        end: {
          line: 377,
          column: 30
        }
      },
      "135": {
        start: {
          line: 378,
          column: 26
        },
        end: {
          line: 378,
          column: 38
        }
      },
      "136": {
        start: {
          line: 379,
          column: 21
        },
        end: {
          line: 379,
          column: 50
        }
      },
      "137": {
        start: {
          line: 380,
          column: 24
        },
        end: {
          line: 380,
          column: 51
        }
      },
      "138": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 42
        }
      },
      "139": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 37
        }
      },
      "140": {
        start: {
          line: 385,
          column: 0
        },
        end: {
          line: 385,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 28
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 55
          },
          end: {
            line: 26,
            column: 56
          }
        },
        loc: {
          start: {
            line: 26,
            column: 68
          },
          end: {
            line: 48,
            column: 9
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 27
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 55,
            column: 55
          },
          end: {
            line: 55,
            column: 56
          }
        },
        loc: {
          start: {
            line: 55,
            column: 68
          },
          end: {
            line: 144,
            column: 9
          }
        },
        line: 55
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 18
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 149
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 151,
            column: 55
          },
          end: {
            line: 151,
            column: 56
          }
        },
        loc: {
          start: {
            line: 151,
            column: 68
          },
          end: {
            line: 172,
            column: 9
          }
        },
        line: 151
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 156,
            column: 73
          },
          end: {
            line: 156,
            column: 74
          }
        },
        loc: {
          start: {
            line: 156,
            column: 78
          },
          end: {
            line: 156,
            column: 88
          }
        },
        line: 156
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 21
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 177
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 28
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 183
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 184,
            column: 55
          },
          end: {
            line: 184,
            column: 56
          }
        },
        loc: {
          start: {
            line: 184,
            column: 68
          },
          end: {
            line: 198,
            column: 9
          }
        },
        line: 184
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 44
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 203
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 204,
            column: 55
          },
          end: {
            line: 204,
            column: 56
          }
        },
        loc: {
          start: {
            line: 204,
            column: 68
          },
          end: {
            line: 221,
            column: 9
          }
        },
        line: 204
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 34
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 226
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 227,
            column: 55
          },
          end: {
            line: 227,
            column: 56
          }
        },
        loc: {
          start: {
            line: 227,
            column: 68
          },
          end: {
            line: 243,
            column: 9
          }
        },
        line: 227
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 25
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 248
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 249,
            column: 55
          },
          end: {
            line: 249,
            column: 56
          }
        },
        loc: {
          start: {
            line: 249,
            column: 68
          },
          end: {
            line: 269,
            column: 9
          }
        },
        line: 249
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 257,
            column: 26
          },
          end: {
            line: 257,
            column: 27
          }
        },
        loc: {
          start: {
            line: 257,
            column: 31
          },
          end: {
            line: 257,
            column: 47
          }
        },
        line: 257
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        loc: {
          start: {
            line: 274,
            column: 20
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 274
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 280,
            column: 25
          },
          end: {
            line: 285,
            column: 5
          }
        },
        line: 280
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 284,
            column: 29
          },
          end: {
            line: 284,
            column: 30
          }
        },
        loc: {
          start: {
            line: 284,
            column: 38
          },
          end: {
            line: 284,
            column: 74
          }
        },
        line: 284
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        loc: {
          start: {
            line: 289,
            column: 27
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 289
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 293,
            column: 30
          },
          end: {
            line: 293,
            column: 31
          }
        },
        loc: {
          start: {
            line: 293,
            column: 40
          },
          end: {
            line: 301,
            column: 9
          }
        },
        line: 293
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        loc: {
          start: {
            line: 306,
            column: 23
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 306
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 307,
            column: 55
          },
          end: {
            line: 307,
            column: 56
          }
        },
        loc: {
          start: {
            line: 307,
            column: 68
          },
          end: {
            line: 321,
            column: 9
          }
        },
        line: 307
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 33
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 326
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 330,
            column: 30
          },
          end: {
            line: 330,
            column: 31
          }
        },
        loc: {
          start: {
            line: 330,
            column: 40
          },
          end: {
            line: 337,
            column: 9
          }
        },
        line: 330
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        loc: {
          start: {
            line: 342,
            column: 25
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 342
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 344,
            column: 55
          },
          end: {
            line: 344,
            column: 56
          }
        },
        loc: {
          start: {
            line: 344,
            column: 68
          },
          end: {
            line: 360,
            column: 9
          }
        },
        line: 344
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 19
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 365
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        loc: {
          start: {
            line: 376,
            column: 17
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 376
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 109
          },
          end: {
            line: 17,
            column: 115
          }
        }, {
          start: {
            line: 17,
            column: 118
          },
          end: {
            line: 17,
            column: 128
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 89
          }
        }, {
          start: {
            line: 17,
            column: 93
          },
          end: {
            line: 17,
            column: 106
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 62
          },
          end: {
            line: 17,
            column: 68
          }
        }, {
          start: {
            line: 17,
            column: 71
          },
          end: {
            line: 17,
            column: 79
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 42
          }
        }, {
          start: {
            line: 17,
            column: 46
          },
          end: {
            line: 17,
            column: 59
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 115
          },
          end: {
            line: 27,
            column: 121
          }
        }, {
          start: {
            line: 27,
            column: 124
          },
          end: {
            line: 27,
            column: 134
          }
        }],
        line: 27
      },
      "7": {
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 95
          }
        }, {
          start: {
            line: 27,
            column: 99
          },
          end: {
            line: 27,
            column: 112
          }
        }],
        line: 27
      },
      "8": {
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 68
          },
          end: {
            line: 27,
            column: 74
          }
        }, {
          start: {
            line: 27,
            column: 77
          },
          end: {
            line: 27,
            column: 85
          }
        }],
        line: 27
      },
      "9": {
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 48
          }
        }, {
          start: {
            line: 27,
            column: 52
          },
          end: {
            line: 27,
            column: 65
          }
        }],
        line: 27
      },
      "10": {
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 41,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 41,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "11": {
        loc: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 40,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 40,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 56,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 115
          },
          end: {
            line: 56,
            column: 121
          }
        }, {
          start: {
            line: 56,
            column: 124
          },
          end: {
            line: 56,
            column: 134
          }
        }],
        line: 56
      },
      "14": {
        loc: {
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 56,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 56,
            column: 95
          }
        }, {
          start: {
            line: 56,
            column: 99
          },
          end: {
            line: 56,
            column: 112
          }
        }],
        line: 56
      },
      "15": {
        loc: {
          start: {
            line: 56,
            column: 24
          },
          end: {
            line: 56,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 68
          },
          end: {
            line: 56,
            column: 74
          }
        }, {
          start: {
            line: 56,
            column: 77
          },
          end: {
            line: 56,
            column: 85
          }
        }],
        line: 56
      },
      "16": {
        loc: {
          start: {
            line: 56,
            column: 24
          },
          end: {
            line: 56,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 24
          },
          end: {
            line: 56,
            column: 48
          }
        }, {
          start: {
            line: 56,
            column: 52
          },
          end: {
            line: 56,
            column: 65
          }
        }],
        line: 56
      },
      "17": {
        loc: {
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "18": {
        loc: {
          start: {
            line: 138,
            column: 20
          },
          end: {
            line: 140,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 20
          },
          end: {
            line: 140,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "19": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "20": {
        loc: {
          start: {
            line: 152,
            column: 18
          },
          end: {
            line: 152,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 115
          },
          end: {
            line: 152,
            column: 121
          }
        }, {
          start: {
            line: 152,
            column: 124
          },
          end: {
            line: 152,
            column: 134
          }
        }],
        line: 152
      },
      "21": {
        loc: {
          start: {
            line: 152,
            column: 18
          },
          end: {
            line: 152,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 18
          },
          end: {
            line: 152,
            column: 95
          }
        }, {
          start: {
            line: 152,
            column: 99
          },
          end: {
            line: 152,
            column: 112
          }
        }],
        line: 152
      },
      "22": {
        loc: {
          start: {
            line: 152,
            column: 24
          },
          end: {
            line: 152,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 68
          },
          end: {
            line: 152,
            column: 74
          }
        }, {
          start: {
            line: 152,
            column: 77
          },
          end: {
            line: 152,
            column: 85
          }
        }],
        line: 152
      },
      "23": {
        loc: {
          start: {
            line: 152,
            column: 24
          },
          end: {
            line: 152,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 24
          },
          end: {
            line: 152,
            column: 48
          }
        }, {
          start: {
            line: 152,
            column: 52
          },
          end: {
            line: 152,
            column: 65
          }
        }],
        line: 152
      },
      "24": {
        loc: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "25": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "26": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "27": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "28": {
        loc: {
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "29": {
        loc: {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "30": {
        loc: {
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 237,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 237,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "31": {
        loc: {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "32": {
        loc: {
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 265,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 265,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "33": {
        loc: {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        }, {
          start: {
            line: 262,
            column: 21
          },
          end: {
            line: 264,
            column: 17
          }
        }],
        line: 258
      },
      "34": {
        loc: {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "35": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "36": {
        loc: {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "37": {
        loc: {
          start: {
            line: 314,
            column: 16
          },
          end: {
            line: 318,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 16
          },
          end: {
            line: 318,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "38": {
        loc: {
          start: {
            line: 314,
            column: 20
          },
          end: {
            line: 314,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 57
          },
          end: {
            line: 314,
            column: 63
          }
        }, {
          start: {
            line: 314,
            column: 66
          },
          end: {
            line: 314,
            column: 83
          }
        }],
        line: 314
      },
      "39": {
        loc: {
          start: {
            line: 314,
            column: 20
          },
          end: {
            line: 314,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 314,
            column: 20
          },
          end: {
            line: 314,
            column: 34
          }
        }, {
          start: {
            line: 314,
            column: 38
          },
          end: {
            line: 314,
            column: 54
          }
        }],
        line: 314
      },
      "40": {
        loc: {
          start: {
            line: 315,
            column: 20
          },
          end: {
            line: 317,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 20
          },
          end: {
            line: 317,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "41": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "42": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "43": {
        loc: {
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 332,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 332,
            column: 30
          }
        }, {
          start: {
            line: 332,
            column: 34
          },
          end: {
            line: 332,
            column: 50
          }
        }, {
          start: {
            line: 332,
            column: 54
          },
          end: {
            line: 332,
            column: 67
          }
        }],
        line: 332
      },
      "44": {
        loc: {
          start: {
            line: 358,
            column: 29
          },
          end: {
            line: 358,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 30
          },
          end: {
            line: 358,
            column: 98
          }
        }, {
          start: {
            line: 358,
            column: 103
          },
          end: {
            line: 358,
            column: 109
          }
        }],
        line: 358
      },
      "45": {
        loc: {
          start: {
            line: 358,
            column: 30
          },
          end: {
            line: 358,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 358,
            column: 82
          },
          end: {
            line: 358,
            column: 88
          }
        }, {
          start: {
            line: 358,
            column: 91
          },
          end: {
            line: 358,
            column: 98
          }
        }],
        line: 358
      },
      "46": {
        loc: {
          start: {
            line: 358,
            column: 30
          },
          end: {
            line: 358,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 30
          },
          end: {
            line: 358,
            column: 62
          }
        }, {
          start: {
            line: 358,
            column: 66
          },
          end: {
            line: 358,
            column: 79
          }
        }],
        line: 358
      },
      "47": {
        loc: {
          start: {
            line: 368,
            column: 50
          },
          end: {
            line: 368,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 368,
            column: 68
          },
          end: {
            line: 368,
            column: 70
          }
        }, {
          start: {
            line: 368,
            column: 73
          },
          end: {
            line: 368,
            column: 74
          }
        }],
        line: 368
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/ExoFocusService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/ExoFocusService.ts"],
      sourcesContent: ["import { App, TFile } from 'obsidian';\nimport { ExoFocus, FocusFilter } from '../../domain/entities/ExoFocus';\nimport { Graph } from '../../domain/semantic/core/Graph';\nimport { Triple } from '../../domain/semantic/core/Triple';\nimport { Result } from '../../domain/core/Result';\n\nexport class ExoFocusService {\n    private activeFocus: ExoFocus | null = null;\n    private allFocuses: Map<string, ExoFocus> = new Map();\n    private focusFilePath = '.exocortex/focus.json';\n    private focusConfigPath = '.exocortex/focus-configs.json';\n    \n    constructor(\n        private app: App,\n        private graph: Graph\n    ) {\n        // Only load focuses if vault adapter is available\n        if (this.app?.vault?.adapter) {\n            this.loadFocuses();\n        }\n    }\n    \n    /**\n     * Load all focus configurations from vault\n     */\n    private async loadFocuses(): Promise<void> {\n        if (!this.app?.vault?.adapter) {\n            return;\n        }\n        \n        try {\n            const content = await this.app.vault.adapter.read(this.focusConfigPath);\n            const configs = JSON.parse(content);\n            \n            for (const config of configs) {\n                const focusResult = ExoFocus.fromJSON(config);\n                if (focusResult.isSuccess) {\n                    const focus = focusResult.getValue();\n                    this.allFocuses.set(focus.id, focus);\n                    \n                    if (focus.active) {\n                        this.activeFocus = focus;\n                    }\n                }\n            }\n        } catch (error) {\n            // File doesn't exist, create default focuses\n            await this.createDefaultFocuses();\n        }\n    }\n    \n    /**\n     * Create default focus configurations\n     */\n    private async createDefaultFocuses(): Promise<void> {\n        if (!this.app?.vault?.adapter) {\n            return;\n        }\n        \n        const defaults = [\n            {\n                name: 'All',\n                description: 'No filtering - show all knowledge',\n                filters: [],\n                priority: 0,\n                active: true\n            },\n            {\n                name: 'Work',\n                description: 'Work-related knowledge only',\n                filters: [\n                    {\n                        type: 'tag' as const,\n                        operator: 'includes' as const,\n                        value: ['work', 'project', 'task', 'meeting']\n                    },\n                    {\n                        type: 'class' as const,\n                        operator: 'includes' as const,\n                        value: ['ems__Task', 'ems__Project', 'ems__Meeting']\n                    }\n                ],\n                priority: 50,\n                active: false\n            },\n            {\n                name: 'Personal',\n                description: 'Personal knowledge only',\n                filters: [\n                    {\n                        type: 'tag' as const,\n                        operator: 'includes' as const,\n                        value: ['personal', 'family', 'health', 'hobby']\n                    },\n                    {\n                        type: 'tag' as const,\n                        operator: 'excludes' as const,\n                        value: ['work', 'project']\n                    }\n                ],\n                priority: 50,\n                active: false\n            },\n            {\n                name: 'Today',\n                description: 'Focus on today\\'s items',\n                filters: [\n                    {\n                        type: 'timeframe' as const,\n                        operator: 'equals' as const,\n                        value: new Date().toISOString().split('T')[0]\n                    }\n                ],\n                priority: 75,\n                active: false\n            },\n            {\n                name: 'This Week',\n                description: 'Focus on this week\\'s items',\n                filters: [\n                    {\n                        type: 'timeframe' as const,\n                        operator: 'between' as const,\n                        value: [\n                            this.getWeekStart(),\n                            this.getWeekEnd()\n                        ]\n                    }\n                ],\n                priority: 60,\n                active: false\n            }\n        ];\n        \n        for (const config of defaults) {\n            const focusResult = ExoFocus.create({\n                ...config,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            });\n            \n            if (focusResult.isSuccess) {\n                const focus = focusResult.getValue();\n                this.allFocuses.set(focus.id, focus);\n                \n                if (focus.active) {\n                    this.activeFocus = focus;\n                }\n            }\n        }\n        \n        await this.saveFocuses();\n    }\n    \n    /**\n     * Save all focus configurations\n     */\n    private async saveFocuses(): Promise<void> {\n        if (!this.app?.vault?.adapter) {\n            return;\n        }\n        \n        try {\n            const configs = Array.from(this.allFocuses.values()).map(f => f.toJSON());\n            \n            await this.app.vault.adapter.write(\n                this.focusConfigPath,\n                JSON.stringify(configs, null, 2)\n            );\n            \n            // Save active focus separately for quick access\n            if (this.activeFocus) {\n                await this.app.vault.adapter.write(\n                    this.focusFilePath,\n                    JSON.stringify({\n                        activeId: this.activeFocus.id,\n                        name: this.activeFocus.name,\n                        filters: this.activeFocus.filters,\n                        timestamp: new Date().toISOString()\n                    }, null, 2)\n                );\n            }\n        } catch (error) {\n            // Log error but don't throw - allow operation to continue\n            console.error('Failed to save focus configuration:', error);\n        }\n    }\n    \n    /**\n     * Get active focus\n     */\n    getActiveFocus(): ExoFocus | null {\n        return this.activeFocus;\n    }\n    \n    /**\n     * Set active focus by ID\n     */\n    async setActiveFocus(focusId: string): Promise<Result<void>> {\n        const focus = this.allFocuses.get(focusId);\n        if (!focus) {\n            return Result.fail<void>('Focus not found');\n        }\n        \n        // Deactivate current focus\n        if (this.activeFocus) {\n            this.activeFocus.deactivate();\n        }\n        \n        // Activate new focus\n        focus.activate();\n        this.activeFocus = focus;\n        \n        await this.saveFocuses();\n        return Result.ok<void>();\n    }\n    \n    /**\n     * Create new focus\n     */\n    async createFocus(\n        name: string,\n        description: string,\n        filters: FocusFilter[]\n    ): Promise<Result<ExoFocus>> {\n        const focusResult = ExoFocus.create({\n            name,\n            description,\n            filters,\n            priority: 50,\n            active: false,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        });\n        \n        if (focusResult.isFailure) {\n            return focusResult;\n        }\n        \n        const focus = focusResult.getValue();\n        this.allFocuses.set(focus.id, focus);\n        \n        await this.saveFocuses();\n        return Result.ok<ExoFocus>(focus);\n    }\n    \n    /**\n     * Update focus\n     */\n    async updateFocus(\n        focusId: string,\n        updates: Partial<{\n            name: string;\n            description: string;\n            filters: FocusFilter[];\n            priority: number;\n        }>\n    ): Promise<Result<void>> {\n        const focus = this.allFocuses.get(focusId);\n        if (!focus) {\n            return Result.fail<void>('Focus not found');\n        }\n        \n        // Update properties\n        if (updates.priority !== undefined) {\n            const result = focus.updatePriority(updates.priority);\n            if (result.isFailure) {\n                return result;\n            }\n        }\n        \n        // For other updates, we'd need to add methods to ExoFocus\n        // or recreate the focus with new properties\n        \n        await this.saveFocuses();\n        return Result.ok<void>();\n    }\n    \n    /**\n     * Delete focus\n     */\n    async deleteFocus(focusId: string): Promise<Result<void>> {\n        const focus = this.allFocuses.get(focusId);\n        if (!focus) {\n            return Result.fail<void>('Focus not found');\n        }\n        \n        if (focus === this.activeFocus) {\n            // Switch to \"All\" focus\n            const allFocus = Array.from(this.allFocuses.values())\n                .find(f => f.name === 'All');\n            if (allFocus) {\n                this.activeFocus = allFocus;\n                allFocus.activate();\n            } else {\n                this.activeFocus = null;\n            }\n        }\n        \n        this.allFocuses.delete(focusId);\n        await this.saveFocuses();\n        return Result.ok<void>();\n    }\n    \n    /**\n     * Get all focuses\n     */\n    getAllFocuses(): ExoFocus[] {\n        return Array.from(this.allFocuses.values());\n    }\n    \n    /**\n     * Filter assets based on active focus\n     */\n    filterAssets(assets: any[]): any[] {\n        if (!this.activeFocus) {\n            return assets;\n        }\n        \n        return assets.filter(asset => this.activeFocus!.matchesAsset(asset));\n    }\n    \n    /**\n     * Filter triples based on active focus\n     */\n    filterTriples(triples: Triple[]): Triple[] {\n        if (!this.activeFocus) {\n            return triples;\n        }\n        \n        return triples.filter(triple => {\n            // Convert Triple to plain object for matchesTriple\n            const tripleObj = {\n                subject: triple.getSubject().toString(),\n                predicate: triple.getPredicate().toString(),\n                object: triple.getObject().toString()\n            };\n            return this.activeFocus!.matchesTriple(tripleObj);\n        });\n    }\n    \n    /**\n     * Filter files based on active focus\n     */\n    async filterFiles(files: TFile[]): Promise<TFile[]> {\n        if (!this.activeFocus) {\n            return files;\n        }\n        \n        const filteredFiles: TFile[] = [];\n        \n        for (const file of files) {\n            const cache = this.app.metadataCache.getFileCache(file);\n            if (cache?.frontmatter) {\n                if (this.activeFocus.matchesAsset(cache.frontmatter)) {\n                    filteredFiles.push(file);\n                }\n            }\n        }\n        \n        return filteredFiles;\n    }\n    \n    /**\n     * Apply focus to SPARQL query results\n     */\n    filterSPARQLResults(results: any[]): any[] {\n        if (!this.activeFocus) {\n            return results;\n        }\n        \n        return results.filter(result => {\n            // Check if result is a triple\n            if (result.subject && result.predicate && result.object) {\n                return this.activeFocus!.matchesTriple(result);\n            }\n            \n            // Otherwise treat as asset\n            return this.activeFocus!.matchesAsset(result);\n        });\n    }\n    \n    /**\n     * Get focus statistics\n     */\n    async getFocusStatistics(): Promise<{\n        totalAssets: number;\n        filteredAssets: number;\n        totalTriples: number;\n        filteredTriples: number;\n        activeFocus: string;\n    }> {\n        const files = this.app.vault.getMarkdownFiles();\n        const allAssets = files.length;\n        \n        const filteredFiles = await this.filterFiles(files);\n        const filteredAssets = filteredFiles.length;\n        \n        const allTriples = this.graph.match(null, null, null);\n        const totalTriples = allTriples.length;\n        \n        const filteredTriples = this.filterTriples(allTriples);\n        const filteredTriplesCount = filteredTriples.length;\n        \n        return {\n            totalAssets: allAssets,\n            filteredAssets,\n            totalTriples,\n            filteredTriples: filteredTriplesCount,\n            activeFocus: this.activeFocus?.name || 'None'\n        };\n    }\n    \n    /**\n     * Helper: Get start of current week\n     */\n    private getWeekStart(): string {\n        const now = new Date();\n        const dayOfWeek = now.getDay();\n        const diff = now.getDate() - dayOfWeek + (dayOfWeek === 0 ? -6 : 1);\n        const weekStart = new Date(now.setDate(diff));\n        weekStart.setHours(0, 0, 0, 0);\n        return weekStart.toISOString();\n    }\n    \n    /**\n     * Helper: Get end of current week\n     */\n    private getWeekEnd(): string {\n        const now = new Date();\n        const dayOfWeek = now.getDay();\n        const diff = now.getDate() - dayOfWeek + 7;\n        const weekEnd = new Date(now.setDate(diff));\n        weekEnd.setHours(23, 59, 59, 999);\n        return weekEnd.toISOString();\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b734489cf625bb1659b271f74e8f16bc5bbedd8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1j76w81z0e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1j76w81z0e();
cov_1j76w81z0e().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1j76w81z0e().s[1]++;
exports.ExoFocusService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1j76w81z0e().s[2]++, require("tslib"));
const ExoFocus_1 =
/* istanbul ignore next */
(cov_1j76w81z0e().s[3]++, require("../../domain/entities/ExoFocus"));
const Result_1 =
/* istanbul ignore next */
(cov_1j76w81z0e().s[4]++, require("../../domain/core/Result"));
class ExoFocusService {
  constructor(app, graph) {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[0]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1j76w81z0e().s[5]++;
    this.app = app;
    /* istanbul ignore next */
    cov_1j76w81z0e().s[6]++;
    this.graph = graph;
    /* istanbul ignore next */
    cov_1j76w81z0e().s[7]++;
    this.activeFocus = null;
    /* istanbul ignore next */
    cov_1j76w81z0e().s[8]++;
    this.allFocuses = new Map();
    /* istanbul ignore next */
    cov_1j76w81z0e().s[9]++;
    this.focusFilePath = '.exocortex/focus.json';
    /* istanbul ignore next */
    cov_1j76w81z0e().s[10]++;
    this.focusConfigPath = '.exocortex/focus-configs.json';
    // Only load focuses if vault adapter is available
    /* istanbul ignore next */
    cov_1j76w81z0e().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[2][0]++, (_b =
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[4][0]++, (_a = this.app) === null) ||
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[4][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[3][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[3][1]++, _a.vault)) === null) ||
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[2][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[1][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[1][1]++, _b.adapter)) {
      /* istanbul ignore next */
      cov_1j76w81z0e().b[0][0]++;
      cov_1j76w81z0e().s[12]++;
      this.loadFocuses();
    } else
    /* istanbul ignore next */
    {
      cov_1j76w81z0e().b[0][1]++;
    }
  }
  /**
   * Load all focus configurations from vault
   */
  loadFocuses() {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[1]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1j76w81z0e().s[13]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[2]++;
      cov_1j76w81z0e().s[14]++;
      if (!(
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[7][0]++, (_b =
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[9][0]++, (_a = this.app) === null) ||
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[9][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[8][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[8][1]++, _a.vault)) === null) ||
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[7][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[6][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[6][1]++, _b.adapter))) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[5][0]++;
        cov_1j76w81z0e().s[15]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[5][1]++;
      }
      cov_1j76w81z0e().s[16]++;
      try {
        const content =
        /* istanbul ignore next */
        (cov_1j76w81z0e().s[17]++, yield this.app.vault.adapter.read(this.focusConfigPath));
        const configs =
        /* istanbul ignore next */
        (cov_1j76w81z0e().s[18]++, JSON.parse(content));
        /* istanbul ignore next */
        cov_1j76w81z0e().s[19]++;
        for (const config of configs) {
          const focusResult =
          /* istanbul ignore next */
          (cov_1j76w81z0e().s[20]++, ExoFocus_1.ExoFocus.fromJSON(config));
          /* istanbul ignore next */
          cov_1j76w81z0e().s[21]++;
          if (focusResult.isSuccess) {
            /* istanbul ignore next */
            cov_1j76w81z0e().b[10][0]++;
            const focus =
            /* istanbul ignore next */
            (cov_1j76w81z0e().s[22]++, focusResult.getValue());
            /* istanbul ignore next */
            cov_1j76w81z0e().s[23]++;
            this.allFocuses.set(focus.id, focus);
            /* istanbul ignore next */
            cov_1j76w81z0e().s[24]++;
            if (focus.active) {
              /* istanbul ignore next */
              cov_1j76w81z0e().b[11][0]++;
              cov_1j76w81z0e().s[25]++;
              this.activeFocus = focus;
            } else
            /* istanbul ignore next */
            {
              cov_1j76w81z0e().b[11][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_1j76w81z0e().b[10][1]++;
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1j76w81z0e().s[26]++;
        // File doesn't exist, create default focuses
        yield this.createDefaultFocuses();
      }
    });
  }
  /**
   * Create default focus configurations
   */
  createDefaultFocuses() {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[3]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1j76w81z0e().s[27]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[4]++;
      cov_1j76w81z0e().s[28]++;
      if (!(
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[14][0]++, (_b =
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[16][0]++, (_a = this.app) === null) ||
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[16][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[15][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[15][1]++, _a.vault)) === null) ||
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[14][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[13][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[13][1]++, _b.adapter))) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[12][0]++;
        cov_1j76w81z0e().s[29]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[12][1]++;
      }
      const defaults =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[30]++, [{
        name: 'All',
        description: 'No filtering - show all knowledge',
        filters: [],
        priority: 0,
        active: true
      }, {
        name: 'Work',
        description: 'Work-related knowledge only',
        filters: [{
          type: 'tag',
          operator: 'includes',
          value: ['work', 'project', 'task', 'meeting']
        }, {
          type: 'class',
          operator: 'includes',
          value: ['ems__Task', 'ems__Project', 'ems__Meeting']
        }],
        priority: 50,
        active: false
      }, {
        name: 'Personal',
        description: 'Personal knowledge only',
        filters: [{
          type: 'tag',
          operator: 'includes',
          value: ['personal', 'family', 'health', 'hobby']
        }, {
          type: 'tag',
          operator: 'excludes',
          value: ['work', 'project']
        }],
        priority: 50,
        active: false
      }, {
        name: 'Today',
        description: 'Focus on today\'s items',
        filters: [{
          type: 'timeframe',
          operator: 'equals',
          value: new Date().toISOString().split('T')[0]
        }],
        priority: 75,
        active: false
      }, {
        name: 'This Week',
        description: 'Focus on this week\'s items',
        filters: [{
          type: 'timeframe',
          operator: 'between',
          value: [this.getWeekStart(), this.getWeekEnd()]
        }],
        priority: 60,
        active: false
      }]);
      /* istanbul ignore next */
      cov_1j76w81z0e().s[31]++;
      for (const config of defaults) {
        const focusResult =
        /* istanbul ignore next */
        (cov_1j76w81z0e().s[32]++, ExoFocus_1.ExoFocus.create(Object.assign(Object.assign({}, config), {
          createdAt: new Date(),
          updatedAt: new Date()
        })));
        /* istanbul ignore next */
        cov_1j76w81z0e().s[33]++;
        if (focusResult.isSuccess) {
          /* istanbul ignore next */
          cov_1j76w81z0e().b[17][0]++;
          const focus =
          /* istanbul ignore next */
          (cov_1j76w81z0e().s[34]++, focusResult.getValue());
          /* istanbul ignore next */
          cov_1j76w81z0e().s[35]++;
          this.allFocuses.set(focus.id, focus);
          /* istanbul ignore next */
          cov_1j76w81z0e().s[36]++;
          if (focus.active) {
            /* istanbul ignore next */
            cov_1j76w81z0e().b[18][0]++;
            cov_1j76w81z0e().s[37]++;
            this.activeFocus = focus;
          } else
          /* istanbul ignore next */
          {
            cov_1j76w81z0e().b[18][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1j76w81z0e().b[17][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1j76w81z0e().s[38]++;
      yield this.saveFocuses();
    });
  }
  /**
   * Save all focus configurations
   */
  saveFocuses() {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[5]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1j76w81z0e().s[39]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[6]++;
      cov_1j76w81z0e().s[40]++;
      if (!(
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[21][0]++, (_b =
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[23][0]++, (_a = this.app) === null) ||
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[23][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[22][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[22][1]++, _a.vault)) === null) ||
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[21][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[20][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[20][1]++, _b.adapter))) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[19][0]++;
        cov_1j76w81z0e().s[41]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[19][1]++;
      }
      cov_1j76w81z0e().s[42]++;
      try {
        const configs =
        /* istanbul ignore next */
        (cov_1j76w81z0e().s[43]++, Array.from(this.allFocuses.values()).map(f => {
          /* istanbul ignore next */
          cov_1j76w81z0e().f[7]++;
          cov_1j76w81z0e().s[44]++;
          return f.toJSON();
        }));
        /* istanbul ignore next */
        cov_1j76w81z0e().s[45]++;
        yield this.app.vault.adapter.write(this.focusConfigPath, JSON.stringify(configs, null, 2));
        // Save active focus separately for quick access
        /* istanbul ignore next */
        cov_1j76w81z0e().s[46]++;
        if (this.activeFocus) {
          /* istanbul ignore next */
          cov_1j76w81z0e().b[24][0]++;
          cov_1j76w81z0e().s[47]++;
          yield this.app.vault.adapter.write(this.focusFilePath, JSON.stringify({
            activeId: this.activeFocus.id,
            name: this.activeFocus.name,
            filters: this.activeFocus.filters,
            timestamp: new Date().toISOString()
          }, null, 2));
        } else
        /* istanbul ignore next */
        {
          cov_1j76w81z0e().b[24][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1j76w81z0e().s[48]++;
        // Log error but don't throw - allow operation to continue
        console.error('Failed to save focus configuration:', error);
      }
    });
  }
  /**
   * Get active focus
   */
  getActiveFocus() {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[8]++;
    cov_1j76w81z0e().s[49]++;
    return this.activeFocus;
  }
  /**
   * Set active focus by ID
   */
  setActiveFocus(focusId) {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[9]++;
    cov_1j76w81z0e().s[50]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[10]++;
      const focus =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[51]++, this.allFocuses.get(focusId));
      /* istanbul ignore next */
      cov_1j76w81z0e().s[52]++;
      if (!focus) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[25][0]++;
        cov_1j76w81z0e().s[53]++;
        return Result_1.Result.fail('Focus not found');
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[25][1]++;
      }
      // Deactivate current focus
      cov_1j76w81z0e().s[54]++;
      if (this.activeFocus) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[26][0]++;
        cov_1j76w81z0e().s[55]++;
        this.activeFocus.deactivate();
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[26][1]++;
      }
      // Activate new focus
      cov_1j76w81z0e().s[56]++;
      focus.activate();
      /* istanbul ignore next */
      cov_1j76w81z0e().s[57]++;
      this.activeFocus = focus;
      /* istanbul ignore next */
      cov_1j76w81z0e().s[58]++;
      yield this.saveFocuses();
      /* istanbul ignore next */
      cov_1j76w81z0e().s[59]++;
      return Result_1.Result.ok();
    });
  }
  /**
   * Create new focus
   */
  createFocus(name, description, filters) {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[11]++;
    cov_1j76w81z0e().s[60]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[12]++;
      const focusResult =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[61]++, ExoFocus_1.ExoFocus.create({
        name,
        description,
        filters,
        priority: 50,
        active: false,
        createdAt: new Date(),
        updatedAt: new Date()
      }));
      /* istanbul ignore next */
      cov_1j76w81z0e().s[62]++;
      if (focusResult.isFailure) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[27][0]++;
        cov_1j76w81z0e().s[63]++;
        return focusResult;
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[27][1]++;
      }
      const focus =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[64]++, focusResult.getValue());
      /* istanbul ignore next */
      cov_1j76w81z0e().s[65]++;
      this.allFocuses.set(focus.id, focus);
      /* istanbul ignore next */
      cov_1j76w81z0e().s[66]++;
      yield this.saveFocuses();
      /* istanbul ignore next */
      cov_1j76w81z0e().s[67]++;
      return Result_1.Result.ok(focus);
    });
  }
  /**
   * Update focus
   */
  updateFocus(focusId, updates) {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[13]++;
    cov_1j76w81z0e().s[68]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[14]++;
      const focus =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[69]++, this.allFocuses.get(focusId));
      /* istanbul ignore next */
      cov_1j76w81z0e().s[70]++;
      if (!focus) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[28][0]++;
        cov_1j76w81z0e().s[71]++;
        return Result_1.Result.fail('Focus not found');
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[28][1]++;
      }
      // Update properties
      cov_1j76w81z0e().s[72]++;
      if (updates.priority !== undefined) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[29][0]++;
        const result =
        /* istanbul ignore next */
        (cov_1j76w81z0e().s[73]++, focus.updatePriority(updates.priority));
        /* istanbul ignore next */
        cov_1j76w81z0e().s[74]++;
        if (result.isFailure) {
          /* istanbul ignore next */
          cov_1j76w81z0e().b[30][0]++;
          cov_1j76w81z0e().s[75]++;
          return result;
        } else
        /* istanbul ignore next */
        {
          cov_1j76w81z0e().b[30][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[29][1]++;
      }
      // For other updates, we'd need to add methods to ExoFocus
      // or recreate the focus with new properties
      cov_1j76w81z0e().s[76]++;
      yield this.saveFocuses();
      /* istanbul ignore next */
      cov_1j76w81z0e().s[77]++;
      return Result_1.Result.ok();
    });
  }
  /**
   * Delete focus
   */
  deleteFocus(focusId) {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[15]++;
    cov_1j76w81z0e().s[78]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[16]++;
      const focus =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[79]++, this.allFocuses.get(focusId));
      /* istanbul ignore next */
      cov_1j76w81z0e().s[80]++;
      if (!focus) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[31][0]++;
        cov_1j76w81z0e().s[81]++;
        return Result_1.Result.fail('Focus not found');
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[31][1]++;
      }
      cov_1j76w81z0e().s[82]++;
      if (focus === this.activeFocus) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[32][0]++;
        // Switch to "All" focus
        const allFocus =
        /* istanbul ignore next */
        (cov_1j76w81z0e().s[83]++, Array.from(this.allFocuses.values()).find(f => {
          /* istanbul ignore next */
          cov_1j76w81z0e().f[17]++;
          cov_1j76w81z0e().s[84]++;
          return f.name === 'All';
        }));
        /* istanbul ignore next */
        cov_1j76w81z0e().s[85]++;
        if (allFocus) {
          /* istanbul ignore next */
          cov_1j76w81z0e().b[33][0]++;
          cov_1j76w81z0e().s[86]++;
          this.activeFocus = allFocus;
          /* istanbul ignore next */
          cov_1j76w81z0e().s[87]++;
          allFocus.activate();
        } else {
          /* istanbul ignore next */
          cov_1j76w81z0e().b[33][1]++;
          cov_1j76w81z0e().s[88]++;
          this.activeFocus = null;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[32][1]++;
      }
      cov_1j76w81z0e().s[89]++;
      this.allFocuses.delete(focusId);
      /* istanbul ignore next */
      cov_1j76w81z0e().s[90]++;
      yield this.saveFocuses();
      /* istanbul ignore next */
      cov_1j76w81z0e().s[91]++;
      return Result_1.Result.ok();
    });
  }
  /**
   * Get all focuses
   */
  getAllFocuses() {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[18]++;
    cov_1j76w81z0e().s[92]++;
    return Array.from(this.allFocuses.values());
  }
  /**
   * Filter assets based on active focus
   */
  filterAssets(assets) {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[19]++;
    cov_1j76w81z0e().s[93]++;
    if (!this.activeFocus) {
      /* istanbul ignore next */
      cov_1j76w81z0e().b[34][0]++;
      cov_1j76w81z0e().s[94]++;
      return assets;
    } else
    /* istanbul ignore next */
    {
      cov_1j76w81z0e().b[34][1]++;
    }
    cov_1j76w81z0e().s[95]++;
    return assets.filter(asset => {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[20]++;
      cov_1j76w81z0e().s[96]++;
      return this.activeFocus.matchesAsset(asset);
    });
  }
  /**
   * Filter triples based on active focus
   */
  filterTriples(triples) {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[21]++;
    cov_1j76w81z0e().s[97]++;
    if (!this.activeFocus) {
      /* istanbul ignore next */
      cov_1j76w81z0e().b[35][0]++;
      cov_1j76w81z0e().s[98]++;
      return triples;
    } else
    /* istanbul ignore next */
    {
      cov_1j76w81z0e().b[35][1]++;
    }
    cov_1j76w81z0e().s[99]++;
    return triples.filter(triple => {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[22]++;
      // Convert Triple to plain object for matchesTriple
      const tripleObj =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[100]++, {
        subject: triple.getSubject().toString(),
        predicate: triple.getPredicate().toString(),
        object: triple.getObject().toString()
      });
      /* istanbul ignore next */
      cov_1j76w81z0e().s[101]++;
      return this.activeFocus.matchesTriple(tripleObj);
    });
  }
  /**
   * Filter files based on active focus
   */
  filterFiles(files) {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[23]++;
    cov_1j76w81z0e().s[102]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[24]++;
      cov_1j76w81z0e().s[103]++;
      if (!this.activeFocus) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[36][0]++;
        cov_1j76w81z0e().s[104]++;
        return files;
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[36][1]++;
      }
      const filteredFiles =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[105]++, []);
      /* istanbul ignore next */
      cov_1j76w81z0e().s[106]++;
      for (const file of files) {
        const cache =
        /* istanbul ignore next */
        (cov_1j76w81z0e().s[107]++, this.app.metadataCache.getFileCache(file));
        /* istanbul ignore next */
        cov_1j76w81z0e().s[108]++;
        if (
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[39][0]++, cache === null) ||
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[39][1]++, cache === void 0) ?
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[38][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[38][1]++, cache.frontmatter)) {
          /* istanbul ignore next */
          cov_1j76w81z0e().b[37][0]++;
          cov_1j76w81z0e().s[109]++;
          if (this.activeFocus.matchesAsset(cache.frontmatter)) {
            /* istanbul ignore next */
            cov_1j76w81z0e().b[40][0]++;
            cov_1j76w81z0e().s[110]++;
            filteredFiles.push(file);
          } else
          /* istanbul ignore next */
          {
            cov_1j76w81z0e().b[40][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1j76w81z0e().b[37][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1j76w81z0e().s[111]++;
      return filteredFiles;
    });
  }
  /**
   * Apply focus to SPARQL query results
   */
  filterSPARQLResults(results) {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[25]++;
    cov_1j76w81z0e().s[112]++;
    if (!this.activeFocus) {
      /* istanbul ignore next */
      cov_1j76w81z0e().b[41][0]++;
      cov_1j76w81z0e().s[113]++;
      return results;
    } else
    /* istanbul ignore next */
    {
      cov_1j76w81z0e().b[41][1]++;
    }
    cov_1j76w81z0e().s[114]++;
    return results.filter(result => {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[26]++;
      cov_1j76w81z0e().s[115]++;
      // Check if result is a triple
      if (
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[43][0]++, result.subject) &&
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[43][1]++, result.predicate) &&
      /* istanbul ignore next */
      (cov_1j76w81z0e().b[43][2]++, result.object)) {
        /* istanbul ignore next */
        cov_1j76w81z0e().b[42][0]++;
        cov_1j76w81z0e().s[116]++;
        return this.activeFocus.matchesTriple(result);
      } else
      /* istanbul ignore next */
      {
        cov_1j76w81z0e().b[42][1]++;
      }
      // Otherwise treat as asset
      cov_1j76w81z0e().s[117]++;
      return this.activeFocus.matchesAsset(result);
    });
  }
  /**
   * Get focus statistics
   */
  getFocusStatistics() {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[27]++;
    var _a;
    /* istanbul ignore next */
    cov_1j76w81z0e().s[118]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1j76w81z0e().f[28]++;
      const files =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[119]++, this.app.vault.getMarkdownFiles());
      const allAssets =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[120]++, files.length);
      const filteredFiles =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[121]++, yield this.filterFiles(files));
      const filteredAssets =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[122]++, filteredFiles.length);
      const allTriples =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[123]++, this.graph.match(null, null, null));
      const totalTriples =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[124]++, allTriples.length);
      const filteredTriples =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[125]++, this.filterTriples(allTriples));
      const filteredTriplesCount =
      /* istanbul ignore next */
      (cov_1j76w81z0e().s[126]++, filteredTriples.length);
      /* istanbul ignore next */
      cov_1j76w81z0e().s[127]++;
      return {
        totalAssets: allAssets,
        filteredAssets,
        totalTriples,
        filteredTriples: filteredTriplesCount,
        activeFocus:
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[44][0]++,
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[46][0]++, (_a = this.activeFocus) === null) ||
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[46][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[45][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[45][1]++, _a.name)) ||
        /* istanbul ignore next */
        (cov_1j76w81z0e().b[44][1]++, 'None')
      };
    });
  }
  /**
   * Helper: Get start of current week
   */
  getWeekStart() {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[29]++;
    const now =
    /* istanbul ignore next */
    (cov_1j76w81z0e().s[128]++, new Date());
    const dayOfWeek =
    /* istanbul ignore next */
    (cov_1j76w81z0e().s[129]++, now.getDay());
    const diff =
    /* istanbul ignore next */
    (cov_1j76w81z0e().s[130]++, now.getDate() - dayOfWeek + (dayOfWeek === 0 ?
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[47][0]++, -6) :
    /* istanbul ignore next */
    (cov_1j76w81z0e().b[47][1]++, 1)));
    const weekStart =
    /* istanbul ignore next */
    (cov_1j76w81z0e().s[131]++, new Date(now.setDate(diff)));
    /* istanbul ignore next */
    cov_1j76w81z0e().s[132]++;
    weekStart.setHours(0, 0, 0, 0);
    /* istanbul ignore next */
    cov_1j76w81z0e().s[133]++;
    return weekStart.toISOString();
  }
  /**
   * Helper: Get end of current week
   */
  getWeekEnd() {
    /* istanbul ignore next */
    cov_1j76w81z0e().f[30]++;
    const now =
    /* istanbul ignore next */
    (cov_1j76w81z0e().s[134]++, new Date());
    const dayOfWeek =
    /* istanbul ignore next */
    (cov_1j76w81z0e().s[135]++, now.getDay());
    const diff =
    /* istanbul ignore next */
    (cov_1j76w81z0e().s[136]++, now.getDate() - dayOfWeek + 7);
    const weekEnd =
    /* istanbul ignore next */
    (cov_1j76w81z0e().s[137]++, new Date(now.setDate(diff)));
    /* istanbul ignore next */
    cov_1j76w81z0e().s[138]++;
    weekEnd.setHours(23, 59, 59, 999);
    /* istanbul ignore next */
    cov_1j76w81z0e().s[139]++;
    return weekEnd.toISOString();
  }
}
/* istanbul ignore next */
cov_1j76w81z0e().s[140]++;
exports.ExoFocusService = ExoFocusService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,