{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateChildTaskUseCase.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateChildTaskUseCase.ts"],"sourcesContent":["import { Asset } from \"../../domain/entities/Asset\";\nimport { AssetId } from \"../../domain/value-objects/AssetId\";\nimport { ClassName } from \"../../domain/value-objects/ClassName\";\nimport { OntologyPrefix } from \"../../domain/value-objects/OntologyPrefix\";\nimport { IAssetRepository } from \"../../domain/repositories/IAssetRepository\";\nimport { CreateAssetUseCase } from \"./CreateAssetUseCase\";\nimport { Result } from \"../../domain/core/Result\";\n\nexport class CreateChildTaskUseCase {\n  constructor(\n    private readonly assetRepository: IAssetRepository,\n    private readonly createAssetUseCase: CreateAssetUseCase,\n  ) {}\n\n  async execute(\n    request: CreateChildTaskRequest,\n  ): Promise<CreateChildTaskResponse> {\n    try {\n      const projectIdResult = AssetId.create(request.projectAssetId);\n      if (projectIdResult.isFailure) {\n        return {\n          success: false,\n          message: `Invalid project ID: ${projectIdResult.error}`,\n        };\n      }\n\n      const projectAsset = await this.assetRepository.findById(\n        projectIdResult.getValue(),\n      );\n      if (!projectAsset) {\n        return {\n          success: false,\n          message: \"Project not found\",\n        };\n      }\n\n      const projectClassName = projectAsset.getClassName();\n      if (\n        !projectClassName.equals(ClassName.create(\"ems__Project\").getValue())\n      ) {\n        return {\n          success: false,\n          message: \"Asset is not a project\",\n        };\n      }\n\n      const taskId = AssetId.generate();\n      const taskProperties = this.generateTaskProperties(projectAsset, taskId);\n\n      const createResult = await this.createAssetUseCase.execute({\n        title: taskId.toString(),\n        className: \"ems__Task\",\n        ontologyPrefix: projectAsset.getOntologyPrefix().toString(),\n        properties: taskProperties,\n      });\n\n      if (!createResult.success) {\n        return {\n          success: false,\n          message: createResult.message,\n        };\n      }\n\n      return {\n        success: true,\n        taskId: createResult.assetId,\n        taskFilePath: `${createResult.assetId}.md`,\n        message: `Task created successfully for project \"${projectAsset.getTitle()}\"`,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `Failed to create task: ${error.message}`,\n      };\n    }\n  }\n\n  private generateTaskProperties(\n    parentProject: Asset,\n    taskId: AssetId,\n  ): Record<string, any> {\n    return {\n      exo__Asset_uid: taskId.toString(),\n      exo__Asset_label: `Task for ${parentProject.getTitle()}`,\n      exo__Asset_isDefinedBy: `[[!${parentProject.getOntologyPrefix().toString()}]]`,\n      exo__Asset_createdAt: new Date().toISOString().replace(/\\.\\d{3}Z$/, \"\"),\n      exo__Instance_class: [\"[[ems__Task]]\"],\n      exo__Effort_parent: `[[${parentProject.getTitle()}]]`,\n      ems__Task_status: \"[[ems__TaskStatus - TODO]]\",\n      ems__Task_priority: \"[[ems__Priority - Medium]]\",\n      ems__Task_project: `[[${parentProject.getTitle()}]]`,\n    };\n  }\n}\n\nexport interface CreateChildTaskRequest {\n  projectAssetId: string;\n  context?: {\n    activeFile?: string;\n    selection?: string;\n  };\n}\n\nexport interface CreateChildTaskResponse {\n  success: boolean;\n  taskId?: string;\n  taskFilePath?: string;\n  message: string;\n}\n"],"version":3}