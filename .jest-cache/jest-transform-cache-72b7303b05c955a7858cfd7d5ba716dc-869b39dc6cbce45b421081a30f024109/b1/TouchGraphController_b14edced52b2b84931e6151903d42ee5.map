{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/mobile/TouchGraphController.ts","mappings":";;;AAAA,kFAA+E;AAiE/E;;;GAGG;AACH,MAAa,oBAAoB;IAuB/B,YACE,OAAoB,EACpB,SAA6B,EAAE,EAC/B,YAAmC,EAAE;QAlBtB,kBAAa,GAAiC;YAC7D,eAAe,EAAE,IAAI;YACrB,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,IAAI;YACvB,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,GAAG;YACpB,cAAc,EAAE,GAAG;YACnB,OAAO,EAAE,GAAG;YACZ,OAAO,EAAE,GAAG;YACZ,mBAAmB,EAAE,GAAG;YACxB,iBAAiB,EAAE,GAAG;YACtB,aAAa,EAAE,IAAI;YACnB,UAAU,EAAE,IAAI;SACjB,CAAC;QAOA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,MAAM,EAAE,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAErD,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED;;OAEG;IACK,yBAAyB;QAC/B,OAAO;YACL,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,CAAC;YACZ,OAAO,EAAE,IAAI,GAAG,EAAE;YAClB,QAAQ,EAAE,CAAC;YACX,WAAW,EAAE,CAAC;SACf,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,wBAAwB;QAC9B,IAAI,mCAAgB,CAAC,KAAK,EAAE,IAAI,SAAS,IAAI,SAAS,EAAE;YACtD,IAAI,CAAC,cAAc,GAAG;gBACpB,KAAK,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC;gBACpC,MAAM,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC;gBACrC,KAAK,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC;gBACpC,SAAS,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;aACxC,CAAC;SACH;IACH,CAAC;IAED;;OAEG;IACK,kBAAkB;QACxB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,GAAG,MAAM,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IACrC,CAAC;IAED;;OAEG;IACK,oBAAoB;QAC1B,oCAAoC;QACpC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,YAAY,EACZ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAChC,EAAE,OAAO,EAAE,KAAK,EAAE,CACnB,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAC/B,EAAE,OAAO,EAAE,KAAK,EAAE,CACnB,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACxE,OAAO,EAAE,KAAK;SACf,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,aAAa,EACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EACjC,EAAE,OAAO,EAAE,KAAK,EAAE,CACnB,CAAC;QAEF,sCAAsC;QACtC,IAAI,cAAc,IAAI,MAAM,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,aAAa,EACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,aAAa,EACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,eAAe,EACf,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,CAAC;SACH;QAED,sCAAsC;QACtC,IAAI,CAAC,mCAAgB,CAAC,QAAQ,EAAE,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACxE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAClE,OAAO,EAAE,KAAK;aACf,CAAC,CAAC;SACJ;QAED,qCAAqC;QACrC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,EAAE;YACjD,IAAI,mCAAgB,CAAC,QAAQ,EAAE,EAAE;gBAC/B,CAAC,CAAC,cAAc,EAAE,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,gBAAgB,CAAC,KAAiB;QACxC,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE/B,wBAAwB;QACxB,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACxB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBAC9C,EAAE,EAAE,KAAK,CAAC,UAAU;gBACpB,CAAC,EAAE,KAAK,CAAC,OAAO;gBAChB,CAAC,EAAE,KAAK,CAAC,OAAO;gBAChB,SAAS,EAAE,WAAW;aACvB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACtD;aAAM,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SAC7C;IACH,CAAC;IAED;;OAEG;IACK,sBAAsB,CAAC,KAAY,EAAE,SAAiB;QAC5D,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;QAClD,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACpC,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QAEnC,uBAAuB;QACvB,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;YACjC,MAAM,gBAAgB,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YACnE,IAAI,gBAAgB,GAAG,GAAG,EAAE;gBAC1B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;gBAC7B,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,CAAC,EAAE;oBACpC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,OAAO;iBACR;aACF;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;aAChC;YACD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,SAAS,CAAC;SAC3C;QAED,kCAAkC;QAClC,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAC7C,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SAChD;QAED,yBAAyB;QACzB,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;YAC/B,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;gBACxD,IACE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC;oBACpC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAC3B;oBACA,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5B;YACH,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;SACnC;QAED,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;IAC1C,CAAC;IAED;;OAEG;IACK,gBAAgB,CAAC,OAAgB,EAAE,SAAiB;QAC1D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe;YAAE,OAAO;QAEzC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5D,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,OAAO,CAAC;QACjC,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,QAAQ,CAAC;QAC7C,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,MAAM,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;QAExC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,KAAiB;QACvC,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE/B,yBAAyB;QACzB,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC3B,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC3B,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACrD;aAAM,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,OAAO,EAAE;YACrE,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SAC5C;IACH,CAAC;IAED;;OAEG;IACK,qBAAqB,CAAC,KAAY,EAAE,SAAiB;QAC3D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe;YACrE,OAAO;QAET,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;QAClD,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACpC,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QAEnC,MAAM,MAAM,GACV,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;QACzE,MAAM,MAAM,GACV,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;QAEzE,oCAAoC;QACpC,IACE,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ;YAC3B,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAC9C;YACA,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACnC;QAED,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,KAAK,EAAE;YACpC,+BAA+B;YAC/B,MAAM,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;YAC1D,IAAI,SAAS,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG;oBAC9B,CAAC,EAAE,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,IAAI;oBAC9B,CAAC,EAAE,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,IAAI;iBAC/B,CAAC;aACH;YAED,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SAC5C;QAED,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAC/C,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,OAAgB,EAAE,SAAiB;QACzD,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe;YAC5B,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe;YAClC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAChC;YACA,OAAO;SACR;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5D,IAAI,KAAK,GAAG,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC;QACzD,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QAErC,yBAAyB;QACzB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;QAE5E,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;QAClD,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACrC,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QAEpC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACxD,CAAC;IAED;;OAEG;IACK,cAAc,CAAC,KAAiB;QACtC,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC/B,MAAM,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEnD,uBAAuB;QACvB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACjD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;SACvC;aAAM,IACL,gBAAgB,CAAC,MAAM,KAAK,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,OAAO,EAClC;YACA,+BAA+B;YAC/B,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;SACnE;IACH,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,SAAiB;QAC3C,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QAEnC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,KAAK,EAAE;YACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAC/C,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAE9D,2BAA2B;YAC3B,IACE,QAAQ;gBACR,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAC1D;gBACA,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;aACvC;SACF;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,OAAO,EAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC;SAClC;aAAM,IACL,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,CAAC;YAChC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAC3B;YACA,aAAa;YACb,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,CAAC,EAAE;oBACpC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;oBAC9D,IAAI,KAAK,EAAE;wBACT,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;wBAClD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;qBACjE;oBACD,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;YACH,CAAC,EAAE,GAAG,CAAC,CAAC;SACT;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACK,0BAA0B,CAAC,KAAY,EAAE,SAAiB;QAChE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC;QAEjC,wBAAwB;QACxB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG;YAClC,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI;YAC5B,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG;SAC5B,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAE/C,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CACzB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,EACnC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CACpC,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,KAAiB;QACzC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,CAAS,EAAE,CAAS;QAC1C,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,CAAS,EAAE,CAAS;QAC1C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACK,sBAAsB,CAAC,QAAkC;QAC/D,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/B,IAAI,eAAe,GAAG,EAAE,GAAG,QAAQ,EAAE,CAAC;QAEtC,MAAM,OAAO,GAAG,GAAG,EAAE;YACnB,sBAAsB;YACtB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CACxB,eAAe,CAAC,CAAC,GAAG,EAAE,EAAE,QAAQ;YAChC,eAAe,CAAC,CAAC,GAAG,EAAE,CACvB,CAAC;YAEF,iBAAiB;YACjB,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;YAC/C,eAAe,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;YAE/C,sCAAsC;YACtC,IAAI,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;gBACtE,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;aACzD;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IAED;;OAEG;IACK,uBAAuB;QAC7B,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7C,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;SACpC;IACH,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,MAAa,EAAE,MAAa;QACpD,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC3C,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACK,eAAe,CACrB,MAAa,EACb,MAAa;QAEb,OAAO;YACL,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;YACxC,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;SACzC,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,mBAAmB;QACzB,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;YACpC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;YAC/C,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,SAAS,CAAC;SAC9C;IACH,CAAC;IAED;;OAEG;IACK,aAAa;QACnB,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC;IACpC,CAAC;IAED;;OAEG;IACK,iBAAiB;QACvB,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,SAAS,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,SAAS,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,SAAS,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,SAAS,CAAC;IAC5C,CAAC;IAED;;OAEG;IACK,aAAa,CACnB,IAAgD;QAEhD,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;YACpD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;SAC7B;IACH,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,KAAmB;QAC3C,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,EAAE;YACjC,iCAAiC;YACjC,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;SAClC;IACH,CAAC;IAEO,iBAAiB,CAAC,KAAmB;QAC3C,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,EAAE;YACjC,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;SACjC;IACH,CAAC;IAEO,eAAe,CAAC,KAAmB;QACzC,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,EAAE;YACjC,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;SAChC;IACH,CAAC;IAEO,mBAAmB,CAAC,KAAmB;QAC7C,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,EAAE;YACjC,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;SACnC;IACH,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,KAAiB;QACvC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,oBAAoB;YACpB,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;SAClC;IACH,CAAC;IAEO,eAAe,CAAC,KAAiB;QACvC,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;SACjC;IACH,CAAC;IAEO,aAAa,CAAC,KAAiB;QACrC,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;SAChC;IACH,CAAC;IAEO,WAAW,CAAC,KAAiB;QACnC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe;YAAE,OAAO;QAEzC,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;QAClD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1C,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QAEzC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAE3C,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACK,oBAAoB,CAC1B,IAAY,EACZ,MAAqC;QAErC,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YAC5C,UAAU,EAAG,KAAsB,CAAC,SAAS,IAAI,CAAC;YAClD,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,MAAM,EAAE,KAAK,CAAC,MAAM;SACrB,CAAC,CAAQ,CAAC;QAEX,OAAO;YACL,IAAI;YACJ,OAAO;YACP,cAAc,EAAE,OAAO;YACvB,aAAa,EAAE,OAAO;YACtB,cAAc,EAAE,GAAG,EAAE,GAAE,CAAC;YACxB,eAAe,EAAE,GAAG,EAAE,GAAE,CAAC;SACZ,CAAC;IAClB,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,SAAsC;QACjD,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,SAAS,EAAE,CAAC;IACjD,CAAC;IAED;;OAEG;IACH,eAAe,CAAC,YAA4C;QAC1D,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,YAAY,EAAE,CAAC;IAC1D,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,OAAgB;QACzB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;YACtC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;YACxC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;IACH,CAAC;IAED;;OAEG;IACH,eAAe;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,OAAO;QACL,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,6BAA6B;QAC7B,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,YAAY,EACZ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CACjC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,UAAU,EACV,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAC/B,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,aAAa,EACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;QAEF,IAAI,cAAc,IAAI,MAAM,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,aAAa,EACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,aAAa,EACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,eAAe,EACf,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,CAAC;SACH;QAED,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAC9B,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEvE,yBAAyB;QACzB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,GAAG,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;IACjC,CAAC;CACF;AA3uBD,oDA2uBC;AAED;;GAEG;AACH,SAAgB,0BAA0B,CACxC,MAAyB,EACzB,OAAoB,EACpB,SAA6B,EAAE;IAE/B,MAAM,SAAS,GAA0B;QACvC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACd,+BAA+B;YAC/B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC;QAED,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACpB,+BAA+B;YAC/B,IAAI,MAAM,CAAC,SAAS,EAAE;gBACpB,MAAM,CAAC,SAAS,EAAE,CAAC;aACpB;QACH,CAAC;QAED,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACpB,qCAAqC;YACrC,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC;QAED,WAAW,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE;YACvC,mCAAmC;YACnC,MAAM,YAAY,GAAI,MAAc,CAAC,qBAAqB,EAAE,EAAE,CAAC;YAC/D,IAAI,YAAY,EAAE;gBAChB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CACtB,GAAG,EACH,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,CAClD,CAAC;gBACF,4BAA4B;gBAC5B,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;aACxE;QACH,CAAC;QAED,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YAC5B,2BAA2B;YAC3B,MAAM,YAAY,GAAI,MAAc,CAAC,qBAAqB,EAAE,EAAE,CAAC;YAC/D,IAAI,YAAY,EAAE;gBAChB,2BAA2B;gBAC3B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;aAC9C;QACH,CAAC;KACF,CAAC;IAEF,OAAO,IAAI,oBAAoB,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAC9D,CAAC;AA/CD,gEA+CC","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/mobile/TouchGraphController.ts"],"sourcesContent":["import { PlatformDetector } from \"../../infrastructure/utils/PlatformDetector\";\nimport { VisualQueryCanvas } from \"../components/VisualQueryCanvas\";\n\n/**\n * Touch gesture configuration\n */\nexport interface TouchGestureConfig {\n  enablePinchZoom?: boolean;\n  enablePanGesture?: boolean;\n  enableTapGestures?: boolean;\n  enableLongPress?: boolean;\n  zoomSensitivity?: number;\n  panSensitivity?: number;\n  minZoom?: number;\n  maxZoom?: number;\n  doubleTapZoomFactor?: number;\n  longPressDuration?: number;\n  momentumDecay?: number;\n  bounceBack?: boolean;\n}\n\n/**\n * Touch gesture callbacks\n */\nexport interface TouchGestureCallbacks {\n  onTap?: (x: number, y: number) => void;\n  onDoubleTap?: (x: number, y: number) => void;\n  onLongPress?: (x: number, y: number) => void;\n  onPinchStart?: (scale: number) => void;\n  onPinchMove?: (scale: number, centerX: number, centerY: number) => void;\n  onPinchEnd?: (scale: number) => void;\n  onPanStart?: (x: number, y: number) => void;\n  onPanMove?: (deltaX: number, deltaY: number) => void;\n  onPanEnd?: (velocityX: number, velocityY: number) => void;\n  onZoomChange?: (zoom: number) => void;\n}\n\n/**\n * Touch point data\n */\ninterface TouchPoint {\n  id: number;\n  x: number;\n  y: number;\n  timestamp: number;\n}\n\n/**\n * Gesture state\n */\ninterface GestureState {\n  isActive: boolean;\n  type: \"none\" | \"pan\" | \"pinch\" | \"tap\" | \"longpress\";\n  startTime: number;\n  touches: Map<number, TouchPoint>;\n  initialDistance?: number;\n  initialCenter?: { x: number; y: number };\n  initialZoom?: number;\n  lastPanPosition?: { x: number; y: number };\n  panVelocity?: { x: number; y: number };\n  tapCount: number;\n  lastTapTime: number;\n  longPressTimer?: number;\n}\n\n/**\n * Touch controller for graph visualizations with iOS-optimized gestures\n * Implements pinch-to-zoom, pan, tap, and long-press interactions\n */\nexport class TouchGraphController {\n  private element: HTMLElement;\n  private config: Required<TouchGestureConfig>;\n  private callbacks: TouchGestureCallbacks;\n  private gestureState: GestureState;\n  private momentumAnimation?: number;\n  private hapticFeedback?: any;\n\n  private readonly defaultConfig: Required<TouchGestureConfig> = {\n    enablePinchZoom: true,\n    enablePanGesture: true,\n    enableTapGestures: true,\n    enableLongPress: true,\n    zoomSensitivity: 1.0,\n    panSensitivity: 1.0,\n    minZoom: 0.1,\n    maxZoom: 5.0,\n    doubleTapZoomFactor: 2.0,\n    longPressDuration: 500,\n    momentumDecay: 0.95,\n    bounceBack: true,\n  };\n\n  constructor(\n    element: HTMLElement,\n    config: TouchGestureConfig = {},\n    callbacks: TouchGestureCallbacks = {},\n  ) {\n    this.element = element;\n    this.config = { ...this.defaultConfig, ...config };\n    this.callbacks = callbacks;\n\n    this.gestureState = this.createInitialGestureState();\n\n    this.initializeHapticFeedback();\n    this.attachEventListeners();\n    this.setupElementStyles();\n  }\n\n  /**\n   * Create initial gesture state\n   */\n  private createInitialGestureState(): GestureState {\n    return {\n      isActive: false,\n      type: \"none\",\n      startTime: 0,\n      touches: new Map(),\n      tapCount: 0,\n      lastTapTime: 0,\n    };\n  }\n\n  /**\n   * Initialize haptic feedback for iOS\n   */\n  private initializeHapticFeedback(): void {\n    if (PlatformDetector.isIOS() && \"vibrate\" in navigator) {\n      this.hapticFeedback = {\n        light: () => navigator.vibrate?.(10),\n        medium: () => navigator.vibrate?.(20),\n        heavy: () => navigator.vibrate?.(30),\n        selection: () => navigator.vibrate?.(5),\n      };\n    }\n  }\n\n  /**\n   * Setup element styles for touch interaction\n   */\n  private setupElementStyles(): void {\n    this.element.style.touchAction = \"none\";\n    this.element.style.userSelect = \"none\";\n    this.element.style.webkitUserSelect = \"none\";\n    this.element.style.cursor = \"grab\";\n  }\n\n  /**\n   * Attach touch and pointer event listeners\n   */\n  private attachEventListeners(): void {\n    // Touch events (primary for mobile)\n    this.element.addEventListener(\n      \"touchstart\",\n      this.handleTouchStart.bind(this),\n      { passive: false },\n    );\n    this.element.addEventListener(\n      \"touchmove\",\n      this.handleTouchMove.bind(this),\n      { passive: false },\n    );\n    this.element.addEventListener(\"touchend\", this.handleTouchEnd.bind(this), {\n      passive: false,\n    });\n    this.element.addEventListener(\n      \"touchcancel\",\n      this.handleTouchCancel.bind(this),\n      { passive: false },\n    );\n\n    // Pointer events (for hybrid devices)\n    if (\"PointerEvent\" in window) {\n      this.element.addEventListener(\n        \"pointerdown\",\n        this.handlePointerDown.bind(this),\n      );\n      this.element.addEventListener(\n        \"pointermove\",\n        this.handlePointerMove.bind(this),\n      );\n      this.element.addEventListener(\n        \"pointerup\",\n        this.handlePointerUp.bind(this),\n      );\n      this.element.addEventListener(\n        \"pointercancel\",\n        this.handlePointerCancel.bind(this),\n      );\n    }\n\n    // Mouse events (fallback for desktop)\n    if (!PlatformDetector.hasTouch()) {\n      this.element.addEventListener(\n        \"mousedown\",\n        this.handleMouseDown.bind(this),\n      );\n      this.element.addEventListener(\n        \"mousemove\",\n        this.handleMouseMove.bind(this),\n      );\n      this.element.addEventListener(\"mouseup\", this.handleMouseUp.bind(this));\n      this.element.addEventListener(\"wheel\", this.handleWheel.bind(this), {\n        passive: false,\n      });\n    }\n\n    // Prevent context menu on long press\n    this.element.addEventListener(\"contextmenu\", (e) => {\n      if (PlatformDetector.hasTouch()) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  /**\n   * Handle touch start event\n   */\n  private handleTouchStart(event: TouchEvent): void {\n    event.preventDefault();\n\n    const touches = Array.from(event.touches);\n    const currentTime = Date.now();\n\n    // Update touch tracking\n    touches.forEach((touch) => {\n      this.gestureState.touches.set(touch.identifier, {\n        id: touch.identifier,\n        x: touch.clientX,\n        y: touch.clientY,\n        timestamp: currentTime,\n      });\n    });\n\n    if (touches.length === 1) {\n      this.handleSingleTouchStart(touches[0], currentTime);\n    } else if (touches.length === 2) {\n      this.handlePinchStart(touches, currentTime);\n    }\n  }\n\n  /**\n   * Handle single touch start (tap, pan, long press)\n   */\n  private handleSingleTouchStart(touch: Touch, timestamp: number): void {\n    const rect = this.element.getBoundingClientRect();\n    const x = touch.clientX - rect.left;\n    const y = touch.clientY - rect.top;\n\n    // Check for double tap\n    if (this.config.enableTapGestures) {\n      const timeSinceLastTap = timestamp - this.gestureState.lastTapTime;\n      if (timeSinceLastTap < 300) {\n        this.gestureState.tapCount++;\n        if (this.gestureState.tapCount === 2) {\n          this.handleDoubleTap(x, y);\n          this.resetTapState();\n          return;\n        }\n      } else {\n        this.gestureState.tapCount = 1;\n      }\n      this.gestureState.lastTapTime = timestamp;\n    }\n\n    // Setup for potential pan gesture\n    if (this.config.enablePanGesture) {\n      this.gestureState.lastPanPosition = { x, y };\n      this.gestureState.panVelocity = { x: 0, y: 0 };\n    }\n\n    // Setup long press timer\n    if (this.config.enableLongPress) {\n      this.gestureState.longPressTimer = window.setTimeout(() => {\n        if (\n          this.gestureState.touches.size === 1 &&\n          !this.gestureState.isActive\n        ) {\n          this.handleLongPress(x, y);\n        }\n      }, this.config.longPressDuration);\n    }\n\n    this.gestureState.startTime = timestamp;\n  }\n\n  /**\n   * Handle pinch gesture start\n   */\n  private handlePinchStart(touches: Touch[], timestamp: number): void {\n    if (!this.config.enablePinchZoom) return;\n\n    this.clearLongPressTimer();\n    this.resetTapState();\n\n    const distance = this.calculateDistance(touches[0], touches[1]);\n    const center = this.calculateCenter(touches[0], touches[1]);\n\n    this.gestureState.isActive = true;\n    this.gestureState.type = \"pinch\";\n    this.gestureState.initialDistance = distance;\n    this.gestureState.initialCenter = center;\n    this.gestureState.startTime = timestamp;\n\n    this.triggerHaptic(\"light\");\n    this.callbacks.onPinchStart?.(1.0);\n  }\n\n  /**\n   * Handle touch move event\n   */\n  private handleTouchMove(event: TouchEvent): void {\n    event.preventDefault();\n\n    const touches = Array.from(event.touches);\n    const currentTime = Date.now();\n\n    // Update touch positions\n    touches.forEach((touch) => {\n      const existing = this.gestureState.touches.get(touch.identifier);\n      if (existing) {\n        existing.x = touch.clientX;\n        existing.y = touch.clientY;\n        existing.timestamp = currentTime;\n      }\n    });\n\n    if (touches.length === 1) {\n      this.handleSingleTouchMove(touches[0], currentTime);\n    } else if (touches.length === 2 && this.gestureState.type === \"pinch\") {\n      this.handlePinchMove(touches, currentTime);\n    }\n  }\n\n  /**\n   * Handle single touch move (pan gesture)\n   */\n  private handleSingleTouchMove(touch: Touch, timestamp: number): void {\n    if (!this.config.enablePanGesture || !this.gestureState.lastPanPosition)\n      return;\n\n    const rect = this.element.getBoundingClientRect();\n    const x = touch.clientX - rect.left;\n    const y = touch.clientY - rect.top;\n\n    const deltaX =\n      (x - this.gestureState.lastPanPosition.x) * this.config.panSensitivity;\n    const deltaY =\n      (y - this.gestureState.lastPanPosition.y) * this.config.panSensitivity;\n\n    // Start pan gesture if moved enough\n    if (\n      !this.gestureState.isActive &&\n      (Math.abs(deltaX) > 5 || Math.abs(deltaY) > 5)\n    ) {\n      this.gestureState.isActive = true;\n      this.gestureState.type = \"pan\";\n      this.clearLongPressTimer();\n      this.resetTapState();\n      this.element.style.cursor = \"grabbing\";\n      this.callbacks.onPanStart?.(x, y);\n    }\n\n    if (this.gestureState.type === \"pan\") {\n      // Update velocity for momentum\n      const timeDelta = timestamp - this.gestureState.startTime;\n      if (timeDelta > 0) {\n        this.gestureState.panVelocity = {\n          x: (deltaX / timeDelta) * 1000, // pixels per second\n          y: (deltaY / timeDelta) * 1000,\n        };\n      }\n\n      this.callbacks.onPanMove?.(deltaX, deltaY);\n    }\n\n    this.gestureState.lastPanPosition = { x, y };\n  }\n\n  /**\n   * Handle pinch gesture move\n   */\n  private handlePinchMove(touches: Touch[], timestamp: number): void {\n    if (\n      !this.config.enablePinchZoom ||\n      !this.gestureState.initialDistance ||\n      !this.gestureState.initialCenter\n    ) {\n      return;\n    }\n\n    const distance = this.calculateDistance(touches[0], touches[1]);\n    const center = this.calculateCenter(touches[0], touches[1]);\n\n    let scale = distance / this.gestureState.initialDistance;\n    scale *= this.config.zoomSensitivity;\n\n    // Apply zoom constraints\n    scale = Math.max(this.config.minZoom, Math.min(this.config.maxZoom, scale));\n\n    const rect = this.element.getBoundingClientRect();\n    const centerX = center.x - rect.left;\n    const centerY = center.y - rect.top;\n\n    this.callbacks.onPinchMove?.(scale, centerX, centerY);\n  }\n\n  /**\n   * Handle touch end event\n   */\n  private handleTouchEnd(event: TouchEvent): void {\n    event.preventDefault();\n\n    const currentTime = Date.now();\n    const remainingTouches = Array.from(event.touches);\n\n    // Remove ended touches\n    Array.from(event.changedTouches).forEach((touch) => {\n      this.gestureState.touches.delete(touch.identifier);\n    });\n\n    if (remainingTouches.length === 0) {\n      this.handleAllTouchesEnd(currentTime);\n    } else if (\n      remainingTouches.length === 1 &&\n      this.gestureState.type === \"pinch\"\n    ) {\n      // Transition from pinch to pan\n      this.handlePinchToPanTransition(remainingTouches[0], currentTime);\n    }\n  }\n\n  /**\n   * Handle all touches ending\n   */\n  private handleAllTouchesEnd(timestamp: number): void {\n    this.clearLongPressTimer();\n    this.element.style.cursor = \"grab\";\n\n    if (this.gestureState.type === \"pan\") {\n      const velocity = this.gestureState.panVelocity;\n      this.callbacks.onPanEnd?.(velocity?.x || 0, velocity?.y || 0);\n\n      // Apply momentum scrolling\n      if (\n        velocity &&\n        (Math.abs(velocity.x) > 100 || Math.abs(velocity.y) > 100)\n      ) {\n        this.startMomentumAnimation(velocity);\n      }\n    } else if (this.gestureState.type === \"pinch\") {\n      this.callbacks.onPinchEnd?.(1.0);\n    } else if (\n      this.gestureState.tapCount === 1 &&\n      !this.gestureState.isActive\n    ) {\n      // Single tap\n      setTimeout(() => {\n        if (this.gestureState.tapCount === 1) {\n          const touch = this.gestureState.touches.values().next().value;\n          if (touch) {\n            const rect = this.element.getBoundingClientRect();\n            this.callbacks.onTap?.(touch.x - rect.left, touch.y - rect.top);\n          }\n          this.resetTapState();\n        }\n      }, 300);\n    }\n\n    this.resetGestureState();\n  }\n\n  /**\n   * Handle transition from pinch to pan\n   */\n  private handlePinchToPanTransition(touch: Touch, timestamp: number): void {\n    this.callbacks.onPinchEnd?.(1.0);\n\n    // Reset for pan gesture\n    const rect = this.element.getBoundingClientRect();\n    this.gestureState.type = \"pan\";\n    this.gestureState.lastPanPosition = {\n      x: touch.clientX - rect.left,\n      y: touch.clientY - rect.top,\n    };\n    this.gestureState.panVelocity = { x: 0, y: 0 };\n\n    this.callbacks.onPanStart?.(\n      this.gestureState.lastPanPosition.x,\n      this.gestureState.lastPanPosition.y,\n    );\n  }\n\n  /**\n   * Handle touch cancel event\n   */\n  private handleTouchCancel(event: TouchEvent): void {\n    this.handleTouchEnd(event);\n  }\n\n  /**\n   * Handle double tap gesture\n   */\n  private handleDoubleTap(x: number, y: number): void {\n    this.triggerHaptic(\"medium\");\n    this.callbacks.onDoubleTap?.(x, y);\n  }\n\n  /**\n   * Handle long press gesture\n   */\n  private handleLongPress(x: number, y: number): void {\n    this.triggerHaptic(\"heavy\");\n    this.callbacks.onLongPress?.(x, y);\n  }\n\n  /**\n   * Start momentum animation for smooth scrolling\n   */\n  private startMomentumAnimation(velocity: { x: number; y: number }): void {\n    this.cancelMomentumAnimation();\n\n    let currentVelocity = { ...velocity };\n\n    const animate = () => {\n      // Apply momentum step\n      this.callbacks.onPanMove?.(\n        currentVelocity.x / 60, // 60fps\n        currentVelocity.y / 60,\n      );\n\n      // Decay velocity\n      currentVelocity.x *= this.config.momentumDecay;\n      currentVelocity.y *= this.config.momentumDecay;\n\n      // Continue if velocity is significant\n      if (Math.abs(currentVelocity.x) > 1 || Math.abs(currentVelocity.y) > 1) {\n        this.momentumAnimation = requestAnimationFrame(animate);\n      }\n    };\n\n    this.momentumAnimation = requestAnimationFrame(animate);\n  }\n\n  /**\n   * Cancel momentum animation\n   */\n  private cancelMomentumAnimation(): void {\n    if (this.momentumAnimation) {\n      cancelAnimationFrame(this.momentumAnimation);\n      this.momentumAnimation = undefined;\n    }\n  }\n\n  /**\n   * Calculate distance between two touches\n   */\n  private calculateDistance(touch1: Touch, touch2: Touch): number {\n    const dx = touch2.clientX - touch1.clientX;\n    const dy = touch2.clientY - touch1.clientY;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Calculate center point between two touches\n   */\n  private calculateCenter(\n    touch1: Touch,\n    touch2: Touch,\n  ): { x: number; y: number } {\n    return {\n      x: (touch1.clientX + touch2.clientX) / 2,\n      y: (touch1.clientY + touch2.clientY) / 2,\n    };\n  }\n\n  /**\n   * Clear long press timer\n   */\n  private clearLongPressTimer(): void {\n    if (this.gestureState.longPressTimer) {\n      clearTimeout(this.gestureState.longPressTimer);\n      this.gestureState.longPressTimer = undefined;\n    }\n  }\n\n  /**\n   * Reset tap state\n   */\n  private resetTapState(): void {\n    this.gestureState.tapCount = 0;\n    this.gestureState.lastTapTime = 0;\n  }\n\n  /**\n   * Reset gesture state\n   */\n  private resetGestureState(): void {\n    this.gestureState.isActive = false;\n    this.gestureState.type = \"none\";\n    this.gestureState.touches.clear();\n    this.gestureState.initialDistance = undefined;\n    this.gestureState.initialCenter = undefined;\n    this.gestureState.lastPanPosition = undefined;\n    this.gestureState.panVelocity = undefined;\n  }\n\n  /**\n   * Trigger haptic feedback\n   */\n  private triggerHaptic(\n    type: \"light\" | \"medium\" | \"heavy\" | \"selection\",\n  ): void {\n    if (this.hapticFeedback && this.hapticFeedback[type]) {\n      this.hapticFeedback[type]();\n    }\n  }\n\n  /**\n   * Pointer event handlers (for hybrid devices)\n   */\n  private handlePointerDown(event: PointerEvent): void {\n    if (event.pointerType === \"touch\") {\n      // Convert to touch-like handling\n      const fakeTouch = this.createFakeTouchEvent(\"touchstart\", [event]);\n      this.handleTouchStart(fakeTouch);\n    }\n  }\n\n  private handlePointerMove(event: PointerEvent): void {\n    if (event.pointerType === \"touch\") {\n      const fakeTouch = this.createFakeTouchEvent(\"touchmove\", [event]);\n      this.handleTouchMove(fakeTouch);\n    }\n  }\n\n  private handlePointerUp(event: PointerEvent): void {\n    if (event.pointerType === \"touch\") {\n      const fakeTouch = this.createFakeTouchEvent(\"touchend\", [event]);\n      this.handleTouchEnd(fakeTouch);\n    }\n  }\n\n  private handlePointerCancel(event: PointerEvent): void {\n    if (event.pointerType === \"touch\") {\n      const fakeTouch = this.createFakeTouchEvent(\"touchcancel\", [event]);\n      this.handleTouchCancel(fakeTouch);\n    }\n  }\n\n  /**\n   * Mouse event handlers (fallback for desktop)\n   */\n  private handleMouseDown(event: MouseEvent): void {\n    if (event.button === 0) {\n      // Left mouse button\n      const fakeTouch = this.createFakeTouchEvent(\"touchstart\", [event]);\n      this.handleTouchStart(fakeTouch);\n    }\n  }\n\n  private handleMouseMove(event: MouseEvent): void {\n    if (this.gestureState.isActive) {\n      const fakeTouch = this.createFakeTouchEvent(\"touchmove\", [event]);\n      this.handleTouchMove(fakeTouch);\n    }\n  }\n\n  private handleMouseUp(event: MouseEvent): void {\n    if (this.gestureState.isActive) {\n      const fakeTouch = this.createFakeTouchEvent(\"touchend\", [event]);\n      this.handleTouchEnd(fakeTouch);\n    }\n  }\n\n  private handleWheel(event: WheelEvent): void {\n    if (!this.config.enablePinchZoom) return;\n\n    event.preventDefault();\n\n    const rect = this.element.getBoundingClientRect();\n    const centerX = event.clientX - rect.left;\n    const centerY = event.clientY - rect.top;\n\n    const scale = event.deltaY > 0 ? 0.9 : 1.1;\n\n    this.callbacks.onPinchStart?.(1.0);\n    this.callbacks.onPinchMove?.(scale, centerX, centerY);\n    this.callbacks.onPinchEnd?.(scale);\n  }\n\n  /**\n   * Create fake touch event from mouse/pointer event\n   */\n  private createFakeTouchEvent(\n    type: string,\n    events: (MouseEvent | PointerEvent)[],\n  ): TouchEvent {\n    const touches = events.map((event, index) => ({\n      identifier: (event as PointerEvent).pointerId || 0,\n      clientX: event.clientX,\n      clientY: event.clientY,\n      pageX: event.pageX,\n      pageY: event.pageY,\n      screenX: event.screenX,\n      screenY: event.screenY,\n      target: event.target,\n    })) as any;\n\n    return {\n      type,\n      touches,\n      changedTouches: touches,\n      targetTouches: touches,\n      preventDefault: () => {},\n      stopPropagation: () => {},\n    } as TouchEvent;\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(newConfig: Partial<TouchGestureConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  /**\n   * Update callbacks\n   */\n  updateCallbacks(newCallbacks: Partial<TouchGestureCallbacks>): void {\n    this.callbacks = { ...this.callbacks, ...newCallbacks };\n  }\n\n  /**\n   * Enable/disable gestures\n   */\n  setEnabled(enabled: boolean): void {\n    if (enabled) {\n      this.element.style.pointerEvents = \"\";\n      this.element.style.touchAction = \"none\";\n    } else {\n      this.element.style.pointerEvents = \"none\";\n      this.element.style.touchAction = \"auto\";\n      this.resetGestureState();\n      this.cancelMomentumAnimation();\n    }\n  }\n\n  /**\n   * Get current gesture state\n   */\n  getGestureState(): Readonly<GestureState> {\n    return this.gestureState;\n  }\n\n  /**\n   * Destroy controller and cleanup\n   */\n  destroy(): void {\n    this.cancelMomentumAnimation();\n    this.clearLongPressTimer();\n    this.resetGestureState();\n\n    // Remove all event listeners\n    this.element.removeEventListener(\n      \"touchstart\",\n      this.handleTouchStart.bind(this),\n    );\n    this.element.removeEventListener(\n      \"touchmove\",\n      this.handleTouchMove.bind(this),\n    );\n    this.element.removeEventListener(\n      \"touchend\",\n      this.handleTouchEnd.bind(this),\n    );\n    this.element.removeEventListener(\n      \"touchcancel\",\n      this.handleTouchCancel.bind(this),\n    );\n\n    if (\"PointerEvent\" in window) {\n      this.element.removeEventListener(\n        \"pointerdown\",\n        this.handlePointerDown.bind(this),\n      );\n      this.element.removeEventListener(\n        \"pointermove\",\n        this.handlePointerMove.bind(this),\n      );\n      this.element.removeEventListener(\n        \"pointerup\",\n        this.handlePointerUp.bind(this),\n      );\n      this.element.removeEventListener(\n        \"pointercancel\",\n        this.handlePointerCancel.bind(this),\n      );\n    }\n\n    this.element.removeEventListener(\n      \"mousedown\",\n      this.handleMouseDown.bind(this),\n    );\n    this.element.removeEventListener(\n      \"mousemove\",\n      this.handleMouseMove.bind(this),\n    );\n    this.element.removeEventListener(\"mouseup\", this.handleMouseUp.bind(this));\n    this.element.removeEventListener(\"wheel\", this.handleWheel.bind(this));\n\n    // Restore element styles\n    this.element.style.touchAction = \"\";\n    this.element.style.userSelect = \"\";\n    this.element.style.webkitUserSelect = \"\";\n    this.element.style.cursor = \"\";\n  }\n}\n\n/**\n * Factory function to create touch controller for VisualQueryCanvas\n */\nexport function createTouchGraphController(\n  canvas: VisualQueryCanvas,\n  element: HTMLElement,\n  config: TouchGestureConfig = {},\n): TouchGraphController {\n  const callbacks: TouchGestureCallbacks = {\n    onTap: (x, y) => {\n      // Handle node selection on tap\n      console.log(\"Graph tap at:\", x, y);\n    },\n\n    onDoubleTap: (x, y) => {\n      // Zoom to fit or zoom to point\n      if (canvas.zoomToFit) {\n        canvas.zoomToFit();\n      }\n    },\n\n    onLongPress: (x, y) => {\n      // Show context menu or node creation\n      console.log(\"Graph long press at:\", x, y);\n    },\n\n    onPinchMove: (scale, centerX, centerY) => {\n      // Apply zoom with scale and center\n      const currentState = (canvas as any).getCurrentCanvasState?.();\n      if (currentState) {\n        const newZoom = Math.max(\n          0.1,\n          Math.min(5.0, currentState.viewport.zoom * scale),\n        );\n        // Apply zoom transformation\n        console.log(\"Applying zoom:\", newZoom, \"at center:\", centerX, centerY);\n      }\n    },\n\n    onPanMove: (deltaX, deltaY) => {\n      // Apply pan transformation\n      const currentState = (canvas as any).getCurrentCanvasState?.();\n      if (currentState) {\n        // Update viewport position\n        console.log(\"Applying pan:\", deltaX, deltaY);\n      }\n    },\n  };\n\n  return new TouchGraphController(element, config, callbacks);\n}\n"],"version":3}