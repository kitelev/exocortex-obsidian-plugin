7061ad0f3343d5f7dbb8f3f9a0fdc633
"use strict";

/* istanbul ignore next */
function cov_1zxxjamq1l() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/processors/GraphVisualizationProcessor.ts";
  var hash = "d9ebf4603178a2e8a82b825f014727b796848ef1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/processors/GraphVisualizationProcessor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 45
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "4": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 64
        }
      },
      "5": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 59
        }
      },
      "6": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 61
        }
      },
      "7": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 69
        }
      },
      "8": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 10,
          column: 60
        }
      },
      "9": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "10": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 61
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 66
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "14": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "15": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "16": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "17": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "19": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "20": {
        start: {
          line: 38,
          column: 31
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "21": {
        start: {
          line: 40,
          column: 34
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "22": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 49
        }
      },
      "23": {
        start: {
          line: 43,
          column: 34
        },
        end: {
          line: 43,
          column: 65
        }
      },
      "24": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 35
        }
      },
      "25": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 52,
          column: 17
        }
      },
      "26": {
        start: {
          line: 47,
          column: 41
        },
        end: {
          line: 47,
          column: 70
        }
      },
      "27": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 69
        }
      },
      "28": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 111
        }
      },
      "29": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 56
        }
      },
      "30": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 27
        }
      },
      "31": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 82
        }
      },
      "32": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 63
        }
      },
      "33": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 41
        }
      },
      "34": {
        start: {
          line: 60,
          column: 32
        },
        end: {
          line: 60,
          column: 62
        }
      },
      "35": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 47
        }
      },
      "36": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 67
        }
      },
      "37": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "38": {
        start: {
          line: 74,
          column: 22
        },
        end: {
          line: 74,
          column: 74
        }
      },
      "39": {
        start: {
          line: 74,
          column: 50
        },
        end: {
          line: 74,
          column: 58
        }
      },
      "40": {
        start: {
          line: 74,
          column: 72
        },
        end: {
          line: 74,
          column: 73
        }
      },
      "41": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "42": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 34
        }
      },
      "43": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 26
        }
      },
      "44": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "45": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "46": {
        start: {
          line: 83,
          column: 37
        },
        end: {
          line: 83,
          column: 71
        }
      },
      "47": {
        start: {
          line: 83,
          column: 62
        },
        end: {
          line: 83,
          column: 70
        }
      },
      "48": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "49": {
        start: {
          line: 86,
          column: 24
        },
        end: {
          line: 86,
          column: 71
        }
      },
      "50": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 30
        }
      },
      "51": {
        start: {
          line: 89,
          column: 24
        },
        end: {
          line: 89,
          column: 60
        }
      },
      "52": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 90,
          column: 30
        }
      },
      "53": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 92,
          column: 62
        }
      },
      "54": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 93,
          column: 30
        }
      },
      "55": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 45
        }
      },
      "56": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 30
        }
      },
      "57": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 75
        }
      },
      "58": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 30
        }
      },
      "59": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 63
        }
      },
      "60": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 30
        }
      },
      "61": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 104,
          column: 68
        }
      },
      "62": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 30
        }
      },
      "63": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 22
        }
      },
      "64": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "65": {
        start: {
          line: 113,
          column: 26
        },
        end: {
          line: 113,
          column: 28
        }
      },
      "66": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "67": {
        start: {
          line: 116,
          column: 31
        },
        end: {
          line: 116,
          column: 63
        }
      },
      "68": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 125,
          column: 17
        }
      },
      "69": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "70": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 120,
          column: 212
        }
      },
      "71": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "72": {
        start: {
          line: 123,
          column: 24
        },
        end: {
          line: 123,
          column: 241
        }
      },
      "73": {
        start: {
          line: 127,
          column: 17
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "74": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 86
        }
      },
      "75": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 61
        }
      },
      "76": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "77": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 57
        }
      },
      "78": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 59
        }
      },
      "79": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 143,
          column: 33
        }
      },
      "80": {
        start: {
          line: 144,
          column: 23
        },
        end: {
          line: 144,
          column: 25
        }
      },
      "81": {
        start: {
          line: 145,
          column: 22
        },
        end: {
          line: 145,
          column: 58
        }
      },
      "82": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "83": {
        start: {
          line: 147,
          column: 45
        },
        end: {
          line: 147,
          column: 58
        }
      },
      "84": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "85": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 25
        }
      },
      "86": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 32
        }
      },
      "87": {
        start: {
          line: 153,
          column: 35
        },
        end: {
          line: 153,
          column: 89
        }
      },
      "88": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 43
        }
      },
      "89": {
        start: {
          line: 156,
          column: 34
        },
        end: {
          line: 156,
          column: 88
        }
      },
      "90": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 42
        }
      },
      "91": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "92": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 165,
          column: 17
        }
      },
      "93": {
        start: {
          line: 161,
          column: 38
        },
        end: {
          line: 161,
          column: 67
        }
      },
      "94": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 164,
          column: 21
        }
      },
      "95": {
        start: {
          line: 163,
          column: 24
        },
        end: {
          line: 163,
          column: 90
        }
      },
      "96": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 171,
          column: 17
        }
      },
      "97": {
        start: {
          line: 167,
          column: 39
        },
        end: {
          line: 167,
          column: 69
        }
      },
      "98": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 170,
          column: 21
        }
      },
      "99": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 91
        }
      },
      "100": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 22
        }
      },
      "101": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 177,
          column: 34
        }
      },
      "102": {
        start: {
          line: 178,
          column: 22
        },
        end: {
          line: 178,
          column: 24
        }
      },
      "103": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "104": {
        start: {
          line: 180,
          column: 31
        },
        end: {
          line: 180,
          column: 61
        }
      },
      "105": {
        start: {
          line: 181,
          column: 33
        },
        end: {
          line: 181,
          column: 65
        }
      },
      "106": {
        start: {
          line: 182,
          column: 30
        },
        end: {
          line: 182,
          column: 59
        }
      },
      "107": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 191,
          column: 13
        }
      },
      "108": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "109": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "110": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 199,
          column: 19
        }
      },
      "111": {
        start: {
          line: 202,
          column: 27
        },
        end: {
          line: 202,
          column: 71
        }
      },
      "112": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 208,
          column: 15
        }
      },
      "113": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 213,
          column: 10
        }
      },
      "114": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "115": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 46
        }
      },
      "116": {
        start: {
          line: 221,
          column: 22
        },
        end: {
          line: 221,
          column: 36
        }
      },
      "117": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 46
        }
      },
      "118": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 240,
          column: 11
        }
      },
      "119": {
        start: {
          line: 227,
          column: 33
        },
        end: {
          line: 227,
          column: 62
        }
      },
      "120": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 109
        }
      },
      "121": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 48
        }
      },
      "122": {
        start: {
          line: 230,
          column: 24
        },
        end: {
          line: 230,
          column: 85
        }
      },
      "123": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 46
        }
      },
      "124": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 46
        }
      },
      "125": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 126
        }
      },
      "126": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 42
        }
      },
      "127": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 67
        }
      },
      "128": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 41
        }
      },
      "129": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 45
        }
      },
      "130": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 366,
          column: 11
        }
      },
      "131": {
        start: {
          line: 245,
          column: 26
        },
        end: {
          line: 245,
          column: 29
        }
      },
      "132": {
        start: {
          line: 246,
          column: 27
        },
        end: {
          line: 246,
          column: 30
        }
      },
      "133": {
        start: {
          line: 247,
          column: 28
        },
        end: {
          line: 247,
          column: 37
        }
      },
      "134": {
        start: {
          line: 248,
          column: 28
        },
        end: {
          line: 248,
          column: 38
        }
      },
      "135": {
        start: {
          line: 250,
          column: 25
        },
        end: {
          line: 250,
          column: 87
        }
      },
      "136": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 34
        }
      },
      "137": {
        start: {
          line: 253,
          column: 27
        },
        end: {
          line: 253,
          column: 91
        }
      },
      "138": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 51
        }
      },
      "139": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 57
        }
      },
      "140": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 45
        }
      },
      "141": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 45
        }
      },
      "142": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 50
        }
      },
      "143": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 52
        }
      },
      "144": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 53
        }
      },
      "145": {
        start: {
          line: 261,
          column: 25
        },
        end: {
          line: 261,
          column: 87
        }
      },
      "146": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 59
        }
      },
      "147": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 59
        }
      },
      "148": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 37
        }
      },
      "149": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 37
        }
      },
      "150": {
        start: {
          line: 266,
          column: 22
        },
        end: {
          line: 266,
          column: 81
        }
      },
      "151": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 31
        }
      },
      "152": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 58
        }
      },
      "153": {
        start: {
          line: 271,
          column: 31
        },
        end: {
          line: 271,
          column: 90
        }
      },
      "154": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 54
        }
      },
      "155": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 38
        }
      },
      "156": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 321,
          column: 13
        }
      },
      "157": {
        start: {
          line: 275,
          column: 35
        },
        end: {
          line: 275,
          column: 77
        }
      },
      "158": {
        start: {
          line: 275,
          column: 56
        },
        end: {
          line: 275,
          column: 76
        }
      },
      "159": {
        start: {
          line: 276,
          column: 35
        },
        end: {
          line: 276,
          column: 77
        }
      },
      "160": {
        start: {
          line: 276,
          column: 56
        },
        end: {
          line: 276,
          column: 76
        }
      },
      "161": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 320,
          column: 17
        }
      },
      "162": {
        start: {
          line: 278,
          column: 33
        },
        end: {
          line: 278,
          column: 95
        }
      },
      "163": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 125
        }
      },
      "164": {
        start: {
          line: 280,
          column: 20
        },
        end: {
          line: 280,
          column: 125
        }
      },
      "165": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 125
        }
      },
      "166": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 282,
          column: 125
        }
      },
      "167": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 69
        }
      },
      "168": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 59
        }
      },
      "169": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 71
        }
      },
      "170": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 50
        }
      },
      "171": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 291,
          column: 23
        }
      },
      "172": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 289,
          column: 74
        }
      },
      "173": {
        start: {
          line: 290,
          column: 24
        },
        end: {
          line: 290,
          column: 63
        }
      },
      "174": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 295,
          column: 23
        }
      },
      "175": {
        start: {
          line: 293,
          column: 24
        },
        end: {
          line: 293,
          column: 73
        }
      },
      "176": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 294,
          column: 63
        }
      },
      "177": {
        start: {
          line: 296,
          column: 20
        },
        end: {
          line: 296,
          column: 49
        }
      },
      "178": {
        start: {
          line: 298,
          column: 20
        },
        end: {
          line: 319,
          column: 21
        }
      },
      "179": {
        start: {
          line: 299,
          column: 37
        },
        end: {
          line: 299,
          column: 84
        }
      },
      "180": {
        start: {
          line: 300,
          column: 37
        },
        end: {
          line: 300,
          column: 84
        }
      },
      "181": {
        start: {
          line: 301,
          column: 37
        },
        end: {
          line: 301,
          column: 99
        }
      },
      "182": {
        start: {
          line: 302,
          column: 24
        },
        end: {
          line: 302,
          column: 64
        }
      },
      "183": {
        start: {
          line: 303,
          column: 24
        },
        end: {
          line: 303,
          column: 70
        }
      },
      "184": {
        start: {
          line: 304,
          column: 24
        },
        end: {
          line: 304,
          column: 67
        }
      },
      "185": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 61
        }
      },
      "186": {
        start: {
          line: 306,
          column: 24
        },
        end: {
          line: 306,
          column: 71
        }
      },
      "187": {
        start: {
          line: 307,
          column: 24
        },
        end: {
          line: 307,
          column: 78
        }
      },
      "188": {
        start: {
          line: 309,
          column: 37
        },
        end: {
          line: 309,
          column: 51
        }
      },
      "189": {
        start: {
          line: 310,
          column: 37
        },
        end: {
          line: 310,
          column: 99
        }
      },
      "190": {
        start: {
          line: 311,
          column: 24
        },
        end: {
          line: 311,
          column: 72
        }
      },
      "191": {
        start: {
          line: 312,
          column: 24
        },
        end: {
          line: 312,
          column: 72
        }
      },
      "192": {
        start: {
          line: 313,
          column: 24
        },
        end: {
          line: 313,
          column: 80
        }
      },
      "193": {
        start: {
          line: 314,
          column: 24
        },
        end: {
          line: 314,
          column: 82
        }
      },
      "194": {
        start: {
          line: 315,
          column: 24
        },
        end: {
          line: 315,
          column: 79
        }
      },
      "195": {
        start: {
          line: 316,
          column: 24
        },
        end: {
          line: 316,
          column: 60
        }
      },
      "196": {
        start: {
          line: 317,
          column: 24
        },
        end: {
          line: 317,
          column: 53
        }
      },
      "197": {
        start: {
          line: 318,
          column: 24
        },
        end: {
          line: 318,
          column: 53
        }
      },
      "198": {
        start: {
          line: 323,
          column: 31
        },
        end: {
          line: 323,
          column: 90
        }
      },
      "199": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 54
        }
      },
      "200": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 38
        }
      },
      "201": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 363,
          column: 13
        }
      },
      "202": {
        start: {
          line: 327,
          column: 34
        },
        end: {
          line: 327,
          column: 93
        }
      },
      "203": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 56
        }
      },
      "204": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 329,
          column: 51
        }
      },
      "205": {
        start: {
          line: 330,
          column: 31
        },
        end: {
          line: 330,
          column: 95
        }
      },
      "206": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 331,
          column: 117
        }
      },
      "207": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 117
        }
      },
      "208": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 76
        }
      },
      "209": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 74
        }
      },
      "210": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 83
        }
      },
      "211": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 57
        }
      },
      "212": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 337,
          column: 46
        }
      },
      "213": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 348,
          column: 17
        }
      },
      "214": {
        start: {
          line: 340,
          column: 33
        },
        end: {
          line: 340,
          column: 95
        }
      },
      "215": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 118
        }
      },
      "216": {
        start: {
          line: 342,
          column: 20
        },
        end: {
          line: 342,
          column: 101
        }
      },
      "217": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 343,
          column: 63
        }
      },
      "218": {
        start: {
          line: 344,
          column: 20
        },
        end: {
          line: 344,
          column: 57
        }
      },
      "219": {
        start: {
          line: 345,
          column: 20
        },
        end: {
          line: 345,
          column: 68
        }
      },
      "220": {
        start: {
          line: 346,
          column: 20
        },
        end: {
          line: 346,
          column: 74
        }
      },
      "221": {
        start: {
          line: 347,
          column: 20
        },
        end: {
          line: 347,
          column: 48
        }
      },
      "222": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 352,
          column: 19
        }
      },
      "223": {
        start: {
          line: 351,
          column: 20
        },
        end: {
          line: 351,
          column: 47
        }
      },
      "224": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 357,
          column: 19
        }
      },
      "225": {
        start: {
          line: 355,
          column: 20
        },
        end: {
          line: 355,
          column: 86
        }
      },
      "226": {
        start: {
          line: 356,
          column: 20
        },
        end: {
          line: 356,
          column: 61
        }
      },
      "227": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 361,
          column: 19
        }
      },
      "228": {
        start: {
          line: 359,
          column: 20
        },
        end: {
          line: 359,
          column: 80
        }
      },
      "229": {
        start: {
          line: 360,
          column: 20
        },
        end: {
          line: 360,
          column: 61
        }
      },
      "230": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 50
        }
      },
      "231": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 36
        }
      },
      "232": {
        start: {
          line: 370,
          column: 24
        },
        end: {
          line: 370,
          column: 33
        }
      },
      "233": {
        start: {
          line: 371,
          column: 24
        },
        end: {
          line: 371,
          column: 34
        }
      },
      "234": {
        start: {
          line: 372,
          column: 23
        },
        end: {
          line: 372,
          column: 50
        }
      },
      "235": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 377,
          column: 11
        }
      },
      "236": {
        start: {
          line: 374,
          column: 26
        },
        end: {
          line: 374,
          column: 58
        }
      },
      "237": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 56
        }
      },
      "238": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 56
        }
      },
      "239": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 389,
          column: 9
        }
      },
      "240": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 382,
          column: 45
        }
      },
      "241": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 43
        }
      },
      "242": {
        start: {
          line: 386,
          column: 16
        },
        end: {
          line: 386,
          column: 44
        }
      },
      "243": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 43
        }
      },
      "244": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 393,
          column: 25
        }
      },
      "245": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 25
        }
      },
      "246": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 57
        }
      },
      "247": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "248": {
        start: {
          line: 399,
          column: 29
        },
        end: {
          line: 399,
          column: 59
        }
      },
      "249": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 65
        }
      },
      "250": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 99
        }
      },
      "251": {
        start: {
          line: 408,
          column: 26
        },
        end: {
          line: 408,
          column: 31
        }
      },
      "252": {
        start: {
          line: 409,
          column: 21
        },
        end: {
          line: 409,
          column: 22
        }
      },
      "253": {
        start: {
          line: 410,
          column: 21
        },
        end: {
          line: 410,
          column: 22
        }
      },
      "254": {
        start: {
          line: 411,
          column: 31
        },
        end: {
          line: 411,
          column: 55
        }
      },
      "255": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 417,
          column: 11
        }
      },
      "256": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 31
        }
      },
      "257": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 31
        }
      },
      "258": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 31
        }
      },
      "259": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 42
        }
      },
      "260": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 428,
          column: 11
        }
      },
      "261": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 420,
          column: 23
        }
      },
      "262": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 23
        }
      },
      "263": {
        start: {
          line: 421,
          column: 27
        },
        end: {
          line: 421,
          column: 45
        }
      },
      "264": {
        start: {
          line: 422,
          column: 27
        },
        end: {
          line: 422,
          column: 45
        }
      },
      "265": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 41
        }
      },
      "266": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 41
        }
      },
      "267": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 132
        }
      },
      "268": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 31
        }
      },
      "269": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 427,
          column: 31
        }
      },
      "270": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 432,
          column: 11
        }
      },
      "271": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 32
        }
      },
      "272": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 431,
          column: 38
        }
      },
      "273": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 438,
          column: 11
        }
      },
      "274": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 31
        }
      },
      "275": {
        start: {
          line: 435,
          column: 32
        },
        end: {
          line: 435,
          column: 56
        }
      },
      "276": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 102
        }
      },
      "277": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 132
        }
      },
      "278": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 34
        }
      },
      "279": {
        start: {
          line: 442,
          column: 28
        },
        end: {
          line: 442,
          column: 57
        }
      },
      "280": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 452,
          column: 10
        }
      },
      "281": {
        start: {
          line: 454,
          column: 21
        },
        end: {
          line: 454,
          column: 51
        }
      },
      "282": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 455,
          column: 86
        }
      },
      "283": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 456,
          column: 95
        }
      },
      "284": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 38
        }
      },
      "285": {
        start: {
          line: 459,
          column: 35
        },
        end: {
          line: 459,
          column: 88
        }
      },
      "286": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 52
        }
      },
      "287": {
        start: {
          line: 462,
          column: 29
        },
        end: {
          line: 462,
          column: 61
        }
      },
      "288": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 48
        }
      },
      "289": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 464,
          column: 43
        }
      },
      "290": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 465,
          column: 80
        }
      },
      "291": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 466,
          column: 82
        }
      },
      "292": {
        start: {
          line: 466,
          column: 53
        },
        end: {
          line: 466,
          column: 80
        }
      },
      "293": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 467,
          column: 46
        }
      },
      "294": {
        start: {
          line: 469,
          column: 35
        },
        end: {
          line: 469,
          column: 64
        }
      },
      "295": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 88
        }
      },
      "296": {
        start: {
          line: 471,
          column: 29
        },
        end: {
          line: 471,
          column: 61
        }
      },
      "297": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 50
        }
      },
      "298": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 200
        }
      },
      "299": {
        start: {
          line: 474,
          column: 28
        },
        end: {
          line: 474,
          column: 57
        }
      },
      "300": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 486,
          column: 10
        }
      },
      "301": {
        start: {
          line: 487,
          column: 24
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "302": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 508,
          column: 9
        }
      },
      "303": {
        start: {
          line: 494,
          column: 25
        },
        end: {
          line: 494,
          column: 54
        }
      },
      "304": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 37
        }
      },
      "305": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 134
        }
      },
      "306": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 499,
          column: 15
        }
      },
      "307": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 75
        }
      },
      "308": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 502,
          column: 15
        }
      },
      "309": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 501,
          column: 43
        }
      },
      "310": {
        start: {
          line: 503,
          column: 12
        },
        end: {
          line: 506,
          column: 15
        }
      },
      "311": {
        start: {
          line: 504,
          column: 16
        },
        end: {
          line: 504,
          column: 52
        }
      },
      "312": {
        start: {
          line: 505,
          column: 16
        },
        end: {
          line: 505,
          column: 51
        }
      },
      "313": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 42
        }
      },
      "314": {
        start: {
          line: 510,
          column: 29
        },
        end: {
          line: 510,
          column: 58
        }
      },
      "315": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 511,
          column: 49
        }
      },
      "316": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 123
        }
      },
      "317": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 515,
          column: 11
        }
      },
      "318": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 514,
          column: 79
        }
      },
      "319": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 518,
          column: 11
        }
      },
      "320": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 517,
          column: 47
        }
      },
      "321": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 522,
          column: 11
        }
      },
      "322": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 45
        }
      },
      "323": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 521,
          column: 47
        }
      },
      "324": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 46
        }
      },
      "325": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 527,
          column: 11
        }
      },
      "326": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 32
        }
      },
      "327": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 526,
          column: 96
        }
      },
      "328": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 531,
          column: 11
        }
      },
      "329": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 530,
          column: 47
        }
      },
      "330": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 532,
          column: 53
        }
      },
      "331": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 52
        }
      },
      "332": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 52
        }
      },
      "333": {
        start: {
          line: 536,
          column: 25
        },
        end: {
          line: 536,
          column: 57
        }
      },
      "334": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 44
        }
      },
      "335": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 538,
          column: 76
        }
      },
      "336": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 539,
          column: 76
        }
      },
      "337": {
        start: {
          line: 539,
          column: 49
        },
        end: {
          line: 539,
          column: 74
        }
      },
      "338": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 540,
          column: 42
        }
      },
      "339": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 541,
          column: 43
        }
      },
      "340": {
        start: {
          line: 544,
          column: 35
        },
        end: {
          line: 544,
          column: 64
        }
      },
      "341": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 88
        }
      },
      "342": {
        start: {
          line: 546,
          column: 29
        },
        end: {
          line: 546,
          column: 61
        }
      },
      "343": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 547,
          column: 50
        }
      },
      "344": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 548,
          column: 200
        }
      },
      "345": {
        start: {
          line: 549,
          column: 28
        },
        end: {
          line: 549,
          column: 57
        }
      },
      "346": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 561,
          column: 10
        }
      },
      "347": {
        start: {
          line: 562,
          column: 28
        },
        end: {
          line: 566,
          column: 9
        }
      },
      "348": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 582,
          column: 9
        }
      },
      "349": {
        start: {
          line: 568,
          column: 25
        },
        end: {
          line: 568,
          column: 54
        }
      },
      "350": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 569,
          column: 48
        }
      },
      "351": {
        start: {
          line: 570,
          column: 12
        },
        end: {
          line: 570,
          column: 134
        }
      },
      "352": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 573,
          column: 15
        }
      },
      "353": {
        start: {
          line: 572,
          column: 16
        },
        end: {
          line: 572,
          column: 75
        }
      },
      "354": {
        start: {
          line: 574,
          column: 12
        },
        end: {
          line: 576,
          column: 15
        }
      },
      "355": {
        start: {
          line: 575,
          column: 16
        },
        end: {
          line: 575,
          column: 43
        }
      },
      "356": {
        start: {
          line: 577,
          column: 12
        },
        end: {
          line: 580,
          column: 15
        }
      },
      "357": {
        start: {
          line: 578,
          column: 16
        },
        end: {
          line: 578,
          column: 97
        }
      },
      "358": {
        start: {
          line: 579,
          column: 16
        },
        end: {
          line: 579,
          column: 51
        }
      },
      "359": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 581,
          column: 42
        }
      },
      "360": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 586,
          column: 11
        }
      },
      "361": {
        start: {
          line: 584,
          column: 12
        },
        end: {
          line: 584,
          column: 32
        }
      },
      "362": {
        start: {
          line: 585,
          column: 12
        },
        end: {
          line: 585,
          column: 96
        }
      },
      "363": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 590,
          column: 11
        }
      },
      "364": {
        start: {
          line: 589,
          column: 12
        },
        end: {
          line: 589,
          column: 47
        }
      },
      "365": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 591,
          column: 53
        }
      },
      "366": {
        start: {
          line: 592,
          column: 8
        },
        end: {
          line: 592,
          column: 52
        }
      },
      "367": {
        start: {
          line: 593,
          column: 8
        },
        end: {
          line: 593,
          column: 34
        }
      },
      "368": {
        start: {
          line: 596,
          column: 8
        },
        end: {
          line: 653,
          column: 11
        }
      },
      "369": {
        start: {
          line: 597,
          column: 24
        },
        end: {
          line: 597,
          column: 54
        }
      },
      "370": {
        start: {
          line: 598,
          column: 12
        },
        end: {
          line: 601,
          column: 13
        }
      },
      "371": {
        start: {
          line: 599,
          column: 16
        },
        end: {
          line: 599,
          column: 70
        }
      },
      "372": {
        start: {
          line: 600,
          column: 16
        },
        end: {
          line: 600,
          column: 23
        }
      },
      "373": {
        start: {
          line: 602,
          column: 12
        },
        end: {
          line: 652,
          column: 13
        }
      },
      "374": {
        start: {
          line: 604,
          column: 36
        },
        end: {
          line: 604,
          column: 40
        }
      },
      "375": {
        start: {
          line: 605,
          column: 16
        },
        end: {
          line: 607,
          column: 17
        }
      },
      "376": {
        start: {
          line: 606,
          column: 20
        },
        end: {
          line: 606,
          column: 131
        }
      },
      "377": {
        start: {
          line: 609,
          column: 31
        },
        end: {
          line: 609,
          column: 63
        }
      },
      "378": {
        start: {
          line: 610,
          column: 34
        },
        end: {
          line: 610,
          column: 37
        }
      },
      "379": {
        start: {
          line: 611,
          column: 35
        },
        end: {
          line: 611,
          column: 38
        }
      },
      "380": {
        start: {
          line: 612,
          column: 16
        },
        end: {
          line: 612,
          column: 49
        }
      },
      "381": {
        start: {
          line: 613,
          column: 16
        },
        end: {
          line: 613,
          column: 51
        }
      },
      "382": {
        start: {
          line: 614,
          column: 28
        },
        end: {
          line: 614,
          column: 51
        }
      },
      "383": {
        start: {
          line: 615,
          column: 16
        },
        end: {
          line: 617,
          column: 17
        }
      },
      "384": {
        start: {
          line: 616,
          column: 20
        },
        end: {
          line: 616,
          column: 68
        }
      },
      "385": {
        start: {
          line: 619,
          column: 16
        },
        end: {
          line: 619,
          column: 40
        }
      },
      "386": {
        start: {
          line: 621,
          column: 16
        },
        end: {
          line: 621,
          column: 49
        }
      },
      "387": {
        start: {
          line: 622,
          column: 16
        },
        end: {
          line: 622,
          column: 51
        }
      },
      "388": {
        start: {
          line: 624,
          column: 32
        },
        end: {
          line: 624,
          column: 87
        }
      },
      "389": {
        start: {
          line: 625,
          column: 16
        },
        end: {
          line: 625,
          column: 40
        }
      },
      "390": {
        start: {
          line: 626,
          column: 16
        },
        end: {
          line: 626,
          column: 58
        }
      },
      "391": {
        start: {
          line: 628,
          column: 36
        },
        end: {
          line: 628,
          column: 99
        }
      },
      "392": {
        start: {
          line: 629,
          column: 16
        },
        end: {
          line: 629,
          column: 46
        }
      },
      "393": {
        start: {
          line: 630,
          column: 16
        },
        end: {
          line: 630,
          column: 34
        }
      },
      "394": {
        start: {
          line: 631,
          column: 16
        },
        end: {
          line: 631,
          column: 60
        }
      },
      "395": {
        start: {
          line: 633,
          column: 16
        },
        end: {
          line: 633,
          column: 89
        }
      },
      "396": {
        start: {
          line: 635,
          column: 16
        },
        end: {
          line: 647,
          column: 37
        }
      },
      "397": {
        start: {
          line: 636,
          column: 20
        },
        end: {
          line: 646,
          column: 21
        }
      },
      "398": {
        start: {
          line: 637,
          column: 24
        },
        end: {
          line: 637,
          column: 58
        }
      },
      "399": {
        start: {
          line: 638,
          column: 24
        },
        end: {
          line: 640,
          column: 25
        }
      },
      "400": {
        start: {
          line: 639,
          column: 28
        },
        end: {
          line: 639,
          column: 49
        }
      },
      "401": {
        start: {
          line: 641,
          column: 39
        },
        end: {
          line: 641,
          column: 67
        }
      },
      "402": {
        start: {
          line: 642,
          column: 24
        },
        end: {
          line: 642,
          column: 86
        }
      },
      "403": {
        start: {
          line: 645,
          column: 24
        },
        end: {
          line: 645,
          column: 69
        }
      },
      "404": {
        start: {
          line: 650,
          column: 16
        },
        end: {
          line: 650,
          column: 59
        }
      },
      "405": {
        start: {
          line: 651,
          column: 16
        },
        end: {
          line: 651,
          column: 77
        }
      },
      "406": {
        start: {
          line: 656,
          column: 8
        },
        end: {
          line: 713,
          column: 11
        }
      },
      "407": {
        start: {
          line: 658,
          column: 12
        },
        end: {
          line: 658,
          column: 58
        }
      },
      "408": {
        start: {
          line: 660,
          column: 12
        },
        end: {
          line: 689,
          column: 13
        }
      },
      "409": {
        start: {
          line: 661,
          column: 35
        },
        end: {
          line: 661,
          column: 130
        }
      },
      "410": {
        start: {
          line: 661,
          column: 56
        },
        end: {
          line: 661,
          column: 129
        }
      },
      "411": {
        start: {
          line: 662,
          column: 35
        },
        end: {
          line: 662,
          column: 130
        }
      },
      "412": {
        start: {
          line: 662,
          column: 56
        },
        end: {
          line: 662,
          column: 129
        }
      },
      "413": {
        start: {
          line: 663,
          column: 16
        },
        end: {
          line: 688,
          column: 17
        }
      },
      "414": {
        start: {
          line: 665,
          column: 20
        },
        end: {
          line: 665,
          column: 36
        }
      },
      "415": {
        start: {
          line: 666,
          column: 20
        },
        end: {
          line: 666,
          column: 69
        }
      },
      "416": {
        start: {
          line: 667,
          column: 20
        },
        end: {
          line: 667,
          column: 69
        }
      },
      "417": {
        start: {
          line: 668,
          column: 20
        },
        end: {
          line: 668,
          column: 86
        }
      },
      "418": {
        start: {
          line: 669,
          column: 20
        },
        end: {
          line: 669,
          column: 38
        }
      },
      "419": {
        start: {
          line: 670,
          column: 20
        },
        end: {
          line: 670,
          column: 33
        }
      },
      "420": {
        start: {
          line: 672,
          column: 20
        },
        end: {
          line: 672,
          column: 120
        }
      },
      "421": {
        start: {
          line: 674,
          column: 20
        },
        end: {
          line: 687,
          column: 21
        }
      },
      "422": {
        start: {
          line: 675,
          column: 37
        },
        end: {
          line: 675,
          column: 84
        }
      },
      "423": {
        start: {
          line: 676,
          column: 37
        },
        end: {
          line: 676,
          column: 84
        }
      },
      "424": {
        start: {
          line: 678,
          column: 42
        },
        end: {
          line: 678,
          column: 76
        }
      },
      "425": {
        start: {
          line: 679,
          column: 24
        },
        end: {
          line: 679,
          column: 64
        }
      },
      "426": {
        start: {
          line: 680,
          column: 44
        },
        end: {
          line: 680,
          column: 70
        }
      },
      "427": {
        start: {
          line: 681,
          column: 24
        },
        end: {
          line: 681,
          column: 96
        }
      },
      "428": {
        start: {
          line: 682,
          column: 24
        },
        end: {
          line: 682,
          column: 108
        }
      },
      "429": {
        start: {
          line: 684,
          column: 24
        },
        end: {
          line: 684,
          column: 88
        }
      },
      "430": {
        start: {
          line: 685,
          column: 24
        },
        end: {
          line: 685,
          column: 49
        }
      },
      "431": {
        start: {
          line: 686,
          column: 24
        },
        end: {
          line: 686,
          column: 64
        }
      },
      "432": {
        start: {
          line: 691,
          column: 12
        },
        end: {
          line: 712,
          column: 13
        }
      },
      "433": {
        start: {
          line: 692,
          column: 26
        },
        end: {
          line: 692,
          column: 37
        }
      },
      "434": {
        start: {
          line: 693,
          column: 26
        },
        end: {
          line: 693,
          column: 37
        }
      },
      "435": {
        start: {
          line: 694,
          column: 31
        },
        end: {
          line: 694,
          column: 51
        }
      },
      "436": {
        start: {
          line: 696,
          column: 16
        },
        end: {
          line: 696,
          column: 32
        }
      },
      "437": {
        start: {
          line: 697,
          column: 16
        },
        end: {
          line: 697,
          column: 54
        }
      },
      "438": {
        start: {
          line: 698,
          column: 16
        },
        end: {
          line: 698,
          column: 67
        }
      },
      "439": {
        start: {
          line: 699,
          column: 16
        },
        end: {
          line: 699,
          column: 27
        }
      },
      "440": {
        start: {
          line: 701,
          column: 16
        },
        end: {
          line: 701,
          column: 98
        }
      },
      "441": {
        start: {
          line: 702,
          column: 16
        },
        end: {
          line: 702,
          column: 34
        }
      },
      "442": {
        start: {
          line: 703,
          column: 16
        },
        end: {
          line: 703,
          column: 29
        }
      },
      "443": {
        start: {
          line: 705,
          column: 16
        },
        end: {
          line: 711,
          column: 17
        }
      },
      "444": {
        start: {
          line: 706,
          column: 20
        },
        end: {
          line: 706,
          column: 60
        }
      },
      "445": {
        start: {
          line: 707,
          column: 20
        },
        end: {
          line: 707,
          column: 85
        }
      },
      "446": {
        start: {
          line: 708,
          column: 20
        },
        end: {
          line: 708,
          column: 45
        }
      },
      "447": {
        start: {
          line: 709,
          column: 38
        },
        end: {
          line: 709,
          column: 72
        }
      },
      "448": {
        start: {
          line: 710,
          column: 20
        },
        end: {
          line: 710,
          column: 64
        }
      },
      "449": {
        start: {
          line: 716,
          column: 22
        },
        end: {
          line: 716,
          column: 58
        }
      },
      "450": {
        start: {
          line: 717,
          column: 28
        },
        end: {
          line: 717,
          column: 30
        }
      },
      "451": {
        start: {
          line: 718,
          column: 27
        },
        end: {
          line: 718,
          column: 38
        }
      },
      "452": {
        start: {
          line: 720,
          column: 31
        },
        end: {
          line: 720,
          column: 33
        }
      },
      "453": {
        start: {
          line: 721,
          column: 24
        },
        end: {
          line: 721,
          column: 62
        }
      },
      "454": {
        start: {
          line: 722,
          column: 24
        },
        end: {
          line: 722,
          column: 62
        }
      },
      "455": {
        start: {
          line: 723,
          column: 8
        },
        end: {
          line: 723,
          column: 24
        }
      },
      "456": {
        start: {
          line: 724,
          column: 8
        },
        end: {
          line: 724,
          column: 37
        }
      },
      "457": {
        start: {
          line: 725,
          column: 8
        },
        end: {
          line: 725,
          column: 127
        }
      },
      "458": {
        start: {
          line: 726,
          column: 8
        },
        end: {
          line: 726,
          column: 37
        }
      },
      "459": {
        start: {
          line: 727,
          column: 8
        },
        end: {
          line: 727,
          column: 127
        }
      },
      "460": {
        start: {
          line: 728,
          column: 8
        },
        end: {
          line: 728,
          column: 74
        }
      },
      "461": {
        start: {
          line: 729,
          column: 8
        },
        end: {
          line: 729,
          column: 26
        }
      },
      "462": {
        start: {
          line: 730,
          column: 8
        },
        end: {
          line: 730,
          column: 21
        }
      },
      "463": {
        start: {
          line: 733,
          column: 8
        },
        end: {
          line: 750,
          column: 9
        }
      },
      "464": {
        start: {
          line: 734,
          column: 26
        },
        end: {
          line: 734,
          column: 68
        }
      },
      "465": {
        start: {
          line: 735,
          column: 26
        },
        end: {
          line: 735,
          column: 68
        }
      },
      "466": {
        start: {
          line: 736,
          column: 12
        },
        end: {
          line: 737,
          column: 28
        }
      },
      "467": {
        start: {
          line: 737,
          column: 16
        },
        end: {
          line: 737,
          column: 28
        }
      },
      "468": {
        start: {
          line: 739,
          column: 12
        },
        end: {
          line: 741,
          column: 13
        }
      },
      "469": {
        start: {
          line: 740,
          column: 16
        },
        end: {
          line: 740,
          column: 44
        }
      },
      "470": {
        start: {
          line: 742,
          column: 12
        },
        end: {
          line: 744,
          column: 13
        }
      },
      "471": {
        start: {
          line: 743,
          column: 16
        },
        end: {
          line: 743,
          column: 44
        }
      },
      "472": {
        start: {
          line: 745,
          column: 12
        },
        end: {
          line: 745,
          column: 25
        }
      },
      "473": {
        start: {
          line: 748,
          column: 12
        },
        end: {
          line: 748,
          column: 81
        }
      },
      "474": {
        start: {
          line: 749,
          column: 12
        },
        end: {
          line: 749,
          column: 24
        }
      },
      "475": {
        start: {
          line: 753,
          column: 8
        },
        end: {
          line: 762,
          column: 9
        }
      },
      "476": {
        start: {
          line: 755,
          column: 16
        },
        end: {
          line: 755,
          column: 73
        }
      },
      "477": {
        start: {
          line: 757,
          column: 16
        },
        end: {
          line: 757,
          column: 71
        }
      },
      "478": {
        start: {
          line: 759,
          column: 16
        },
        end: {
          line: 759,
          column: 72
        }
      },
      "479": {
        start: {
          line: 761,
          column: 16
        },
        end: {
          line: 761,
          column: 33
        }
      },
      "480": {
        start: {
          line: 767,
          column: 8
        },
        end: {
          line: 767,
          column: 25
        }
      },
      "481": {
        start: {
          line: 770,
          column: 22
        },
        end: {
          line: 770,
          column: 65
        }
      },
      "482": {
        start: {
          line: 771,
          column: 8
        },
        end: {
          line: 772,
          column: 29
        }
      },
      "483": {
        start: {
          line: 772,
          column: 12
        },
        end: {
          line: 772,
          column: 29
        }
      },
      "484": {
        start: {
          line: 773,
          column: 18
        },
        end: {
          line: 773,
          column: 36
        }
      },
      "485": {
        start: {
          line: 774,
          column: 18
        },
        end: {
          line: 774,
          column: 36
        }
      },
      "486": {
        start: {
          line: 775,
          column: 18
        },
        end: {
          line: 775,
          column: 36
        }
      },
      "487": {
        start: {
          line: 776,
          column: 8
        },
        end: {
          line: 779,
          column: 20
        }
      },
      "488": {
        start: {
          line: 777,
          column: 24
        },
        end: {
          line: 777,
          column: 38
        }
      },
      "489": {
        start: {
          line: 778,
          column: 12
        },
        end: {
          line: 778,
          column: 54
        }
      },
      "490": {
        start: {
          line: 784,
          column: 8
        },
        end: {
          line: 788,
          column: 9
        }
      },
      "491": {
        start: {
          line: 786,
          column: 12
        },
        end: {
          line: 786,
          column: 93
        }
      },
      "492": {
        start: {
          line: 787,
          column: 12
        },
        end: {
          line: 787,
          column: 19
        }
      },
      "493": {
        start: {
          line: 789,
          column: 20
        },
        end: {
          line: 789,
          column: 45
        }
      },
      "494": {
        start: {
          line: 790,
          column: 21
        },
        end: {
          line: 790,
          column: 48
        }
      },
      "495": {
        start: {
          line: 791,
          column: 8
        },
        end: {
          line: 791,
          column: 24
        }
      },
      "496": {
        start: {
          line: 792,
          column: 8
        },
        end: {
          line: 792,
          column: 33
        }
      },
      "497": {
        start: {
          line: 793,
          column: 8
        },
        end: {
          line: 793,
          column: 36
        }
      },
      "498": {
        start: {
          line: 795,
          column: 8
        },
        end: {
          line: 803,
          column: 9
        }
      },
      "499": {
        start: {
          line: 796,
          column: 12
        },
        end: {
          line: 796,
          column: 44
        }
      },
      "500": {
        start: {
          line: 797,
          column: 12
        },
        end: {
          line: 797,
          column: 25
        }
      },
      "501": {
        start: {
          line: 798,
          column: 12
        },
        end: {
          line: 798,
          column: 44
        }
      },
      "502": {
        start: {
          line: 802,
          column: 12
        },
        end: {
          line: 802,
          column: 69
        }
      },
      "503": {
        start: {
          line: 804,
          column: 8
        },
        end: {
          line: 804,
          column: 33
        }
      },
      "504": {
        start: {
          line: 807,
          column: 20
        },
        end: {
          line: 807,
          column: 50
        }
      },
      "505": {
        start: {
          line: 808,
          column: 8
        },
        end: {
          line: 809,
          column: 19
        }
      },
      "506": {
        start: {
          line: 809,
          column: 12
        },
        end: {
          line: 809,
          column: 19
        }
      },
      "507": {
        start: {
          line: 810,
          column: 8
        },
        end: {
          line: 820,
          column: 9
        }
      },
      "508": {
        start: {
          line: 811,
          column: 31
        },
        end: {
          line: 811,
          column: 50
        }
      },
      "509": {
        start: {
          line: 812,
          column: 30
        },
        end: {
          line: 812,
          column: 63
        }
      },
      "510": {
        start: {
          line: 813,
          column: 25
        },
        end: {
          line: 813,
          column: 73
        }
      },
      "511": {
        start: {
          line: 814,
          column: 12
        },
        end: {
          line: 814,
          column: 59
        }
      },
      "512": {
        start: {
          line: 815,
          column: 12
        },
        end: {
          line: 815,
          column: 59
        }
      },
      "513": {
        start: {
          line: 818,
          column: 12
        },
        end: {
          line: 818,
          column: 55
        }
      },
      "514": {
        start: {
          line: 819,
          column: 12
        },
        end: {
          line: 819,
          column: 58
        }
      },
      "515": {
        start: {
          line: 823,
          column: 20
        },
        end: {
          line: 823,
          column: 50
        }
      },
      "516": {
        start: {
          line: 824,
          column: 18
        },
        end: {
          line: 824,
          column: 82
        }
      },
      "517": {
        start: {
          line: 825,
          column: 8
        },
        end: {
          line: 827,
          column: 9
        }
      },
      "518": {
        start: {
          line: 826,
          column: 12
        },
        end: {
          line: 826,
          column: 68
        }
      },
      "519": {
        start: {
          line: 830,
          column: 24
        },
        end: {
          line: 830,
          column: 53
        }
      },
      "520": {
        start: {
          line: 831,
          column: 8
        },
        end: {
          line: 831,
          column: 44
        }
      },
      "521": {
        start: {
          line: 832,
          column: 8
        },
        end: {
          line: 832,
          column: 66
        }
      },
      "522": {
        start: {
          line: 833,
          column: 8
        },
        end: {
          line: 833,
          column: 94
        }
      },
      "523": {
        start: {
          line: 834,
          column: 8
        },
        end: {
          line: 834,
          column: 23
        }
      },
      "524": {
        start: {
          line: 837,
          column: 25
        },
        end: {
          line: 837,
          column: 54
        }
      },
      "525": {
        start: {
          line: 838,
          column: 8
        },
        end: {
          line: 838,
          column: 43
        }
      },
      "526": {
        start: {
          line: 839,
          column: 8
        },
        end: {
          line: 845,
          column: 10
        }
      },
      "527": {
        start: {
          line: 846,
          column: 22
        },
        end: {
          line: 846,
          column: 54
        }
      },
      "528": {
        start: {
          line: 847,
          column: 8
        },
        end: {
          line: 847,
          column: 58
        }
      },
      "529": {
        start: {
          line: 848,
          column: 8
        },
        end: {
          line: 848,
          column: 36
        }
      },
      "530": {
        start: {
          line: 849,
          column: 24
        },
        end: {
          line: 849,
          column: 54
        }
      },
      "531": {
        start: {
          line: 850,
          column: 8
        },
        end: {
          line: 850,
          column: 44
        }
      },
      "532": {
        start: {
          line: 851,
          column: 8
        },
        end: {
          line: 851,
          column: 38
        }
      },
      "533": {
        start: {
          line: 852,
          column: 8
        },
        end: {
          line: 852,
          column: 24
        }
      },
      "534": {
        start: {
          line: 858,
          column: 8
        },
        end: {
          line: 888,
          column: 11
        }
      },
      "535": {
        start: {
          line: 859,
          column: 12
        },
        end: {
          line: 887,
          column: 13
        }
      },
      "536": {
        start: {
          line: 861,
          column: 32
        },
        end: {
          line: 861,
          column: 68
        }
      },
      "537": {
        start: {
          line: 863,
          column: 30
        },
        end: {
          line: 863,
          column: 49
        }
      },
      "538": {
        start: {
          line: 864,
          column: 16
        },
        end: {
          line: 866,
          column: 17
        }
      },
      "539": {
        start: {
          line: 865,
          column: 20
        },
        end: {
          line: 865,
          column: 38
        }
      },
      "540": {
        start: {
          line: 867,
          column: 33
        },
        end: {
          line: 867,
          column: 68
        }
      },
      "541": {
        start: {
          line: 868,
          column: 31
        },
        end: {
          line: 875,
          column: 18
        }
      },
      "542": {
        start: {
          line: 876,
          column: 16
        },
        end: {
          line: 882,
          column: 17
        }
      },
      "543": {
        start: {
          line: 877,
          column: 39
        },
        end: {
          line: 877,
          column: 56
        }
      },
      "544": {
        start: {
          line: 878,
          column: 20
        },
        end: {
          line: 878,
          column: 137
        }
      },
      "545": {
        start: {
          line: 881,
          column: 20
        },
        end: {
          line: 881,
          column: 83
        }
      },
      "546": {
        start: {
          line: 885,
          column: 16
        },
        end: {
          line: 885,
          column: 72
        }
      },
      "547": {
        start: {
          line: 886,
          column: 16
        },
        end: {
          line: 886,
          column: 64
        }
      },
      "548": {
        start: {
          line: 894,
          column: 8
        },
        end: {
          line: 910,
          column: 9
        }
      },
      "549": {
        start: {
          line: 896,
          column: 28
        },
        end: {
          line: 896,
          column: 64
        }
      },
      "550": {
        start: {
          line: 898,
          column: 26
        },
        end: {
          line: 898,
          column: 45
        }
      },
      "551": {
        start: {
          line: 899,
          column: 12
        },
        end: {
          line: 901,
          column: 13
        }
      },
      "552": {
        start: {
          line: 900,
          column: 16
        },
        end: {
          line: 900,
          column: 34
        }
      },
      "553": {
        start: {
          line: 902,
          column: 26
        },
        end: {
          line: 904,
          column: 14
        }
      },
      "554": {
        start: {
          line: 903,
          column: 16
        },
        end: {
          line: 903,
          column: 90
        }
      },
      "555": {
        start: {
          line: 905,
          column: 12
        },
        end: {
          line: 905,
          column: 25
        }
      },
      "556": {
        start: {
          line: 908,
          column: 12
        },
        end: {
          line: 908,
          column: 83
        }
      },
      "557": {
        start: {
          line: 909,
          column: 12
        },
        end: {
          line: 909,
          column: 56
        }
      },
      "558": {
        start: {
          line: 916,
          column: 24
        },
        end: {
          line: 916,
          column: 26
        }
      },
      "559": {
        start: {
          line: 918,
          column: 8
        },
        end: {
          line: 924,
          column: 9
        }
      },
      "560": {
        start: {
          line: 919,
          column: 31
        },
        end: {
          line: 919,
          column: 126
        }
      },
      "561": {
        start: {
          line: 919,
          column: 52
        },
        end: {
          line: 919,
          column: 125
        }
      },
      "562": {
        start: {
          line: 920,
          column: 31
        },
        end: {
          line: 920,
          column: 126
        }
      },
      "563": {
        start: {
          line: 920,
          column: 52
        },
        end: {
          line: 920,
          column: 125
        }
      },
      "564": {
        start: {
          line: 921,
          column: 12
        },
        end: {
          line: 923,
          column: 13
        }
      },
      "565": {
        start: {
          line: 922,
          column: 16
        },
        end: {
          line: 922,
          column: 146
        }
      },
      "566": {
        start: {
          line: 925,
          column: 8
        },
        end: {
          line: 925,
          column: 23
        }
      },
      "567": {
        start: {
          line: 928,
          column: 0
        },
        end: {
          line: 928,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 55
          },
          end: {
            line: 22,
            column: 56
          }
        },
        loc: {
          start: {
            line: 22,
            column: 68
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 24
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 66
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 74,
            column: 46
          }
        },
        loc: {
          start: {
            line: 74,
            column: 50
          },
          end: {
            line: 74,
            column: 58
          }
        },
        line: 74
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 74,
            column: 67
          },
          end: {
            line: 74,
            column: 68
          }
        },
        loc: {
          start: {
            line: 74,
            column: 72
          },
          end: {
            line: 74,
            column: 73
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 83,
            column: 57
          },
          end: {
            line: 83,
            column: 58
          }
        },
        loc: {
          start: {
            line: 83,
            column: 62
          },
          end: {
            line: 83,
            column: 70
          }
        },
        line: 83
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 25
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 111
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 112,
            column: 55
          },
          end: {
            line: 112,
            column: 56
          }
        },
        loc: {
          start: {
            line: 112,
            column: 68
          },
          end: {
            line: 140,
            column: 9
          }
        },
        line: 112
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 40
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 142
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 39
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 176
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 25
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 215
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 54
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 224
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 225,
            column: 55
          },
          end: {
            line: 225,
            column: 56
          }
        },
        loc: {
          start: {
            line: 225,
            column: 68
          },
          end: {
            line: 240,
            column: 9
          }
        },
        line: 225
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 48
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 242
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 244,
            column: 55
          },
          end: {
            line: 244,
            column: 56
          }
        },
        loc: {
          start: {
            line: 244,
            column: 68
          },
          end: {
            line: 366,
            column: 9
          }
        },
        line: 244
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 275,
            column: 51
          },
          end: {
            line: 275,
            column: 52
          }
        },
        loc: {
          start: {
            line: 275,
            column: 56
          },
          end: {
            line: 275,
            column: 76
          }
        },
        line: 275
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 276,
            column: 51
          },
          end: {
            line: 276,
            column: 52
          }
        },
        loc: {
          start: {
            line: 276,
            column: 56
          },
          end: {
            line: 276,
            column: 76
          }
        },
        line: 276
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 288,
            column: 56
          },
          end: {
            line: 288,
            column: 57
          }
        },
        loc: {
          start: {
            line: 288,
            column: 62
          },
          end: {
            line: 291,
            column: 21
          }
        },
        line: 288
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 292,
            column: 56
          },
          end: {
            line: 292,
            column: 57
          }
        },
        loc: {
          start: {
            line: 292,
            column: 62
          },
          end: {
            line: 295,
            column: 21
          }
        },
        line: 292
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 350,
            column: 52
          },
          end: {
            line: 350,
            column: 53
          }
        },
        loc: {
          start: {
            line: 350,
            column: 58
          },
          end: {
            line: 352,
            column: 17
          }
        },
        line: 350
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 354,
            column: 57
          },
          end: {
            line: 354,
            column: 58
          }
        },
        loc: {
          start: {
            line: 354,
            column: 63
          },
          end: {
            line: 357,
            column: 17
          }
        },
        line: 354
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 358,
            column: 57
          },
          end: {
            line: 358,
            column: 58
          }
        },
        loc: {
          start: {
            line: 358,
            column: 63
          },
          end: {
            line: 361,
            column: 17
          }
        },
        line: 358
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 40
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 368
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 373,
            column: 22
          },
          end: {
            line: 373,
            column: 23
          }
        },
        loc: {
          start: {
            line: 373,
            column: 35
          },
          end: {
            line: 377,
            column: 9
          }
        },
        line: 373
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        loc: {
          start: {
            line: 379,
            column: 23
          },
          end: {
            line: 390,
            column: 5
          }
        },
        line: 379
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 391,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        },
        loc: {
          start: {
            line: 391,
            column: 36
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 391
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 26
          },
          end: {
            line: 406,
            column: 5
          }
        },
        line: 396
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 407,
            column: 4
          },
          end: {
            line: 407,
            column: 5
          }
        },
        loc: {
          start: {
            line: 407,
            column: 23
          },
          end: {
            line: 440,
            column: 5
          }
        },
        line: 407
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 412,
            column: 42
          },
          end: {
            line: 412,
            column: 43
          }
        },
        loc: {
          start: {
            line: 412,
            column: 49
          },
          end: {
            line: 417,
            column: 9
          }
        },
        line: 412
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 418,
            column: 42
          },
          end: {
            line: 418,
            column: 43
          }
        },
        loc: {
          start: {
            line: 418,
            column: 49
          },
          end: {
            line: 428,
            column: 9
          }
        },
        line: 418
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 429,
            column: 40
          },
          end: {
            line: 429,
            column: 41
          }
        },
        loc: {
          start: {
            line: 429,
            column: 46
          },
          end: {
            line: 432,
            column: 9
          }
        },
        line: 429
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 433,
            column: 38
          },
          end: {
            line: 433,
            column: 39
          }
        },
        loc: {
          start: {
            line: 433,
            column: 45
          },
          end: {
            line: 438,
            column: 9
          }
        },
        line: 433
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 441,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        },
        loc: {
          start: {
            line: 441,
            column: 41
          },
          end: {
            line: 542,
            column: 5
          }
        },
        line: 441
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 466,
            column: 47
          },
          end: {
            line: 466,
            column: 48
          }
        },
        loc: {
          start: {
            line: 466,
            column: 53
          },
          end: {
            line: 466,
            column: 80
          }
        },
        line: 466
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 497,
            column: 48
          },
          end: {
            line: 497,
            column: 49
          }
        },
        loc: {
          start: {
            line: 497,
            column: 54
          },
          end: {
            line: 499,
            column: 13
          }
        },
        line: 497
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 500,
            column: 48
          },
          end: {
            line: 500,
            column: 49
          }
        },
        loc: {
          start: {
            line: 500,
            column: 54
          },
          end: {
            line: 502,
            column: 13
          }
        },
        line: 500
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 503,
            column: 43
          },
          end: {
            line: 503,
            column: 44
          }
        },
        loc: {
          start: {
            line: 503,
            column: 49
          },
          end: {
            line: 506,
            column: 13
          }
        },
        line: 503
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 513,
            column: 52
          },
          end: {
            line: 513,
            column: 53
          }
        },
        loc: {
          start: {
            line: 513,
            column: 58
          },
          end: {
            line: 515,
            column: 9
          }
        },
        line: 513
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 516,
            column: 52
          },
          end: {
            line: 516,
            column: 53
          }
        },
        loc: {
          start: {
            line: 516,
            column: 58
          },
          end: {
            line: 518,
            column: 9
          }
        },
        line: 516
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 519,
            column: 47
          },
          end: {
            line: 519,
            column: 48
          }
        },
        loc: {
          start: {
            line: 519,
            column: 53
          },
          end: {
            line: 522,
            column: 9
          }
        },
        line: 519
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 524,
            column: 47
          },
          end: {
            line: 524,
            column: 48
          }
        },
        loc: {
          start: {
            line: 524,
            column: 54
          },
          end: {
            line: 527,
            column: 9
          }
        },
        line: 524
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 529,
            column: 43
          },
          end: {
            line: 529,
            column: 44
          }
        },
        loc: {
          start: {
            line: 529,
            column: 49
          },
          end: {
            line: 531,
            column: 9
          }
        },
        line: 529
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 539,
            column: 43
          },
          end: {
            line: 539,
            column: 44
          }
        },
        loc: {
          start: {
            line: 539,
            column: 49
          },
          end: {
            line: 539,
            column: 74
          }
        },
        line: 539
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 543,
            column: 5
          }
        },
        loc: {
          start: {
            line: 543,
            column: 53
          },
          end: {
            line: 594,
            column: 5
          }
        },
        line: 543
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 571,
            column: 48
          },
          end: {
            line: 571,
            column: 49
          }
        },
        loc: {
          start: {
            line: 571,
            column: 54
          },
          end: {
            line: 573,
            column: 13
          }
        },
        line: 571
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 574,
            column: 48
          },
          end: {
            line: 574,
            column: 49
          }
        },
        loc: {
          start: {
            line: 574,
            column: 54
          },
          end: {
            line: 576,
            column: 13
          }
        },
        line: 574
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 577,
            column: 43
          },
          end: {
            line: 577,
            column: 44
          }
        },
        loc: {
          start: {
            line: 577,
            column: 49
          },
          end: {
            line: 580,
            column: 13
          }
        },
        line: 577
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 583,
            column: 47
          },
          end: {
            line: 583,
            column: 48
          }
        },
        loc: {
          start: {
            line: 583,
            column: 54
          },
          end: {
            line: 586,
            column: 9
          }
        },
        line: 583
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 588,
            column: 43
          },
          end: {
            line: 588,
            column: 44
          }
        },
        loc: {
          start: {
            line: 588,
            column: 49
          },
          end: {
            line: 590,
            column: 9
          }
        },
        line: 588
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 595,
            column: 4
          },
          end: {
            line: 595,
            column: 5
          }
        },
        loc: {
          start: {
            line: 595,
            column: 86
          },
          end: {
            line: 654,
            column: 5
          }
        },
        line: 595
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 596,
            column: 55
          },
          end: {
            line: 596,
            column: 56
          }
        },
        loc: {
          start: {
            line: 596,
            column: 68
          },
          end: {
            line: 653,
            column: 9
          }
        },
        line: 596
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 635,
            column: 30
          },
          end: {
            line: 635,
            column: 31
          }
        },
        loc: {
          start: {
            line: 635,
            column: 40
          },
          end: {
            line: 647,
            column: 17
          }
        },
        line: 635
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 655,
            column: 4
          },
          end: {
            line: 655,
            column: 5
          }
        },
        loc: {
          start: {
            line: 655,
            column: 58
          },
          end: {
            line: 714,
            column: 5
          }
        },
        line: 655
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 656,
            column: 55
          },
          end: {
            line: 656,
            column: 56
          }
        },
        loc: {
          start: {
            line: 656,
            column: 68
          },
          end: {
            line: 713,
            column: 9
          }
        },
        line: 656
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 661,
            column: 51
          },
          end: {
            line: 661,
            column: 52
          }
        },
        loc: {
          start: {
            line: 661,
            column: 56
          },
          end: {
            line: 661,
            column: 129
          }
        },
        line: 661
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 662,
            column: 51
          },
          end: {
            line: 662,
            column: 52
          }
        },
        loc: {
          start: {
            line: 662,
            column: 56
          },
          end: {
            line: 662,
            column: 129
          }
        },
        line: 662
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 715,
            column: 4
          },
          end: {
            line: 715,
            column: 5
          }
        },
        loc: {
          start: {
            line: 715,
            column: 47
          },
          end: {
            line: 731,
            column: 5
          }
        },
        line: 715
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 732,
            column: 4
          },
          end: {
            line: 732,
            column: 5
          }
        },
        loc: {
          start: {
            line: 732,
            column: 31
          },
          end: {
            line: 751,
            column: 5
          }
        },
        line: 732
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 752,
            column: 4
          },
          end: {
            line: 752,
            column: 5
          }
        },
        loc: {
          start: {
            line: 752,
            column: 29
          },
          end: {
            line: 763,
            column: 5
          }
        },
        line: 752
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 764,
            column: 4
          },
          end: {
            line: 764,
            column: 5
          }
        },
        loc: {
          start: {
            line: 764,
            column: 18
          },
          end: {
            line: 768,
            column: 5
          }
        },
        line: 764
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 769,
            column: 4
          },
          end: {
            line: 769,
            column: 5
          }
        },
        loc: {
          start: {
            line: 769,
            column: 18
          },
          end: {
            line: 780,
            column: 5
          }
        },
        line: 769
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 776,
            column: 35
          },
          end: {
            line: 776,
            column: 36
          }
        },
        loc: {
          start: {
            line: 776,
            column: 40
          },
          end: {
            line: 779,
            column: 9
          }
        },
        line: 776
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 781,
            column: 4
          },
          end: {
            line: 781,
            column: 5
          }
        },
        loc: {
          start: {
            line: 781,
            column: 33
          },
          end: {
            line: 805,
            column: 5
          }
        },
        line: 781
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 806,
            column: 4
          },
          end: {
            line: 806,
            column: 5
          }
        },
        loc: {
          start: {
            line: 806,
            column: 27
          },
          end: {
            line: 821,
            column: 5
          }
        },
        line: 806
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 822,
            column: 4
          },
          end: {
            line: 822,
            column: 5
          }
        },
        loc: {
          start: {
            line: 822,
            column: 25
          },
          end: {
            line: 828,
            column: 5
          }
        },
        line: 822
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 829,
            column: 4
          },
          end: {
            line: 829,
            column: 5
          }
        },
        loc: {
          start: {
            line: 829,
            column: 29
          },
          end: {
            line: 835,
            column: 5
          }
        },
        line: 829
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 836,
            column: 4
          },
          end: {
            line: 836,
            column: 5
          }
        },
        loc: {
          start: {
            line: 836,
            column: 30
          },
          end: {
            line: 853,
            column: 5
          }
        },
        line: 836
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 857,
            column: 4
          },
          end: {
            line: 857,
            column: 5
          }
        },
        loc: {
          start: {
            line: 857,
            column: 35
          },
          end: {
            line: 889,
            column: 5
          }
        },
        line: 857
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 858,
            column: 55
          },
          end: {
            line: 858,
            column: 56
          }
        },
        loc: {
          start: {
            line: 858,
            column: 68
          },
          end: {
            line: 888,
            column: 9
          }
        },
        line: 858
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 893,
            column: 4
          },
          end: {
            line: 893,
            column: 5
          }
        },
        loc: {
          start: {
            line: 893,
            column: 32
          },
          end: {
            line: 911,
            column: 5
          }
        },
        line: 893
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 902,
            column: 125
          },
          end: {
            line: 902,
            column: 126
          }
        },
        loc: {
          start: {
            line: 902,
            column: 137
          },
          end: {
            line: 904,
            column: 13
          }
        },
        line: 902
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 915,
            column: 4
          },
          end: {
            line: 915,
            column: 5
          }
        },
        loc: {
          start: {
            line: 915,
            column: 36
          },
          end: {
            line: 926,
            column: 5
          }
        },
        line: 915
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 919,
            column: 47
          },
          end: {
            line: 919,
            column: 48
          }
        },
        loc: {
          start: {
            line: 919,
            column: 52
          },
          end: {
            line: 919,
            column: 125
          }
        },
        line: 919
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 920,
            column: 47
          },
          end: {
            line: 920,
            column: 48
          }
        },
        loc: {
          start: {
            line: 920,
            column: 52
          },
          end: {
            line: 920,
            column: 125
          }
        },
        line: 920
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 52,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 52,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "1": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "2": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "3": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 87,
            column: 30
          }
        }, {
          start: {
            line: 88,
            column: 20
          },
          end: {
            line: 90,
            column: 30
          }
        }, {
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 93,
            column: 30
          }
        }, {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 96,
            column: 30
          }
        }, {
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 99,
            column: 30
          }
        }, {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 102,
            column: 30
          }
        }, {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 105,
            column: 30
          }
        }],
        line: 84
      },
      "4": {
        loc: {
          start: {
            line: 89,
            column: 39
          },
          end: {
            line: 89,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 39
          },
          end: {
            line: 89,
            column: 54
          }
        }, {
          start: {
            line: 89,
            column: 58
          },
          end: {
            line: 89,
            column: 59
          }
        }],
        line: 89
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 92,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 92,
            column: 54
          }
        }, {
          start: {
            line: 92,
            column: 58
          },
          end: {
            line: 92,
            column: 61
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 101,
            column: 42
          },
          end: {
            line: 101,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 42
          },
          end: {
            line: 101,
            column: 57
          }
        }, {
          start: {
            line: 101,
            column: 61
          },
          end: {
            line: 101,
            column: 62
          }
        }],
        line: 101
      },
      "7": {
        loc: {
          start: {
            line: 104,
            column: 46
          },
          end: {
            line: 104,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 46
          },
          end: {
            line: 104,
            column: 61
          }
        }, {
          start: {
            line: 104,
            column: 65
          },
          end: {
            line: 104,
            column: 67
          }
        }],
        line: 104
      },
      "8": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 134,
            column: 13
          }
        }],
        line: 114
      },
      "9": {
        loc: {
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        }, {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 124,
            column: 21
          }
        }],
        line: 119
      },
      "10": {
        loc: {
          start: {
            line: 119,
            column: 24
          },
          end: {
            line: 119,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 24
          },
          end: {
            line: 119,
            column: 29
          }
        }, {
          start: {
            line: 119,
            column: 33
          },
          end: {
            line: 119,
            column: 38
          }
        }, {
          start: {
            line: 119,
            column: 42
          },
          end: {
            line: 119,
            column: 47
          }
        }],
        line: 119
      },
      "11": {
        loc: {
          start: {
            line: 120,
            column: 107
          },
          end: {
            line: 120,
            column: 209
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 131
          },
          end: {
            line: 120,
            column: 183
          }
        }, {
          start: {
            line: 120,
            column: 186
          },
          end: {
            line: 120,
            column: 209
          }
        }],
        line: 120
      },
      "12": {
        loc: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 124,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 124,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 122,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 122,
            column: 40
          }
        }, {
          start: {
            line: 122,
            column: 44
          },
          end: {
            line: 122,
            column: 57
          }
        }, {
          start: {
            line: 122,
            column: 61
          },
          end: {
            line: 122,
            column: 71
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 123,
            column: 121
          },
          end: {
            line: 123,
            column: 238
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 150
          },
          end: {
            line: 123,
            column: 207
          }
        }, {
          start: {
            line: 123,
            column: 210
          },
          end: {
            line: 123,
            column: 238
          }
        }],
        line: 123
      },
      "15": {
        loc: {
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: 131,
            column: 17
          },
          end: {
            line: 134,
            column: 13
          }
        }],
        line: 127
      },
      "16": {
        loc: {
          start: {
            line: 129,
            column: 67
          },
          end: {
            line: 129,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 67
          },
          end: {
            line: 129,
            column: 79
          }
        }, {
          start: {
            line: 129,
            column: 83
          },
          end: {
            line: 129,
            column: 84
          }
        }],
        line: 129
      },
      "17": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "18": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 28
          }
        }, {
          start: {
            line: 136,
            column: 32
          },
          end: {
            line: 136,
            column: 61
          }
        }],
        line: 136
      },
      "19": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "20": {
        loc: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 148,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 148,
            column: 35
          }
        }, {
          start: {
            line: 148,
            column: 39
          },
          end: {
            line: 148,
            column: 60
          }
        }],
        line: 148
      },
      "21": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "22": {
        loc: {
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 164,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 164,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "23": {
        loc: {
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 170,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 170,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "24": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "25": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "26": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "27": {
        loc: {
          start: {
            line: 222,
            column: 15
          },
          end: {
            line: 222,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 15
          },
          end: {
            line: 222,
            column: 38
          }
        }, {
          start: {
            line: 222,
            column: 42
          },
          end: {
            line: 222,
            column: 45
          }
        }],
        line: 222
      },
      "28": {
        loc: {
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 320,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 320,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "29": {
        loc: {
          start: {
            line: 277,
            column: 20
          },
          end: {
            line: 277,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 20
          },
          end: {
            line: 277,
            column: 30
          }
        }, {
          start: {
            line: 277,
            column: 34
          },
          end: {
            line: 277,
            column: 44
          }
        }],
        line: 277
      },
      "30": {
        loc: {
          start: {
            line: 279,
            column: 44
          },
          end: {
            line: 279,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 45
          },
          end: {
            line: 279,
            column: 115
          }
        }, {
          start: {
            line: 279,
            column: 120
          },
          end: {
            line: 279,
            column: 123
          }
        }],
        line: 279
      },
      "31": {
        loc: {
          start: {
            line: 279,
            column: 45
          },
          end: {
            line: 279,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 279,
            column: 93
          },
          end: {
            line: 279,
            column: 99
          }
        }, {
          start: {
            line: 279,
            column: 102
          },
          end: {
            line: 279,
            column: 115
          }
        }],
        line: 279
      },
      "32": {
        loc: {
          start: {
            line: 279,
            column: 45
          },
          end: {
            line: 279,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 45
          },
          end: {
            line: 279,
            column: 73
          }
        }, {
          start: {
            line: 279,
            column: 77
          },
          end: {
            line: 279,
            column: 90
          }
        }],
        line: 279
      },
      "33": {
        loc: {
          start: {
            line: 280,
            column: 44
          },
          end: {
            line: 280,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 45
          },
          end: {
            line: 280,
            column: 115
          }
        }, {
          start: {
            line: 280,
            column: 120
          },
          end: {
            line: 280,
            column: 123
          }
        }],
        line: 280
      },
      "34": {
        loc: {
          start: {
            line: 280,
            column: 45
          },
          end: {
            line: 280,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 280,
            column: 93
          },
          end: {
            line: 280,
            column: 99
          }
        }, {
          start: {
            line: 280,
            column: 102
          },
          end: {
            line: 280,
            column: 115
          }
        }],
        line: 280
      },
      "35": {
        loc: {
          start: {
            line: 280,
            column: 45
          },
          end: {
            line: 280,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 45
          },
          end: {
            line: 280,
            column: 73
          }
        }, {
          start: {
            line: 280,
            column: 77
          },
          end: {
            line: 280,
            column: 90
          }
        }],
        line: 280
      },
      "36": {
        loc: {
          start: {
            line: 281,
            column: 44
          },
          end: {
            line: 281,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 45
          },
          end: {
            line: 281,
            column: 115
          }
        }, {
          start: {
            line: 281,
            column: 120
          },
          end: {
            line: 281,
            column: 123
          }
        }],
        line: 281
      },
      "37": {
        loc: {
          start: {
            line: 281,
            column: 45
          },
          end: {
            line: 281,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 93
          },
          end: {
            line: 281,
            column: 99
          }
        }, {
          start: {
            line: 281,
            column: 102
          },
          end: {
            line: 281,
            column: 115
          }
        }],
        line: 281
      },
      "38": {
        loc: {
          start: {
            line: 281,
            column: 45
          },
          end: {
            line: 281,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 45
          },
          end: {
            line: 281,
            column: 73
          }
        }, {
          start: {
            line: 281,
            column: 77
          },
          end: {
            line: 281,
            column: 90
          }
        }],
        line: 281
      },
      "39": {
        loc: {
          start: {
            line: 282,
            column: 44
          },
          end: {
            line: 282,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 45
          },
          end: {
            line: 282,
            column: 115
          }
        }, {
          start: {
            line: 282,
            column: 120
          },
          end: {
            line: 282,
            column: 123
          }
        }],
        line: 282
      },
      "40": {
        loc: {
          start: {
            line: 282,
            column: 45
          },
          end: {
            line: 282,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 93
          },
          end: {
            line: 282,
            column: 99
          }
        }, {
          start: {
            line: 282,
            column: 102
          },
          end: {
            line: 282,
            column: 115
          }
        }],
        line: 282
      },
      "41": {
        loc: {
          start: {
            line: 282,
            column: 45
          },
          end: {
            line: 282,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 45
          },
          end: {
            line: 282,
            column: 73
          }
        }, {
          start: {
            line: 282,
            column: 77
          },
          end: {
            line: 282,
            column: 90
          }
        }],
        line: 282
      },
      "42": {
        loc: {
          start: {
            line: 298,
            column: 20
          },
          end: {
            line: 319,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 20
          },
          end: {
            line: 319,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "43": {
        loc: {
          start: {
            line: 298,
            column: 24
          },
          end: {
            line: 298,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 24
          },
          end: {
            line: 298,
            column: 41
          }
        }, {
          start: {
            line: 298,
            column: 45
          },
          end: {
            line: 298,
            column: 55
          }
        }],
        line: 298
      },
      "44": {
        loc: {
          start: {
            line: 299,
            column: 39
          },
          end: {
            line: 299,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 299,
            column: 39
          },
          end: {
            line: 299,
            column: 51
          }
        }, {
          start: {
            line: 299,
            column: 55
          },
          end: {
            line: 299,
            column: 56
          }
        }],
        line: 299
      },
      "45": {
        loc: {
          start: {
            line: 299,
            column: 61
          },
          end: {
            line: 299,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 299,
            column: 61
          },
          end: {
            line: 299,
            column: 73
          }
        }, {
          start: {
            line: 299,
            column: 77
          },
          end: {
            line: 299,
            column: 78
          }
        }],
        line: 299
      },
      "46": {
        loc: {
          start: {
            line: 300,
            column: 39
          },
          end: {
            line: 300,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 39
          },
          end: {
            line: 300,
            column: 51
          }
        }, {
          start: {
            line: 300,
            column: 55
          },
          end: {
            line: 300,
            column: 56
          }
        }],
        line: 300
      },
      "47": {
        loc: {
          start: {
            line: 300,
            column: 61
          },
          end: {
            line: 300,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 61
          },
          end: {
            line: 300,
            column: 73
          }
        }, {
          start: {
            line: 300,
            column: 77
          },
          end: {
            line: 300,
            column: 78
          }
        }],
        line: 300
      },
      "48": {
        loc: {
          start: {
            line: 331,
            column: 42
          },
          end: {
            line: 331,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 43
          },
          end: {
            line: 331,
            column: 107
          }
        }, {
          start: {
            line: 331,
            column: 112
          },
          end: {
            line: 331,
            column: 115
          }
        }],
        line: 331
      },
      "49": {
        loc: {
          start: {
            line: 331,
            column: 43
          },
          end: {
            line: 331,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 85
          },
          end: {
            line: 331,
            column: 91
          }
        }, {
          start: {
            line: 331,
            column: 94
          },
          end: {
            line: 331,
            column: 107
          }
        }],
        line: 331
      },
      "50": {
        loc: {
          start: {
            line: 331,
            column: 43
          },
          end: {
            line: 331,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 43
          },
          end: {
            line: 331,
            column: 65
          }
        }, {
          start: {
            line: 331,
            column: 69
          },
          end: {
            line: 331,
            column: 82
          }
        }],
        line: 331
      },
      "51": {
        loc: {
          start: {
            line: 332,
            column: 42
          },
          end: {
            line: 332,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 43
          },
          end: {
            line: 332,
            column: 107
          }
        }, {
          start: {
            line: 332,
            column: 112
          },
          end: {
            line: 332,
            column: 115
          }
        }],
        line: 332
      },
      "52": {
        loc: {
          start: {
            line: 332,
            column: 43
          },
          end: {
            line: 332,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 332,
            column: 85
          },
          end: {
            line: 332,
            column: 91
          }
        }, {
          start: {
            line: 332,
            column: 94
          },
          end: {
            line: 332,
            column: 107
          }
        }],
        line: 332
      },
      "53": {
        loc: {
          start: {
            line: 332,
            column: 43
          },
          end: {
            line: 332,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 43
          },
          end: {
            line: 332,
            column: 65
          }
        }, {
          start: {
            line: 332,
            column: 69
          },
          end: {
            line: 332,
            column: 82
          }
        }],
        line: 332
      },
      "54": {
        loc: {
          start: {
            line: 333,
            column: 42
          },
          end: {
            line: 333,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 42
          },
          end: {
            line: 333,
            column: 57
          }
        }, {
          start: {
            line: 333,
            column: 61
          },
          end: {
            line: 333,
            column: 62
          }
        }],
        line: 333
      },
      "55": {
        loc: {
          start: {
            line: 339,
            column: 16
          },
          end: {
            line: 348,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 16
          },
          end: {
            line: 348,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "56": {
        loc: {
          start: {
            line: 341,
            column: 43
          },
          end: {
            line: 341,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 44
          },
          end: {
            line: 341,
            column: 108
          }
        }, {
          start: {
            line: 341,
            column: 113
          },
          end: {
            line: 341,
            column: 116
          }
        }],
        line: 341
      },
      "57": {
        loc: {
          start: {
            line: 341,
            column: 44
          },
          end: {
            line: 341,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 341,
            column: 86
          },
          end: {
            line: 341,
            column: 92
          }
        }, {
          start: {
            line: 341,
            column: 95
          },
          end: {
            line: 341,
            column: 108
          }
        }],
        line: 341
      },
      "58": {
        loc: {
          start: {
            line: 341,
            column: 44
          },
          end: {
            line: 341,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 44
          },
          end: {
            line: 341,
            column: 66
          }
        }, {
          start: {
            line: 341,
            column: 70
          },
          end: {
            line: 341,
            column: 83
          }
        }],
        line: 341
      },
      "59": {
        loc: {
          start: {
            line: 342,
            column: 45
          },
          end: {
            line: 342,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 45
          },
          end: {
            line: 342,
            column: 51
          }
        }, {
          start: {
            line: 342,
            column: 55
          },
          end: {
            line: 342,
            column: 56
          }
        }],
        line: 342
      },
      "60": {
        loc: {
          start: {
            line: 342,
            column: 61
          },
          end: {
            line: 342,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 61
          },
          end: {
            line: 342,
            column: 76
          }
        }, {
          start: {
            line: 342,
            column: 80
          },
          end: {
            line: 342,
            column: 81
          }
        }],
        line: 342
      },
      "61": {
        loc: {
          start: {
            line: 355,
            column: 47
          },
          end: {
            line: 355,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 47
          },
          end: {
            line: 355,
            column: 62
          }
        }, {
          start: {
            line: 355,
            column: 66
          },
          end: {
            line: 355,
            column: 67
          }
        }],
        line: 355
      },
      "62": {
        loc: {
          start: {
            line: 359,
            column: 46
          },
          end: {
            line: 359,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 46
          },
          end: {
            line: 359,
            column: 61
          }
        }, {
          start: {
            line: 359,
            column: 65
          },
          end: {
            line: 359,
            column: 66
          }
        }],
        line: 359
      },
      "63": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 389,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 381,
            column: 12
          },
          end: {
            line: 382,
            column: 45
          }
        }, {
          start: {
            line: 383,
            column: 12
          },
          end: {
            line: 384,
            column: 43
          }
        }, {
          start: {
            line: 385,
            column: 12
          },
          end: {
            line: 386,
            column: 44
          }
        }, {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 388,
            column: 43
          }
        }],
        line: 380
      },
      "64": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 393,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 393,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "65": {
        loc: {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        }, {
          start: {
            line: 402,
            column: 13
          },
          end: {
            line: 405,
            column: 9
          }
        }],
        line: 398
      },
      "66": {
        loc: {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 41
          }
        }, {
          start: {
            line: 398,
            column: 45
          },
          end: {
            line: 398,
            column: 68
          }
        }],
        line: 398
      },
      "67": {
        loc: {
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 420,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 420,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "68": {
        loc: {
          start: {
            line: 435,
            column: 32
          },
          end: {
            line: 435,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 47
          },
          end: {
            line: 435,
            column: 50
          }
        }, {
          start: {
            line: 435,
            column: 53
          },
          end: {
            line: 435,
            column: 56
          }
        }],
        line: 435
      },
      "69": {
        loc: {
          start: {
            line: 526,
            column: 40
          },
          end: {
            line: 526,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 526,
            column: 79
          },
          end: {
            line: 526,
            column: 86
          }
        }, {
          start: {
            line: 526,
            column: 89
          },
          end: {
            line: 526,
            column: 95
          }
        }],
        line: 526
      },
      "70": {
        loc: {
          start: {
            line: 585,
            column: 40
          },
          end: {
            line: 585,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 585,
            column: 79
          },
          end: {
            line: 585,
            column: 86
          }
        }, {
          start: {
            line: 585,
            column: 89
          },
          end: {
            line: 585,
            column: 95
          }
        }],
        line: 585
      },
      "71": {
        loc: {
          start: {
            line: 595,
            column: 41
          },
          end: {
            line: 595,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 595,
            column: 49
          },
          end: {
            line: 595,
            column: 50
          }
        }],
        line: 595
      },
      "72": {
        loc: {
          start: {
            line: 595,
            column: 52
          },
          end: {
            line: 595,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 595,
            column: 63
          },
          end: {
            line: 595,
            column: 84
          }
        }],
        line: 595
      },
      "73": {
        loc: {
          start: {
            line: 598,
            column: 12
          },
          end: {
            line: 601,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 12
          },
          end: {
            line: 601,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 598
      },
      "74": {
        loc: {
          start: {
            line: 605,
            column: 16
          },
          end: {
            line: 607,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 605,
            column: 16
          },
          end: {
            line: 607,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 605
      },
      "75": {
        loc: {
          start: {
            line: 606,
            column: 72
          },
          end: {
            line: 606,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 606,
            column: 86
          },
          end: {
            line: 606,
            column: 103
          }
        }, {
          start: {
            line: 606,
            column: 106
          },
          end: {
            line: 606,
            column: 110
          }
        }],
        line: 606
      },
      "76": {
        loc: {
          start: {
            line: 615,
            column: 16
          },
          end: {
            line: 617,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 615,
            column: 16
          },
          end: {
            line: 617,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 615
      },
      "77": {
        loc: {
          start: {
            line: 624,
            column: 32
          },
          end: {
            line: 624,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 32
          },
          end: {
            line: 624,
            column: 74
          }
        }, {
          start: {
            line: 624,
            column: 78
          },
          end: {
            line: 624,
            column: 87
          }
        }],
        line: 624
      },
      "78": {
        loc: {
          start: {
            line: 628,
            column: 36
          },
          end: {
            line: 628,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 628,
            column: 36
          },
          end: {
            line: 628,
            column: 86
          }
        }, {
          start: {
            line: 628,
            column: 90
          },
          end: {
            line: 628,
            column: 99
          }
        }],
        line: 628
      },
      "79": {
        loc: {
          start: {
            line: 636,
            column: 20
          },
          end: {
            line: 646,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 636,
            column: 20
          },
          end: {
            line: 646,
            column: 21
          }
        }, {
          start: {
            line: 644,
            column: 25
          },
          end: {
            line: 646,
            column: 21
          }
        }],
        line: 636
      },
      "80": {
        loc: {
          start: {
            line: 638,
            column: 24
          },
          end: {
            line: 640,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 638,
            column: 24
          },
          end: {
            line: 640,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 638
      },
      "81": {
        loc: {
          start: {
            line: 661,
            column: 66
          },
          end: {
            line: 661,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 661,
            column: 100
          },
          end: {
            line: 661,
            column: 111
          }
        }, {
          start: {
            line: 661,
            column: 114
          },
          end: {
            line: 661,
            column: 128
          }
        }],
        line: 661
      },
      "82": {
        loc: {
          start: {
            line: 662,
            column: 66
          },
          end: {
            line: 662,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 662,
            column: 100
          },
          end: {
            line: 662,
            column: 111
          }
        }, {
          start: {
            line: 662,
            column: 114
          },
          end: {
            line: 662,
            column: 128
          }
        }],
        line: 662
      },
      "83": {
        loc: {
          start: {
            line: 663,
            column: 16
          },
          end: {
            line: 688,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 663,
            column: 16
          },
          end: {
            line: 688,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 663
      },
      "84": {
        loc: {
          start: {
            line: 663,
            column: 20
          },
          end: {
            line: 663,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 663,
            column: 20
          },
          end: {
            line: 663,
            column: 30
          }
        }, {
          start: {
            line: 663,
            column: 34
          },
          end: {
            line: 663,
            column: 44
          }
        }],
        line: 663
      },
      "85": {
        loc: {
          start: {
            line: 666,
            column: 31
          },
          end: {
            line: 666,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 666,
            column: 31
          },
          end: {
            line: 666,
            column: 43
          }
        }, {
          start: {
            line: 666,
            column: 47
          },
          end: {
            line: 666,
            column: 48
          }
        }],
        line: 666
      },
      "86": {
        loc: {
          start: {
            line: 666,
            column: 50
          },
          end: {
            line: 666,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 666,
            column: 50
          },
          end: {
            line: 666,
            column: 62
          }
        }, {
          start: {
            line: 666,
            column: 66
          },
          end: {
            line: 666,
            column: 67
          }
        }],
        line: 666
      },
      "87": {
        loc: {
          start: {
            line: 667,
            column: 31
          },
          end: {
            line: 667,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 667,
            column: 31
          },
          end: {
            line: 667,
            column: 43
          }
        }, {
          start: {
            line: 667,
            column: 47
          },
          end: {
            line: 667,
            column: 48
          }
        }],
        line: 667
      },
      "88": {
        loc: {
          start: {
            line: 667,
            column: 50
          },
          end: {
            line: 667,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 667,
            column: 50
          },
          end: {
            line: 667,
            column: 62
          }
        }, {
          start: {
            line: 667,
            column: 66
          },
          end: {
            line: 667,
            column: 67
          }
        }],
        line: 667
      },
      "89": {
        loc: {
          start: {
            line: 668,
            column: 38
          },
          end: {
            line: 668,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 668,
            column: 38
          },
          end: {
            line: 668,
            column: 72
          }
        }, {
          start: {
            line: 668,
            column: 76
          },
          end: {
            line: 668,
            column: 85
          }
        }],
        line: 668
      },
      "90": {
        loc: {
          start: {
            line: 672,
            column: 44
          },
          end: {
            line: 672,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 672,
            column: 44
          },
          end: {
            line: 672,
            column: 56
          }
        }, {
          start: {
            line: 672,
            column: 60
          },
          end: {
            line: 672,
            column: 61
          }
        }],
        line: 672
      },
      "91": {
        loc: {
          start: {
            line: 672,
            column: 63
          },
          end: {
            line: 672,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 672,
            column: 63
          },
          end: {
            line: 672,
            column: 75
          }
        }, {
          start: {
            line: 672,
            column: 79
          },
          end: {
            line: 672,
            column: 80
          }
        }],
        line: 672
      },
      "92": {
        loc: {
          start: {
            line: 672,
            column: 82
          },
          end: {
            line: 672,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 672,
            column: 82
          },
          end: {
            line: 672,
            column: 94
          }
        }, {
          start: {
            line: 672,
            column: 98
          },
          end: {
            line: 672,
            column: 99
          }
        }],
        line: 672
      },
      "93": {
        loc: {
          start: {
            line: 672,
            column: 101
          },
          end: {
            line: 672,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 672,
            column: 101
          },
          end: {
            line: 672,
            column: 113
          }
        }, {
          start: {
            line: 672,
            column: 117
          },
          end: {
            line: 672,
            column: 118
          }
        }],
        line: 672
      },
      "94": {
        loc: {
          start: {
            line: 674,
            column: 20
          },
          end: {
            line: 687,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 674,
            column: 20
          },
          end: {
            line: 687,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 674
      },
      "95": {
        loc: {
          start: {
            line: 674,
            column: 24
          },
          end: {
            line: 674,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 674,
            column: 24
          },
          end: {
            line: 674,
            column: 41
          }
        }, {
          start: {
            line: 674,
            column: 45
          },
          end: {
            line: 674,
            column: 55
          }
        }],
        line: 674
      },
      "96": {
        loc: {
          start: {
            line: 675,
            column: 39
          },
          end: {
            line: 675,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 675,
            column: 39
          },
          end: {
            line: 675,
            column: 51
          }
        }, {
          start: {
            line: 675,
            column: 55
          },
          end: {
            line: 675,
            column: 56
          }
        }],
        line: 675
      },
      "97": {
        loc: {
          start: {
            line: 675,
            column: 61
          },
          end: {
            line: 675,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 675,
            column: 61
          },
          end: {
            line: 675,
            column: 73
          }
        }, {
          start: {
            line: 675,
            column: 77
          },
          end: {
            line: 675,
            column: 78
          }
        }],
        line: 675
      },
      "98": {
        loc: {
          start: {
            line: 676,
            column: 39
          },
          end: {
            line: 676,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 676,
            column: 39
          },
          end: {
            line: 676,
            column: 51
          }
        }, {
          start: {
            line: 676,
            column: 55
          },
          end: {
            line: 676,
            column: 56
          }
        }],
        line: 676
      },
      "99": {
        loc: {
          start: {
            line: 676,
            column: 61
          },
          end: {
            line: 676,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 676,
            column: 61
          },
          end: {
            line: 676,
            column: 73
          }
        }, {
          start: {
            line: 676,
            column: 77
          },
          end: {
            line: 676,
            column: 78
          }
        }],
        line: 676
      },
      "100": {
        loc: {
          start: {
            line: 681,
            column: 40
          },
          end: {
            line: 681,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 681,
            column: 40
          },
          end: {
            line: 681,
            column: 82
          }
        }, {
          start: {
            line: 681,
            column: 86
          },
          end: {
            line: 681,
            column: 95
          }
        }],
        line: 681
      },
      "101": {
        loc: {
          start: {
            line: 684,
            column: 40
          },
          end: {
            line: 684,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 684,
            column: 40
          },
          end: {
            line: 684,
            column: 74
          }
        }, {
          start: {
            line: 684,
            column: 78
          },
          end: {
            line: 684,
            column: 87
          }
        }],
        line: 684
      },
      "102": {
        loc: {
          start: {
            line: 692,
            column: 26
          },
          end: {
            line: 692,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 692,
            column: 26
          },
          end: {
            line: 692,
            column: 32
          }
        }, {
          start: {
            line: 692,
            column: 36
          },
          end: {
            line: 692,
            column: 37
          }
        }],
        line: 692
      },
      "103": {
        loc: {
          start: {
            line: 693,
            column: 26
          },
          end: {
            line: 693,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 693,
            column: 26
          },
          end: {
            line: 693,
            column: 32
          }
        }, {
          start: {
            line: 693,
            column: 36
          },
          end: {
            line: 693,
            column: 37
          }
        }],
        line: 693
      },
      "104": {
        loc: {
          start: {
            line: 694,
            column: 31
          },
          end: {
            line: 694,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 694,
            column: 31
          },
          end: {
            line: 694,
            column: 46
          }
        }, {
          start: {
            line: 694,
            column: 50
          },
          end: {
            line: 694,
            column: 51
          }
        }],
        line: 694
      },
      "105": {
        loc: {
          start: {
            line: 701,
            column: 34
          },
          end: {
            line: 701,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 701,
            column: 34
          },
          end: {
            line: 701,
            column: 84
          }
        }, {
          start: {
            line: 701,
            column: 88
          },
          end: {
            line: 701,
            column: 97
          }
        }],
        line: 701
      },
      "106": {
        loc: {
          start: {
            line: 705,
            column: 16
          },
          end: {
            line: 711,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 705,
            column: 16
          },
          end: {
            line: 711,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 705
      },
      "107": {
        loc: {
          start: {
            line: 707,
            column: 36
          },
          end: {
            line: 707,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 707,
            column: 36
          },
          end: {
            line: 707,
            column: 71
          }
        }, {
          start: {
            line: 707,
            column: 75
          },
          end: {
            line: 707,
            column: 84
          }
        }],
        line: 707
      },
      "108": {
        loc: {
          start: {
            line: 728,
            column: 26
          },
          end: {
            line: 728,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 728,
            column: 26
          },
          end: {
            line: 728,
            column: 60
          }
        }, {
          start: {
            line: 728,
            column: 64
          },
          end: {
            line: 728,
            column: 73
          }
        }],
        line: 728
      },
      "109": {
        loc: {
          start: {
            line: 736,
            column: 12
          },
          end: {
            line: 737,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 736,
            column: 12
          },
          end: {
            line: 737,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 736
      },
      "110": {
        loc: {
          start: {
            line: 739,
            column: 12
          },
          end: {
            line: 741,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 739,
            column: 12
          },
          end: {
            line: 741,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 739
      },
      "111": {
        loc: {
          start: {
            line: 742,
            column: 12
          },
          end: {
            line: 744,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 742,
            column: 12
          },
          end: {
            line: 744,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 742
      },
      "112": {
        loc: {
          start: {
            line: 753,
            column: 8
          },
          end: {
            line: 762,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 754,
            column: 12
          },
          end: {
            line: 755,
            column: 73
          }
        }, {
          start: {
            line: 756,
            column: 12
          },
          end: {
            line: 757,
            column: 71
          }
        }, {
          start: {
            line: 758,
            column: 12
          },
          end: {
            line: 759,
            column: 72
          }
        }, {
          start: {
            line: 760,
            column: 12
          },
          end: {
            line: 761,
            column: 33
          }
        }],
        line: 753
      },
      "113": {
        loc: {
          start: {
            line: 755,
            column: 23
          },
          end: {
            line: 755,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 755,
            column: 23
          },
          end: {
            line: 755,
            column: 59
          }
        }, {
          start: {
            line: 755,
            column: 63
          },
          end: {
            line: 755,
            column: 72
          }
        }],
        line: 755
      },
      "114": {
        loc: {
          start: {
            line: 757,
            column: 23
          },
          end: {
            line: 757,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 757,
            column: 23
          },
          end: {
            line: 757,
            column: 57
          }
        }, {
          start: {
            line: 757,
            column: 61
          },
          end: {
            line: 757,
            column: 70
          }
        }],
        line: 757
      },
      "115": {
        loc: {
          start: {
            line: 759,
            column: 23
          },
          end: {
            line: 759,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 759,
            column: 23
          },
          end: {
            line: 759,
            column: 58
          }
        }, {
          start: {
            line: 759,
            column: 62
          },
          end: {
            line: 759,
            column: 71
          }
        }],
        line: 759
      },
      "116": {
        loc: {
          start: {
            line: 771,
            column: 8
          },
          end: {
            line: 772,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 771,
            column: 8
          },
          end: {
            line: 772,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 771
      },
      "117": {
        loc: {
          start: {
            line: 778,
            column: 19
          },
          end: {
            line: 778,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 778,
            column: 38
          },
          end: {
            line: 778,
            column: 47
          }
        }, {
          start: {
            line: 778,
            column: 50
          },
          end: {
            line: 778,
            column: 53
          }
        }],
        line: 778
      },
      "118": {
        loc: {
          start: {
            line: 784,
            column: 8
          },
          end: {
            line: 788,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 784,
            column: 8
          },
          end: {
            line: 788,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 784
      },
      "119": {
        loc: {
          start: {
            line: 784,
            column: 12
          },
          end: {
            line: 784,
            column: 185
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 784,
            column: 12
          },
          end: {
            line: 784,
            column: 41
          }
        }, {
          start: {
            line: 784,
            column: 46
          },
          end: {
            line: 784,
            column: 184
          }
        }],
        line: 784
      },
      "120": {
        loc: {
          start: {
            line: 784,
            column: 46
          },
          end: {
            line: 784,
            column: 184
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 784,
            column: 155
          },
          end: {
            line: 784,
            column: 161
          }
        }, {
          start: {
            line: 784,
            column: 164
          },
          end: {
            line: 784,
            column: 184
          }
        }],
        line: 784
      },
      "121": {
        loc: {
          start: {
            line: 784,
            column: 46
          },
          end: {
            line: 784,
            column: 152
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 784,
            column: 46
          },
          end: {
            line: 784,
            column: 135
          }
        }, {
          start: {
            line: 784,
            column: 139
          },
          end: {
            line: 784,
            column: 152
          }
        }],
        line: 784
      },
      "122": {
        loc: {
          start: {
            line: 784,
            column: 52
          },
          end: {
            line: 784,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 784,
            column: 104
          },
          end: {
            line: 784,
            column: 110
          }
        }, {
          start: {
            line: 784,
            column: 113
          },
          end: {
            line: 784,
            column: 125
          }
        }],
        line: 784
      },
      "123": {
        loc: {
          start: {
            line: 784,
            column: 52
          },
          end: {
            line: 784,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 784,
            column: 52
          },
          end: {
            line: 784,
            column: 84
          }
        }, {
          start: {
            line: 784,
            column: 88
          },
          end: {
            line: 784,
            column: 101
          }
        }],
        line: 784
      },
      "124": {
        loc: {
          start: {
            line: 795,
            column: 8
          },
          end: {
            line: 803,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 795,
            column: 8
          },
          end: {
            line: 803,
            column: 9
          }
        }, {
          start: {
            line: 800,
            column: 13
          },
          end: {
            line: 803,
            column: 9
          }
        }],
        line: 795
      },
      "125": {
        loc: {
          start: {
            line: 808,
            column: 8
          },
          end: {
            line: 809,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 808,
            column: 8
          },
          end: {
            line: 809,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 808
      },
      "126": {
        loc: {
          start: {
            line: 824,
            column: 18
          },
          end: {
            line: 824,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 824,
            column: 51
          },
          end: {
            line: 824,
            column: 57
          }
        }, {
          start: {
            line: 824,
            column: 60
          },
          end: {
            line: 824,
            column: 82
          }
        }],
        line: 824
      },
      "127": {
        loc: {
          start: {
            line: 824,
            column: 18
          },
          end: {
            line: 824,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 824,
            column: 18
          },
          end: {
            line: 824,
            column: 30
          }
        }, {
          start: {
            line: 824,
            column: 34
          },
          end: {
            line: 824,
            column: 48
          }
        }],
        line: 824
      },
      "128": {
        loc: {
          start: {
            line: 825,
            column: 8
          },
          end: {
            line: 827,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 825,
            column: 8
          },
          end: {
            line: 827,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 825
      },
      "129": {
        loc: {
          start: {
            line: 876,
            column: 16
          },
          end: {
            line: 882,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 876,
            column: 16
          },
          end: {
            line: 882,
            column: 17
          }
        }, {
          start: {
            line: 880,
            column: 21
          },
          end: {
            line: 882,
            column: 17
          }
        }],
        line: 876
      },
      "130": {
        loc: {
          start: {
            line: 919,
            column: 62
          },
          end: {
            line: 919,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 919,
            column: 96
          },
          end: {
            line: 919,
            column: 107
          }
        }, {
          start: {
            line: 919,
            column: 110
          },
          end: {
            line: 919,
            column: 124
          }
        }],
        line: 919
      },
      "131": {
        loc: {
          start: {
            line: 920,
            column: 62
          },
          end: {
            line: 920,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 920,
            column: 96
          },
          end: {
            line: 920,
            column: 107
          }
        }, {
          start: {
            line: 920,
            column: 110
          },
          end: {
            line: 920,
            column: 124
          }
        }],
        line: 920
      },
      "132": {
        loc: {
          start: {
            line: 921,
            column: 12
          },
          end: {
            line: 923,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 921,
            column: 12
          },
          end: {
            line: 923,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 921
      },
      "133": {
        loc: {
          start: {
            line: 921,
            column: 16
          },
          end: {
            line: 921,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 921,
            column: 16
          },
          end: {
            line: 921,
            column: 26
          }
        }, {
          start: {
            line: 921,
            column: 30
          },
          end: {
            line: 921,
            column: 40
          }
        }],
        line: 921
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0,
      "441": 0,
      "442": 0,
      "443": 0,
      "444": 0,
      "445": 0,
      "446": 0,
      "447": 0,
      "448": 0,
      "449": 0,
      "450": 0,
      "451": 0,
      "452": 0,
      "453": 0,
      "454": 0,
      "455": 0,
      "456": 0,
      "457": 0,
      "458": 0,
      "459": 0,
      "460": 0,
      "461": 0,
      "462": 0,
      "463": 0,
      "464": 0,
      "465": 0,
      "466": 0,
      "467": 0,
      "468": 0,
      "469": 0,
      "470": 0,
      "471": 0,
      "472": 0,
      "473": 0,
      "474": 0,
      "475": 0,
      "476": 0,
      "477": 0,
      "478": 0,
      "479": 0,
      "480": 0,
      "481": 0,
      "482": 0,
      "483": 0,
      "484": 0,
      "485": 0,
      "486": 0,
      "487": 0,
      "488": 0,
      "489": 0,
      "490": 0,
      "491": 0,
      "492": 0,
      "493": 0,
      "494": 0,
      "495": 0,
      "496": 0,
      "497": 0,
      "498": 0,
      "499": 0,
      "500": 0,
      "501": 0,
      "502": 0,
      "503": 0,
      "504": 0,
      "505": 0,
      "506": 0,
      "507": 0,
      "508": 0,
      "509": 0,
      "510": 0,
      "511": 0,
      "512": 0,
      "513": 0,
      "514": 0,
      "515": 0,
      "516": 0,
      "517": 0,
      "518": 0,
      "519": 0,
      "520": 0,
      "521": 0,
      "522": 0,
      "523": 0,
      "524": 0,
      "525": 0,
      "526": 0,
      "527": 0,
      "528": 0,
      "529": 0,
      "530": 0,
      "531": 0,
      "532": 0,
      "533": 0,
      "534": 0,
      "535": 0,
      "536": 0,
      "537": 0,
      "538": 0,
      "539": 0,
      "540": 0,
      "541": 0,
      "542": 0,
      "543": 0,
      "544": 0,
      "545": 0,
      "546": 0,
      "547": 0,
      "548": 0,
      "549": 0,
      "550": 0,
      "551": 0,
      "552": 0,
      "553": 0,
      "554": 0,
      "555": 0,
      "556": 0,
      "557": 0,
      "558": 0,
      "559": 0,
      "560": 0,
      "561": 0,
      "562": 0,
      "563": 0,
      "564": 0,
      "565": 0,
      "566": 0,
      "567": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0, 0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0],
      "72": [0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0, 0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0],
      "119": [0, 0],
      "120": [0, 0],
      "121": [0, 0],
      "122": [0, 0],
      "123": [0, 0],
      "124": [0, 0],
      "125": [0, 0],
      "126": [0, 0],
      "127": [0, 0],
      "128": [0, 0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0, 0],
      "132": [0, 0],
      "133": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/processors/GraphVisualizationProcessor.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/processors/GraphVisualizationProcessor.ts"],
      sourcesContent: ["import { MarkdownPostProcessorContext, Plugin, Notice } from 'obsidian';\nimport { SPARQLEngine, SelectResult } from '../../application/SPARQLEngine';\nimport { Graph } from '../../domain/semantic/core/Graph';\nimport { Triple, IRI, Literal } from '../../domain/semantic/core/Triple';\nimport { RDFService } from '../../application/services/RDFService';\nimport { ExportRDFModal } from '../modals/ExportRDFModal';\nimport { RDFFormat } from '../../application/services/RDFSerializer';\n\ninterface GraphNode {\n    id: string;\n    label: string;\n    type: 'subject' | 'object' | 'predicate';\n    group: number;\n    x?: number;\n    y?: number;\n    fx?: number | null;\n    fy?: number | null;\n}\n\ninterface GraphLink {\n    source: string | GraphNode;\n    target: string | GraphNode;\n    label: string;\n    id: string;\n}\n\ninterface GraphData {\n    nodes: GraphNode[];\n    links: GraphLink[];\n}\n\ninterface GraphConfig {\n    focus?: string;\n    depth?: number;\n    limit?: number;\n    query?: string;\n    showLabels?: boolean;\n    nodeSize?: number;\n    linkDistance?: number;\n}\n\nexport class GraphVisualizationProcessor {\n    private plugin: Plugin;\n    private engine: SPARQLEngine;\n    private graph: Graph;\n    private rdfService: RDFService;\n    \n    constructor(plugin: Plugin, graph: Graph) {\n        this.plugin = plugin;\n        this.graph = graph;\n        this.engine = new SPARQLEngine(graph);\n        this.rdfService = new RDFService(plugin.app);\n    }\n    \n    /**\n     * Main processor method called by Obsidian\n     */\n    async processCodeBlock(\n        source: string,\n        el: HTMLElement,\n        ctx: MarkdownPostProcessorContext\n    ): Promise<void> {\n        el.empty();\n        \n        // Create main container\n        const container = document.createElement('div');\n        container.className = 'exocortex-graph-container';\n        container.style.cssText = `\n            border: 1px solid var(--background-modifier-border);\n            padding: 1em;\n            margin: 1em 0;\n            border-radius: var(--radius-m);\n            background: var(--background-secondary);\n            position: relative;\n        `;\n        el.appendChild(container);\n        \n        try {\n            // Parse configuration\n            const config = this.parseConfig(source.trim());\n            \n            // Show loading indicator\n            const loadingEl = this.createLoadingIndicator();\n            container.appendChild(loadingEl);\n            \n            // Get graph data\n            const graphData = await this.getGraphData(config);\n            \n            // Remove loading indicator\n            loadingEl.remove();\n            \n            if (graphData.nodes.length === 0) {\n                const emptyMessage = document.createElement('div');\n                emptyMessage.textContent = 'No graph data found';\n                emptyMessage.style.cssText = 'padding: 2em; text-align: center; color: var(--text-muted);';\n                container.appendChild(emptyMessage);\n                return;\n            }\n            \n            // Create graph visualization\n            await this.createGraphVisualization(container, graphData, config);\n            \n            // Add controls\n            this.addControls(container, graphData, config);\n            \n        } catch (error: any) {\n            container.innerHTML = '';\n            const errorEl = this.createErrorMessage(error);\n            container.appendChild(errorEl);\n            console.error('Graph visualization error:', error);\n        }\n    }\n    \n    private parseConfig(source: string): GraphConfig {\n        const config: GraphConfig = {\n            limit: 100,\n            showLabels: true,\n            nodeSize: 8,\n            linkDistance: 80,\n            depth: 2\n        };\n        \n        const lines = source.split('\\n').map(l => l.trim()).filter(l => l);\n        \n        // Check if it's a SPARQL query\n        if (source.toUpperCase().includes('SELECT')) {\n            config.query = source;\n            return config;\n        }\n        \n        // Parse configuration options\n        for (const line of lines) {\n            if (line.includes(':')) {\n                const [key, value] = line.split(':').map(s => s.trim());\n                switch (key.toLowerCase()) {\n                    case 'focus':\n                        config.focus = value.replace(/\\[\\[|\\]\\]/g, '');\n                        break;\n                    case 'depth':\n                        config.depth = parseInt(value) || 2;\n                        break;\n                    case 'limit':\n                        config.limit = parseInt(value) || 100;\n                        break;\n                    case 'query':\n                        config.query = value;\n                        break;\n                    case 'showlabels':\n                        config.showLabels = value.toLowerCase() === 'true';\n                        break;\n                    case 'nodesize':\n                        config.nodeSize = parseInt(value) || 8;\n                        break;\n                    case 'linkdistance':\n                        config.linkDistance = parseInt(value) || 80;\n                        break;\n                }\n            }\n        }\n        \n        return config;\n    }\n    \n    private async getGraphData(config: GraphConfig): Promise<GraphData> {\n        let triples: Triple[] = [];\n        \n        if (config.query) {\n            // Execute SPARQL query to get specific triples\n            const result: SelectResult = this.engine.select(config.query);\n            \n            // Convert SPARQL results to triples\n            for (const row of result.results) {\n                if (row.s && row.p && row.o) {\n                    triples.push(new Triple(\n                        new IRI(row.s),\n                        new IRI(row.p),\n                        row.o.startsWith('\"') ? Literal.string(row.o.replace(/^\"|\"$/g, '')) : new IRI(row.o)\n                    ));\n                } else if (row.subject && row.predicate && row.object) {\n                    triples.push(new Triple(\n                        new IRI(row.subject),\n                        new IRI(row.predicate),\n                        row.object.startsWith('\"') ? Literal.string(row.object.replace(/^\"|\"$/g, '')) : new IRI(row.object)\n                    ));\n                }\n            }\n        } else if (config.focus) {\n            // Get triples centered around focus entity\n            triples = this.getTriplesAroundFocus(config.focus, config.depth || 2);\n        } else {\n            // Get all triples (with limit)\n            triples = this.graph.match(null, null, null);\n        }\n        \n        // Apply limit\n        if (config.limit && triples.length > config.limit) {\n            triples = triples.slice(0, config.limit);\n        }\n        \n        return this.convertTriplesToGraphData(triples);\n    }\n    \n    private getTriplesAroundFocus(focus: string, depth: number): Triple[] {\n        const visited = new Set<string>();\n        const result: Triple[] = [];\n        const queue: { entity: string; currentDepth: number }[] = [{ entity: focus, currentDepth: 0 }];\n        \n        while (queue.length > 0) {\n            const { entity, currentDepth } = queue.shift()!;\n            \n            if (visited.has(entity) || currentDepth >= depth) {\n                continue;\n            }\n            \n            visited.add(entity);\n            \n            // Get triples where entity is subject\n            const subjectTriples = this.graph.match(new IRI(entity), null, null);\n            result.push(...subjectTriples);\n            \n            // Get triples where entity is object\n            const objectTriples = this.graph.match(null, null, new IRI(entity));\n            result.push(...objectTriples);\n            \n            // Add related entities to queue for next depth level\n            if (currentDepth < depth - 1) {\n                for (const triple of subjectTriples) {\n                    const objectStr = triple.getObject().toString();\n                    if (!visited.has(objectStr)) {\n                        queue.push({ entity: objectStr, currentDepth: currentDepth + 1 });\n                    }\n                }\n                for (const triple of objectTriples) {\n                    const subjectStr = triple.getSubject().toString();\n                    if (!visited.has(subjectStr)) {\n                        queue.push({ entity: subjectStr, currentDepth: currentDepth + 1 });\n                    }\n                }\n            }\n        }\n        \n        return result;\n    }\n    \n    private convertTriplesToGraphData(triples: Triple[]): GraphData {\n        const nodesMap = new Map<string, GraphNode>();\n        const links: GraphLink[] = [];\n        \n        for (const triple of triples) {\n            const subjectStr = triple.getSubject().toString();\n            const predicateStr = triple.getPredicate().toString();\n            const objectStr = triple.getObject().toString();\n            \n            // Add subject node\n            if (!nodesMap.has(subjectStr)) {\n                nodesMap.set(subjectStr, {\n                    id: subjectStr,\n                    label: this.getDisplayLabel(subjectStr),\n                    type: 'subject',\n                    group: 1\n                });\n            }\n            \n            // Add object node\n            if (!nodesMap.has(objectStr)) {\n                nodesMap.set(objectStr, {\n                    id: objectStr,\n                    label: this.getDisplayLabel(objectStr),\n                    type: 'object',\n                    group: 2\n                });\n            }\n            \n            // Add link\n            const linkId = `${subjectStr}-${predicateStr}-${objectStr}`;\n            links.push({\n                source: subjectStr,\n                target: objectStr,\n                label: predicateStr,\n                id: linkId\n            });\n        }\n        \n        return {\n            nodes: Array.from(nodesMap.values()),\n            links\n        };\n    }\n    \n    private getDisplayLabel(uri: string): string {\n        // Extract human-readable label from URI\n        if (uri.startsWith('file://')) {\n            return uri.replace('file://', '');\n        }\n        \n        // Extract last part of URI\n        const parts = uri.split('/');\n        return parts[parts.length - 1] || uri;\n    }\n    \n    private async createGraphVisualization(\n        container: HTMLElement,\n        data: GraphData,\n        config: GraphConfig\n    ): Promise<void> {\n        // Create SVG container\n        const svgContainer = document.createElement('div');\n        svgContainer.style.cssText = 'position: relative; width: 100%; height: 600px; overflow: hidden;';\n        container.appendChild(svgContainer);\n        \n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('height', '600');\n        svg.style.cssText = 'border: 1px solid var(--background-modifier-border); background: var(--background-primary);';\n        svgContainer.appendChild(svg);\n        \n        // Create D3.js-like force simulation manually (simplified version)\n        await this.createForceDirectedGraph(svg, data, config);\n        \n        // Store data for export functionality\n        (container as any).__graphData = data;\n        (container as any).__graphConfig = config;\n    }\n    \n    private async createForceDirectedGraph(\n        svg: SVGSVGElement,\n        data: GraphData,\n        config: GraphConfig\n    ): Promise<void> {\n        const width = 800;\n        const height = 600;\n        const centerX = width / 2;\n        const centerY = height / 2;\n        \n        // Create groups for different elements\n        const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        svg.appendChild(defs);\n        \n        // Add arrow marker for directed edges\n        const marker = document.createElementNS('http://www.w3.org/2000/svg', 'marker');\n        marker.setAttribute('id', 'arrowhead');\n        marker.setAttribute('viewBox', '0 -5 10 10');\n        marker.setAttribute('refX', '8');\n        marker.setAttribute('refY', '0');\n        marker.setAttribute('orient', 'auto');\n        marker.setAttribute('markerWidth', '6');\n        marker.setAttribute('markerHeight', '6');\n        \n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M 0,-5 L 10 ,0 L 0,5');\n        path.setAttribute('fill', 'var(--text-muted)');\n        marker.appendChild(path);\n        defs.appendChild(marker);\n        \n        const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        svg.appendChild(g);\n        \n        // Position nodes using simple force-directed layout\n        this.positionNodes(data.nodes, width, height);\n        \n        // Create links\n        const linksGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        linksGroup.setAttribute('class', 'links');\n        g.appendChild(linksGroup);\n        \n        for (const link of data.links) {\n            const sourceNode = data.nodes.find(n => n.id === link.source);\n            const targetNode = data.nodes.find(n => n.id === link.target);\n            \n            if (sourceNode && targetNode) {\n                const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n                line.setAttribute('x1', sourceNode.x?.toString() || '0');\n                line.setAttribute('y1', sourceNode.y?.toString() || '0');\n                line.setAttribute('x2', targetNode.x?.toString() || '0');\n                line.setAttribute('y2', targetNode.y?.toString() || '0');\n                line.setAttribute('stroke', 'var(--text-muted)');\n                line.setAttribute('stroke-width', '1');\n                line.setAttribute('marker-end', 'url(#arrowhead)');\n                line.style.cursor = 'pointer';\n                \n                // Add hover effect\n                line.addEventListener('mouseenter', () => {\n                    line.setAttribute('stroke', 'var(--text-accent)');\n                    line.setAttribute('stroke-width', '2');\n                });\n                \n                line.addEventListener('mouseleave', () => {\n                    line.setAttribute('stroke', 'var(--text-muted)');\n                    line.setAttribute('stroke-width', '1');\n                });\n                \n                linksGroup.appendChild(line);\n                \n                // Add edge label if enabled\n                if (config.showLabels && link.label) {\n                    const midX = ((sourceNode.x || 0) + (targetNode.x || 0)) / 2;\n                    const midY = ((sourceNode.y || 0) + (targetNode.y || 0)) / 2;\n                    \n                    const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                    text.setAttribute('x', midX.toString());\n                    text.setAttribute('y', (midY - 5).toString());\n                    text.setAttribute('text-anchor', 'middle');\n                    text.setAttribute('font-size', '10');\n                    text.setAttribute('fill', 'var(--text-muted)');\n                    text.textContent = this.truncateLabel(link.label, 15);\n                    \n                    // Add background rectangle for better readability\n                    const bbox = text.getBBox();\n                    const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n                    rect.setAttribute('x', (bbox.x - 2).toString());\n                    rect.setAttribute('y', (bbox.y - 1).toString());\n                    rect.setAttribute('width', (bbox.width + 4).toString());\n                    rect.setAttribute('height', (bbox.height + 2).toString());\n                    rect.setAttribute('fill', 'var(--background-primary)');\n                    rect.setAttribute('opacity', '0.8');\n                    \n                    linksGroup.appendChild(rect);\n                    linksGroup.appendChild(text);\n                }\n            }\n        }\n        \n        // Create nodes\n        const nodesGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        nodesGroup.setAttribute('class', 'nodes');\n        g.appendChild(nodesGroup);\n        \n        for (const node of data.nodes) {\n            const nodeGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nodeGroup.setAttribute('class', 'node');\n            nodeGroup.style.cursor = 'pointer';\n            \n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', node.x?.toString() || '0');\n            circle.setAttribute('cy', node.y?.toString() || '0');\n            circle.setAttribute('r', (config.nodeSize || 8).toString());\n            circle.setAttribute('fill', this.getNodeColor(node.type));\n            circle.setAttribute('stroke', 'var(--background-modifier-border)');\n            circle.setAttribute('stroke-width', '2');\n            \n            nodeGroup.appendChild(circle);\n            \n            // Add node label if enabled\n            if (config.showLabels) {\n                const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                text.setAttribute('x', node.x?.toString() || '0');\n                text.setAttribute('y', ((node.y || 0) + (config.nodeSize || 8) + 15).toString());\n                text.setAttribute('text-anchor', 'middle');\n                text.setAttribute('font-size', '12');\n                text.setAttribute('fill', 'var(--text-normal)');\n                text.textContent = this.truncateLabel(node.label, 20);\n                nodeGroup.appendChild(text);\n            }\n            \n            // Add click handler for navigation\n            nodeGroup.addEventListener('click', () => {\n                this.handleNodeClick(node);\n            });\n            \n            // Add hover effects\n            nodeGroup.addEventListener('mouseenter', () => {\n                circle.setAttribute('r', ((config.nodeSize || 8) + 2).toString());\n                circle.setAttribute('stroke-width', '3');\n            });\n            \n            nodeGroup.addEventListener('mouseleave', () => {\n                circle.setAttribute('r', (config.nodeSize || 8).toString());\n                circle.setAttribute('stroke-width', '2');\n            });\n            \n            nodesGroup.appendChild(nodeGroup);\n        }\n        \n        // Add zoom and pan functionality\n        this.addZoomPan(svg, g);\n    }\n    \n    private positionNodes(nodes: GraphNode[], width: number, height: number): void {\n        // Simple circular layout as starting positions\n        const centerX = width / 2;\n        const centerY = height / 2;\n        const radius = Math.min(width, height) / 3;\n        \n        nodes.forEach((node, i) => {\n            const angle = (i / nodes.length) * 2 * Math.PI;\n            node.x = centerX + radius * Math.cos(angle);\n            node.y = centerY + radius * Math.sin(angle);\n        });\n    }\n    \n    private getNodeColor(type: 'subject' | 'object' | 'predicate'): string {\n        switch (type) {\n            case 'subject':\n                return 'var(--color-accent)';\n            case 'object':\n                return 'var(--color-blue)';\n            case 'predicate':\n                return 'var(--color-green)';\n            default:\n                return 'var(--text-muted)';\n        }\n    }\n    \n    private truncateLabel(label: string, maxLength: number): string {\n        if (label.length <= maxLength) return label;\n        return label.substring(0, maxLength - 3) + '...';\n    }\n    \n    private handleNodeClick(node: GraphNode): void {\n        // If it's a file link, navigate to it\n        if (node.id.startsWith('file://') || node.id.includes('.md')) {\n            const filename = node.id.replace('file://', '');\n            this.plugin.app.workspace.openLinkText(filename, '');\n        } else {\n            // Show node details in a notice\n            new Notice(`Node: ${node.label}\\nType: ${node.type}\\nID: ${node.id}`, 3000);\n        }\n    }\n    \n    private addZoomPan(svg: SVGSVGElement, g: SVGGElement): void {\n        let isMouseDown = false;\n        let startX = 0;\n        let startY = 0;\n        let currentTransform = { x: 0, y: 0, scale: 1 };\n        \n        svg.addEventListener('mousedown', (e) => {\n            isMouseDown = true;\n            startX = e.clientX;\n            startY = e.clientY;\n            svg.style.cursor = 'grabbing';\n        });\n        \n        svg.addEventListener('mousemove', (e) => {\n            if (!isMouseDown) return;\n            \n            const deltaX = e.clientX - startX;\n            const deltaY = e.clientY - startY;\n            \n            currentTransform.x += deltaX;\n            currentTransform.y += deltaY;\n            \n            g.setAttribute('transform', \n                `translate(${currentTransform.x}, ${currentTransform.y}) scale(${currentTransform.scale})`\n            );\n            \n            startX = e.clientX;\n            startY = e.clientY;\n        });\n        \n        svg.addEventListener('mouseup', () => {\n            isMouseDown = false;\n            svg.style.cursor = 'grab';\n        });\n        \n        svg.addEventListener('wheel', (e) => {\n            e.preventDefault();\n            \n            const scaleFactor = e.deltaY > 0 ? 0.9 : 1.1;\n            currentTransform.scale = Math.max(0.1, Math.min(3, currentTransform.scale * scaleFactor));\n            \n            g.setAttribute('transform', \n                `translate(${currentTransform.x}, ${currentTransform.y}) scale(${currentTransform.scale})`\n            );\n        });\n        \n        svg.style.cursor = 'grab';\n    }\n    \n    private addControls(container: HTMLElement, data: GraphData, config: GraphConfig): void {\n        const controlsDiv = document.createElement('div');\n        controlsDiv.style.cssText = `\n            margin-top: 1em;\n            display: flex;\n            gap: 0.5em;\n            flex-wrap: wrap;\n            align-items: center;\n            padding: 0.5em;\n            background: var(--background-modifier-form-field);\n            border-radius: var(--radius-s);\n        `;\n        \n        // Node count info\n        const info = document.createElement('span');\n        info.textContent = `Nodes: ${data.nodes.length}, Links: ${data.links.length}`;\n        info.style.cssText = 'color: var(--text-muted); font-size: 0.9em; margin-right: auto;';\n        controlsDiv.appendChild(info);\n        \n        // PNG Export dropdown\n        const pngExportContainer = this.createPNGExportDropdown(container, data, config);\n        controlsDiv.appendChild(pngExportContainer);\n        \n        // Export as SVG button\n        const exportSvgBtn = document.createElement('button');\n        exportSvgBtn.textContent = 'Export SVG';\n        exportSvgBtn.className = 'mod-cta';\n        exportSvgBtn.style.cssText = 'padding: 0.25em 0.5em; font-size: 0.9em;';\n        exportSvgBtn.addEventListener('click', () => this.exportAsSVG(container));\n        controlsDiv.appendChild(exportSvgBtn);\n        \n        // Export as RDF dropdown\n        const rdfExportContainer = document.createElement('div');\n        rdfExportContainer.style.cssText = 'position: relative; display: inline-block;';\n        \n        const rdfExportBtn = document.createElement('button');\n        rdfExportBtn.textContent = 'Export RDF \u25BC';\n        rdfExportBtn.style.cssText = 'padding: 0.25em 0.5em; font-size: 0.9em; background: var(--interactive-accent); color: var(--text-on-accent); border: none; border-radius: 3px; cursor: pointer;';\n        \n        const rdfDropdown = document.createElement('div');\n        rdfDropdown.style.cssText = `\n            display: none;\n            position: absolute;\n            top: 100%;\n            left: 0;\n            background: var(--background-primary);\n            border: 1px solid var(--background-modifier-border);\n            border-radius: 3px;\n            box-shadow: var(--shadow-s);\n            z-index: 1000;\n            min-width: 120px;\n        `;\n        \n        const formats: Array<{ format: RDFFormat; label: string }> = [\n            { format: 'turtle', label: 'Turtle (.ttl)' },\n            { format: 'json-ld', label: 'JSON-LD (.jsonld)' },\n            { format: 'n-triples', label: 'N-Triples (.nt)' },\n            { format: 'rdf-xml', label: 'RDF/XML (.rdf)' }\n        ];\n        \n        for (const { format, label } of formats) {\n            const item = document.createElement('div');\n            item.textContent = label;\n            item.style.cssText = 'padding: 0.5em 0.8em; cursor: pointer; border-bottom: 1px solid var(--background-modifier-border);';\n            item.addEventListener('mouseenter', () => {\n                item.style.background = 'var(--background-modifier-hover)';\n            });\n            item.addEventListener('mouseleave', () => {\n                item.style.background = '';\n            });\n            item.addEventListener('click', () => {\n                this.exportGraphAsRDF(data, format);\n                rdfDropdown.style.display = 'none';\n            });\n            rdfDropdown.appendChild(item);\n        }\n        \n        // Advanced export option\n        const advancedItem = document.createElement('div');\n        advancedItem.textContent = 'Advanced...';\n        advancedItem.style.cssText = 'padding: 0.5em 0.8em; cursor: pointer; font-weight: 500; color: var(--text-accent);';\n        advancedItem.addEventListener('mouseenter', () => {\n            advancedItem.style.background = 'var(--background-modifier-hover)';\n        });\n        advancedItem.addEventListener('mouseleave', () => {\n            advancedItem.style.background = '';\n        });\n        advancedItem.addEventListener('click', () => {\n            this.openAdvancedRDFExport(data);\n            rdfDropdown.style.display = 'none';\n        });\n        rdfDropdown.appendChild(advancedItem);\n        \n        rdfExportBtn.addEventListener('click', (e) => {\n            e.stopPropagation();\n            rdfDropdown.style.display = rdfDropdown.style.display === 'none' ? 'block' : 'none';\n        });\n        \n        // Close dropdown when clicking outside\n        document.addEventListener('click', () => {\n            rdfDropdown.style.display = 'none';\n        });\n        \n        rdfExportContainer.appendChild(rdfExportBtn);\n        rdfExportContainer.appendChild(rdfDropdown);\n        controlsDiv.appendChild(rdfExportContainer);\n        \n        // Reset zoom button\n        const resetBtn = document.createElement('button');\n        resetBtn.textContent = 'Reset View';\n        resetBtn.style.cssText = 'padding: 0.25em 0.5em; font-size: 0.9em;';\n        resetBtn.addEventListener('click', () => this.resetView(container));\n        controlsDiv.appendChild(resetBtn);\n        \n        container.appendChild(controlsDiv);\n    }\n    \n    private createPNGExportDropdown(container: HTMLElement, data: GraphData, config: GraphConfig): HTMLElement {\n        const pngExportContainer = document.createElement('div');\n        pngExportContainer.style.cssText = 'position: relative; display: inline-block;';\n        \n        const pngExportBtn = document.createElement('button');\n        pngExportBtn.textContent = 'Export PNG \u25BC';\n        pngExportBtn.style.cssText = 'padding: 0.25em 0.5em; font-size: 0.9em; background: var(--interactive-accent); color: var(--text-on-accent); border: none; border-radius: 3px; cursor: pointer;';\n        \n        const pngDropdown = document.createElement('div');\n        pngDropdown.style.cssText = `\n            display: none;\n            position: absolute;\n            top: 100%;\n            left: 0;\n            background: var(--background-primary);\n            border: 1px solid var(--background-modifier-border);\n            border-radius: 3px;\n            box-shadow: var(--shadow-s);\n            z-index: 1000;\n            min-width: 180px;\n        `;\n        \n        const resolutions = [\n            { scale: 1, label: 'Standard (800\xD7600)', filename: 'graph-standard.png' },\n            { scale: 2, label: 'High-DPI (1600\xD71200)', filename: 'graph-hd.png' },\n            { scale: 4, label: '4K (3200\xD72400)', filename: 'graph-4k.png' }\n        ];\n        \n        for (const resolution of resolutions) {\n            const item = document.createElement('div');\n            item.textContent = resolution.label;\n            item.style.cssText = 'padding: 0.5em 0.8em; cursor: pointer; border-bottom: 1px solid var(--background-modifier-border);';\n            \n            item.addEventListener('mouseenter', () => {\n                item.style.background = 'var(--background-modifier-hover)';\n            });\n            item.addEventListener('mouseleave', () => {\n                item.style.background = '';\n            });\n            item.addEventListener('click', () => {\n                this.exportAsPNG(container, data, config, resolution.scale, resolution.filename);\n                pngDropdown.style.display = 'none';\n            });\n            \n            pngDropdown.appendChild(item);\n        }\n        \n        pngExportBtn.addEventListener('click', (e) => {\n            e.stopPropagation();\n            pngDropdown.style.display = pngDropdown.style.display === 'none' ? 'block' : 'none';\n        });\n        \n        // Close dropdown when clicking outside\n        document.addEventListener('click', () => {\n            pngDropdown.style.display = 'none';\n        });\n        \n        pngExportContainer.appendChild(pngExportBtn);\n        pngExportContainer.appendChild(pngDropdown);\n        \n        return pngExportContainer;\n    }\n    \n    private async exportAsPNG(container: HTMLElement, data: GraphData, config: GraphConfig, scale: number = 1, filename: string = 'knowledge-graph.png'): Promise<void> {\n        const svg = container.querySelector('svg');\n        if (!svg) {\n            new Notice('No graph visualization found');\n            return;\n        }\n        \n        try {\n            // Show loading notice for high-resolution exports\n            let loadingNotice: Notice | null = null;\n            if (scale >= 2) {\n                loadingNotice = new Notice(`Generating ${scale === 2 ? 'high-resolution' : '4K'} PNG export...`, 0);\n            }\n            \n            // Create canvas with scaled dimensions\n            const canvas = document.createElement('canvas');\n            const baseWidth = 800;\n            const baseHeight = 600;\n            canvas.width = baseWidth * scale;\n            canvas.height = baseHeight * scale;\n            \n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                throw new Error('Could not get canvas context');\n            }\n            \n            // Scale context for high-DPI rendering\n            ctx.scale(scale, scale);\n            \n            // Set high-quality rendering\n            ctx.imageSmoothingEnabled = true;\n            ctx.imageSmoothingQuality = 'high';\n            \n            // Fill background with theme color\n            const bgColor = this.getThemeColor('--background-primary') || '#ffffff';\n            ctx.fillStyle = bgColor;\n            ctx.fillRect(0, 0, baseWidth, baseHeight);\n            \n            // Draw border\n            const borderColor = this.getThemeColor('--background-modifier-border') || '#e5e5e5';\n            ctx.strokeStyle = borderColor;\n            ctx.lineWidth = 1;\n            ctx.strokeRect(0, 0, baseWidth, baseHeight);\n            \n            // Render graph to canvas\n            await this.renderGraphToCanvas(ctx, data, config, baseWidth, baseHeight);\n            \n            // Convert canvas to PNG blob\n            canvas.toBlob((blob) => {\n                if (blob) {\n                    this.downloadBlob(blob, filename);\n                    \n                    if (loadingNotice) {\n                        loadingNotice.hide();\n                    }\n                    \n                    const sizeKB = Math.round(blob.size / 1024);\n                    new Notice(`Graph exported as PNG (${sizeKB} KB)`);\n                } else {\n                    throw new Error('Failed to create PNG blob');\n                }\n            }, 'image/png', 0.9);\n            \n        } catch (error: any) {\n            console.error('PNG export failed:', error);\n            new Notice(`PNG export failed: ${error.message}`);\n        }\n    }\n    \n    private async renderGraphToCanvas(ctx: CanvasRenderingContext2D, data: GraphData, config: GraphConfig, width: number, height: number): Promise<void> {\n        // Position nodes (reuse existing algorithm)\n        this.positionNodes(data.nodes, width, height);\n        \n        // Render links first (background layer)\n        for (const link of data.links) {\n            const sourceNode = data.nodes.find(n => n.id === (typeof link.source === 'string' ? link.source : link.source.id));\n            const targetNode = data.nodes.find(n => n.id === (typeof link.target === 'string' ? link.target : link.target.id));\n            \n            if (sourceNode && targetNode) {\n                // Draw line\n                ctx.beginPath();\n                ctx.moveTo(sourceNode.x || 0, sourceNode.y || 0);\n                ctx.lineTo(targetNode.x || 0, targetNode.y || 0);\n                ctx.strokeStyle = this.getThemeColor('--text-muted') || '#6b7280';\n                ctx.lineWidth = 1;\n                ctx.stroke();\n                \n                // Draw arrowhead\n                this.drawArrowHead(ctx, sourceNode.x || 0, sourceNode.y || 0, targetNode.x || 0, targetNode.y || 0);\n                \n                // Draw edge label if enabled\n                if (config.showLabels && link.label) {\n                    const midX = ((sourceNode.x || 0) + (targetNode.x || 0)) / 2;\n                    const midY = ((sourceNode.y || 0) + (targetNode.y || 0)) / 2;\n                    \n                    // Draw background rectangle for label\n                    const labelText = this.truncateLabel(link.label, 15);\n                    ctx.font = '10px var(--font-interface)';\n                    const textMetrics = ctx.measureText(labelText);\n                    \n                    ctx.fillStyle = this.getThemeColor('--background-primary') || '#ffffff';\n                    ctx.fillRect(midX - textMetrics.width / 2 - 2, midY - 7, textMetrics.width + 4, 12);\n                    \n                    // Draw label text\n                    ctx.fillStyle = this.getThemeColor('--text-muted') || '#6b7280';\n                    ctx.textAlign = 'center';\n                    ctx.fillText(labelText, midX, midY + 3);\n                }\n            }\n        }\n        \n        // Render nodes on top\n        for (const node of data.nodes) {\n            const x = node.x || 0;\n            const y = node.y || 0;\n            const radius = config.nodeSize || 8;\n            \n            // Draw node circle\n            ctx.beginPath();\n            ctx.arc(x, y, radius, 0, 2 * Math.PI);\n            ctx.fillStyle = this.getNodeCanvasColor(node.type);\n            ctx.fill();\n            \n            // Draw border\n            ctx.strokeStyle = this.getThemeColor('--background-modifier-border') || '#e5e5e5';\n            ctx.lineWidth = 2;\n            ctx.stroke();\n            \n            // Draw node label if enabled\n            if (config.showLabels) {\n                ctx.font = '12px var(--font-interface)';\n                ctx.fillStyle = this.getThemeColor('--text-normal') || '#000000';\n                ctx.textAlign = 'center';\n                const labelText = this.truncateLabel(node.label, 20);\n                ctx.fillText(labelText, x, y + radius + 15);\n            }\n        }\n    }\n    \n    private drawArrowHead(ctx: CanvasRenderingContext2D, fromX: number, fromY: number, toX: number, toY: number): void {\n        const angle = Math.atan2(toY - fromY, toX - fromX);\n        const arrowLength = 10;\n        const arrowAngle = Math.PI / 6;\n        \n        // Calculate arrowhead position (offset from target node)\n        const offsetDistance = 10; // Distance from node edge\n        const offsetX = toX - offsetDistance * Math.cos(angle);\n        const offsetY = toY - offsetDistance * Math.sin(angle);\n        \n        ctx.beginPath();\n        ctx.moveTo(offsetX, offsetY);\n        ctx.lineTo(\n            offsetX - arrowLength * Math.cos(angle - arrowAngle),\n            offsetY - arrowLength * Math.sin(angle - arrowAngle)\n        );\n        ctx.moveTo(offsetX, offsetY);\n        ctx.lineTo(\n            offsetX - arrowLength * Math.cos(angle + arrowAngle),\n            offsetY - arrowLength * Math.sin(angle + arrowAngle)\n        );\n        ctx.strokeStyle = this.getThemeColor('--text-muted') || '#6b7280';\n        ctx.lineWidth = 1;\n        ctx.stroke();\n    }\n    \n    private getThemeColor(cssVariable: string): string | null {\n        try {\n            const style = getComputedStyle(document.documentElement);\n            const color = style.getPropertyValue(cssVariable).trim();\n            \n            if (!color) return null;\n            \n            // Convert CSS color formats to hex if needed\n            if (color.startsWith('hsl')) {\n                return this.hslToHex(color);\n            }\n            if (color.startsWith('rgb')) {\n                return this.rgbToHex(color);\n            }\n            \n            return color;\n        } catch (error) {\n            console.warn(`Failed to get theme color for ${cssVariable}:`, error);\n            return null;\n        }\n    }\n    \n    private getNodeCanvasColor(type: 'subject' | 'object' | 'predicate'): string {\n        switch (type) {\n            case 'subject':\n                return this.getThemeColor('--color-accent') || '#7c3aed';\n            case 'object':\n                return this.getThemeColor('--color-blue') || '#2563eb';\n            case 'predicate':\n                return this.getThemeColor('--color-green') || '#059669';\n            default:\n                return '#6b7280';\n        }\n    }\n    \n    private hslToHex(hsl: string): string {\n        // Simple HSL to hex conversion - for basic theme support\n        // This is a simplified version; for production, consider using a library\n        return '#6b7280'; // Fallback color\n    }\n    \n    private rgbToHex(rgb: string): string {\n        const match = rgb.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n        if (!match) return '#000000';\n        \n        const r = parseInt(match[1]);\n        const g = parseInt(match[2]);\n        const b = parseInt(match[3]);\n        \n        return '#' + [r, g, b].map(x => {\n            const hex = x.toString(16);\n            return hex.length === 1 ? '0' + hex : hex;\n        }).join('');\n    }\n    \n    private downloadBlob(blob: Blob, filename: string): void {\n        // Check if we're in a test environment (JSDOM)\n        if (typeof window !== 'undefined' && window.navigator?.userAgent?.includes('jsdom')) {\n            // In test environment, just log the action instead of attempting DOM manipulation\n            console.log(`Test environment: Would download ${filename} (${blob.size} bytes)`);\n            return;\n        }\n\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = filename;\n        link.style.display = 'none';\n        \n        // Ensure document.body exists before appending\n        if (document.body) {\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        } else {\n            // Fallback for environments without document.body\n            console.warn('Document body not available for download');\n        }\n        \n        URL.revokeObjectURL(url);\n    }\n    \n    private exportAsSVG(container: HTMLElement): void {\n        const svg = container.querySelector('svg');\n        if (!svg) return;\n        \n        try {\n            const serializer = new XMLSerializer();\n            const svgString = serializer.serializeToString(svg);\n            \n            const blob = new Blob([svgString], { type: 'image/svg+xml' });\n            this.downloadBlob(blob, 'knowledge-graph.svg');\n            \n            new Notice('Graph exported as SVG');\n        } catch (error) {\n            console.error('SVG export failed:', error);\n            new Notice('Failed to export SVG');\n        }\n    }\n    \n    private resetView(container: HTMLElement): void {\n        const svg = container.querySelector('svg');\n        const g = svg?.querySelector('g');\n        if (g) {\n            g.setAttribute('transform', 'translate(0, 0) scale(1)');\n        }\n    }\n    \n    private createLoadingIndicator(): HTMLElement {\n        const loading = document.createElement('div');\n        loading.className = 'graph-loading';\n        loading.textContent = 'Generating graph visualization...';\n        loading.style.cssText = 'padding: 2em; text-align: center; color: var(--text-muted);';\n        return loading;\n    }\n    \n    private createErrorMessage(error: Error): HTMLElement {\n        const errorDiv = document.createElement('div');\n        errorDiv.className = 'graph-error';\n        errorDiv.style.cssText = `\n            background: var(--background-modifier-error);\n            color: var(--text-error);\n            padding: 1em;\n            border-radius: var(--radius-m);\n            border: 1px solid var(--background-modifier-border);\n        `;\n        \n        const title = document.createElement('strong');\n        title.textContent = 'Graph Visualization Error: ';\n        errorDiv.appendChild(title);\n        \n        const message = document.createElement('span');\n        message.textContent = error.message;\n        errorDiv.appendChild(message);\n        \n        return errorDiv;\n    }\n    \n    /**\n     * Export graph visualization data as RDF\n     */\n    private async exportGraphAsRDF(data: GraphData, format: RDFFormat): Promise<void> {\n        try {\n            // Convert graph data back to triples\n            const triples = this.convertGraphDataToTriples(data);\n            \n            // Create a graph from the triples\n            const graph = new Graph();\n            for (const triple of triples) {\n                graph.add(triple);\n            }\n            \n            const fileName = `graph-visualization-${Date.now()}`;\n            const result = await this.rdfService.exportGraph(graph, {\n                format,\n                fileName,\n                saveToVault: true,\n                includeComments: true,\n                prettyPrint: true,\n                targetFolder: 'exports'\n            });\n            \n            if (result.isSuccess) {\n                const exportData = result.getValue();\n                new Notice(`Exported graph visualization as ${format.toUpperCase()} (${exportData.tripleCount} triples)`);\n            } else {\n                new Notice(`Export failed: ${result.errorValue()}`);\n            }\n        } catch (error: any) {\n            new Notice(`Export error: ${error.message}`);\n            console.error('Graph RDF export error:', error);\n        }\n    }\n    \n    /**\n     * Open advanced RDF export modal\n     */\n    private openAdvancedRDFExport(data: GraphData): void {\n        try {\n            // Convert graph data back to triples\n            const triples = this.convertGraphDataToTriples(data);\n            \n            // Create a graph from the triples\n            const graph = new Graph();\n            for (const triple of triples) {\n                graph.add(triple);\n            }\n            \n            const modal = new ExportRDFModal(\n                this.plugin.app,\n                graph,\n                this.rdfService.getNamespaceManager(),\n                (result) => {\n                    new Notice(`Graph visualization exported: ${result.fileName}`);\n                }\n            );\n            \n            modal.open();\n        } catch (error: any) {\n            new Notice(`Failed to open export modal: ${error.message}`);\n            console.error('Export modal error:', error);\n        }\n    }\n    \n    /**\n     * Convert GraphData back to Triple format\n     */\n    private convertGraphDataToTriples(data: GraphData): Triple[] {\n        const triples: Triple[] = [];\n        \n        // Reconstruct triples from graph data\n        for (const link of data.links) {\n            const sourceNode = data.nodes.find(n => n.id === (typeof link.source === 'string' ? link.source : link.source.id));\n            const targetNode = data.nodes.find(n => n.id === (typeof link.target === 'string' ? link.target : link.target.id));\n            \n            if (sourceNode && targetNode) {\n                triples.push(new Triple(\n                    new IRI(sourceNode.id),\n                    new IRI(link.label),\n                    new IRI(targetNode.id)\n                ));\n            }\n        }\n        \n        return triples;\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d9ebf4603178a2e8a82b825f014727b796848ef1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zxxjamq1l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1zxxjamq1l();
cov_1zxxjamq1l().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1zxxjamq1l().s[1]++;
exports.GraphVisualizationProcessor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1zxxjamq1l().s[2]++, require("tslib"));
const obsidian_1 =
/* istanbul ignore next */
(cov_1zxxjamq1l().s[3]++, require("obsidian"));
const SPARQLEngine_1 =
/* istanbul ignore next */
(cov_1zxxjamq1l().s[4]++, require("../../application/SPARQLEngine"));
const Graph_1 =
/* istanbul ignore next */
(cov_1zxxjamq1l().s[5]++, require("../../domain/semantic/core/Graph"));
const Triple_1 =
/* istanbul ignore next */
(cov_1zxxjamq1l().s[6]++, require("../../domain/semantic/core/Triple"));
const RDFService_1 =
/* istanbul ignore next */
(cov_1zxxjamq1l().s[7]++, require("../../application/services/RDFService"));
const ExportRDFModal_1 =
/* istanbul ignore next */
(cov_1zxxjamq1l().s[8]++, require("../modals/ExportRDFModal"));
class GraphVisualizationProcessor {
  constructor(plugin, graph) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[0]++;
    cov_1zxxjamq1l().s[9]++;
    this.plugin = plugin;
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[10]++;
    this.graph = graph;
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[11]++;
    this.engine = new SPARQLEngine_1.SPARQLEngine(graph);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[12]++;
    this.rdfService = new RDFService_1.RDFService(plugin.app);
  }
  /**
   * Main processor method called by Obsidian
   */
  processCodeBlock(source, el, ctx) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[1]++;
    cov_1zxxjamq1l().s[13]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[2]++;
      cov_1zxxjamq1l().s[14]++;
      el.empty();
      // Create main container
      const container =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[15]++, document.createElement('div'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[16]++;
      container.className = 'exocortex-graph-container';
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[17]++;
      container.style.cssText = `
            border: 1px solid var(--background-modifier-border);
            padding: 1em;
            margin: 1em 0;
            border-radius: var(--radius-m);
            background: var(--background-secondary);
            position: relative;
        `;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[18]++;
      el.appendChild(container);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[19]++;
      try {
        // Parse configuration
        const config =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[20]++, this.parseConfig(source.trim()));
        // Show loading indicator
        const loadingEl =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[21]++, this.createLoadingIndicator());
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[22]++;
        container.appendChild(loadingEl);
        // Get graph data
        const graphData =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[23]++, yield this.getGraphData(config));
        // Remove loading indicator
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[24]++;
        loadingEl.remove();
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[25]++;
        if (graphData.nodes.length === 0) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[0][0]++;
          const emptyMessage =
          /* istanbul ignore next */
          (cov_1zxxjamq1l().s[26]++, document.createElement('div'));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[27]++;
          emptyMessage.textContent = 'No graph data found';
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[28]++;
          emptyMessage.style.cssText = 'padding: 2em; text-align: center; color: var(--text-muted);';
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[29]++;
          container.appendChild(emptyMessage);
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[30]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1zxxjamq1l().b[0][1]++;
        }
        // Create graph visualization
        cov_1zxxjamq1l().s[31]++;
        yield this.createGraphVisualization(container, graphData, config);
        // Add controls
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[32]++;
        this.addControls(container, graphData, config);
      } catch (error) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[33]++;
        container.innerHTML = '';
        const errorEl =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[34]++, this.createErrorMessage(error));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[35]++;
        container.appendChild(errorEl);
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[36]++;
        console.error('Graph visualization error:', error);
      }
    });
  }
  parseConfig(source) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[3]++;
    const config =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[37]++, {
      limit: 100,
      showLabels: true,
      nodeSize: 8,
      linkDistance: 80,
      depth: 2
    });
    const lines =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[38]++, source.split('\n').map(l => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[4]++;
      cov_1zxxjamq1l().s[39]++;
      return l.trim();
    }).filter(l => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[5]++;
      cov_1zxxjamq1l().s[40]++;
      return l;
    }));
    // Check if it's a SPARQL query
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[41]++;
    if (source.toUpperCase().includes('SELECT')) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[1][0]++;
      cov_1zxxjamq1l().s[42]++;
      config.query = source;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[43]++;
      return config;
    } else
    /* istanbul ignore next */
    {
      cov_1zxxjamq1l().b[1][1]++;
    }
    // Parse configuration options
    cov_1zxxjamq1l().s[44]++;
    for (const line of lines) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[45]++;
      if (line.includes(':')) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[2][0]++;
        const [key, value] =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[46]++, line.split(':').map(s => {
          /* istanbul ignore next */
          cov_1zxxjamq1l().f[6]++;
          cov_1zxxjamq1l().s[47]++;
          return s.trim();
        }));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[48]++;
        switch (key.toLowerCase()) {
          case 'focus':
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[3][0]++;
            cov_1zxxjamq1l().s[49]++;
            config.focus = value.replace(/\[\[|\]\]/g, '');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[50]++;
            break;
          case 'depth':
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[3][1]++;
            cov_1zxxjamq1l().s[51]++;
            config.depth =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[4][0]++, parseInt(value)) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[4][1]++, 2);
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[52]++;
            break;
          case 'limit':
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[3][2]++;
            cov_1zxxjamq1l().s[53]++;
            config.limit =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[5][0]++, parseInt(value)) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[5][1]++, 100);
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[54]++;
            break;
          case 'query':
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[3][3]++;
            cov_1zxxjamq1l().s[55]++;
            config.query = value;
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[56]++;
            break;
          case 'showlabels':
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[3][4]++;
            cov_1zxxjamq1l().s[57]++;
            config.showLabels = value.toLowerCase() === 'true';
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[58]++;
            break;
          case 'nodesize':
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[3][5]++;
            cov_1zxxjamq1l().s[59]++;
            config.nodeSize =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[6][0]++, parseInt(value)) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[6][1]++, 8);
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[60]++;
            break;
          case 'linkdistance':
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[3][6]++;
            cov_1zxxjamq1l().s[61]++;
            config.linkDistance =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[7][0]++, parseInt(value)) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[7][1]++, 80);
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[62]++;
            break;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[2][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[63]++;
    return config;
  }
  getGraphData(config) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[7]++;
    cov_1zxxjamq1l().s[64]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[8]++;
      let triples =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[65]++, []);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[66]++;
      if (config.query) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[8][0]++;
        // Execute SPARQL query to get specific triples
        const result =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[67]++, this.engine.select(config.query));
        // Convert SPARQL results to triples
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[68]++;
        for (const row of result.results) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[69]++;
          if (
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[10][0]++, row.s) &&
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[10][1]++, row.p) &&
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[10][2]++, row.o)) {
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[9][0]++;
            cov_1zxxjamq1l().s[70]++;
            triples.push(new Triple_1.Triple(new Triple_1.IRI(row.s), new Triple_1.IRI(row.p), row.o.startsWith('"') ?
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[11][0]++, Triple_1.Literal.string(row.o.replace(/^"|"$/g, ''))) :
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[11][1]++, new Triple_1.IRI(row.o))));
          } else {
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[9][1]++;
            cov_1zxxjamq1l().s[71]++;
            if (
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[13][0]++, row.subject) &&
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[13][1]++, row.predicate) &&
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[13][2]++, row.object)) {
              /* istanbul ignore next */
              cov_1zxxjamq1l().b[12][0]++;
              cov_1zxxjamq1l().s[72]++;
              triples.push(new Triple_1.Triple(new Triple_1.IRI(row.subject), new Triple_1.IRI(row.predicate), row.object.startsWith('"') ?
              /* istanbul ignore next */
              (cov_1zxxjamq1l().b[14][0]++, Triple_1.Literal.string(row.object.replace(/^"|"$/g, ''))) :
              /* istanbul ignore next */
              (cov_1zxxjamq1l().b[14][1]++, new Triple_1.IRI(row.object))));
            } else
            /* istanbul ignore next */
            {
              cov_1zxxjamq1l().b[12][1]++;
            }
          }
        }
      } else {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[8][1]++;
        cov_1zxxjamq1l().s[73]++;
        if (config.focus) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[15][0]++;
          cov_1zxxjamq1l().s[74]++;
          // Get triples centered around focus entity
          triples = this.getTriplesAroundFocus(config.focus,
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[16][0]++, config.depth) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[16][1]++, 2));
        } else {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[15][1]++;
          cov_1zxxjamq1l().s[75]++;
          // Get all triples (with limit)
          triples = this.graph.match(null, null, null);
        }
      }
      // Apply limit
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[76]++;
      if (
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[18][0]++, config.limit) &&
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[18][1]++, triples.length > config.limit)) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[17][0]++;
        cov_1zxxjamq1l().s[77]++;
        triples = triples.slice(0, config.limit);
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[17][1]++;
      }
      cov_1zxxjamq1l().s[78]++;
      return this.convertTriplesToGraphData(triples);
    });
  }
  getTriplesAroundFocus(focus, depth) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[9]++;
    const visited =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[79]++, new Set());
    const result =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[80]++, []);
    const queue =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[81]++, [{
      entity: focus,
      currentDepth: 0
    }]);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[82]++;
    while (queue.length > 0) {
      const {
        entity,
        currentDepth
      } =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[83]++, queue.shift());
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[84]++;
      if (
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[20][0]++, visited.has(entity)) ||
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[20][1]++, currentDepth >= depth)) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[19][0]++;
        cov_1zxxjamq1l().s[85]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[19][1]++;
      }
      cov_1zxxjamq1l().s[86]++;
      visited.add(entity);
      // Get triples where entity is subject
      const subjectTriples =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[87]++, this.graph.match(new Triple_1.IRI(entity), null, null));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[88]++;
      result.push(...subjectTriples);
      // Get triples where entity is object
      const objectTriples =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[89]++, this.graph.match(null, null, new Triple_1.IRI(entity)));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[90]++;
      result.push(...objectTriples);
      // Add related entities to queue for next depth level
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[91]++;
      if (currentDepth < depth - 1) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[21][0]++;
        cov_1zxxjamq1l().s[92]++;
        for (const triple of subjectTriples) {
          const objectStr =
          /* istanbul ignore next */
          (cov_1zxxjamq1l().s[93]++, triple.getObject().toString());
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[94]++;
          if (!visited.has(objectStr)) {
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[22][0]++;
            cov_1zxxjamq1l().s[95]++;
            queue.push({
              entity: objectStr,
              currentDepth: currentDepth + 1
            });
          } else
          /* istanbul ignore next */
          {
            cov_1zxxjamq1l().b[22][1]++;
          }
        }
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[96]++;
        for (const triple of objectTriples) {
          const subjectStr =
          /* istanbul ignore next */
          (cov_1zxxjamq1l().s[97]++, triple.getSubject().toString());
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[98]++;
          if (!visited.has(subjectStr)) {
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[23][0]++;
            cov_1zxxjamq1l().s[99]++;
            queue.push({
              entity: subjectStr,
              currentDepth: currentDepth + 1
            });
          } else
          /* istanbul ignore next */
          {
            cov_1zxxjamq1l().b[23][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[21][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[100]++;
    return result;
  }
  convertTriplesToGraphData(triples) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[10]++;
    const nodesMap =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[101]++, new Map());
    const links =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[102]++, []);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[103]++;
    for (const triple of triples) {
      const subjectStr =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[104]++, triple.getSubject().toString());
      const predicateStr =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[105]++, triple.getPredicate().toString());
      const objectStr =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[106]++, triple.getObject().toString());
      // Add subject node
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[107]++;
      if (!nodesMap.has(subjectStr)) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[24][0]++;
        cov_1zxxjamq1l().s[108]++;
        nodesMap.set(subjectStr, {
          id: subjectStr,
          label: this.getDisplayLabel(subjectStr),
          type: 'subject',
          group: 1
        });
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[24][1]++;
      }
      // Add object node
      cov_1zxxjamq1l().s[109]++;
      if (!nodesMap.has(objectStr)) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[25][0]++;
        cov_1zxxjamq1l().s[110]++;
        nodesMap.set(objectStr, {
          id: objectStr,
          label: this.getDisplayLabel(objectStr),
          type: 'object',
          group: 2
        });
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[25][1]++;
      }
      // Add link
      const linkId =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[111]++, `${subjectStr}-${predicateStr}-${objectStr}`);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[112]++;
      links.push({
        source: subjectStr,
        target: objectStr,
        label: predicateStr,
        id: linkId
      });
    }
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[113]++;
    return {
      nodes: Array.from(nodesMap.values()),
      links
    };
  }
  getDisplayLabel(uri) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[11]++;
    cov_1zxxjamq1l().s[114]++;
    // Extract human-readable label from URI
    if (uri.startsWith('file://')) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[26][0]++;
      cov_1zxxjamq1l().s[115]++;
      return uri.replace('file://', '');
    } else
    /* istanbul ignore next */
    {
      cov_1zxxjamq1l().b[26][1]++;
    }
    // Extract last part of URI
    const parts =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[116]++, uri.split('/'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[117]++;
    return /* istanbul ignore next */(cov_1zxxjamq1l().b[27][0]++, parts[parts.length - 1]) ||
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[27][1]++, uri);
  }
  createGraphVisualization(container, data, config) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[12]++;
    cov_1zxxjamq1l().s[118]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[13]++;
      // Create SVG container
      const svgContainer =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[119]++, document.createElement('div'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[120]++;
      svgContainer.style.cssText = 'position: relative; width: 100%; height: 600px; overflow: hidden;';
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[121]++;
      container.appendChild(svgContainer);
      const svg =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[122]++, document.createElementNS('http://www.w3.org/2000/svg', 'svg'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[123]++;
      svg.setAttribute('width', '100%');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[124]++;
      svg.setAttribute('height', '600');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[125]++;
      svg.style.cssText = 'border: 1px solid var(--background-modifier-border); background: var(--background-primary);';
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[126]++;
      svgContainer.appendChild(svg);
      // Create D3.js-like force simulation manually (simplified version)
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[127]++;
      yield this.createForceDirectedGraph(svg, data, config);
      // Store data for export functionality
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[128]++;
      container.__graphData = data;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[129]++;
      container.__graphConfig = config;
    });
  }
  createForceDirectedGraph(svg, data, config) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[14]++;
    var _a, _b, _c, _d, _e, _f, _g;
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[130]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[15]++;
      const width =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[131]++, 800);
      const height =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[132]++, 600);
      const centerX =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[133]++, width / 2);
      const centerY =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[134]++, height / 2);
      // Create groups for different elements
      const defs =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[135]++, document.createElementNS('http://www.w3.org/2000/svg', 'defs'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[136]++;
      svg.appendChild(defs);
      // Add arrow marker for directed edges
      const marker =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[137]++, document.createElementNS('http://www.w3.org/2000/svg', 'marker'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[138]++;
      marker.setAttribute('id', 'arrowhead');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[139]++;
      marker.setAttribute('viewBox', '0 -5 10 10');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[140]++;
      marker.setAttribute('refX', '8');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[141]++;
      marker.setAttribute('refY', '0');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[142]++;
      marker.setAttribute('orient', 'auto');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[143]++;
      marker.setAttribute('markerWidth', '6');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[144]++;
      marker.setAttribute('markerHeight', '6');
      const path =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[145]++, document.createElementNS('http://www.w3.org/2000/svg', 'path'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[146]++;
      path.setAttribute('d', 'M 0,-5 L 10 ,0 L 0,5');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[147]++;
      path.setAttribute('fill', 'var(--text-muted)');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[148]++;
      marker.appendChild(path);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[149]++;
      defs.appendChild(marker);
      const g =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[150]++, document.createElementNS('http://www.w3.org/2000/svg', 'g'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[151]++;
      svg.appendChild(g);
      // Position nodes using simple force-directed layout
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[152]++;
      this.positionNodes(data.nodes, width, height);
      // Create links
      const linksGroup =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[153]++, document.createElementNS('http://www.w3.org/2000/svg', 'g'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[154]++;
      linksGroup.setAttribute('class', 'links');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[155]++;
      g.appendChild(linksGroup);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[156]++;
      for (const link of data.links) {
        const sourceNode =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[157]++, data.nodes.find(n => {
          /* istanbul ignore next */
          cov_1zxxjamq1l().f[16]++;
          cov_1zxxjamq1l().s[158]++;
          return n.id === link.source;
        }));
        const targetNode =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[159]++, data.nodes.find(n => {
          /* istanbul ignore next */
          cov_1zxxjamq1l().f[17]++;
          cov_1zxxjamq1l().s[160]++;
          return n.id === link.target;
        }));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[161]++;
        if (
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[29][0]++, sourceNode) &&
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[29][1]++, targetNode)) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[28][0]++;
          const line =
          /* istanbul ignore next */
          (cov_1zxxjamq1l().s[162]++, document.createElementNS('http://www.w3.org/2000/svg', 'line'));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[163]++;
          line.setAttribute('x1',
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[30][0]++,
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[32][0]++, (_a = sourceNode.x) === null) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[32][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[31][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[31][1]++, _a.toString())) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[30][1]++, '0'));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[164]++;
          line.setAttribute('y1',
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[33][0]++,
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[35][0]++, (_b = sourceNode.y) === null) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[35][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[34][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[34][1]++, _b.toString())) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[33][1]++, '0'));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[165]++;
          line.setAttribute('x2',
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[36][0]++,
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[38][0]++, (_c = targetNode.x) === null) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[38][1]++, _c === void 0) ?
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[37][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[37][1]++, _c.toString())) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[36][1]++, '0'));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[166]++;
          line.setAttribute('y2',
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[39][0]++,
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[41][0]++, (_d = targetNode.y) === null) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[41][1]++, _d === void 0) ?
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[40][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[40][1]++, _d.toString())) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[39][1]++, '0'));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[167]++;
          line.setAttribute('stroke', 'var(--text-muted)');
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[168]++;
          line.setAttribute('stroke-width', '1');
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[169]++;
          line.setAttribute('marker-end', 'url(#arrowhead)');
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[170]++;
          line.style.cursor = 'pointer';
          // Add hover effect
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[171]++;
          line.addEventListener('mouseenter', () => {
            /* istanbul ignore next */
            cov_1zxxjamq1l().f[18]++;
            cov_1zxxjamq1l().s[172]++;
            line.setAttribute('stroke', 'var(--text-accent)');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[173]++;
            line.setAttribute('stroke-width', '2');
          });
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[174]++;
          line.addEventListener('mouseleave', () => {
            /* istanbul ignore next */
            cov_1zxxjamq1l().f[19]++;
            cov_1zxxjamq1l().s[175]++;
            line.setAttribute('stroke', 'var(--text-muted)');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[176]++;
            line.setAttribute('stroke-width', '1');
          });
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[177]++;
          linksGroup.appendChild(line);
          // Add edge label if enabled
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[178]++;
          if (
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[43][0]++, config.showLabels) &&
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[43][1]++, link.label)) {
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[42][0]++;
            const midX =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[179]++, ((
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[44][0]++, sourceNode.x) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[44][1]++, 0)) + (
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[45][0]++, targetNode.x) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[45][1]++, 0))) / 2);
            const midY =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[180]++, ((
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[46][0]++, sourceNode.y) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[46][1]++, 0)) + (
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[47][0]++, targetNode.y) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[47][1]++, 0))) / 2);
            const text =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[181]++, document.createElementNS('http://www.w3.org/2000/svg', 'text'));
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[182]++;
            text.setAttribute('x', midX.toString());
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[183]++;
            text.setAttribute('y', (midY - 5).toString());
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[184]++;
            text.setAttribute('text-anchor', 'middle');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[185]++;
            text.setAttribute('font-size', '10');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[186]++;
            text.setAttribute('fill', 'var(--text-muted)');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[187]++;
            text.textContent = this.truncateLabel(link.label, 15);
            // Add background rectangle for better readability
            const bbox =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[188]++, text.getBBox());
            const rect =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[189]++, document.createElementNS('http://www.w3.org/2000/svg', 'rect'));
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[190]++;
            rect.setAttribute('x', (bbox.x - 2).toString());
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[191]++;
            rect.setAttribute('y', (bbox.y - 1).toString());
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[192]++;
            rect.setAttribute('width', (bbox.width + 4).toString());
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[193]++;
            rect.setAttribute('height', (bbox.height + 2).toString());
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[194]++;
            rect.setAttribute('fill', 'var(--background-primary)');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[195]++;
            rect.setAttribute('opacity', '0.8');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[196]++;
            linksGroup.appendChild(rect);
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[197]++;
            linksGroup.appendChild(text);
          } else
          /* istanbul ignore next */
          {
            cov_1zxxjamq1l().b[42][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1zxxjamq1l().b[28][1]++;
        }
      }
      // Create nodes
      const nodesGroup =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[198]++, document.createElementNS('http://www.w3.org/2000/svg', 'g'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[199]++;
      nodesGroup.setAttribute('class', 'nodes');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[200]++;
      g.appendChild(nodesGroup);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[201]++;
      for (const node of data.nodes) {
        const nodeGroup =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[202]++, document.createElementNS('http://www.w3.org/2000/svg', 'g'));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[203]++;
        nodeGroup.setAttribute('class', 'node');
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[204]++;
        nodeGroup.style.cursor = 'pointer';
        const circle =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[205]++, document.createElementNS('http://www.w3.org/2000/svg', 'circle'));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[206]++;
        circle.setAttribute('cx',
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[48][0]++,
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[50][0]++, (_e = node.x) === null) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[50][1]++, _e === void 0) ?
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[49][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[49][1]++, _e.toString())) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[48][1]++, '0'));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[207]++;
        circle.setAttribute('cy',
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[51][0]++,
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[53][0]++, (_f = node.y) === null) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[53][1]++, _f === void 0) ?
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[52][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[52][1]++, _f.toString())) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[51][1]++, '0'));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[208]++;
        circle.setAttribute('r', (
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[54][0]++, config.nodeSize) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[54][1]++, 8)).toString());
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[209]++;
        circle.setAttribute('fill', this.getNodeColor(node.type));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[210]++;
        circle.setAttribute('stroke', 'var(--background-modifier-border)');
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[211]++;
        circle.setAttribute('stroke-width', '2');
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[212]++;
        nodeGroup.appendChild(circle);
        // Add node label if enabled
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[213]++;
        if (config.showLabels) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[55][0]++;
          const text =
          /* istanbul ignore next */
          (cov_1zxxjamq1l().s[214]++, document.createElementNS('http://www.w3.org/2000/svg', 'text'));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[215]++;
          text.setAttribute('x',
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[56][0]++,
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[58][0]++, (_g = node.x) === null) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[58][1]++, _g === void 0) ?
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[57][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[57][1]++, _g.toString())) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[56][1]++, '0'));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[216]++;
          text.setAttribute('y', ((
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[59][0]++, node.y) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[59][1]++, 0)) + (
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[60][0]++, config.nodeSize) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[60][1]++, 8)) + 15).toString());
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[217]++;
          text.setAttribute('text-anchor', 'middle');
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[218]++;
          text.setAttribute('font-size', '12');
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[219]++;
          text.setAttribute('fill', 'var(--text-normal)');
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[220]++;
          text.textContent = this.truncateLabel(node.label, 20);
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[221]++;
          nodeGroup.appendChild(text);
        } else
        /* istanbul ignore next */
        {
          cov_1zxxjamq1l().b[55][1]++;
        }
        // Add click handler for navigation
        cov_1zxxjamq1l().s[222]++;
        nodeGroup.addEventListener('click', () => {
          /* istanbul ignore next */
          cov_1zxxjamq1l().f[20]++;
          cov_1zxxjamq1l().s[223]++;
          this.handleNodeClick(node);
        });
        // Add hover effects
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[224]++;
        nodeGroup.addEventListener('mouseenter', () => {
          /* istanbul ignore next */
          cov_1zxxjamq1l().f[21]++;
          cov_1zxxjamq1l().s[225]++;
          circle.setAttribute('r', ((
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[61][0]++, config.nodeSize) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[61][1]++, 8)) + 2).toString());
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[226]++;
          circle.setAttribute('stroke-width', '3');
        });
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[227]++;
        nodeGroup.addEventListener('mouseleave', () => {
          /* istanbul ignore next */
          cov_1zxxjamq1l().f[22]++;
          cov_1zxxjamq1l().s[228]++;
          circle.setAttribute('r', (
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[62][0]++, config.nodeSize) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[62][1]++, 8)).toString());
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[229]++;
          circle.setAttribute('stroke-width', '2');
        });
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[230]++;
        nodesGroup.appendChild(nodeGroup);
      }
      // Add zoom and pan functionality
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[231]++;
      this.addZoomPan(svg, g);
    });
  }
  positionNodes(nodes, width, height) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[23]++;
    // Simple circular layout as starting positions
    const centerX =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[232]++, width / 2);
    const centerY =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[233]++, height / 2);
    const radius =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[234]++, Math.min(width, height) / 3);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[235]++;
    nodes.forEach((node, i) => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[24]++;
      const angle =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[236]++, i / nodes.length * 2 * Math.PI);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[237]++;
      node.x = centerX + radius * Math.cos(angle);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[238]++;
      node.y = centerY + radius * Math.sin(angle);
    });
  }
  getNodeColor(type) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[25]++;
    cov_1zxxjamq1l().s[239]++;
    switch (type) {
      case 'subject':
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[63][0]++;
        cov_1zxxjamq1l().s[240]++;
        return 'var(--color-accent)';
      case 'object':
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[63][1]++;
        cov_1zxxjamq1l().s[241]++;
        return 'var(--color-blue)';
      case 'predicate':
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[63][2]++;
        cov_1zxxjamq1l().s[242]++;
        return 'var(--color-green)';
      default:
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[63][3]++;
        cov_1zxxjamq1l().s[243]++;
        return 'var(--text-muted)';
    }
  }
  truncateLabel(label, maxLength) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[26]++;
    cov_1zxxjamq1l().s[244]++;
    if (label.length <= maxLength) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[64][0]++;
      cov_1zxxjamq1l().s[245]++;
      return label;
    } else
    /* istanbul ignore next */
    {
      cov_1zxxjamq1l().b[64][1]++;
    }
    cov_1zxxjamq1l().s[246]++;
    return label.substring(0, maxLength - 3) + '...';
  }
  handleNodeClick(node) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[27]++;
    cov_1zxxjamq1l().s[247]++;
    // If it's a file link, navigate to it
    if (
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[66][0]++, node.id.startsWith('file://')) ||
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[66][1]++, node.id.includes('.md'))) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[65][0]++;
      const filename =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[248]++, node.id.replace('file://', ''));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[249]++;
      this.plugin.app.workspace.openLinkText(filename, '');
    } else {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[65][1]++;
      cov_1zxxjamq1l().s[250]++;
      // Show node details in a notice
      new obsidian_1.Notice(`Node: ${node.label}\nType: ${node.type}\nID: ${node.id}`, 3000);
    }
  }
  addZoomPan(svg, g) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[28]++;
    let isMouseDown =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[251]++, false);
    let startX =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[252]++, 0);
    let startY =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[253]++, 0);
    let currentTransform =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[254]++, {
      x: 0,
      y: 0,
      scale: 1
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[255]++;
    svg.addEventListener('mousedown', e => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[29]++;
      cov_1zxxjamq1l().s[256]++;
      isMouseDown = true;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[257]++;
      startX = e.clientX;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[258]++;
      startY = e.clientY;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[259]++;
      svg.style.cursor = 'grabbing';
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[260]++;
    svg.addEventListener('mousemove', e => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[30]++;
      cov_1zxxjamq1l().s[261]++;
      if (!isMouseDown) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[67][0]++;
        cov_1zxxjamq1l().s[262]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[67][1]++;
      }
      const deltaX =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[263]++, e.clientX - startX);
      const deltaY =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[264]++, e.clientY - startY);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[265]++;
      currentTransform.x += deltaX;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[266]++;
      currentTransform.y += deltaY;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[267]++;
      g.setAttribute('transform', `translate(${currentTransform.x}, ${currentTransform.y}) scale(${currentTransform.scale})`);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[268]++;
      startX = e.clientX;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[269]++;
      startY = e.clientY;
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[270]++;
    svg.addEventListener('mouseup', () => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[31]++;
      cov_1zxxjamq1l().s[271]++;
      isMouseDown = false;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[272]++;
      svg.style.cursor = 'grab';
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[273]++;
    svg.addEventListener('wheel', e => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[32]++;
      cov_1zxxjamq1l().s[274]++;
      e.preventDefault();
      const scaleFactor =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[275]++, e.deltaY > 0 ?
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[68][0]++, 0.9) :
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[68][1]++, 1.1));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[276]++;
      currentTransform.scale = Math.max(0.1, Math.min(3, currentTransform.scale * scaleFactor));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[277]++;
      g.setAttribute('transform', `translate(${currentTransform.x}, ${currentTransform.y}) scale(${currentTransform.scale})`);
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[278]++;
    svg.style.cursor = 'grab';
  }
  addControls(container, data, config) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[33]++;
    const controlsDiv =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[279]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[280]++;
    controlsDiv.style.cssText = `
            margin-top: 1em;
            display: flex;
            gap: 0.5em;
            flex-wrap: wrap;
            align-items: center;
            padding: 0.5em;
            background: var(--background-modifier-form-field);
            border-radius: var(--radius-s);
        `;
    // Node count info
    const info =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[281]++, document.createElement('span'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[282]++;
    info.textContent = `Nodes: ${data.nodes.length}, Links: ${data.links.length}`;
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[283]++;
    info.style.cssText = 'color: var(--text-muted); font-size: 0.9em; margin-right: auto;';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[284]++;
    controlsDiv.appendChild(info);
    // PNG Export dropdown
    const pngExportContainer =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[285]++, this.createPNGExportDropdown(container, data, config));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[286]++;
    controlsDiv.appendChild(pngExportContainer);
    // Export as SVG button
    const exportSvgBtn =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[287]++, document.createElement('button'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[288]++;
    exportSvgBtn.textContent = 'Export SVG';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[289]++;
    exportSvgBtn.className = 'mod-cta';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[290]++;
    exportSvgBtn.style.cssText = 'padding: 0.25em 0.5em; font-size: 0.9em;';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[291]++;
    exportSvgBtn.addEventListener('click', () => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[34]++;
      cov_1zxxjamq1l().s[292]++;
      return this.exportAsSVG(container);
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[293]++;
    controlsDiv.appendChild(exportSvgBtn);
    // Export as RDF dropdown
    const rdfExportContainer =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[294]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[295]++;
    rdfExportContainer.style.cssText = 'position: relative; display: inline-block;';
    const rdfExportBtn =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[296]++, document.createElement('button'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[297]++;
    rdfExportBtn.textContent = 'Export RDF ▼';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[298]++;
    rdfExportBtn.style.cssText = 'padding: 0.25em 0.5em; font-size: 0.9em; background: var(--interactive-accent); color: var(--text-on-accent); border: none; border-radius: 3px; cursor: pointer;';
    const rdfDropdown =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[299]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[300]++;
    rdfDropdown.style.cssText = `
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            background: var(--background-primary);
            border: 1px solid var(--background-modifier-border);
            border-radius: 3px;
            box-shadow: var(--shadow-s);
            z-index: 1000;
            min-width: 120px;
        `;
    const formats =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[301]++, [{
      format: 'turtle',
      label: 'Turtle (.ttl)'
    }, {
      format: 'json-ld',
      label: 'JSON-LD (.jsonld)'
    }, {
      format: 'n-triples',
      label: 'N-Triples (.nt)'
    }, {
      format: 'rdf-xml',
      label: 'RDF/XML (.rdf)'
    }]);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[302]++;
    for (const {
      format,
      label
    } of formats) {
      const item =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[303]++, document.createElement('div'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[304]++;
      item.textContent = label;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[305]++;
      item.style.cssText = 'padding: 0.5em 0.8em; cursor: pointer; border-bottom: 1px solid var(--background-modifier-border);';
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[306]++;
      item.addEventListener('mouseenter', () => {
        /* istanbul ignore next */
        cov_1zxxjamq1l().f[35]++;
        cov_1zxxjamq1l().s[307]++;
        item.style.background = 'var(--background-modifier-hover)';
      });
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[308]++;
      item.addEventListener('mouseleave', () => {
        /* istanbul ignore next */
        cov_1zxxjamq1l().f[36]++;
        cov_1zxxjamq1l().s[309]++;
        item.style.background = '';
      });
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[310]++;
      item.addEventListener('click', () => {
        /* istanbul ignore next */
        cov_1zxxjamq1l().f[37]++;
        cov_1zxxjamq1l().s[311]++;
        this.exportGraphAsRDF(data, format);
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[312]++;
        rdfDropdown.style.display = 'none';
      });
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[313]++;
      rdfDropdown.appendChild(item);
    }
    // Advanced export option
    const advancedItem =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[314]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[315]++;
    advancedItem.textContent = 'Advanced...';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[316]++;
    advancedItem.style.cssText = 'padding: 0.5em 0.8em; cursor: pointer; font-weight: 500; color: var(--text-accent);';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[317]++;
    advancedItem.addEventListener('mouseenter', () => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[38]++;
      cov_1zxxjamq1l().s[318]++;
      advancedItem.style.background = 'var(--background-modifier-hover)';
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[319]++;
    advancedItem.addEventListener('mouseleave', () => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[39]++;
      cov_1zxxjamq1l().s[320]++;
      advancedItem.style.background = '';
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[321]++;
    advancedItem.addEventListener('click', () => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[40]++;
      cov_1zxxjamq1l().s[322]++;
      this.openAdvancedRDFExport(data);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[323]++;
      rdfDropdown.style.display = 'none';
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[324]++;
    rdfDropdown.appendChild(advancedItem);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[325]++;
    rdfExportBtn.addEventListener('click', e => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[41]++;
      cov_1zxxjamq1l().s[326]++;
      e.stopPropagation();
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[327]++;
      rdfDropdown.style.display = rdfDropdown.style.display === 'none' ?
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[69][0]++, 'block') :
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[69][1]++, 'none');
    });
    // Close dropdown when clicking outside
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[328]++;
    document.addEventListener('click', () => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[42]++;
      cov_1zxxjamq1l().s[329]++;
      rdfDropdown.style.display = 'none';
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[330]++;
    rdfExportContainer.appendChild(rdfExportBtn);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[331]++;
    rdfExportContainer.appendChild(rdfDropdown);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[332]++;
    controlsDiv.appendChild(rdfExportContainer);
    // Reset zoom button
    const resetBtn =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[333]++, document.createElement('button'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[334]++;
    resetBtn.textContent = 'Reset View';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[335]++;
    resetBtn.style.cssText = 'padding: 0.25em 0.5em; font-size: 0.9em;';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[336]++;
    resetBtn.addEventListener('click', () => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[43]++;
      cov_1zxxjamq1l().s[337]++;
      return this.resetView(container);
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[338]++;
    controlsDiv.appendChild(resetBtn);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[339]++;
    container.appendChild(controlsDiv);
  }
  createPNGExportDropdown(container, data, config) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[44]++;
    const pngExportContainer =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[340]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[341]++;
    pngExportContainer.style.cssText = 'position: relative; display: inline-block;';
    const pngExportBtn =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[342]++, document.createElement('button'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[343]++;
    pngExportBtn.textContent = 'Export PNG ▼';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[344]++;
    pngExportBtn.style.cssText = 'padding: 0.25em 0.5em; font-size: 0.9em; background: var(--interactive-accent); color: var(--text-on-accent); border: none; border-radius: 3px; cursor: pointer;';
    const pngDropdown =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[345]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[346]++;
    pngDropdown.style.cssText = `
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            background: var(--background-primary);
            border: 1px solid var(--background-modifier-border);
            border-radius: 3px;
            box-shadow: var(--shadow-s);
            z-index: 1000;
            min-width: 180px;
        `;
    const resolutions =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[347]++, [{
      scale: 1,
      label: 'Standard (800×600)',
      filename: 'graph-standard.png'
    }, {
      scale: 2,
      label: 'High-DPI (1600×1200)',
      filename: 'graph-hd.png'
    }, {
      scale: 4,
      label: '4K (3200×2400)',
      filename: 'graph-4k.png'
    }]);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[348]++;
    for (const resolution of resolutions) {
      const item =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[349]++, document.createElement('div'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[350]++;
      item.textContent = resolution.label;
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[351]++;
      item.style.cssText = 'padding: 0.5em 0.8em; cursor: pointer; border-bottom: 1px solid var(--background-modifier-border);';
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[352]++;
      item.addEventListener('mouseenter', () => {
        /* istanbul ignore next */
        cov_1zxxjamq1l().f[45]++;
        cov_1zxxjamq1l().s[353]++;
        item.style.background = 'var(--background-modifier-hover)';
      });
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[354]++;
      item.addEventListener('mouseleave', () => {
        /* istanbul ignore next */
        cov_1zxxjamq1l().f[46]++;
        cov_1zxxjamq1l().s[355]++;
        item.style.background = '';
      });
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[356]++;
      item.addEventListener('click', () => {
        /* istanbul ignore next */
        cov_1zxxjamq1l().f[47]++;
        cov_1zxxjamq1l().s[357]++;
        this.exportAsPNG(container, data, config, resolution.scale, resolution.filename);
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[358]++;
        pngDropdown.style.display = 'none';
      });
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[359]++;
      pngDropdown.appendChild(item);
    }
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[360]++;
    pngExportBtn.addEventListener('click', e => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[48]++;
      cov_1zxxjamq1l().s[361]++;
      e.stopPropagation();
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[362]++;
      pngDropdown.style.display = pngDropdown.style.display === 'none' ?
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[70][0]++, 'block') :
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[70][1]++, 'none');
    });
    // Close dropdown when clicking outside
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[363]++;
    document.addEventListener('click', () => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[49]++;
      cov_1zxxjamq1l().s[364]++;
      pngDropdown.style.display = 'none';
    });
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[365]++;
    pngExportContainer.appendChild(pngExportBtn);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[366]++;
    pngExportContainer.appendChild(pngDropdown);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[367]++;
    return pngExportContainer;
  }
  exportAsPNG(container, data, config, scale =
  /* istanbul ignore next */
  (cov_1zxxjamq1l().b[71][0]++, 1), filename =
  /* istanbul ignore next */
  (cov_1zxxjamq1l().b[72][0]++, 'knowledge-graph.png')) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[50]++;
    cov_1zxxjamq1l().s[368]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[51]++;
      const svg =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[369]++, container.querySelector('svg'));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[370]++;
      if (!svg) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[73][0]++;
        cov_1zxxjamq1l().s[371]++;
        new obsidian_1.Notice('No graph visualization found');
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[372]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[73][1]++;
      }
      cov_1zxxjamq1l().s[373]++;
      try {
        // Show loading notice for high-resolution exports
        let loadingNotice =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[374]++, null);
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[375]++;
        if (scale >= 2) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[74][0]++;
          cov_1zxxjamq1l().s[376]++;
          loadingNotice = new obsidian_1.Notice(`Generating ${scale === 2 ?
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[75][0]++, 'high-resolution') :
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[75][1]++, '4K')} PNG export...`, 0);
        } else
        /* istanbul ignore next */
        {
          cov_1zxxjamq1l().b[74][1]++;
        }
        // Create canvas with scaled dimensions
        const canvas =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[377]++, document.createElement('canvas'));
        const baseWidth =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[378]++, 800);
        const baseHeight =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[379]++, 600);
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[380]++;
        canvas.width = baseWidth * scale;
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[381]++;
        canvas.height = baseHeight * scale;
        const ctx =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[382]++, canvas.getContext('2d'));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[383]++;
        if (!ctx) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[76][0]++;
          cov_1zxxjamq1l().s[384]++;
          throw new Error('Could not get canvas context');
        } else
        /* istanbul ignore next */
        {
          cov_1zxxjamq1l().b[76][1]++;
        }
        // Scale context for high-DPI rendering
        cov_1zxxjamq1l().s[385]++;
        ctx.scale(scale, scale);
        // Set high-quality rendering
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[386]++;
        ctx.imageSmoothingEnabled = true;
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[387]++;
        ctx.imageSmoothingQuality = 'high';
        // Fill background with theme color
        const bgColor =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[388]++,
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[77][0]++, this.getThemeColor('--background-primary')) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[77][1]++, '#ffffff'));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[389]++;
        ctx.fillStyle = bgColor;
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[390]++;
        ctx.fillRect(0, 0, baseWidth, baseHeight);
        // Draw border
        const borderColor =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[391]++,
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[78][0]++, this.getThemeColor('--background-modifier-border')) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[78][1]++, '#e5e5e5'));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[392]++;
        ctx.strokeStyle = borderColor;
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[393]++;
        ctx.lineWidth = 1;
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[394]++;
        ctx.strokeRect(0, 0, baseWidth, baseHeight);
        // Render graph to canvas
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[395]++;
        yield this.renderGraphToCanvas(ctx, data, config, baseWidth, baseHeight);
        // Convert canvas to PNG blob
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[396]++;
        canvas.toBlob(blob => {
          /* istanbul ignore next */
          cov_1zxxjamq1l().f[52]++;
          cov_1zxxjamq1l().s[397]++;
          if (blob) {
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[79][0]++;
            cov_1zxxjamq1l().s[398]++;
            this.downloadBlob(blob, filename);
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[399]++;
            if (loadingNotice) {
              /* istanbul ignore next */
              cov_1zxxjamq1l().b[80][0]++;
              cov_1zxxjamq1l().s[400]++;
              loadingNotice.hide();
            } else
            /* istanbul ignore next */
            {
              cov_1zxxjamq1l().b[80][1]++;
            }
            const sizeKB =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[401]++, Math.round(blob.size / 1024));
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[402]++;
            new obsidian_1.Notice(`Graph exported as PNG (${sizeKB} KB)`);
          } else {
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[79][1]++;
            cov_1zxxjamq1l().s[403]++;
            throw new Error('Failed to create PNG blob');
          }
        }, 'image/png', 0.9);
      } catch (error) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[404]++;
        console.error('PNG export failed:', error);
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[405]++;
        new obsidian_1.Notice(`PNG export failed: ${error.message}`);
      }
    });
  }
  renderGraphToCanvas(ctx, data, config, width, height) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[53]++;
    cov_1zxxjamq1l().s[406]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[54]++;
      cov_1zxxjamq1l().s[407]++;
      // Position nodes (reuse existing algorithm)
      this.positionNodes(data.nodes, width, height);
      // Render links first (background layer)
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[408]++;
      for (const link of data.links) {
        const sourceNode =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[409]++, data.nodes.find(n => {
          /* istanbul ignore next */
          cov_1zxxjamq1l().f[55]++;
          cov_1zxxjamq1l().s[410]++;
          return n.id === (typeof link.source === 'string' ?
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[81][0]++, link.source) :
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[81][1]++, link.source.id));
        }));
        const targetNode =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[411]++, data.nodes.find(n => {
          /* istanbul ignore next */
          cov_1zxxjamq1l().f[56]++;
          cov_1zxxjamq1l().s[412]++;
          return n.id === (typeof link.target === 'string' ?
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[82][0]++, link.target) :
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[82][1]++, link.target.id));
        }));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[413]++;
        if (
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[84][0]++, sourceNode) &&
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[84][1]++, targetNode)) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[83][0]++;
          cov_1zxxjamq1l().s[414]++;
          // Draw line
          ctx.beginPath();
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[415]++;
          ctx.moveTo(
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[85][0]++, sourceNode.x) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[85][1]++, 0),
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[86][0]++, sourceNode.y) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[86][1]++, 0));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[416]++;
          ctx.lineTo(
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[87][0]++, targetNode.x) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[87][1]++, 0),
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[88][0]++, targetNode.y) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[88][1]++, 0));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[417]++;
          ctx.strokeStyle =
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[89][0]++, this.getThemeColor('--text-muted')) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[89][1]++, '#6b7280');
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[418]++;
          ctx.lineWidth = 1;
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[419]++;
          ctx.stroke();
          // Draw arrowhead
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[420]++;
          this.drawArrowHead(ctx,
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[90][0]++, sourceNode.x) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[90][1]++, 0),
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[91][0]++, sourceNode.y) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[91][1]++, 0),
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[92][0]++, targetNode.x) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[92][1]++, 0),
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[93][0]++, targetNode.y) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[93][1]++, 0));
          // Draw edge label if enabled
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[421]++;
          if (
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[95][0]++, config.showLabels) &&
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[95][1]++, link.label)) {
            /* istanbul ignore next */
            cov_1zxxjamq1l().b[94][0]++;
            const midX =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[422]++, ((
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[96][0]++, sourceNode.x) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[96][1]++, 0)) + (
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[97][0]++, targetNode.x) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[97][1]++, 0))) / 2);
            const midY =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[423]++, ((
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[98][0]++, sourceNode.y) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[98][1]++, 0)) + (
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[99][0]++, targetNode.y) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[99][1]++, 0))) / 2);
            // Draw background rectangle for label
            const labelText =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[424]++, this.truncateLabel(link.label, 15));
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[425]++;
            ctx.font = '10px var(--font-interface)';
            const textMetrics =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().s[426]++, ctx.measureText(labelText));
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[427]++;
            ctx.fillStyle =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[100][0]++, this.getThemeColor('--background-primary')) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[100][1]++, '#ffffff');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[428]++;
            ctx.fillRect(midX - textMetrics.width / 2 - 2, midY - 7, textMetrics.width + 4, 12);
            // Draw label text
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[429]++;
            ctx.fillStyle =
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[101][0]++, this.getThemeColor('--text-muted')) ||
            /* istanbul ignore next */
            (cov_1zxxjamq1l().b[101][1]++, '#6b7280');
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[430]++;
            ctx.textAlign = 'center';
            /* istanbul ignore next */
            cov_1zxxjamq1l().s[431]++;
            ctx.fillText(labelText, midX, midY + 3);
          } else
          /* istanbul ignore next */
          {
            cov_1zxxjamq1l().b[94][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1zxxjamq1l().b[83][1]++;
        }
      }
      // Render nodes on top
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[432]++;
      for (const node of data.nodes) {
        const x =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[433]++,
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[102][0]++, node.x) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[102][1]++, 0));
        const y =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[434]++,
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[103][0]++, node.y) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[103][1]++, 0));
        const radius =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[435]++,
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[104][0]++, config.nodeSize) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[104][1]++, 8));
        // Draw node circle
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[436]++;
        ctx.beginPath();
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[437]++;
        ctx.arc(x, y, radius, 0, 2 * Math.PI);
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[438]++;
        ctx.fillStyle = this.getNodeCanvasColor(node.type);
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[439]++;
        ctx.fill();
        // Draw border
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[440]++;
        ctx.strokeStyle =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[105][0]++, this.getThemeColor('--background-modifier-border')) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[105][1]++, '#e5e5e5');
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[441]++;
        ctx.lineWidth = 2;
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[442]++;
        ctx.stroke();
        // Draw node label if enabled
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[443]++;
        if (config.showLabels) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[106][0]++;
          cov_1zxxjamq1l().s[444]++;
          ctx.font = '12px var(--font-interface)';
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[445]++;
          ctx.fillStyle =
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[107][0]++, this.getThemeColor('--text-normal')) ||
          /* istanbul ignore next */
          (cov_1zxxjamq1l().b[107][1]++, '#000000');
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[446]++;
          ctx.textAlign = 'center';
          const labelText =
          /* istanbul ignore next */
          (cov_1zxxjamq1l().s[447]++, this.truncateLabel(node.label, 20));
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[448]++;
          ctx.fillText(labelText, x, y + radius + 15);
        } else
        /* istanbul ignore next */
        {
          cov_1zxxjamq1l().b[106][1]++;
        }
      }
    });
  }
  drawArrowHead(ctx, fromX, fromY, toX, toY) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[57]++;
    const angle =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[449]++, Math.atan2(toY - fromY, toX - fromX));
    const arrowLength =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[450]++, 10);
    const arrowAngle =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[451]++, Math.PI / 6);
    // Calculate arrowhead position (offset from target node)
    const offsetDistance =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[452]++, 10); // Distance from node edge
    const offsetX =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[453]++, toX - offsetDistance * Math.cos(angle));
    const offsetY =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[454]++, toY - offsetDistance * Math.sin(angle));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[455]++;
    ctx.beginPath();
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[456]++;
    ctx.moveTo(offsetX, offsetY);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[457]++;
    ctx.lineTo(offsetX - arrowLength * Math.cos(angle - arrowAngle), offsetY - arrowLength * Math.sin(angle - arrowAngle));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[458]++;
    ctx.moveTo(offsetX, offsetY);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[459]++;
    ctx.lineTo(offsetX - arrowLength * Math.cos(angle + arrowAngle), offsetY - arrowLength * Math.sin(angle + arrowAngle));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[460]++;
    ctx.strokeStyle =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[108][0]++, this.getThemeColor('--text-muted')) ||
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[108][1]++, '#6b7280');
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[461]++;
    ctx.lineWidth = 1;
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[462]++;
    ctx.stroke();
  }
  getThemeColor(cssVariable) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[58]++;
    cov_1zxxjamq1l().s[463]++;
    try {
      const style =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[464]++, getComputedStyle(document.documentElement));
      const color =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[465]++, style.getPropertyValue(cssVariable).trim());
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[466]++;
      if (!color) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[109][0]++;
        cov_1zxxjamq1l().s[467]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[109][1]++;
      }
      // Convert CSS color formats to hex if needed
      cov_1zxxjamq1l().s[468]++;
      if (color.startsWith('hsl')) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[110][0]++;
        cov_1zxxjamq1l().s[469]++;
        return this.hslToHex(color);
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[110][1]++;
      }
      cov_1zxxjamq1l().s[470]++;
      if (color.startsWith('rgb')) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[111][0]++;
        cov_1zxxjamq1l().s[471]++;
        return this.rgbToHex(color);
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[111][1]++;
      }
      cov_1zxxjamq1l().s[472]++;
      return color;
    } catch (error) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[473]++;
      console.warn(`Failed to get theme color for ${cssVariable}:`, error);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[474]++;
      return null;
    }
  }
  getNodeCanvasColor(type) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[59]++;
    cov_1zxxjamq1l().s[475]++;
    switch (type) {
      case 'subject':
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[112][0]++;
        cov_1zxxjamq1l().s[476]++;
        return /* istanbul ignore next */(cov_1zxxjamq1l().b[113][0]++, this.getThemeColor('--color-accent')) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[113][1]++, '#7c3aed');
      case 'object':
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[112][1]++;
        cov_1zxxjamq1l().s[477]++;
        return /* istanbul ignore next */(cov_1zxxjamq1l().b[114][0]++, this.getThemeColor('--color-blue')) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[114][1]++, '#2563eb');
      case 'predicate':
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[112][2]++;
        cov_1zxxjamq1l().s[478]++;
        return /* istanbul ignore next */(cov_1zxxjamq1l().b[115][0]++, this.getThemeColor('--color-green')) ||
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[115][1]++, '#059669');
      default:
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[112][3]++;
        cov_1zxxjamq1l().s[479]++;
        return '#6b7280';
    }
  }
  hslToHex(hsl) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[60]++;
    cov_1zxxjamq1l().s[480]++;
    // Simple HSL to hex conversion - for basic theme support
    // This is a simplified version; for production, consider using a library
    return '#6b7280'; // Fallback color
  }
  rgbToHex(rgb) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[61]++;
    const match =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[481]++, rgb.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[482]++;
    if (!match) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[116][0]++;
      cov_1zxxjamq1l().s[483]++;
      return '#000000';
    } else
    /* istanbul ignore next */
    {
      cov_1zxxjamq1l().b[116][1]++;
    }
    const r =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[484]++, parseInt(match[1]));
    const g =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[485]++, parseInt(match[2]));
    const b =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[486]++, parseInt(match[3]));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[487]++;
    return '#' + [r, g, b].map(x => {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[62]++;
      const hex =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[488]++, x.toString(16));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[489]++;
      return hex.length === 1 ?
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[117][0]++, '0' + hex) :
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[117][1]++, hex);
    }).join('');
  }
  downloadBlob(blob, filename) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[63]++;
    var _a, _b;
    // Check if we're in a test environment (JSDOM)
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[490]++;
    if (
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[119][0]++, typeof window !== 'undefined') &&
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[119][1]++,
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[121][0]++, (_b =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[123][0]++, (_a = window.navigator) === null) ||
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[123][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[122][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[122][1]++, _a.userAgent)) === null) ||
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[121][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[120][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[120][1]++, _b.includes('jsdom')))) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[118][0]++;
      cov_1zxxjamq1l().s[491]++;
      // In test environment, just log the action instead of attempting DOM manipulation
      console.log(`Test environment: Would download ${filename} (${blob.size} bytes)`);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[492]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1zxxjamq1l().b[118][1]++;
    }
    const url =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[493]++, URL.createObjectURL(blob));
    const link =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[494]++, document.createElement('a'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[495]++;
    link.href = url;
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[496]++;
    link.download = filename;
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[497]++;
    link.style.display = 'none';
    // Ensure document.body exists before appending
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[498]++;
    if (document.body) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[124][0]++;
      cov_1zxxjamq1l().s[499]++;
      document.body.appendChild(link);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[500]++;
      link.click();
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[501]++;
      document.body.removeChild(link);
    } else {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[124][1]++;
      cov_1zxxjamq1l().s[502]++;
      // Fallback for environments without document.body
      console.warn('Document body not available for download');
    }
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[503]++;
    URL.revokeObjectURL(url);
  }
  exportAsSVG(container) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[64]++;
    const svg =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[504]++, container.querySelector('svg'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[505]++;
    if (!svg) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[125][0]++;
      cov_1zxxjamq1l().s[506]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1zxxjamq1l().b[125][1]++;
    }
    cov_1zxxjamq1l().s[507]++;
    try {
      const serializer =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[508]++, new XMLSerializer());
      const svgString =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[509]++, serializer.serializeToString(svg));
      const blob =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[510]++, new Blob([svgString], {
        type: 'image/svg+xml'
      }));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[511]++;
      this.downloadBlob(blob, 'knowledge-graph.svg');
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[512]++;
      new obsidian_1.Notice('Graph exported as SVG');
    } catch (error) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[513]++;
      console.error('SVG export failed:', error);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[514]++;
      new obsidian_1.Notice('Failed to export SVG');
    }
  }
  resetView(container) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[65]++;
    const svg =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[515]++, container.querySelector('svg'));
    const g =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[516]++,
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[127][0]++, svg === null) ||
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[127][1]++, svg === void 0) ?
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[126][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1zxxjamq1l().b[126][1]++, svg.querySelector('g')));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[517]++;
    if (g) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().b[128][0]++;
      cov_1zxxjamq1l().s[518]++;
      g.setAttribute('transform', 'translate(0, 0) scale(1)');
    } else
    /* istanbul ignore next */
    {
      cov_1zxxjamq1l().b[128][1]++;
    }
  }
  createLoadingIndicator() {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[66]++;
    const loading =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[519]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[520]++;
    loading.className = 'graph-loading';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[521]++;
    loading.textContent = 'Generating graph visualization...';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[522]++;
    loading.style.cssText = 'padding: 2em; text-align: center; color: var(--text-muted);';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[523]++;
    return loading;
  }
  createErrorMessage(error) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[67]++;
    const errorDiv =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[524]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[525]++;
    errorDiv.className = 'graph-error';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[526]++;
    errorDiv.style.cssText = `
            background: var(--background-modifier-error);
            color: var(--text-error);
            padding: 1em;
            border-radius: var(--radius-m);
            border: 1px solid var(--background-modifier-border);
        `;
    const title =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[527]++, document.createElement('strong'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[528]++;
    title.textContent = 'Graph Visualization Error: ';
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[529]++;
    errorDiv.appendChild(title);
    const message =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[530]++, document.createElement('span'));
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[531]++;
    message.textContent = error.message;
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[532]++;
    errorDiv.appendChild(message);
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[533]++;
    return errorDiv;
  }
  /**
   * Export graph visualization data as RDF
   */
  exportGraphAsRDF(data, format) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[68]++;
    cov_1zxxjamq1l().s[534]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1zxxjamq1l().f[69]++;
      cov_1zxxjamq1l().s[535]++;
      try {
        // Convert graph data back to triples
        const triples =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[536]++, this.convertGraphDataToTriples(data));
        // Create a graph from the triples
        const graph =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[537]++, new Graph_1.Graph());
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[538]++;
        for (const triple of triples) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[539]++;
          graph.add(triple);
        }
        const fileName =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[540]++, `graph-visualization-${Date.now()}`);
        const result =
        /* istanbul ignore next */
        (cov_1zxxjamq1l().s[541]++, yield this.rdfService.exportGraph(graph, {
          format,
          fileName,
          saveToVault: true,
          includeComments: true,
          prettyPrint: true,
          targetFolder: 'exports'
        }));
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[542]++;
        if (result.isSuccess) {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[129][0]++;
          const exportData =
          /* istanbul ignore next */
          (cov_1zxxjamq1l().s[543]++, result.getValue());
          /* istanbul ignore next */
          cov_1zxxjamq1l().s[544]++;
          new obsidian_1.Notice(`Exported graph visualization as ${format.toUpperCase()} (${exportData.tripleCount} triples)`);
        } else {
          /* istanbul ignore next */
          cov_1zxxjamq1l().b[129][1]++;
          cov_1zxxjamq1l().s[545]++;
          new obsidian_1.Notice(`Export failed: ${result.errorValue()}`);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[546]++;
        new obsidian_1.Notice(`Export error: ${error.message}`);
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[547]++;
        console.error('Graph RDF export error:', error);
      }
    });
  }
  /**
   * Open advanced RDF export modal
   */
  openAdvancedRDFExport(data) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[70]++;
    cov_1zxxjamq1l().s[548]++;
    try {
      // Convert graph data back to triples
      const triples =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[549]++, this.convertGraphDataToTriples(data));
      // Create a graph from the triples
      const graph =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[550]++, new Graph_1.Graph());
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[551]++;
      for (const triple of triples) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().s[552]++;
        graph.add(triple);
      }
      const modal =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[553]++, new ExportRDFModal_1.ExportRDFModal(this.plugin.app, graph, this.rdfService.getNamespaceManager(), result => {
        /* istanbul ignore next */
        cov_1zxxjamq1l().f[71]++;
        cov_1zxxjamq1l().s[554]++;
        new obsidian_1.Notice(`Graph visualization exported: ${result.fileName}`);
      }));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[555]++;
      modal.open();
    } catch (error) {
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[556]++;
      new obsidian_1.Notice(`Failed to open export modal: ${error.message}`);
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[557]++;
      console.error('Export modal error:', error);
    }
  }
  /**
   * Convert GraphData back to Triple format
   */
  convertGraphDataToTriples(data) {
    /* istanbul ignore next */
    cov_1zxxjamq1l().f[72]++;
    const triples =
    /* istanbul ignore next */
    (cov_1zxxjamq1l().s[558]++, []);
    // Reconstruct triples from graph data
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[559]++;
    for (const link of data.links) {
      const sourceNode =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[560]++, data.nodes.find(n => {
        /* istanbul ignore next */
        cov_1zxxjamq1l().f[73]++;
        cov_1zxxjamq1l().s[561]++;
        return n.id === (typeof link.source === 'string' ?
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[130][0]++, link.source) :
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[130][1]++, link.source.id));
      }));
      const targetNode =
      /* istanbul ignore next */
      (cov_1zxxjamq1l().s[562]++, data.nodes.find(n => {
        /* istanbul ignore next */
        cov_1zxxjamq1l().f[74]++;
        cov_1zxxjamq1l().s[563]++;
        return n.id === (typeof link.target === 'string' ?
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[131][0]++, link.target) :
        /* istanbul ignore next */
        (cov_1zxxjamq1l().b[131][1]++, link.target.id));
      }));
      /* istanbul ignore next */
      cov_1zxxjamq1l().s[564]++;
      if (
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[133][0]++, sourceNode) &&
      /* istanbul ignore next */
      (cov_1zxxjamq1l().b[133][1]++, targetNode)) {
        /* istanbul ignore next */
        cov_1zxxjamq1l().b[132][0]++;
        cov_1zxxjamq1l().s[565]++;
        triples.push(new Triple_1.Triple(new Triple_1.IRI(sourceNode.id), new Triple_1.IRI(link.label), new Triple_1.IRI(targetNode.id)));
      } else
      /* istanbul ignore next */
      {
        cov_1zxxjamq1l().b[132][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1zxxjamq1l().s[566]++;
    return triples;
  }
}
/* istanbul ignore next */
cov_1zxxjamq1l().s[567]++;
exports.GraphVisualizationProcessor = GraphVisualizationProcessor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,