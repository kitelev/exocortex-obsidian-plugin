31d1e063ac9f85b3862e7327a6d093d1
"use strict";

/**
 * RDF Parser for parsing various RDF formats and converting to Graph instances
 * Supports Turtle (.ttl), N-Triples (.nt), JSON-LD (.jsonld), and RDF/XML (.rdf)
 */
/* istanbul ignore next */
function cov_ee2k7oqmr() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFParser.ts";
  var hash = "55ef491bb9733693bd92eff28d2f3501537f027a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFParser.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 27
        }
      },
      "2": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 59
        }
      },
      "3": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 61
        }
      },
      "4": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 52
        }
      },
      "5": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 56
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 94
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "8": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 80
        }
      },
      "9": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 71
        }
      },
      "10": {
        start: {
          line: 23,
          column: 29
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "11": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "12": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "13": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 85
        }
      },
      "14": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "15": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 74
        }
      },
      "16": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 26
        }
      },
      "17": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 85
        }
      },
      "18": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "19": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 85
        }
      },
      "20": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 26
        }
      },
      "21": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 81
        }
      },
      "22": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "23": {
        start: {
          line: 44,
          column: 41
        },
        end: {
          line: 44,
          column: 66
        }
      },
      "24": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 49
        }
      },
      "25": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "26": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 97
        }
      },
      "27": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "28": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 46
        }
      },
      "29": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 74
        }
      },
      "30": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 38
        }
      },
      "31": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "32": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "33": {
        start: {
          line: 72,
          column: 31
        },
        end: {
          line: 72,
          column: 50
        }
      },
      "34": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "35": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 37
        }
      },
      "36": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "37": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 29
        }
      },
      "38": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "39": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 28
        }
      },
      "40": {
        start: {
          line: 90,
          column: 22
        },
        end: {
          line: 90,
          column: 69
        }
      },
      "41": {
        start: {
          line: 90,
          column: 57
        },
        end: {
          line: 90,
          column: 68
        }
      },
      "42": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "43": {
        start: {
          line: 91,
          column: 32
        },
        end: {
          line: 91,
          column: 58
        }
      },
      "44": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "45": {
        start: {
          line: 93,
          column: 35
        },
        end: {
          line: 93,
          column: 75
        }
      },
      "46": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 35
        }
      },
      "47": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 24
        }
      },
      "48": {
        start: {
          line: 104,
          column: 22
        },
        end: {
          line: 104,
          column: 41
        }
      },
      "49": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 105,
          column: 33
        }
      },
      "50": {
        start: {
          line: 106,
          column: 22
        },
        end: {
          line: 106,
          column: 37
        }
      },
      "51": {
        start: {
          line: 109,
          column: 30
        },
        end: {
          line: 109,
          column: 66
        }
      },
      "52": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "53": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 46
        }
      },
      "54": {
        start: {
          line: 115,
          column: 31
        },
        end: {
          line: 115,
          column: 84
        }
      },
      "55": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 53
        }
      },
      "56": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 118,
          column: 60
        }
      },
      "57": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "58": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 35
        }
      },
      "59": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 85
        }
      },
      "60": {
        start: {
          line: 125,
          column: 27
        },
        end: {
          line: 125,
          column: 107
        }
      },
      "61": {
        start: {
          line: 125,
          column: 98
        },
        end: {
          line: 125,
          column: 106
        }
      },
      "62": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "63": {
        start: {
          line: 126,
          column: 21
        },
        end: {
          line: 126,
          column: 22
        }
      },
      "64": {
        start: {
          line: 127,
          column: 30
        },
        end: {
          line: 127,
          column: 50
        }
      },
      "65": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 129,
          column: 25
        }
      },
      "66": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 25
        }
      },
      "67": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "68": {
        start: {
          line: 132,
          column: 32
        },
        end: {
          line: 132,
          column: 97
        }
      },
      "69": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 140,
          column: 17
        }
      },
      "70": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 136,
          column: 21
        }
      },
      "71": {
        start: {
          line: 135,
          column: 24
        },
        end: {
          line: 135,
          column: 56
        }
      },
      "72": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 139,
          column: 21
        }
      },
      "73": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 138,
          column: 49
        }
      },
      "74": {
        start: {
          line: 143,
          column: 33
        },
        end: {
          line: 143,
          column: 71
        }
      },
      "75": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 149,
          column: 17
        }
      },
      "76": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 42
        }
      },
      "77": {
        start: {
          line: 148,
          column: 20
        },
        end: {
          line: 148,
          column: 44
        }
      },
      "78": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 21
        }
      },
      "79": {
        start: {
          line: 158,
          column: 24
        },
        end: {
          line: 158,
          column: 26
        }
      },
      "80": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 37
        }
      },
      "81": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 162,
          column: 27
        }
      },
      "82": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 27
        }
      },
      "83": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 52
        }
      },
      "84": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "85": {
        start: {
          line: 168,
          column: 26
        },
        end: {
          line: 168,
          column: 80
        }
      },
      "86": {
        start: {
          line: 168,
          column: 56
        },
        end: {
          line: 168,
          column: 64
        }
      },
      "87": {
        start: {
          line: 168,
          column: 78
        },
        end: {
          line: 168,
          column: 79
        }
      },
      "88": {
        start: {
          line: 169,
          column: 26
        },
        end: {
          line: 169,
          column: 30
        }
      },
      "89": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "90": {
        start: {
          line: 170,
          column: 25
        },
        end: {
          line: 170,
          column: 26
        }
      },
      "91": {
        start: {
          line: 171,
          column: 31
        },
        end: {
          line: 171,
          column: 64
        }
      },
      "92": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 186,
          column: 17
        }
      },
      "93": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 69
        }
      },
      "94": {
        start: {
          line: 175,
          column: 38
        },
        end: {
          line: 175,
          column: 76
        }
      },
      "95": {
        start: {
          line: 176,
          column: 35
        },
        end: {
          line: 176,
          column: 73
        }
      },
      "96": {
        start: {
          line: 177,
          column: 35
        },
        end: {
          line: 177,
          column: 82
        }
      },
      "97": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 54
        }
      },
      "98": {
        start: {
          line: 180,
          column: 21
        },
        end: {
          line: 186,
          column: 17
        }
      },
      "99": {
        start: {
          line: 182,
          column: 38
        },
        end: {
          line: 182,
          column: 76
        }
      },
      "100": {
        start: {
          line: 183,
          column: 35
        },
        end: {
          line: 183,
          column: 73
        }
      },
      "101": {
        start: {
          line: 184,
          column: 35
        },
        end: {
          line: 184,
          column: 82
        }
      },
      "102": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 185,
          column: 45
        }
      },
      "103": {
        start: {
          line: 191,
          column: 27
        },
        end: {
          line: 191,
          column: 61
        }
      },
      "104": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "105": {
        start: {
          line: 193,
          column: 32
        },
        end: {
          line: 193,
          column: 70
        }
      },
      "106": {
        start: {
          line: 194,
          column: 34
        },
        end: {
          line: 194,
          column: 72
        }
      },
      "107": {
        start: {
          line: 195,
          column: 31
        },
        end: {
          line: 195,
          column: 69
        }
      },
      "108": {
        start: {
          line: 196,
          column: 31
        },
        end: {
          line: 196,
          column: 78
        }
      },
      "109": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 50
        }
      },
      "110": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 23
        }
      },
      "111": {
        start: {
          line: 206,
          column: 23
        },
        end: {
          line: 206,
          column: 25
        }
      },
      "112": {
        start: {
          line: 207,
          column: 22
        },
        end: {
          line: 207,
          column: 24
        }
      },
      "113": {
        start: {
          line: 208,
          column: 23
        },
        end: {
          line: 208,
          column: 28
        }
      },
      "114": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 209,
          column: 26
        }
      },
      "115": {
        start: {
          line: 210,
          column: 25
        },
        end: {
          line: 210,
          column: 30
        }
      },
      "116": {
        start: {
          line: 211,
          column: 25
        },
        end: {
          line: 211,
          column: 30
        }
      },
      "117": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "118": {
        start: {
          line: 212,
          column: 21
        },
        end: {
          line: 212,
          column: 22
        }
      },
      "119": {
        start: {
          line: 213,
          column: 25
        },
        end: {
          line: 213,
          column: 32
        }
      },
      "120": {
        start: {
          line: 214,
          column: 29
        },
        end: {
          line: 214,
          column: 67
        }
      },
      "121": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "122": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 225,
          column: 17
        }
      },
      "123": {
        start: {
          line: 217,
          column: 20
        },
        end: {
          line: 217,
          column: 36
        }
      },
      "124": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 218,
          column: 37
        }
      },
      "125": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 39
        }
      },
      "126": {
        start: {
          line: 221,
          column: 21
        },
        end: {
          line: 225,
          column: 17
        }
      },
      "127": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 37
        }
      },
      "128": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 223,
          column: 35
        }
      },
      "129": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 38
        }
      },
      "130": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 32
        }
      },
      "131": {
        start: {
          line: 228,
          column: 17
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "132": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 34
        }
      },
      "133": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 32
        }
      },
      "134": {
        start: {
          line: 232,
          column: 17
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "135": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 35
        }
      },
      "136": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 32
        }
      },
      "137": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 241,
          column: 17
        }
      },
      "138": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 240,
          column: 21
        }
      },
      "139": {
        start: {
          line: 238,
          column: 24
        },
        end: {
          line: 238,
          column: 45
        }
      },
      "140": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 37
        }
      },
      "141": {
        start: {
          line: 243,
          column: 17
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "142": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 32
        }
      },
      "143": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 20
        }
      },
      "144": {
        start: {
          line: 248,
          column: 17
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "145": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 253,
          column: 17
        }
      },
      "146": {
        start: {
          line: 250,
          column: 20
        },
        end: {
          line: 250,
          column: 41
        }
      },
      "147": {
        start: {
          line: 251,
          column: 20
        },
        end: {
          line: 251,
          column: 33
        }
      },
      "148": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 39
        }
      },
      "149": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 32
        }
      },
      "150": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "151": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 33
        }
      },
      "152": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 22
        }
      },
      "153": {
        start: {
          line: 268,
          column: 22
        },
        end: {
          line: 268,
          column: 41
        }
      },
      "154": {
        start: {
          line: 269,
          column: 22
        },
        end: {
          line: 269,
          column: 41
        }
      },
      "155": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "156": {
        start: {
          line: 270,
          column: 21
        },
        end: {
          line: 270,
          column: 22
        }
      },
      "157": {
        start: {
          line: 271,
          column: 25
        },
        end: {
          line: 271,
          column: 40
        }
      },
      "158": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 273,
          column: 25
        }
      },
      "159": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 273,
          column: 25
        }
      },
      "160": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "161": {
        start: {
          line: 275,
          column: 31
        },
        end: {
          line: 275,
          column: 59
        }
      },
      "162": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 278,
          column: 17
        }
      },
      "163": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 277,
          column: 38
        }
      },
      "164": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 65
        }
      },
      "165": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 21
        }
      },
      "166": {
        start: {
          line: 291,
          column: 22
        },
        end: {
          line: 291,
          column: 142
        }
      },
      "167": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "168": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 65
        }
      },
      "169": {
        start: {
          line: 295,
          column: 56
        },
        end: {
          line: 295,
          column: 61
        }
      },
      "170": {
        start: {
          line: 296,
          column: 24
        },
        end: {
          line: 296,
          column: 58
        }
      },
      "171": {
        start: {
          line: 297,
          column: 26
        },
        end: {
          line: 297,
          column: 62
        }
      },
      "172": {
        start: {
          line: 298,
          column: 23
        },
        end: {
          line: 298,
          column: 56
        }
      },
      "173": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 63
        }
      },
      "174": {
        start: {
          line: 305,
          column: 22
        },
        end: {
          line: 305,
          column: 41
        }
      },
      "175": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 321,
          column: 9
        }
      },
      "176": {
        start: {
          line: 307,
          column: 27
        },
        end: {
          line: 307,
          column: 46
        }
      },
      "177": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "178": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 66
        }
      },
      "179": {
        start: {
          line: 313,
          column: 30
        },
        end: {
          line: 313,
          column: 93
        }
      },
      "180": {
        start: {
          line: 314,
          column: 29
        },
        end: {
          line: 314,
          column: 79
        }
      },
      "181": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 317,
          column: 13
        }
      },
      "182": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 79
        }
      },
      "183": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 65
        }
      },
      "184": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 21
        }
      },
      "185": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "186": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 19
        }
      },
      "187": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "188": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "189": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 336,
          column: 17
        }
      },
      "190": {
        start: {
          line: 335,
          column: 20
        },
        end: {
          line: 335,
          column: 46
        }
      },
      "191": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 345,
          column: 19
        }
      },
      "192": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 19
        }
      },
      "193": {
        start: {
          line: 346,
          column: 28
        },
        end: {
          line: 346,
          column: 77
        }
      },
      "194": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 357,
          column: 9
        }
      },
      "195": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 349,
          column: 25
        }
      },
      "196": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 25
        }
      },
      "197": {
        start: {
          line: 350,
          column: 33
        },
        end: {
          line: 350,
          column: 82
        }
      },
      "198": {
        start: {
          line: 351,
          column: 31
        },
        end: {
          line: 351,
          column: 72
        }
      },
      "199": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 356,
          column: 13
        }
      },
      "200": {
        start: {
          line: 353,
          column: 35
        },
        end: {
          line: 353,
          column: 76
        }
      },
      "201": {
        start: {
          line: 354,
          column: 31
        },
        end: {
          line: 354,
          column: 89
        }
      },
      "202": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 34
        }
      },
      "203": {
        start: {
          line: 363,
          column: 22
        },
        end: {
          line: 363,
          column: 41
        }
      },
      "204": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 94
        }
      },
      "205": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 21
        }
      },
      "206": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 33
        }
      },
      "207": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "208": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 51
        }
      },
      "209": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "210": {
        start: {
          line: 380,
          column: 24
        },
        end: {
          line: 380,
          column: 44
        }
      },
      "211": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 91
        }
      },
      "212": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "213": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 46
        }
      },
      "214": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "215": {
        start: {
          line: 389,
          column: 29
        },
        end: {
          line: 389,
          column: 52
        }
      },
      "216": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 392,
          column: 13
        }
      },
      "217": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 391,
          column: 43
        }
      },
      "218": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 57
        }
      },
      "219": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 33
        }
      },
      "220": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "221": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 403,
          column: 58
        }
      },
      "222": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "223": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 51
        }
      },
      "224": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "225": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 46
        }
      },
      "226": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 67
        }
      },
      "227": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "228": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 50
        }
      },
      "229": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "230": {
        start: {
          line: 423,
          column: 29
        },
        end: {
          line: 423,
          column: 51
        }
      },
      "231": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 426,
          column: 13
        }
      },
      "232": {
        start: {
          line: 425,
          column: 16
        },
        end: {
          line: 425,
          column: 43
        }
      },
      "233": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 96
        }
      },
      "234": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 439,
          column: 9
        }
      },
      "235": {
        start: {
          line: 435,
          column: 29
        },
        end: {
          line: 435,
          column: 54
        }
      },
      "236": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 438,
          column: 13
        }
      },
      "237": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 437,
          column: 43
        }
      },
      "238": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 440,
          column: 105
        }
      },
      "239": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 448,
          column: 9
        }
      },
      "240": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 50
        }
      },
      "241": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 451,
          column: 9
        }
      },
      "242": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 110
        }
      },
      "243": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "244": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 51
        }
      },
      "245": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 470,
          column: 9
        }
      },
      "246": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 458,
          column: 13
        }
      },
      "247": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 71
        }
      },
      "248": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 469,
          column: 13
        }
      },
      "249": {
        start: {
          line: 460,
          column: 30
        },
        end: {
          line: 460,
          column: 67
        }
      },
      "250": {
        start: {
          line: 461,
          column: 16
        },
        end: {
          line: 464,
          column: 17
        }
      },
      "251": {
        start: {
          line: 462,
          column: 37
        },
        end: {
          line: 462,
          column: 91
        }
      },
      "252": {
        start: {
          line: 463,
          column: 20
        },
        end: {
          line: 463,
          column: 78
        }
      },
      "253": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 467,
          column: 17
        }
      },
      "254": {
        start: {
          line: 466,
          column: 20
        },
        end: {
          line: 466,
          column: 99
        }
      },
      "255": {
        start: {
          line: 468,
          column: 16
        },
        end: {
          line: 468,
          column: 31
        }
      },
      "256": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 80
        }
      },
      "257": {
        start: {
          line: 478,
          column: 20
        },
        end: {
          line: 478,
          column: 51
        }
      },
      "258": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "259": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 50
        }
      },
      "260": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 483,
          column: 58
        }
      },
      "261": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "262": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 71
        }
      },
      "263": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 488,
          column: 65
        }
      },
      "264": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "265": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 78
        }
      },
      "266": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "267": {
        start: {
          line: 494,
          column: 26
        },
        end: {
          line: 494,
          column: 48
        }
      },
      "268": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 499,
          column: 13
        }
      },
      "269": {
        start: {
          line: 496,
          column: 30
        },
        end: {
          line: 496,
          column: 60
        }
      },
      "270": {
        start: {
          line: 497,
          column: 33
        },
        end: {
          line: 497,
          column: 63
        }
      },
      "271": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 79
        }
      },
      "272": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 64
        }
      },
      "273": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 506,
          column: 9
        }
      },
      "274": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 505,
          column: 50
        }
      },
      "275": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 507,
          column: 63
        }
      },
      "276": {
        start: {
          line: 513,
          column: 23
        },
        end: {
          line: 513,
          column: 25
        }
      },
      "277": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 526,
          column: 9
        }
      },
      "278": {
        start: {
          line: 516,
          column: 28
        },
        end: {
          line: 516,
          column: 47
        }
      },
      "279": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 519,
          column: 13
        }
      },
      "280": {
        start: {
          line: 518,
          column: 16
        },
        end: {
          line: 518,
          column: 71
        }
      },
      "281": {
        start: {
          line: 521,
          column: 30
        },
        end: {
          line: 521,
          column: 51
        }
      },
      "282": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 524,
          column: 13
        }
      },
      "283": {
        start: {
          line: 523,
          column: 16
        },
        end: {
          line: 523,
          column: 75
        }
      },
      "284": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 527,
          column: 22
        }
      },
      "285": {
        start: {
          line: 533,
          column: 27
        },
        end: {
          line: 533,
          column: 29
        }
      },
      "286": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 536,
          column: 9
        }
      },
      "287": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 535,
          column: 70
        }
      },
      "288": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 26
        }
      },
      "289": {
        start: {
          line: 540,
          column: 0
        },
        end: {
          line: 540,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 26
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 67
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 90,
            column: 49
          },
          end: {
            line: 90,
            column: 50
          }
        },
        loc: {
          start: {
            line: 90,
            column: 57
          },
          end: {
            line: 90,
            column: 68
          }
        },
        line: 90
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 91,
            column: 24
          },
          end: {
            line: 91,
            column: 25
          }
        },
        loc: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 58
          }
        },
        line: 91
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 93,
            column: 27
          },
          end: {
            line: 93,
            column: 28
          }
        },
        loc: {
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 93,
            column: 75
          }
        },
        line: 93
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 56
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 103
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 125,
            column: 93
          },
          end: {
            line: 125,
            column: 94
          }
        },
        loc: {
          start: {
            line: 125,
            column: 98
          },
          end: {
            line: 125,
            column: 106
          }
        },
        line: 125
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 65
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 157
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 168,
            column: 51
          },
          end: {
            line: 168,
            column: 52
          }
        },
        loc: {
          start: {
            line: 168,
            column: 56
          },
          end: {
            line: 168,
            column: 64
          }
        },
        line: 168
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 168,
            column: 73
          },
          end: {
            line: 168,
            column: 74
          }
        },
        loc: {
          start: {
            line: 168,
            column: 78
          },
          end: {
            line: 168,
            column: 79
          }
        },
        line: 168
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        loc: {
          start: {
            line: 205,
            column: 29
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 205
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 45
          },
          end: {
            line: 285,
            column: 5
          }
        },
        line: 267
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        loc: {
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 289
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 56
          },
          end: {
            line: 323,
            column: 5
          }
        },
        line: 304
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 327,
            column: 5
          }
        },
        loc: {
          start: {
            line: 327,
            column: 38
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 327
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        },
        loc: {
          start: {
            line: 343,
            column: 54
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 343
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 362,
            column: 5
          }
        },
        loc: {
          start: {
            line: 362,
            column: 56
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 362
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 36
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 372
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 31
          },
          end: {
            line: 414,
            column: 5
          }
        },
        line: 399
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 418,
            column: 5
          }
        },
        loc: {
          start: {
            line: 418,
            column: 41
          },
          end: {
            line: 429,
            column: 5
          }
        },
        line: 418
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 433,
            column: 5
          }
        },
        loc: {
          start: {
            line: 433,
            column: 49
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 433
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 445,
            column: 5
          }
        },
        loc: {
          start: {
            line: 445,
            column: 41
          },
          end: {
            line: 472,
            column: 5
          }
        },
        line: 445
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 476,
            column: 4
          },
          end: {
            line: 476,
            column: 5
          }
        },
        loc: {
          start: {
            line: 476,
            column: 29
          },
          end: {
            line: 508,
            column: 5
          }
        },
        line: 476
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 512,
            column: 5
          }
        },
        loc: {
          start: {
            line: 512,
            column: 25
          },
          end: {
            line: 528,
            column: 5
          }
        },
        line: 512
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 532,
            column: 4
          },
          end: {
            line: 532,
            column: 5
          }
        },
        loc: {
          start: {
            line: 532,
            column: 26
          },
          end: {
            line: 538,
            column: 5
          }
        },
        line: 532
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 32
          },
          end: {
            line: 14,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 32
          },
          end: {
            line: 14,
            column: 48
          }
        }, {
          start: {
            line: 14,
            column: 52
          },
          end: {
            line: 14,
            column: 93
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 19,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 19,
            column: 31
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 47
          }
        }, {
          start: {
            line: 21,
            column: 51
          },
          end: {
            line: 21,
            column: 80
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 22,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 22,
            column: 41
          }
        }, {
          start: {
            line: 22,
            column: 45
          },
          end: {
            line: 22,
            column: 71
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 29,
            column: 26
          }
        }, {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 26
          }
        }, {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 35,
            column: 26
          }
        }, {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 38,
            column: 26
          }
        }, {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 40,
            column: 81
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 34
          }
        }, {
          start: {
            line: 48,
            column: 38
          },
          end: {
            line: 48,
            column: 55
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 55,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 48
          },
          end: {
            line: 55,
            column: 56
          }
        }, {
          start: {
            line: 55,
            column: 59
          },
          end: {
            line: 55,
            column: 68
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 56,
            column: 24
          },
          end: {
            line: 56,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 44
          },
          end: {
            line: 56,
            column: 50
          }
        }, {
          start: {
            line: 56,
            column: 53
          },
          end: {
            line: 56,
            column: 62
          }
        }],
        line: 56
      },
      "10": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 35
          }
        }, {
          start: {
            line: 70,
            column: 39
          },
          end: {
            line: 70,
            column: 60
          }
        }],
        line: 70
      },
      "12": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "13": {
        loc: {
          start: {
            line: 73,
            column: 20
          },
          end: {
            line: 73,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 20
          },
          end: {
            line: 73,
            column: 38
          }
        }, {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 73,
            column: 58
          }
        }, {
          start: {
            line: 73,
            column: 62
          },
          end: {
            line: 73,
            column: 75
          }
        }],
        line: 73
      },
      "14": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "15": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 39
          }
        }, {
          start: {
            line: 82,
            column: 43
          },
          end: {
            line: 82,
            column: 71
          }
        }],
        line: 82
      },
      "16": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "17": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 39
          }
        }, {
          start: {
            line: 86,
            column: 43
          },
          end: {
            line: 86,
            column: 68
          }
        }],
        line: 86
      },
      "18": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "19": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "20": {
        loc: {
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 93,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 93,
            column: 53
          }
        }, {
          start: {
            line: 93,
            column: 57
          },
          end: {
            line: 93,
            column: 75
          }
        }],
        line: 93
      },
      "21": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "22": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 129,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 129,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "23": {
        loc: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 26
          }
        }, {
          start: {
            line: 128,
            column: 30
          },
          end: {
            line: 128,
            column: 55
          }
        }],
        line: 128
      },
      "24": {
        loc: {
          start: {
            line: 134,
            column: 20
          },
          end: {
            line: 136,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 20
          },
          end: {
            line: 136,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "25": {
        loc: {
          start: {
            line: 137,
            column: 20
          },
          end: {
            line: 139,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 20
          },
          end: {
            line: 139,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "26": {
        loc: {
          start: {
            line: 144,
            column: 16
          },
          end: {
            line: 149,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 16
          },
          end: {
            line: 149,
            column: 17
          }
        }, {
          start: {
            line: 147,
            column: 21
          },
          end: {
            line: 149,
            column: 17
          }
        }],
        line: 144
      },
      "27": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 162,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 162,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "28": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: 189,
            column: 13
          },
          end: {
            line: 199,
            column: 9
          }
        }],
        line: 166
      },
      "29": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 186,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 186,
            column: 17
          }
        }, {
          start: {
            line: 180,
            column: 21
          },
          end: {
            line: 186,
            column: 17
          }
        }],
        line: 172
      },
      "30": {
        loc: {
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 27
          }
        }, {
          start: {
            line: 172,
            column: 31
          },
          end: {
            line: 172,
            column: 49
          }
        }],
        line: 172
      },
      "31": {
        loc: {
          start: {
            line: 180,
            column: 21
          },
          end: {
            line: 186,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 21
          },
          end: {
            line: 186,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "32": {
        loc: {
          start: {
            line: 180,
            column: 25
          },
          end: {
            line: 180,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 25
          },
          end: {
            line: 180,
            column: 32
          }
        }, {
          start: {
            line: 180,
            column: 36
          },
          end: {
            line: 180,
            column: 54
          }
        }],
        line: 180
      },
      "33": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "34": {
        loc: {
          start: {
            line: 214,
            column: 29
          },
          end: {
            line: 214,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 51
          },
          end: {
            line: 214,
            column: 62
          }
        }, {
          start: {
            line: 214,
            column: 65
          },
          end: {
            line: 214,
            column: 67
          }
        }],
        line: 214
      },
      "35": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: 228,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        }],
        line: 215
      },
      "36": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 28
          }
        }, {
          start: {
            line: 215,
            column: 32
          },
          end: {
            line: 215,
            column: 44
          }
        }],
        line: 215
      },
      "37": {
        loc: {
          start: {
            line: 216,
            column: 16
          },
          end: {
            line: 225,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 16
          },
          end: {
            line: 225,
            column: 17
          }
        }, {
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 225,
            column: 17
          }
        }],
        line: 216
      },
      "38": {
        loc: {
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 225,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 225,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "39": {
        loc: {
          start: {
            line: 228,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: 232,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        }],
        line: 228
      },
      "40": {
        loc: {
          start: {
            line: 232,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: 243,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        }],
        line: 232
      },
      "41": {
        loc: {
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 241,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 241,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "42": {
        loc: {
          start: {
            line: 236,
            column: 20
          },
          end: {
            line: 236,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 20
          },
          end: {
            line: 236,
            column: 36
          }
        }, {
          start: {
            line: 236,
            column: 40
          },
          end: {
            line: 236,
            column: 55
          }
        }],
        line: 236
      },
      "43": {
        loc: {
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 240,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 240,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "44": {
        loc: {
          start: {
            line: 243,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: 248,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        }],
        line: 243
      },
      "45": {
        loc: {
          start: {
            line: 243,
            column: 21
          },
          end: {
            line: 243,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 21
          },
          end: {
            line: 243,
            column: 33
          }
        }, {
          start: {
            line: 243,
            column: 37
          },
          end: {
            line: 243,
            column: 53
          }
        }, {
          start: {
            line: 243,
            column: 57
          },
          end: {
            line: 243,
            column: 67
          }
        }],
        line: 243
      },
      "46": {
        loc: {
          start: {
            line: 248,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: 255,
            column: 17
          },
          end: {
            line: 257,
            column: 13
          }
        }],
        line: 248
      },
      "47": {
        loc: {
          start: {
            line: 248,
            column: 21
          },
          end: {
            line: 248,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 21
          },
          end: {
            line: 248,
            column: 33
          }
        }, {
          start: {
            line: 248,
            column: 37
          },
          end: {
            line: 248,
            column: 46
          }
        }, {
          start: {
            line: 248,
            column: 50
          },
          end: {
            line: 248,
            column: 61
          }
        }],
        line: 248
      },
      "48": {
        loc: {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "49": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "50": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 273,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 273,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "51": {
        loc: {
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 272,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 272,
            column: 21
          }
        }, {
          start: {
            line: 272,
            column: 25
          },
          end: {
            line: 272,
            column: 45
          }
        }],
        line: 272
      },
      "52": {
        loc: {
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 278,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 278,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "53": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "54": {
        loc: {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "55": {
        loc: {
          start: {
            line: 313,
            column: 30
          },
          end: {
            line: 313,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 30
          },
          end: {
            line: 313,
            column: 46
          }
        }, {
          start: {
            line: 313,
            column: 51
          },
          end: {
            line: 313,
            column: 92
          }
        }],
        line: 313
      },
      "56": {
        loc: {
          start: {
            line: 313,
            column: 51
          },
          end: {
            line: 313,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 75
          },
          end: {
            line: 313,
            column: 81
          }
        }, {
          start: {
            line: 313,
            column: 84
          },
          end: {
            line: 313,
            column: 92
          }
        }],
        line: 313
      },
      "57": {
        loc: {
          start: {
            line: 314,
            column: 29
          },
          end: {
            line: 314,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 56
          },
          end: {
            line: 314,
            column: 65
          }
        }, {
          start: {
            line: 314,
            column: 68
          },
          end: {
            line: 314,
            column: 79
          }
        }],
        line: 314
      },
      "58": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "59": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "60": {
        loc: {
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 336,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 336,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "61": {
        loc: {
          start: {
            line: 334,
            column: 20
          },
          end: {
            line: 334,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 20
          },
          end: {
            line: 334,
            column: 45
          }
        }, {
          start: {
            line: 334,
            column: 49
          },
          end: {
            line: 334,
            column: 64
          }
        }, {
          start: {
            line: 334,
            column: 68
          },
          end: {
            line: 334,
            column: 84
          }
        }],
        line: 334
      },
      "62": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 345,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 345,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "63": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 349,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 349,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "64": {
        loc: {
          start: {
            line: 348,
            column: 16
          },
          end: {
            line: 348,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 16
          },
          end: {
            line: 348,
            column: 35
          }
        }, {
          start: {
            line: 348,
            column: 39
          },
          end: {
            line: 348,
            column: 63
          }
        }],
        line: 348
      },
      "65": {
        loc: {
          start: {
            line: 351,
            column: 31
          },
          end: {
            line: 351,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 351,
            column: 55
          },
          end: {
            line: 351,
            column: 61
          }
        }, {
          start: {
            line: 351,
            column: 64
          },
          end: {
            line: 351,
            column: 72
          }
        }],
        line: 351
      },
      "66": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 377,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 377,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "67": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "68": {
        loc: {
          start: {
            line: 379,
            column: 12
          },
          end: {
            line: 379,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 379,
            column: 12
          },
          end: {
            line: 379,
            column: 35
          }
        }, {
          start: {
            line: 379,
            column: 39
          },
          end: {
            line: 379,
            column: 60
          }
        }],
        line: 379
      },
      "69": {
        loc: {
          start: {
            line: 381,
            column: 36
          },
          end: {
            line: 381,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 381,
            column: 70
          },
          end: {
            line: 381,
            column: 83
          }
        }, {
          start: {
            line: 381,
            column: 86
          },
          end: {
            line: 381,
            column: 89
          }
        }],
        line: 381
      },
      "70": {
        loc: {
          start: {
            line: 381,
            column: 36
          },
          end: {
            line: 381,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 36
          },
          end: {
            line: 381,
            column: 43
          }
        }, {
          start: {
            line: 381,
            column: 47
          },
          end: {
            line: 381,
            column: 67
          }
        }],
        line: 381
      },
      "71": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "72": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 393,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 393,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "73": {
        loc: {
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 392,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 392,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "74": {
        loc: {
          start: {
            line: 402,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "75": {
        loc: {
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 402,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 402,
            column: 35
          }
        }, {
          start: {
            line: 402,
            column: 39
          },
          end: {
            line: 402,
            column: 60
          }
        }],
        line: 402
      },
      "76": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "77": {
        loc: {
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 410
      },
      "78": {
        loc: {
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "79": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 427,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 427,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "80": {
        loc: {
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 422,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 422,
            column: 32
          }
        }, {
          start: {
            line: 422,
            column: 36
          },
          end: {
            line: 422,
            column: 62
          }
        }],
        line: 422
      },
      "81": {
        loc: {
          start: {
            line: 424,
            column: 12
          },
          end: {
            line: 426,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 12
          },
          end: {
            line: 426,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 424
      },
      "82": {
        loc: {
          start: {
            line: 428,
            column: 32
          },
          end: {
            line: 428,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 428,
            column: 69
          },
          end: {
            line: 428,
            column: 85
          }
        }, {
          start: {
            line: 428,
            column: 88
          },
          end: {
            line: 428,
            column: 94
          }
        }],
        line: 428
      },
      "83": {
        loc: {
          start: {
            line: 428,
            column: 32
          },
          end: {
            line: 428,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 32
          },
          end: {
            line: 428,
            column: 39
          }
        }, {
          start: {
            line: 428,
            column: 43
          },
          end: {
            line: 428,
            column: 66
          }
        }],
        line: 428
      },
      "84": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "85": {
        loc: {
          start: {
            line: 434,
            column: 12
          },
          end: {
            line: 434,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 434,
            column: 12
          },
          end: {
            line: 434,
            column: 35
          }
        }, {
          start: {
            line: 434,
            column: 39
          },
          end: {
            line: 434,
            column: 68
          }
        }],
        line: 434
      },
      "86": {
        loc: {
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 438,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 438,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "87": {
        loc: {
          start: {
            line: 440,
            column: 32
          },
          end: {
            line: 440,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 440,
            column: 72
          },
          end: {
            line: 440,
            column: 91
          }
        }, {
          start: {
            line: 440,
            column: 94
          },
          end: {
            line: 440,
            column: 103
          }
        }],
        line: 440
      },
      "88": {
        loc: {
          start: {
            line: 440,
            column: 32
          },
          end: {
            line: 440,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 32
          },
          end: {
            line: 440,
            column: 39
          }
        }, {
          start: {
            line: 440,
            column: 43
          },
          end: {
            line: 440,
            column: 69
          }
        }],
        line: 440
      },
      "89": {
        loc: {
          start: {
            line: 446,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "90": {
        loc: {
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 451,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 451,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "91": {
        loc: {
          start: {
            line: 450,
            column: 19
          },
          end: {
            line: 450,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 450,
            column: 45
          },
          end: {
            line: 450,
            column: 76
          }
        }, {
          start: {
            line: 450,
            column: 79
          },
          end: {
            line: 450,
            column: 109
          }
        }],
        line: 450
      },
      "92": {
        loc: {
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      },
      "93": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "94": {
        loc: {
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 458,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 458,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "95": {
        loc: {
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "96": {
        loc: {
          start: {
            line: 461,
            column: 16
          },
          end: {
            line: 464,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 461,
            column: 16
          },
          end: {
            line: 464,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 461
      },
      "97": {
        loc: {
          start: {
            line: 465,
            column: 16
          },
          end: {
            line: 467,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 465,
            column: 16
          },
          end: {
            line: 467,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 465
      },
      "98": {
        loc: {
          start: {
            line: 479,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "99": {
        loc: {
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 484
      },
      "100": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "101": {
        loc: {
          start: {
            line: 493,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "102": {
        loc: {
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 499,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 499,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "103": {
        loc: {
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "104": {
        loc: {
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 519,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 519,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "105": {
        loc: {
          start: {
            line: 517,
            column: 16
          },
          end: {
            line: 517,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 517,
            column: 16
          },
          end: {
            line: 517,
            column: 50
          }
        }, {
          start: {
            line: 517,
            column: 54
          },
          end: {
            line: 517,
            column: 94
          }
        }],
        line: 517
      },
      "106": {
        loc: {
          start: {
            line: 522,
            column: 12
          },
          end: {
            line: 524,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 522,
            column: 12
          },
          end: {
            line: 524,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 522
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0],
      "46": [0, 0],
      "47": [0, 0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFParser.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFParser.ts"],
      sourcesContent: ["/**\n * RDF Parser for parsing various RDF formats and converting to Graph instances\n * Supports Turtle (.ttl), N-Triples (.nt), JSON-LD (.jsonld), and RDF/XML (.rdf)\n */\n\nimport { Graph } from '../../domain/semantic/core/Graph';\nimport { Triple, IRI, BlankNode, Literal } from '../../domain/semantic/core/Triple';\nimport { Result } from '../../domain/core/Result';\nimport { NamespaceManager } from './NamespaceManager';\nimport { RDFFormat } from './RDFSerializer';\n\nexport interface ParseOptions {\n    format?: RDFFormat;\n    baseIRI?: string;\n    namespaceManager?: NamespaceManager;\n    validateInput?: boolean;\n    strictMode?: boolean;\n}\n\nexport interface ParseResult {\n    graph: Graph;\n    tripleCount: number;\n    namespaces: Record<string, string>;\n    warnings?: string[];\n    errors?: string[];\n}\n\nexport class RDFParser {\n    private namespaceManager: NamespaceManager;\n    \n    constructor(namespaceManager?: NamespaceManager) {\n        this.namespaceManager = namespaceManager || new NamespaceManager();\n    }\n    \n    /**\n     * Parse RDF content into a Graph\n     */\n    parse(content: string, options: ParseOptions = {}): Result<ParseResult> {\n        try {\n            const nm = options.namespaceManager || this.namespaceManager.clone();\n            const format = options.format || this.detectFormat(content);\n            const warnings: string[] = [];\n            const errors: string[] = [];\n            \n            let graph: Graph;\n            \n            switch (format) {\n                case 'turtle':\n                    graph = this.parseTurtle(content, nm, options, warnings, errors);\n                    break;\n                    \n                case 'n-triples':\n                    graph = this.parseNTriples(content, warnings, errors);\n                    break;\n                    \n                case 'json-ld':\n                    graph = this.parseJSONLD(content, nm, options, warnings, errors);\n                    break;\n                    \n                case 'rdf-xml':\n                    graph = this.parseRDFXML(content, nm, options, warnings, errors);\n                    break;\n                    \n                default:\n                    return Result.fail(`Unsupported format: ${format}`);\n            }\n            \n            // Validate graph if requested\n            if (options.validateInput) {\n                const validationErrors = this.validateGraph(graph);\n                errors.push(...validationErrors);\n            }\n            \n            // Return error if strict mode and errors found\n            if (options.strictMode && errors.length > 0) {\n                return Result.fail(`Parse errors in strict mode: ${errors.join('; ')}`);\n            }\n            \n            const result: ParseResult = {\n                graph,\n                tripleCount: graph.size(),\n                namespaces: this.extractNamespaces(nm),\n                warnings: warnings.length > 0 ? warnings : undefined,\n                errors: errors.length > 0 ? errors : undefined\n            };\n            \n            return Result.ok(result);\n        } catch (error) {\n            return Result.fail(`Parse failed: ${error.message}`);\n        }\n    }\n    \n    /**\n     * Detect RDF format from content\n     */\n    private detectFormat(content: string): RDFFormat {\n        const trimmed = content.trim();\n        \n        // Check for JSON-LD\n        if (trimmed.startsWith('{') && trimmed.endsWith('}')) {\n            try {\n                const parsed = JSON.parse(trimmed);\n                if (parsed['@context'] || parsed['@graph'] || parsed['@id']) {\n                    return 'json-ld';\n                }\n            } catch {\n                // Not valid JSON\n            }\n        }\n        \n        // Check for RDF/XML\n        if (trimmed.startsWith('<?xml') || trimmed.includes('<rdf:RDF')) {\n            return 'rdf-xml';\n        }\n        \n        // Check for Turtle prefixes\n        if (trimmed.includes('@prefix') || trimmed.includes('@base')) {\n            return 'turtle';\n        }\n        \n        // Check for N-Triples (every line ends with ' .')\n        const lines = trimmed.split('\\n').filter(line => line.trim());\n        if (lines.every(line => line.trim().endsWith(' .'))) {\n            // Further check for angle brackets (IRIs) or quotes (literals)\n            if (lines.some(line => line.includes('<') && line.includes('>'))) {\n                return 'n-triples';\n            }\n        }\n        \n        // Default to Turtle\n        return 'turtle';\n    }\n    \n    /**\n     * Parse Turtle format\n     */\n    private parseTurtle(\n        content: string, \n        nm: NamespaceManager, \n        options: ParseOptions,\n        warnings: string[],\n        errors: string[]\n    ): Graph {\n        const graph = new Graph();\n        let currentSubject: IRI | BlankNode | null = null;\n        let baseIRI = options.baseIRI;\n        \n        // First, extract and process all prefix declarations\n        // Handle both single-line and multi-line content\n        const prefixPattern = /@prefix\\s+(\\w+):\\s+<([^>]+)>\\s*\\./g;\n        let match;\n        while ((match = prefixPattern.exec(content)) !== null) {\n            nm.addBinding(match[1], match[2]);\n        }\n        \n        // Remove prefix declarations from content\n        let processedContent = content.replace(/@prefix\\s+\\w+:\\s+<[^>]+>\\s*\\./g, '');\n        \n        // Also handle @base declarations\n        const basePattern = /@base\\s+<([^>]+)>\\s*\\./g;\n        const baseMatch = basePattern.exec(processedContent);\n        if (baseMatch) {\n            baseIRI = baseMatch[1];\n            processedContent = processedContent.replace(/@base\\s+<[^>]+>\\s*\\./g, '');\n        }\n        \n        // Split the remaining content into statements\n        // Statements end with . (but not inside quotes)\n        const statements = processedContent.split(/\\.\\s*(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/).filter(s => s.trim());\n        \n        for (let i = 0; i < statements.length; i++) {\n            const statement = statements[i].trim();\n            \n            if (!statement || statement.startsWith('#')) continue;\n            \n            try {\n                // Parse the statement\n                const triples = this.parseTurtleStatement(statement, nm, currentSubject, baseIRI);\n                \n                for (const triple of triples) {\n                    if (triple.subject) {\n                        currentSubject = triple.subject;\n                    }\n                    \n                    if (triple.triple) {\n                        graph.add(triple.triple);\n                    }\n                }\n                \n            } catch (error) {\n                const errorMsg = `Statement ${i + 1}: ${error.message}`;\n                if (options.strictMode) {\n                    errors.push(errorMsg);\n                } else {\n                    warnings.push(errorMsg);\n                }\n            }\n        }\n        \n        return graph;\n    }\n    \n    /**\n     * Parse a single Turtle statement\n     */\n    private parseTurtleStatement(\n        statement: string, \n        nm: NamespaceManager, \n        currentSubject: IRI | BlankNode | null,\n        baseIRI?: string\n    ): Array<{ subject?: IRI | BlankNode, triple?: Triple }> {\n        const results: Array<{ subject?: IRI | BlankNode, triple?: Triple }> = [];\n        \n        // Clean up the statement\n        statement = statement.trim();\n        if (!statement) return results;\n        \n        // Remove trailing .\n        statement = statement.replace(/\\.\\s*$/, '');\n        \n        // Simple approach: if statement contains semicolon, it's a multi-predicate statement\n        if (statement.includes(';')) {\n            // Split by ; to handle multiple predicates for same subject\n            const parts = statement.split(';').map(s => s.trim()).filter(s => s);\n            \n            let subject: IRI | BlankNode | null = null;\n            \n            for (let i = 0; i < parts.length; i++) {\n                const tokens = this.tokenizeTurtleLine(parts[i]);\n                \n                if (i === 0 && tokens.length >= 3) {\n                    // First part has subject predicate object\n                    subject = this.parseNode(tokens[0], nm, baseIRI) as IRI | BlankNode;\n                    const predicate = this.parseNode(tokens[1], nm, baseIRI) as IRI;\n                    const object = this.parseNode(tokens[2], nm, baseIRI);\n                    \n                    const triple = new Triple(subject, predicate, object);\n                    results.push({ subject, triple });\n                } else if (subject && tokens.length >= 2) {\n                    // Subsequent parts have predicate object\n                    const predicate = this.parseNode(tokens[0], nm, baseIRI) as IRI;\n                    const object = this.parseNode(tokens[1], nm, baseIRI);\n                    \n                    const triple = new Triple(subject, predicate, object);\n                    results.push({ triple });\n                }\n            }\n        } else {\n            // Simple single triple\n            const tokens = this.tokenizeTurtleLine(statement);\n            \n            if (tokens.length >= 3) {\n                const subject = this.parseNode(tokens[0], nm, baseIRI) as IRI | BlankNode;\n                const predicate = this.parseNode(tokens[1], nm, baseIRI) as IRI;\n                const object = this.parseNode(tokens[2], nm, baseIRI);\n                \n                const triple = new Triple(subject, predicate, object);\n                results.push({ subject, triple });\n            }\n        }\n        \n        return results;\n    }\n    \n    /**\n     * Tokenize a Turtle line\n     */\n    private tokenizeTurtleLine(line: string): string[] {\n        const tokens: string[] = [];\n        let current = '';\n        let inQuotes = false;\n        let quoteChar = '';\n        let inBrackets = false;\n        let afterQuote = false;\n        \n        for (let i = 0; i < line.length; i++) {\n            const char = line[i];\n            const nextChar = i < line.length - 1 ? line[i + 1] : '';\n            \n            if (char === '\"' || char === \"'\") {\n                if (!inQuotes) {\n                    inQuotes = true;\n                    quoteChar = char;\n                    afterQuote = false;\n                } else if (char === quoteChar) {\n                    inQuotes = false;\n                    quoteChar = '';\n                    afterQuote = true;\n                }\n                current += char;\n            } else if (char === '<') {\n                inBrackets = true;\n                current += char;\n            } else if (char === '>') {\n                inBrackets = false;\n                current += char;\n                // Check if this is followed by a space or end of line\n                if (nextChar === ' ' || nextChar === '') {\n                    if (current) {\n                        tokens.push(current);\n                        current = '';\n                    }\n                }\n            } else if (char === '^' && nextChar === '^' && afterQuote) {\n                // Datatype marker - include it with the literal\n                current += '^^';\n                i++; // Skip next ^\n            } else if (char === ' ' && !inQuotes && !inBrackets) {\n                if (current) {\n                    tokens.push(current);\n                    current = '';\n                    afterQuote = false;\n                }\n            } else {\n                current += char;\n            }\n        }\n        \n        if (current) {\n            tokens.push(current);\n        }\n        \n        return tokens;\n    }\n    \n    /**\n     * Parse N-Triples format\n     */\n    private parseNTriples(content: string, warnings: string[], errors: string[]): Graph {\n        const graph = new Graph();\n        const lines = content.split('\\n');\n        \n        for (let i = 0; i < lines.length; i++) {\n            const line = lines[i].trim();\n            \n            if (!line || line.startsWith('#')) continue;\n            \n            try {\n                const triple = this.parseNTriplesLine(line);\n                if (triple) {\n                    graph.add(triple);\n                }\n            } catch (error) {\n                warnings.push(`Line ${i + 1}: ${error.message}`);\n            }\n        }\n        \n        return graph;\n    }\n    \n    /**\n     * Parse a single N-Triples line\n     */\n    private parseNTriplesLine(line: string): Triple | null {\n        // N-Triples format: <subject> <predicate> <object> .\n        const match = line.match(/^(<[^>]+>|_:[a-zA-Z0-9]+)\\s+(<[^>]+>)\\s+(<[^>]+>|_:[a-zA-Z0-9]+|\"[^\"]*\"(?:\\^\\^<[^>]+>|@[a-z-]+)?)\\s+\\.\\s*$/);\n        \n        if (!match) {\n            throw new Error(`Invalid N-Triples format: ${line}`);\n        }\n        \n        const [, subjectStr, predicateStr, objectStr] = match;\n        \n        const subject = this.parseNTriplesNode(subjectStr) as IRI | BlankNode;\n        const predicate = this.parseNTriplesNode(predicateStr) as IRI;\n        const object = this.parseNTriplesNode(objectStr);\n        \n        return new Triple(subject, predicate, object);\n    }\n    \n    /**\n     * Parse JSON-LD format\n     */\n    private parseJSONLD(\n        content: string, \n        nm: NamespaceManager, \n        options: ParseOptions,\n        warnings: string[],\n        errors: string[]\n    ): Graph {\n        const graph = new Graph();\n        \n        try {\n            const jsonld = JSON.parse(content);\n            \n            // Extract context\n            if (jsonld['@context']) {\n                this.processJSONLDContext(jsonld['@context'], nm);\n            }\n            \n            // Process graph\n            const graphData = jsonld['@graph'] || (Array.isArray(jsonld) ? jsonld : [jsonld]);\n            const subjects = Array.isArray(graphData) ? graphData : [graphData];\n            \n            for (const subject of subjects) {\n                this.processJSONLDSubject(subject, graph, nm, options.baseIRI);\n            }\n            \n        } catch (error) {\n            errors.push(`JSON-LD parse error: ${error.message}`);\n        }\n        \n        return graph;\n    }\n    \n    /**\n     * Process JSON-LD context\n     */\n    private processJSONLDContext(context: any, nm: NamespaceManager): void {\n        if (typeof context === 'string') {\n            // URL context - would need to fetch\n            return;\n        }\n        \n        if (typeof context === 'object') {\n            for (const [key, value] of Object.entries(context)) {\n                if (typeof value === 'string' && key !== '@base' && key !== '@vocab') {\n                    nm.addBinding(key, value);\n                }\n            }\n        }\n    }\n    \n    /**\n     * Process JSON-LD subject\n     */\n    private processJSONLDSubject(subject: any, graph: Graph, nm: NamespaceManager, baseIRI?: string): void {\n        if (!subject['@id']) return;\n        \n        const subjectNode = this.parseJSONLDNode(subject['@id'], nm, baseIRI) as IRI | BlankNode;\n        \n        for (const [predicate, values] of Object.entries(subject)) {\n            if (predicate === '@id' || predicate === '@context') continue;\n            \n            const predicateIRI = this.parseJSONLDPredicate(predicate, nm, baseIRI);\n            const valueArray = Array.isArray(values) ? values : [values];\n            \n            for (const value of valueArray) {\n                const objectNode = this.parseJSONLDValue(value, nm, baseIRI);\n                const triple = new Triple(subjectNode, predicateIRI, objectNode);\n                graph.add(triple);\n            }\n        }\n    }\n    \n    /**\n     * Parse RDF/XML format (basic implementation)\n     */\n    private parseRDFXML(\n        content: string, \n        nm: NamespaceManager, \n        options: ParseOptions,\n        warnings: string[],\n        errors: string[]\n    ): Graph {\n        const graph = new Graph();\n        warnings.push('RDF/XML parsing is limited - consider using a specialized XML parser');\n        \n        // This is a simplified implementation\n        // A full implementation would use a proper XML parser\n        \n        return graph;\n    }\n    \n    /**\n     * Parse a node (IRI, BlankNode, or Literal)\n     */\n    private parseNode(nodeStr: string, nm: NamespaceManager, baseIRI?: string): IRI | BlankNode | Literal {\n        nodeStr = nodeStr.trim();\n        \n        // Blank node\n        if (nodeStr.startsWith('_:')) {\n            return new BlankNode(nodeStr);\n        }\n        \n        // Full IRI\n        if (nodeStr.startsWith('<') && nodeStr.endsWith('>')) {\n            const iri = nodeStr.slice(1, -1);\n            return new IRI(baseIRI && !iri.includes('://') ? baseIRI + iri : iri);\n        }\n        \n        // Literal\n        if (nodeStr.startsWith('\"')) {\n            return this.parseLiteral(nodeStr);\n        }\n        \n        // CURIE\n        if (nodeStr.includes(':')) {\n            const expanded = nm.expandCURIE(nodeStr);\n            if (expanded.isSuccess) {\n                return expanded.getValue();\n            }\n        }\n        \n        throw new Error(`Cannot parse node: ${nodeStr}`);\n    }\n    \n    /**\n     * Parse N-Triples node\n     */\n    private parseNTriplesNode(nodeStr: string): IRI | BlankNode | Literal {\n        nodeStr = nodeStr.trim();\n        \n        // IRI\n        if (nodeStr.startsWith('<') && nodeStr.endsWith('>')) {\n            return new IRI(nodeStr.slice(1, -1));\n        }\n        \n        // Blank node\n        if (nodeStr.startsWith('_:')) {\n            return new BlankNode(nodeStr);\n        }\n        \n        // Literal\n        if (nodeStr.startsWith('\"')) {\n            return this.parseLiteral(nodeStr);\n        }\n        \n        throw new Error(`Cannot parse N-Triples node: ${nodeStr}`);\n    }\n    \n    /**\n     * Parse JSON-LD node\n     */\n    private parseJSONLDNode(nodeId: string, nm: NamespaceManager, baseIRI?: string): IRI | BlankNode {\n        if (nodeId.startsWith('_:')) {\n            return new BlankNode(nodeId);\n        }\n        \n        if (nodeId.includes(':') && !nodeId.startsWith('http')) {\n            const expanded = nm.expandCURIE(nodeId);\n            if (expanded.isSuccess) {\n                return expanded.getValue();\n            }\n        }\n        \n        return new IRI(baseIRI && !nodeId.includes('://') ? baseIRI + nodeId : nodeId);\n    }\n    \n    /**\n     * Parse JSON-LD predicate\n     */\n    private parseJSONLDPredicate(predicate: string, nm: NamespaceManager, baseIRI?: string): IRI {\n        if (predicate.includes(':') && !predicate.startsWith('http')) {\n            const expanded = nm.expandCURIE(predicate);\n            if (expanded.isSuccess) {\n                return expanded.getValue();\n            }\n        }\n        \n        return new IRI(baseIRI && !predicate.includes('://') ? baseIRI + predicate : predicate);\n    }\n    \n    /**\n     * Parse JSON-LD value\n     */\n    private parseJSONLDValue(value: any, nm: NamespaceManager, baseIRI?: string): IRI | BlankNode | Literal {\n        if (typeof value === 'string') {\n            return Literal.string(value);\n        }\n        \n        if (typeof value === 'number') {\n            return Number.isInteger(value) ? Literal.integer(value) : Literal.double(value);\n        }\n        \n        if (typeof value === 'boolean') {\n            return Literal.boolean(value);\n        }\n        \n        if (typeof value === 'object') {\n            if (value['@id']) {\n                return this.parseJSONLDNode(value['@id'], nm, baseIRI);\n            }\n            \n            if (value['@value']) {\n                let literal = new Literal(value['@value']);\n                \n                if (value['@type']) {\n                    const datatype = this.parseJSONLDPredicate(value['@type'], nm, baseIRI);\n                    literal = new Literal(value['@value'], datatype);\n                }\n                \n                if (value['@language']) {\n                    literal = new Literal(value['@value'], undefined, value['@language']);\n                }\n                \n                return literal;\n            }\n        }\n        \n        throw new Error(`Cannot parse JSON-LD value: ${JSON.stringify(value)}`);\n    }\n    \n    /**\n     * Parse a literal string\n     */\n    private parseLiteral(literalStr: string): Literal {\n        // Basic literal: \"value\"\n        let match = literalStr.match(/^\"([^\"]*)\"$/);\n        if (match) {\n            return new Literal(match[1]);\n        }\n        \n        // Literal with language: \"value\"@lang\n        match = literalStr.match(/^\"([^\"]*)\"@([a-z-]+)$/);\n        if (match) {\n            return new Literal(match[1], undefined, match[2]);\n        }\n        \n        // Literal with datatype: \"value\"^^<datatype>\n        match = literalStr.match(/^\"([^\"]*)\"(?:\\^\\^)<([^>]+)>$/);\n        if (match) {\n            return new Literal(match[1], new IRI(match[2]));\n        }\n        \n        // Alternative: Try without regex escaping\n        if (literalStr.includes('^^<')) {\n            const parts = literalStr.split('^^');\n            if (parts.length === 2) {\n                const value = parts[0].replace(/^\"|\"$/g, '');\n                const datatype = parts[1].replace(/^<|>$/g, '');\n                return new Literal(value, new IRI(datatype));\n            }\n        }\n        \n        // Literal with datatype CURIE: \"value\"^^prefix:local\n        match = literalStr.match(/^\"([^\"]*)\"(?:\\^\\^)([^\\s]+)$/);\n        if (match) {\n            // Would need namespace manager to expand CURIE\n            return new Literal(match[1]);\n        }\n        \n        throw new Error(`Cannot parse literal: ${literalStr}`);\n    }\n    \n    /**\n     * Validate parsed graph\n     */\n    private validateGraph(graph: Graph): string[] {\n        const errors: string[] = [];\n        \n        for (const triple of graph.toArray()) {\n            // Validate subject (must be IRI or BlankNode)\n            const subject = triple.getSubject();\n            if (!(subject instanceof IRI) && !(subject instanceof BlankNode)) {\n                errors.push(`Invalid subject type: ${typeof subject}`);\n            }\n            \n            // Validate predicate (must be IRI)\n            const predicate = triple.getPredicate();\n            if (!(predicate instanceof IRI)) {\n                errors.push(`Invalid predicate type: ${typeof predicate}`);\n            }\n            \n            // Object can be any node type - no validation needed\n        }\n        \n        return errors;\n    }\n    \n    /**\n     * Extract namespaces from namespace manager\n     */\n    private extractNamespaces(nm: NamespaceManager): Record<string, string> {\n        const namespaces: Record<string, string> = {};\n        \n        for (const binding of nm.getAllBindings()) {\n            namespaces[binding.prefix] = binding.namespace.toString();\n        }\n        \n        return namespaces;\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "55ef491bb9733693bd92eff28d2f3501537f027a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ee2k7oqmr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ee2k7oqmr();
cov_ee2k7oqmr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ee2k7oqmr().s[1]++;
exports.RDFParser = void 0;
const Graph_1 =
/* istanbul ignore next */
(cov_ee2k7oqmr().s[2]++, require("../../domain/semantic/core/Graph"));
const Triple_1 =
/* istanbul ignore next */
(cov_ee2k7oqmr().s[3]++, require("../../domain/semantic/core/Triple"));
const Result_1 =
/* istanbul ignore next */
(cov_ee2k7oqmr().s[4]++, require("../../domain/core/Result"));
const NamespaceManager_1 =
/* istanbul ignore next */
(cov_ee2k7oqmr().s[5]++, require("./NamespaceManager"));
class RDFParser {
  constructor(namespaceManager) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[0]++;
    cov_ee2k7oqmr().s[6]++;
    this.namespaceManager =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[0][0]++, namespaceManager) ||
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[0][1]++, new NamespaceManager_1.NamespaceManager());
  }
  /**
   * Parse RDF content into a Graph
   */
  parse(content, options =
  /* istanbul ignore next */
  (cov_ee2k7oqmr().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[1]++;
    cov_ee2k7oqmr().s[7]++;
    try {
      const nm =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[8]++,
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[2][0]++, options.namespaceManager) ||
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[2][1]++, this.namespaceManager.clone()));
      const format =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[9]++,
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[3][0]++, options.format) ||
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[3][1]++, this.detectFormat(content)));
      const warnings =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[10]++, []);
      const errors =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[11]++, []);
      let graph;
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[12]++;
      switch (format) {
        case 'turtle':
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[4][0]++;
          cov_ee2k7oqmr().s[13]++;
          graph = this.parseTurtle(content, nm, options, warnings, errors);
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[14]++;
          break;
        case 'n-triples':
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[4][1]++;
          cov_ee2k7oqmr().s[15]++;
          graph = this.parseNTriples(content, warnings, errors);
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[16]++;
          break;
        case 'json-ld':
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[4][2]++;
          cov_ee2k7oqmr().s[17]++;
          graph = this.parseJSONLD(content, nm, options, warnings, errors);
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[18]++;
          break;
        case 'rdf-xml':
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[4][3]++;
          cov_ee2k7oqmr().s[19]++;
          graph = this.parseRDFXML(content, nm, options, warnings, errors);
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[20]++;
          break;
        default:
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[4][4]++;
          cov_ee2k7oqmr().s[21]++;
          return Result_1.Result.fail(`Unsupported format: ${format}`);
      }
      // Validate graph if requested
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[22]++;
      if (options.validateInput) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[5][0]++;
        const validationErrors =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[23]++, this.validateGraph(graph));
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[24]++;
        errors.push(...validationErrors);
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[5][1]++;
      }
      // Return error if strict mode and errors found
      cov_ee2k7oqmr().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[7][0]++, options.strictMode) &&
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[7][1]++, errors.length > 0)) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[6][0]++;
        cov_ee2k7oqmr().s[26]++;
        return Result_1.Result.fail(`Parse errors in strict mode: ${errors.join('; ')}`);
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[6][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[27]++, {
        graph,
        tripleCount: graph.size(),
        namespaces: this.extractNamespaces(nm),
        warnings: warnings.length > 0 ?
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[8][0]++, warnings) :
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[8][1]++, undefined),
        errors: errors.length > 0 ?
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[9][0]++, errors) :
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[9][1]++, undefined)
      });
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[28]++;
      return Result_1.Result.ok(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[29]++;
      return Result_1.Result.fail(`Parse failed: ${error.message}`);
    }
  }
  /**
   * Detect RDF format from content
   */
  detectFormat(content) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[2]++;
    const trimmed =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[30]++, content.trim());
    // Check for JSON-LD
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[11][0]++, trimmed.startsWith('{')) &&
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[11][1]++, trimmed.endsWith('}'))) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[10][0]++;
      cov_ee2k7oqmr().s[32]++;
      try {
        const parsed =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[33]++, JSON.parse(trimmed));
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[34]++;
        if (
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[13][0]++, parsed['@context']) ||
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[13][1]++, parsed['@graph']) ||
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[13][2]++, parsed['@id'])) {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[12][0]++;
          cov_ee2k7oqmr().s[35]++;
          return 'json-ld';
        } else
        /* istanbul ignore next */
        {
          cov_ee2k7oqmr().b[12][1]++;
        }
      } catch (_a) {
        // Not valid JSON
      }
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[10][1]++;
    }
    // Check for RDF/XML
    cov_ee2k7oqmr().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[15][0]++, trimmed.startsWith('<?xml')) ||
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[15][1]++, trimmed.includes('<rdf:RDF'))) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[14][0]++;
      cov_ee2k7oqmr().s[37]++;
      return 'rdf-xml';
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[14][1]++;
    }
    // Check for Turtle prefixes
    cov_ee2k7oqmr().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[17][0]++, trimmed.includes('@prefix')) ||
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[17][1]++, trimmed.includes('@base'))) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[16][0]++;
      cov_ee2k7oqmr().s[39]++;
      return 'turtle';
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[16][1]++;
    }
    // Check for N-Triples (every line ends with ' .')
    const lines =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[40]++, trimmed.split('\n').filter(line => {
      /* istanbul ignore next */
      cov_ee2k7oqmr().f[3]++;
      cov_ee2k7oqmr().s[41]++;
      return line.trim();
    }));
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[42]++;
    if (lines.every(line => {
      /* istanbul ignore next */
      cov_ee2k7oqmr().f[4]++;
      cov_ee2k7oqmr().s[43]++;
      return line.trim().endsWith(' .');
    })) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[18][0]++;
      cov_ee2k7oqmr().s[44]++;
      // Further check for angle brackets (IRIs) or quotes (literals)
      if (lines.some(line => {
        /* istanbul ignore next */
        cov_ee2k7oqmr().f[5]++;
        cov_ee2k7oqmr().s[45]++;
        return /* istanbul ignore next */(cov_ee2k7oqmr().b[20][0]++, line.includes('<')) &&
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[20][1]++, line.includes('>'));
      })) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[19][0]++;
        cov_ee2k7oqmr().s[46]++;
        return 'n-triples';
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[19][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[18][1]++;
    }
    // Default to Turtle
    cov_ee2k7oqmr().s[47]++;
    return 'turtle';
  }
  /**
   * Parse Turtle format
   */
  parseTurtle(content, nm, options, warnings, errors) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[6]++;
    const graph =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[48]++, new Graph_1.Graph());
    let currentSubject =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[49]++, null);
    let baseIRI =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[50]++, options.baseIRI);
    // First, extract and process all prefix declarations
    // Handle both single-line and multi-line content
    const prefixPattern =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[51]++, /@prefix\s+(\w+):\s+<([^>]+)>\s*\./g);
    let match;
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[52]++;
    while ((match = prefixPattern.exec(content)) !== null) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[53]++;
      nm.addBinding(match[1], match[2]);
    }
    // Remove prefix declarations from content
    let processedContent =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[54]++, content.replace(/@prefix\s+\w+:\s+<[^>]+>\s*\./g, ''));
    // Also handle @base declarations
    const basePattern =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[55]++, /@base\s+<([^>]+)>\s*\./g);
    const baseMatch =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[56]++, basePattern.exec(processedContent));
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[57]++;
    if (baseMatch) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[21][0]++;
      cov_ee2k7oqmr().s[58]++;
      baseIRI = baseMatch[1];
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[59]++;
      processedContent = processedContent.replace(/@base\s+<[^>]+>\s*\./g, '');
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[21][1]++;
    }
    // Split the remaining content into statements
    // Statements end with . (but not inside quotes)
    const statements =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[60]++, processedContent.split(/\.\s*(?=(?:[^"]*"[^"]*")*[^"]*$)/).filter(s => {
      /* istanbul ignore next */
      cov_ee2k7oqmr().f[7]++;
      cov_ee2k7oqmr().s[61]++;
      return s.trim();
    }));
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[62]++;
    for (let i =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[63]++, 0); i < statements.length; i++) {
      const statement =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[64]++, statements[i].trim());
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[65]++;
      if (
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[23][0]++, !statement) ||
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[23][1]++, statement.startsWith('#'))) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[22][0]++;
        cov_ee2k7oqmr().s[66]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[22][1]++;
      }
      cov_ee2k7oqmr().s[67]++;
      try {
        // Parse the statement
        const triples =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[68]++, this.parseTurtleStatement(statement, nm, currentSubject, baseIRI));
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[69]++;
        for (const triple of triples) {
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[70]++;
          if (triple.subject) {
            /* istanbul ignore next */
            cov_ee2k7oqmr().b[24][0]++;
            cov_ee2k7oqmr().s[71]++;
            currentSubject = triple.subject;
          } else
          /* istanbul ignore next */
          {
            cov_ee2k7oqmr().b[24][1]++;
          }
          cov_ee2k7oqmr().s[72]++;
          if (triple.triple) {
            /* istanbul ignore next */
            cov_ee2k7oqmr().b[25][0]++;
            cov_ee2k7oqmr().s[73]++;
            graph.add(triple.triple);
          } else
          /* istanbul ignore next */
          {
            cov_ee2k7oqmr().b[25][1]++;
          }
        }
      } catch (error) {
        const errorMsg =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[74]++, `Statement ${i + 1}: ${error.message}`);
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[75]++;
        if (options.strictMode) {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[26][0]++;
          cov_ee2k7oqmr().s[76]++;
          errors.push(errorMsg);
        } else {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[26][1]++;
          cov_ee2k7oqmr().s[77]++;
          warnings.push(errorMsg);
        }
      }
    }
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[78]++;
    return graph;
  }
  /**
   * Parse a single Turtle statement
   */
  parseTurtleStatement(statement, nm, currentSubject, baseIRI) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[8]++;
    const results =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[79]++, []);
    // Clean up the statement
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[80]++;
    statement = statement.trim();
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[81]++;
    if (!statement) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[27][0]++;
      cov_ee2k7oqmr().s[82]++;
      return results;
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[27][1]++;
    }
    // Remove trailing .
    cov_ee2k7oqmr().s[83]++;
    statement = statement.replace(/\.\s*$/, '');
    // Simple approach: if statement contains semicolon, it's a multi-predicate statement
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[84]++;
    if (statement.includes(';')) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[28][0]++;
      // Split by ; to handle multiple predicates for same subject
      const parts =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[85]++, statement.split(';').map(s => {
        /* istanbul ignore next */
        cov_ee2k7oqmr().f[9]++;
        cov_ee2k7oqmr().s[86]++;
        return s.trim();
      }).filter(s => {
        /* istanbul ignore next */
        cov_ee2k7oqmr().f[10]++;
        cov_ee2k7oqmr().s[87]++;
        return s;
      }));
      let subject =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[88]++, null);
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[89]++;
      for (let i =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[90]++, 0); i < parts.length; i++) {
        const tokens =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[91]++, this.tokenizeTurtleLine(parts[i]));
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[92]++;
        if (
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[30][0]++, i === 0) &&
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[30][1]++, tokens.length >= 3)) {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[29][0]++;
          cov_ee2k7oqmr().s[93]++;
          // First part has subject predicate object
          subject = this.parseNode(tokens[0], nm, baseIRI);
          const predicate =
          /* istanbul ignore next */
          (cov_ee2k7oqmr().s[94]++, this.parseNode(tokens[1], nm, baseIRI));
          const object =
          /* istanbul ignore next */
          (cov_ee2k7oqmr().s[95]++, this.parseNode(tokens[2], nm, baseIRI));
          const triple =
          /* istanbul ignore next */
          (cov_ee2k7oqmr().s[96]++, new Triple_1.Triple(subject, predicate, object));
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[97]++;
          results.push({
            subject,
            triple
          });
        } else {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[29][1]++;
          cov_ee2k7oqmr().s[98]++;
          if (
          /* istanbul ignore next */
          (cov_ee2k7oqmr().b[32][0]++, subject) &&
          /* istanbul ignore next */
          (cov_ee2k7oqmr().b[32][1]++, tokens.length >= 2)) {
            /* istanbul ignore next */
            cov_ee2k7oqmr().b[31][0]++;
            // Subsequent parts have predicate object
            const predicate =
            /* istanbul ignore next */
            (cov_ee2k7oqmr().s[99]++, this.parseNode(tokens[0], nm, baseIRI));
            const object =
            /* istanbul ignore next */
            (cov_ee2k7oqmr().s[100]++, this.parseNode(tokens[1], nm, baseIRI));
            const triple =
            /* istanbul ignore next */
            (cov_ee2k7oqmr().s[101]++, new Triple_1.Triple(subject, predicate, object));
            /* istanbul ignore next */
            cov_ee2k7oqmr().s[102]++;
            results.push({
              triple
            });
          } else
          /* istanbul ignore next */
          {
            cov_ee2k7oqmr().b[31][1]++;
          }
        }
      }
    } else {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[28][1]++;
      // Simple single triple
      const tokens =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[103]++, this.tokenizeTurtleLine(statement));
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[104]++;
      if (tokens.length >= 3) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[33][0]++;
        const subject =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[105]++, this.parseNode(tokens[0], nm, baseIRI));
        const predicate =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[106]++, this.parseNode(tokens[1], nm, baseIRI));
        const object =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[107]++, this.parseNode(tokens[2], nm, baseIRI));
        const triple =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[108]++, new Triple_1.Triple(subject, predicate, object));
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[109]++;
        results.push({
          subject,
          triple
        });
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[33][1]++;
      }
    }
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[110]++;
    return results;
  }
  /**
   * Tokenize a Turtle line
   */
  tokenizeTurtleLine(line) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[11]++;
    const tokens =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[111]++, []);
    let current =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[112]++, '');
    let inQuotes =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[113]++, false);
    let quoteChar =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[114]++, '');
    let inBrackets =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[115]++, false);
    let afterQuote =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[116]++, false);
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[117]++;
    for (let i =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[118]++, 0); i < line.length; i++) {
      const char =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[119]++, line[i]);
      const nextChar =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[120]++, i < line.length - 1 ?
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[34][0]++, line[i + 1]) :
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[34][1]++, ''));
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[121]++;
      if (
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[36][0]++, char === '"') ||
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[36][1]++, char === "'")) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[35][0]++;
        cov_ee2k7oqmr().s[122]++;
        if (!inQuotes) {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[37][0]++;
          cov_ee2k7oqmr().s[123]++;
          inQuotes = true;
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[124]++;
          quoteChar = char;
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[125]++;
          afterQuote = false;
        } else {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[37][1]++;
          cov_ee2k7oqmr().s[126]++;
          if (char === quoteChar) {
            /* istanbul ignore next */
            cov_ee2k7oqmr().b[38][0]++;
            cov_ee2k7oqmr().s[127]++;
            inQuotes = false;
            /* istanbul ignore next */
            cov_ee2k7oqmr().s[128]++;
            quoteChar = '';
            /* istanbul ignore next */
            cov_ee2k7oqmr().s[129]++;
            afterQuote = true;
          } else
          /* istanbul ignore next */
          {
            cov_ee2k7oqmr().b[38][1]++;
          }
        }
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[130]++;
        current += char;
      } else {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[35][1]++;
        cov_ee2k7oqmr().s[131]++;
        if (char === '<') {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[39][0]++;
          cov_ee2k7oqmr().s[132]++;
          inBrackets = true;
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[133]++;
          current += char;
        } else {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[39][1]++;
          cov_ee2k7oqmr().s[134]++;
          if (char === '>') {
            /* istanbul ignore next */
            cov_ee2k7oqmr().b[40][0]++;
            cov_ee2k7oqmr().s[135]++;
            inBrackets = false;
            /* istanbul ignore next */
            cov_ee2k7oqmr().s[136]++;
            current += char;
            // Check if this is followed by a space or end of line
            /* istanbul ignore next */
            cov_ee2k7oqmr().s[137]++;
            if (
            /* istanbul ignore next */
            (cov_ee2k7oqmr().b[42][0]++, nextChar === ' ') ||
            /* istanbul ignore next */
            (cov_ee2k7oqmr().b[42][1]++, nextChar === '')) {
              /* istanbul ignore next */
              cov_ee2k7oqmr().b[41][0]++;
              cov_ee2k7oqmr().s[138]++;
              if (current) {
                /* istanbul ignore next */
                cov_ee2k7oqmr().b[43][0]++;
                cov_ee2k7oqmr().s[139]++;
                tokens.push(current);
                /* istanbul ignore next */
                cov_ee2k7oqmr().s[140]++;
                current = '';
              } else
              /* istanbul ignore next */
              {
                cov_ee2k7oqmr().b[43][1]++;
              }
            } else
            /* istanbul ignore next */
            {
              cov_ee2k7oqmr().b[41][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_ee2k7oqmr().b[40][1]++;
            cov_ee2k7oqmr().s[141]++;
            if (
            /* istanbul ignore next */
            (cov_ee2k7oqmr().b[45][0]++, char === '^') &&
            /* istanbul ignore next */
            (cov_ee2k7oqmr().b[45][1]++, nextChar === '^') &&
            /* istanbul ignore next */
            (cov_ee2k7oqmr().b[45][2]++, afterQuote)) {
              /* istanbul ignore next */
              cov_ee2k7oqmr().b[44][0]++;
              cov_ee2k7oqmr().s[142]++;
              // Datatype marker - include it with the literal
              current += '^^';
              /* istanbul ignore next */
              cov_ee2k7oqmr().s[143]++;
              i++; // Skip next ^
            } else {
              /* istanbul ignore next */
              cov_ee2k7oqmr().b[44][1]++;
              cov_ee2k7oqmr().s[144]++;
              if (
              /* istanbul ignore next */
              (cov_ee2k7oqmr().b[47][0]++, char === ' ') &&
              /* istanbul ignore next */
              (cov_ee2k7oqmr().b[47][1]++, !inQuotes) &&
              /* istanbul ignore next */
              (cov_ee2k7oqmr().b[47][2]++, !inBrackets)) {
                /* istanbul ignore next */
                cov_ee2k7oqmr().b[46][0]++;
                cov_ee2k7oqmr().s[145]++;
                if (current) {
                  /* istanbul ignore next */
                  cov_ee2k7oqmr().b[48][0]++;
                  cov_ee2k7oqmr().s[146]++;
                  tokens.push(current);
                  /* istanbul ignore next */
                  cov_ee2k7oqmr().s[147]++;
                  current = '';
                  /* istanbul ignore next */
                  cov_ee2k7oqmr().s[148]++;
                  afterQuote = false;
                } else
                /* istanbul ignore next */
                {
                  cov_ee2k7oqmr().b[48][1]++;
                }
              } else {
                /* istanbul ignore next */
                cov_ee2k7oqmr().b[46][1]++;
                cov_ee2k7oqmr().s[149]++;
                current += char;
              }
            }
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[150]++;
    if (current) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[49][0]++;
      cov_ee2k7oqmr().s[151]++;
      tokens.push(current);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[49][1]++;
    }
    cov_ee2k7oqmr().s[152]++;
    return tokens;
  }
  /**
   * Parse N-Triples format
   */
  parseNTriples(content, warnings, errors) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[12]++;
    const graph =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[153]++, new Graph_1.Graph());
    const lines =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[154]++, content.split('\n'));
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[155]++;
    for (let i =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[156]++, 0); i < lines.length; i++) {
      const line =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[157]++, lines[i].trim());
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[158]++;
      if (
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[51][0]++, !line) ||
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[51][1]++, line.startsWith('#'))) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[50][0]++;
        cov_ee2k7oqmr().s[159]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[50][1]++;
      }
      cov_ee2k7oqmr().s[160]++;
      try {
        const triple =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[161]++, this.parseNTriplesLine(line));
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[162]++;
        if (triple) {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[52][0]++;
          cov_ee2k7oqmr().s[163]++;
          graph.add(triple);
        } else
        /* istanbul ignore next */
        {
          cov_ee2k7oqmr().b[52][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[164]++;
        warnings.push(`Line ${i + 1}: ${error.message}`);
      }
    }
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[165]++;
    return graph;
  }
  /**
   * Parse a single N-Triples line
   */
  parseNTriplesLine(line) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[13]++;
    // N-Triples format: <subject> <predicate> <object> .
    const match =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[166]++, line.match(/^(<[^>]+>|_:[a-zA-Z0-9]+)\s+(<[^>]+>)\s+(<[^>]+>|_:[a-zA-Z0-9]+|"[^"]*"(?:\^\^<[^>]+>|@[a-z-]+)?)\s+\.\s*$/));
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[167]++;
    if (!match) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[53][0]++;
      cov_ee2k7oqmr().s[168]++;
      throw new Error(`Invalid N-Triples format: ${line}`);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[53][1]++;
    }
    const [, subjectStr, predicateStr, objectStr] =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[169]++, match);
    const subject =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[170]++, this.parseNTriplesNode(subjectStr));
    const predicate =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[171]++, this.parseNTriplesNode(predicateStr));
    const object =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[172]++, this.parseNTriplesNode(objectStr));
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[173]++;
    return new Triple_1.Triple(subject, predicate, object);
  }
  /**
   * Parse JSON-LD format
   */
  parseJSONLD(content, nm, options, warnings, errors) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[14]++;
    const graph =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[174]++, new Graph_1.Graph());
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[175]++;
    try {
      const jsonld =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[176]++, JSON.parse(content));
      // Extract context
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[177]++;
      if (jsonld['@context']) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[54][0]++;
        cov_ee2k7oqmr().s[178]++;
        this.processJSONLDContext(jsonld['@context'], nm);
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[54][1]++;
      }
      // Process graph
      const graphData =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[179]++,
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[55][0]++, jsonld['@graph']) ||
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[55][1]++, Array.isArray(jsonld) ?
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[56][0]++, jsonld) :
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[56][1]++, [jsonld])));
      const subjects =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[180]++, Array.isArray(graphData) ?
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[57][0]++, graphData) :
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[57][1]++, [graphData]));
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[181]++;
      for (const subject of subjects) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[182]++;
        this.processJSONLDSubject(subject, graph, nm, options.baseIRI);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[183]++;
      errors.push(`JSON-LD parse error: ${error.message}`);
    }
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[184]++;
    return graph;
  }
  /**
   * Process JSON-LD context
   */
  processJSONLDContext(context, nm) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[15]++;
    cov_ee2k7oqmr().s[185]++;
    if (typeof context === 'string') {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[58][0]++;
      cov_ee2k7oqmr().s[186]++;
      // URL context - would need to fetch
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[58][1]++;
    }
    cov_ee2k7oqmr().s[187]++;
    if (typeof context === 'object') {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[59][0]++;
      cov_ee2k7oqmr().s[188]++;
      for (const [key, value] of Object.entries(context)) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[189]++;
        if (
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[61][0]++, typeof value === 'string') &&
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[61][1]++, key !== '@base') &&
        /* istanbul ignore next */
        (cov_ee2k7oqmr().b[61][2]++, key !== '@vocab')) {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[60][0]++;
          cov_ee2k7oqmr().s[190]++;
          nm.addBinding(key, value);
        } else
        /* istanbul ignore next */
        {
          cov_ee2k7oqmr().b[60][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[59][1]++;
    }
  }
  /**
   * Process JSON-LD subject
   */
  processJSONLDSubject(subject, graph, nm, baseIRI) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[16]++;
    cov_ee2k7oqmr().s[191]++;
    if (!subject['@id']) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[62][0]++;
      cov_ee2k7oqmr().s[192]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[62][1]++;
    }
    const subjectNode =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[193]++, this.parseJSONLDNode(subject['@id'], nm, baseIRI));
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[194]++;
    for (const [predicate, values] of Object.entries(subject)) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[195]++;
      if (
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[64][0]++, predicate === '@id') ||
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[64][1]++, predicate === '@context')) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[63][0]++;
        cov_ee2k7oqmr().s[196]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[63][1]++;
      }
      const predicateIRI =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[197]++, this.parseJSONLDPredicate(predicate, nm, baseIRI));
      const valueArray =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[198]++, Array.isArray(values) ?
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[65][0]++, values) :
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[65][1]++, [values]));
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[199]++;
      for (const value of valueArray) {
        const objectNode =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[200]++, this.parseJSONLDValue(value, nm, baseIRI));
        const triple =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[201]++, new Triple_1.Triple(subjectNode, predicateIRI, objectNode));
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[202]++;
        graph.add(triple);
      }
    }
  }
  /**
   * Parse RDF/XML format (basic implementation)
   */
  parseRDFXML(content, nm, options, warnings, errors) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[17]++;
    const graph =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[203]++, new Graph_1.Graph());
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[204]++;
    warnings.push('RDF/XML parsing is limited - consider using a specialized XML parser');
    // This is a simplified implementation
    // A full implementation would use a proper XML parser
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[205]++;
    return graph;
  }
  /**
   * Parse a node (IRI, BlankNode, or Literal)
   */
  parseNode(nodeStr, nm, baseIRI) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[18]++;
    cov_ee2k7oqmr().s[206]++;
    nodeStr = nodeStr.trim();
    // Blank node
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[207]++;
    if (nodeStr.startsWith('_:')) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[66][0]++;
      cov_ee2k7oqmr().s[208]++;
      return new Triple_1.BlankNode(nodeStr);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[66][1]++;
    }
    // Full IRI
    cov_ee2k7oqmr().s[209]++;
    if (
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[68][0]++, nodeStr.startsWith('<')) &&
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[68][1]++, nodeStr.endsWith('>'))) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[67][0]++;
      const iri =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[210]++, nodeStr.slice(1, -1));
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[211]++;
      return new Triple_1.IRI(
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[70][0]++, baseIRI) &&
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[70][1]++, !iri.includes('://')) ?
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[69][0]++, baseIRI + iri) :
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[69][1]++, iri));
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[67][1]++;
    }
    // Literal
    cov_ee2k7oqmr().s[212]++;
    if (nodeStr.startsWith('"')) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[71][0]++;
      cov_ee2k7oqmr().s[213]++;
      return this.parseLiteral(nodeStr);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[71][1]++;
    }
    // CURIE
    cov_ee2k7oqmr().s[214]++;
    if (nodeStr.includes(':')) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[72][0]++;
      const expanded =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[215]++, nm.expandCURIE(nodeStr));
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[216]++;
      if (expanded.isSuccess) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[73][0]++;
        cov_ee2k7oqmr().s[217]++;
        return expanded.getValue();
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[73][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[72][1]++;
    }
    cov_ee2k7oqmr().s[218]++;
    throw new Error(`Cannot parse node: ${nodeStr}`);
  }
  /**
   * Parse N-Triples node
   */
  parseNTriplesNode(nodeStr) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[19]++;
    cov_ee2k7oqmr().s[219]++;
    nodeStr = nodeStr.trim();
    // IRI
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[220]++;
    if (
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[75][0]++, nodeStr.startsWith('<')) &&
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[75][1]++, nodeStr.endsWith('>'))) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[74][0]++;
      cov_ee2k7oqmr().s[221]++;
      return new Triple_1.IRI(nodeStr.slice(1, -1));
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[74][1]++;
    }
    // Blank node
    cov_ee2k7oqmr().s[222]++;
    if (nodeStr.startsWith('_:')) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[76][0]++;
      cov_ee2k7oqmr().s[223]++;
      return new Triple_1.BlankNode(nodeStr);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[76][1]++;
    }
    // Literal
    cov_ee2k7oqmr().s[224]++;
    if (nodeStr.startsWith('"')) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[77][0]++;
      cov_ee2k7oqmr().s[225]++;
      return this.parseLiteral(nodeStr);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[77][1]++;
    }
    cov_ee2k7oqmr().s[226]++;
    throw new Error(`Cannot parse N-Triples node: ${nodeStr}`);
  }
  /**
   * Parse JSON-LD node
   */
  parseJSONLDNode(nodeId, nm, baseIRI) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[20]++;
    cov_ee2k7oqmr().s[227]++;
    if (nodeId.startsWith('_:')) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[78][0]++;
      cov_ee2k7oqmr().s[228]++;
      return new Triple_1.BlankNode(nodeId);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[78][1]++;
    }
    cov_ee2k7oqmr().s[229]++;
    if (
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[80][0]++, nodeId.includes(':')) &&
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[80][1]++, !nodeId.startsWith('http'))) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[79][0]++;
      const expanded =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[230]++, nm.expandCURIE(nodeId));
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[231]++;
      if (expanded.isSuccess) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[81][0]++;
        cov_ee2k7oqmr().s[232]++;
        return expanded.getValue();
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[81][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[79][1]++;
    }
    cov_ee2k7oqmr().s[233]++;
    return new Triple_1.IRI(
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[83][0]++, baseIRI) &&
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[83][1]++, !nodeId.includes('://')) ?
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[82][0]++, baseIRI + nodeId) :
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[82][1]++, nodeId));
  }
  /**
   * Parse JSON-LD predicate
   */
  parseJSONLDPredicate(predicate, nm, baseIRI) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[21]++;
    cov_ee2k7oqmr().s[234]++;
    if (
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[85][0]++, predicate.includes(':')) &&
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[85][1]++, !predicate.startsWith('http'))) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[84][0]++;
      const expanded =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[235]++, nm.expandCURIE(predicate));
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[236]++;
      if (expanded.isSuccess) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[86][0]++;
        cov_ee2k7oqmr().s[237]++;
        return expanded.getValue();
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[86][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[84][1]++;
    }
    cov_ee2k7oqmr().s[238]++;
    return new Triple_1.IRI(
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[88][0]++, baseIRI) &&
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[88][1]++, !predicate.includes('://')) ?
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[87][0]++, baseIRI + predicate) :
    /* istanbul ignore next */
    (cov_ee2k7oqmr().b[87][1]++, predicate));
  }
  /**
   * Parse JSON-LD value
   */
  parseJSONLDValue(value, nm, baseIRI) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[22]++;
    cov_ee2k7oqmr().s[239]++;
    if (typeof value === 'string') {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[89][0]++;
      cov_ee2k7oqmr().s[240]++;
      return Triple_1.Literal.string(value);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[89][1]++;
    }
    cov_ee2k7oqmr().s[241]++;
    if (typeof value === 'number') {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[90][0]++;
      cov_ee2k7oqmr().s[242]++;
      return Number.isInteger(value) ?
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[91][0]++, Triple_1.Literal.integer(value)) :
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[91][1]++, Triple_1.Literal.double(value));
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[90][1]++;
    }
    cov_ee2k7oqmr().s[243]++;
    if (typeof value === 'boolean') {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[92][0]++;
      cov_ee2k7oqmr().s[244]++;
      return Triple_1.Literal.boolean(value);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[92][1]++;
    }
    cov_ee2k7oqmr().s[245]++;
    if (typeof value === 'object') {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[93][0]++;
      cov_ee2k7oqmr().s[246]++;
      if (value['@id']) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[94][0]++;
        cov_ee2k7oqmr().s[247]++;
        return this.parseJSONLDNode(value['@id'], nm, baseIRI);
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[94][1]++;
      }
      cov_ee2k7oqmr().s[248]++;
      if (value['@value']) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[95][0]++;
        let literal =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[249]++, new Triple_1.Literal(value['@value']));
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[250]++;
        if (value['@type']) {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[96][0]++;
          const datatype =
          /* istanbul ignore next */
          (cov_ee2k7oqmr().s[251]++, this.parseJSONLDPredicate(value['@type'], nm, baseIRI));
          /* istanbul ignore next */
          cov_ee2k7oqmr().s[252]++;
          literal = new Triple_1.Literal(value['@value'], datatype);
        } else
        /* istanbul ignore next */
        {
          cov_ee2k7oqmr().b[96][1]++;
        }
        cov_ee2k7oqmr().s[253]++;
        if (value['@language']) {
          /* istanbul ignore next */
          cov_ee2k7oqmr().b[97][0]++;
          cov_ee2k7oqmr().s[254]++;
          literal = new Triple_1.Literal(value['@value'], undefined, value['@language']);
        } else
        /* istanbul ignore next */
        {
          cov_ee2k7oqmr().b[97][1]++;
        }
        cov_ee2k7oqmr().s[255]++;
        return literal;
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[95][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[93][1]++;
    }
    cov_ee2k7oqmr().s[256]++;
    throw new Error(`Cannot parse JSON-LD value: ${JSON.stringify(value)}`);
  }
  /**
   * Parse a literal string
   */
  parseLiteral(literalStr) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[23]++;
    // Basic literal: "value"
    let match =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[257]++, literalStr.match(/^"([^"]*)"$/));
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[258]++;
    if (match) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[98][0]++;
      cov_ee2k7oqmr().s[259]++;
      return new Triple_1.Literal(match[1]);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[98][1]++;
    }
    // Literal with language: "value"@lang
    cov_ee2k7oqmr().s[260]++;
    match = literalStr.match(/^"([^"]*)"@([a-z-]+)$/);
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[261]++;
    if (match) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[99][0]++;
      cov_ee2k7oqmr().s[262]++;
      return new Triple_1.Literal(match[1], undefined, match[2]);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[99][1]++;
    }
    // Literal with datatype: "value"^^<datatype>
    cov_ee2k7oqmr().s[263]++;
    match = literalStr.match(/^"([^"]*)"(?:\^\^)<([^>]+)>$/);
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[264]++;
    if (match) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[100][0]++;
      cov_ee2k7oqmr().s[265]++;
      return new Triple_1.Literal(match[1], new Triple_1.IRI(match[2]));
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[100][1]++;
    }
    // Alternative: Try without regex escaping
    cov_ee2k7oqmr().s[266]++;
    if (literalStr.includes('^^<')) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[101][0]++;
      const parts =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[267]++, literalStr.split('^^'));
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[268]++;
      if (parts.length === 2) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[102][0]++;
        const value =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[269]++, parts[0].replace(/^"|"$/g, ''));
        const datatype =
        /* istanbul ignore next */
        (cov_ee2k7oqmr().s[270]++, parts[1].replace(/^<|>$/g, ''));
        /* istanbul ignore next */
        cov_ee2k7oqmr().s[271]++;
        return new Triple_1.Literal(value, new Triple_1.IRI(datatype));
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[102][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[101][1]++;
    }
    // Literal with datatype CURIE: "value"^^prefix:local
    cov_ee2k7oqmr().s[272]++;
    match = literalStr.match(/^"([^"]*)"(?:\^\^)([^\s]+)$/);
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[273]++;
    if (match) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().b[103][0]++;
      cov_ee2k7oqmr().s[274]++;
      // Would need namespace manager to expand CURIE
      return new Triple_1.Literal(match[1]);
    } else
    /* istanbul ignore next */
    {
      cov_ee2k7oqmr().b[103][1]++;
    }
    cov_ee2k7oqmr().s[275]++;
    throw new Error(`Cannot parse literal: ${literalStr}`);
  }
  /**
   * Validate parsed graph
   */
  validateGraph(graph) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[24]++;
    const errors =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[276]++, []);
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[277]++;
    for (const triple of graph.toArray()) {
      // Validate subject (must be IRI or BlankNode)
      const subject =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[278]++, triple.getSubject());
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[279]++;
      if (
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[105][0]++, !(subject instanceof Triple_1.IRI)) &&
      /* istanbul ignore next */
      (cov_ee2k7oqmr().b[105][1]++, !(subject instanceof Triple_1.BlankNode))) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[104][0]++;
        cov_ee2k7oqmr().s[280]++;
        errors.push(`Invalid subject type: ${typeof subject}`);
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[104][1]++;
      }
      // Validate predicate (must be IRI)
      const predicate =
      /* istanbul ignore next */
      (cov_ee2k7oqmr().s[281]++, triple.getPredicate());
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[282]++;
      if (!(predicate instanceof Triple_1.IRI)) {
        /* istanbul ignore next */
        cov_ee2k7oqmr().b[106][0]++;
        cov_ee2k7oqmr().s[283]++;
        errors.push(`Invalid predicate type: ${typeof predicate}`);
      } else
      /* istanbul ignore next */
      {
        cov_ee2k7oqmr().b[106][1]++;
      }
      // Object can be any node type - no validation needed
    }
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[284]++;
    return errors;
  }
  /**
   * Extract namespaces from namespace manager
   */
  extractNamespaces(nm) {
    /* istanbul ignore next */
    cov_ee2k7oqmr().f[25]++;
    const namespaces =
    /* istanbul ignore next */
    (cov_ee2k7oqmr().s[285]++, {});
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[286]++;
    for (const binding of nm.getAllBindings()) {
      /* istanbul ignore next */
      cov_ee2k7oqmr().s[287]++;
      namespaces[binding.prefix] = binding.namespace.toString();
    }
    /* istanbul ignore next */
    cov_ee2k7oqmr().s[288]++;
    return namespaces;
  }
}
/* istanbul ignore next */
cov_ee2k7oqmr().s[289]++;
exports.RDFParser = RDFParser;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,