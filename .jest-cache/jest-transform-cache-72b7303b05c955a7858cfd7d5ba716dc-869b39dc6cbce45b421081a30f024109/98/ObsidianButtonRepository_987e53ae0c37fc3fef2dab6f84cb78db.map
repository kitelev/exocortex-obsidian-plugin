{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianButtonRepository.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianButtonRepository.ts"],"sourcesContent":["import { App, TFile } from \"obsidian\";\nimport { IButtonRepository } from \"../../domain/repositories/IButtonRepository\";\nimport { UIButton } from \"../../domain/entities/UIButton\";\nimport {\n  ButtonCommand,\n  CommandType,\n  CommandParameter,\n} from \"../../domain/entities/ButtonCommand\";\nimport { AssetId } from \"../../domain/value-objects/AssetId\";\nimport { Result } from \"../../domain/core/Result\";\n\n/**\n * Obsidian implementation of Button repository\n */\nexport class ObsidianButtonRepository implements IButtonRepository {\n  constructor(private app: App) {}\n\n  async findButtonById(id: AssetId): Promise<Result<UIButton | null>> {\n    try {\n      const file = this.app.vault.getAbstractFileByPath(id.toString() + \".md\");\n      if (!file || !(file instanceof TFile)) {\n        return Result.ok<UIButton | null>(null);\n      }\n\n      return this.buildButtonFromFile(file);\n    } catch (error) {\n      return Result.fail<UIButton | null>(\n        `Failed to find button: ${error.message}`,\n      );\n    }\n  }\n\n  async findCommandById(id: AssetId): Promise<Result<ButtonCommand | null>> {\n    try {\n      const file = this.app.vault.getAbstractFileByPath(id.toString() + \".md\");\n      if (!file || !(file instanceof TFile)) {\n        return Result.ok<ButtonCommand | null>(null);\n      }\n\n      return this.buildCommandFromFile(file);\n    } catch (error) {\n      return Result.fail<ButtonCommand | null>(\n        `Failed to find command: ${error.message}`,\n      );\n    }\n  }\n\n  async findAllButtons(): Promise<Result<UIButton[]>> {\n    try {\n      const buttons: UIButton[] = [];\n      const files = this.app.vault.getMarkdownFiles();\n\n      for (const file of files) {\n        const metadata = this.app.metadataCache.getFileCache(file);\n        if (!metadata?.frontmatter) continue;\n\n        const instanceClass = metadata.frontmatter[\"exo__Instance_class\"];\n        if (instanceClass !== \"[[ui__Button]]\") continue;\n\n        const buttonResult = await this.buildButtonFromFile(file);\n        if (buttonResult.isSuccess && buttonResult.getValue()) {\n          buttons.push(buttonResult.getValue()!);\n        }\n      }\n\n      return Result.ok<UIButton[]>(buttons);\n    } catch (error) {\n      return Result.fail<UIButton[]>(\n        `Failed to find buttons: ${error.message}`,\n      );\n    }\n  }\n\n  async findAllCommands(): Promise<Result<ButtonCommand[]>> {\n    try {\n      const commands: ButtonCommand[] = [];\n      const files = this.app.vault.getMarkdownFiles();\n\n      for (const file of files) {\n        const metadata = this.app.metadataCache.getFileCache(file);\n        if (!metadata?.frontmatter) continue;\n\n        const instanceClass = metadata.frontmatter[\"exo__Instance_class\"];\n        if (instanceClass !== \"[[ui__ButtonCommand]]\") continue;\n\n        const commandResult = await this.buildCommandFromFile(file);\n        if (commandResult.isSuccess && commandResult.getValue()) {\n          commands.push(commandResult.getValue()!);\n        }\n      }\n\n      return Result.ok<ButtonCommand[]>(commands);\n    } catch (error) {\n      return Result.fail<ButtonCommand[]>(\n        `Failed to find commands: ${error.message}`,\n      );\n    }\n  }\n\n  async findButtonsByCommandId(\n    commandId: AssetId,\n  ): Promise<Result<UIButton[]>> {\n    try {\n      const buttons: UIButton[] = [];\n      const allButtonsResult = await this.findAllButtons();\n\n      if (allButtonsResult.isFailure) {\n        return Result.fail<UIButton[]>(allButtonsResult.error);\n      }\n\n      const allButtons = allButtonsResult.getValue();\n      for (const button of allButtons) {\n        if (button.commandId.equals(commandId)) {\n          buttons.push(button);\n        }\n      }\n\n      return Result.ok<UIButton[]>(buttons);\n    } catch (error) {\n      return Result.fail<UIButton[]>(\n        `Failed to find buttons by command: ${error.message}`,\n      );\n    }\n  }\n\n  async saveButton(button: UIButton): Promise<Result<void>> {\n    try {\n      const filePath = `${button.id.toString()}.md`;\n      const content = this.serializeButton(button);\n\n      const existingFile = this.app.vault.getAbstractFileByPath(filePath);\n      if (existingFile instanceof TFile) {\n        await this.app.vault.modify(existingFile, content);\n      } else {\n        await this.app.vault.create(filePath, content);\n      }\n\n      return Result.ok<void>();\n    } catch (error) {\n      return Result.fail<void>(`Failed to save button: ${error.message}`);\n    }\n  }\n\n  async saveCommand(command: ButtonCommand): Promise<Result<void>> {\n    try {\n      const filePath = `${command.id.toString()}.md`;\n      const content = this.serializeCommand(command);\n\n      const existingFile = this.app.vault.getAbstractFileByPath(filePath);\n      if (existingFile instanceof TFile) {\n        await this.app.vault.modify(existingFile, content);\n      } else {\n        await this.app.vault.create(filePath, content);\n      }\n\n      return Result.ok<void>();\n    } catch (error) {\n      return Result.fail<void>(`Failed to save command: ${error.message}`);\n    }\n  }\n\n  async deleteButton(id: AssetId): Promise<Result<void>> {\n    try {\n      const file = this.app.vault.getAbstractFileByPath(id.toString() + \".md\");\n      if (file instanceof TFile) {\n        await this.app.vault.delete(file);\n      }\n      return Result.ok<void>();\n    } catch (error) {\n      return Result.fail<void>(`Failed to delete button: ${error.message}`);\n    }\n  }\n\n  async deleteCommand(id: AssetId): Promise<Result<void>> {\n    try {\n      const file = this.app.vault.getAbstractFileByPath(id.toString() + \".md\");\n      if (file instanceof TFile) {\n        await this.app.vault.delete(file);\n      }\n      return Result.ok<void>();\n    } catch (error) {\n      return Result.fail<void>(`Failed to delete command: ${error.message}`);\n    }\n  }\n\n  private async buildButtonFromFile(\n    file: TFile,\n  ): Promise<Result<UIButton | null>> {\n    try {\n      const metadata = this.app.metadataCache.getFileCache(file);\n      if (!metadata?.frontmatter) {\n        return Result.ok<UIButton | null>(null);\n      }\n\n      const fm = metadata.frontmatter;\n\n      const idResult = AssetId.create(file.basename);\n      const commandIdResult = AssetId.create(\n        this.cleanAssetReference(fm[\"ui__Button_command\"] || \"\"),\n      );\n\n      if (idResult.isFailure || commandIdResult.isFailure) {\n        return Result.ok<UIButton | null>(null);\n      }\n\n      const buttonResult = UIButton.create({\n        id: idResult.getValue(),\n        label: fm[\"ui__Button_label\"] || file.basename,\n        commandId: commandIdResult.getValue(),\n        order: fm[\"ui__Button_order\"] || 0,\n        isEnabled: fm[\"ui__Button_enabled\"] !== false,\n        tooltip: fm[\"ui__Button_tooltip\"],\n      });\n\n      if (buttonResult.isFailure) {\n        return Result.fail<UIButton | null>(buttonResult.error);\n      }\n\n      return Result.ok<UIButton | null>(buttonResult.getValue());\n    } catch (error) {\n      return Result.fail<UIButton | null>(\n        `Failed to build button: ${error.message}`,\n      );\n    }\n  }\n\n  private async buildCommandFromFile(\n    file: TFile,\n  ): Promise<Result<ButtonCommand | null>> {\n    try {\n      const metadata = this.app.metadataCache.getFileCache(file);\n      if (!metadata?.frontmatter) {\n        return Result.ok<ButtonCommand | null>(null);\n      }\n\n      const fm = metadata.frontmatter;\n\n      const idResult = AssetId.create(file.basename);\n      if (idResult.isFailure) {\n        return Result.ok<ButtonCommand | null>(null);\n      }\n\n      // Parse command type\n      const typeString = fm[\"ui__Command_type\"] || \"CUSTOM\";\n      const type = this.parseCommandType(typeString);\n\n      // Parse parameters\n      const parameters = this.parseParameters(fm[\"ui__Command_parameters\"]);\n\n      const commandResult = ButtonCommand.create({\n        id: idResult.getValue(),\n        type: type,\n        name: fm[\"ui__Command_name\"] || file.basename,\n        description: fm[\"ui__Command_description\"],\n        requiresInput: fm[\"ui__Command_requiresInput\"] === true,\n        parameters: parameters,\n        targetClass: this.cleanAssetReference(fm[\"ui__Command_targetClass\"]),\n        template: fm[\"ui__Command_template\"],\n        script: fm[\"ui__Command_script\"],\n      });\n\n      if (commandResult.isFailure) {\n        return Result.fail<ButtonCommand | null>(commandResult.error);\n      }\n\n      return Result.ok<ButtonCommand | null>(commandResult.getValue());\n    } catch (error) {\n      return Result.fail<ButtonCommand | null>(\n        `Failed to build command: ${error.message}`,\n      );\n    }\n  }\n\n  private parseCommandType(typeString: string): CommandType {\n    const upperType = typeString.toUpperCase();\n    return (\n      CommandType[upperType as keyof typeof CommandType] || CommandType.CUSTOM\n    );\n  }\n\n  private parseParameters(paramsData: any): CommandParameter[] {\n    if (!paramsData) return [];\n\n    const params: CommandParameter[] = [];\n    const paramArray = this.ensureArray(paramsData);\n\n    for (const param of paramArray) {\n      if (typeof param === \"object\" && param.name) {\n        params.push({\n          name: param.name,\n          type: param.type || \"string\",\n          required: param.required === true,\n          defaultValue: param.defaultValue,\n          label: param.label,\n          description: param.description,\n          validation: param.validation,\n        });\n      }\n    }\n\n    return params;\n  }\n\n  private serializeButton(button: UIButton): string {\n    const frontmatter = {\n      exo__Instance_class: \"[[ui__Button]]\",\n      ui__Button_label: button.label,\n      ui__Button_command: `[[${button.commandId.toString()}]]`,\n      ui__Button_order: button.order,\n      ui__Button_enabled: button.isEnabled,\n      ui__Button_tooltip: button.tooltip,\n    };\n\n    const yamlContent = this.toYaml(frontmatter);\n    return `---\\n${yamlContent}---\\n\\n# Button: ${button.label}\\n`;\n  }\n\n  private serializeCommand(command: ButtonCommand): string {\n    const frontmatter = {\n      exo__Instance_class: \"[[ui__ButtonCommand]]\",\n      ui__Command_type: command.type,\n      ui__Command_name: command.name,\n      ui__Command_description: command.description,\n      ui__Command_requiresInput: command.requiresInput,\n      ui__Command_parameters: command.parameters,\n      ui__Command_targetClass: command.targetClass\n        ? `[[${command.targetClass}]]`\n        : null,\n      ui__Command_template: command.template,\n      ui__Command_script: command.script,\n    };\n\n    const yamlContent = this.toYaml(frontmatter);\n    return `---\\n${yamlContent}---\\n\\n# Command: ${command.name}\\n`;\n  }\n\n  private cleanAssetReference(ref: string): string {\n    if (typeof ref !== \"string\") return \"\";\n    return ref.replace(/\\[\\[|\\]\\]/g, \"\").trim();\n  }\n\n  private ensureArray(value: any): any[] {\n    if (Array.isArray(value)) return value;\n    if (value) return [value];\n    return [];\n  }\n\n  private toYaml(obj: any): string {\n    // Simple YAML serialization\n    return (\n      Object.entries(obj)\n        .filter(([_, value]) => value !== null && value !== undefined)\n        .map(([key, value]) => {\n          if (Array.isArray(value)) {\n            if (value.length === 0) return `${key}: []`;\n            return `${key}:\\n${value.map((v) => `  - ${JSON.stringify(v)}`).join(\"\\n\")}`;\n          }\n          if (typeof value === \"object\") {\n            return `${key}: ${JSON.stringify(value)}`;\n          }\n          return `${key}: ${value}`;\n        })\n        .join(\"\\n\") + \"\\n\"\n    );\n  }\n}\n"],"version":3}