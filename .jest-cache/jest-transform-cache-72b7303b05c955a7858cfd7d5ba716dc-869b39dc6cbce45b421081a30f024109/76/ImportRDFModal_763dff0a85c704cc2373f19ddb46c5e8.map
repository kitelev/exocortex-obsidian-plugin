{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/ImportRDFModal.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/ImportRDFModal.ts"],"sourcesContent":["/**\n * Modal for RDF Import functionality\n * Allows users to import RDF data from files and merge with existing graph\n */\n\nimport { App, Modal, Setting, Notice, TFile } from \"obsidian\";\nimport { Graph } from \"../../domain/semantic/core/Graph\";\nimport { IndexedGraph } from \"../../domain/semantic/core/IndexedGraph\";\nimport { RDFParser, ParseOptions } from \"../../application/services/RDFParser\";\nimport { RDFFormat } from \"../../application/services/RDFSerializer\";\nimport { NamespaceManager } from \"../../application/services/NamespaceManager\";\nimport {\n  MemoryOptimizedImporter,\n  StreamingImportOptions,\n} from \"../../infrastructure/performance/MemoryOptimizedImporter\";\n\nexport interface ImportOptions extends StreamingImportOptions {\n  format?: RDFFormat;\n  mergeMode: \"merge\" | \"replace\";\n  validateInput: boolean;\n  strictMode: boolean;\n  baseIRI?: string;\n  useOptimizedImporter?: boolean;\n}\n\nexport class ImportRDFModal extends Modal {\n  private graph: Graph;\n  private options: ImportOptions = {\n    mergeMode: \"merge\",\n    validateInput: true,\n    strictMode: false,\n    useOptimizedImporter: true,\n    chunkSize: 1000,\n    enableMemoryPooling: false,\n  };\n  private parser: RDFParser;\n  private optimizedImporter: MemoryOptimizedImporter;\n  private namespaceManager: NamespaceManager;\n  private selectedFile: File | TFile | null = null;\n  private fileContent: string = \"\";\n  private onImport?: (importedGraph: Graph, options: ImportOptions) => void;\n\n  constructor(\n    app: App,\n    graph: Graph,\n    namespaceManager?: NamespaceManager,\n    onImport?: (importedGraph: Graph, options: ImportOptions) => void,\n  ) {\n    super(app);\n    this.graph = graph;\n    this.namespaceManager = namespaceManager || new NamespaceManager();\n    this.parser = new RDFParser(this.namespaceManager);\n    this.optimizedImporter = new MemoryOptimizedImporter();\n    this.onImport = onImport;\n  }\n\n  onOpen() {\n    const { contentEl } = this;\n    contentEl.empty();\n\n    // Title\n    contentEl.createEl(\"h2\", { text: \"Import RDF Data\" });\n\n    // Current graph statistics\n    const currentStatsEl = contentEl.createDiv(\"current-stats\");\n    currentStatsEl.innerHTML = `\n            <h3>Current Graph</h3>\n            <div class=\"stats-grid\">\n                <div class=\"stat-item\">\n                    <span class=\"stat-label\">Triples:</span>\n                    <span class=\"stat-value\">${this.graph.size()}</span>\n                </div>\n                <div class=\"stat-item\">\n                    <span class=\"stat-label\">Subjects:</span>\n                    <span class=\"stat-value\">${this.graph.subjects().size}</span>\n                </div>\n                <div class=\"stat-item\">\n                    <span class=\"stat-label\">Predicates:</span>\n                    <span class=\"stat-value\">${this.graph.predicates().size}</span>\n                </div>\n            </div>\n        `;\n\n    // File selection\n    const fileSection = contentEl.createDiv(\"file-selection\");\n    fileSection.createEl(\"h3\", { text: \"Select File\" });\n\n    // File input\n    const fileInputContainer = fileSection.createDiv(\"file-input-container\");\n\n    // Option 1: Select from vault\n    new Setting(fileInputContainer)\n      .setName(\"Import from vault\")\n      .setDesc(\"Select an RDF file from your vault\")\n      .addButton((button) => {\n        button\n          .setButtonText(\"Select File\")\n          .onClick(() => this.openVaultFilePicker());\n      });\n\n    // Option 2: Upload file\n    const uploadContainer = fileInputContainer.createDiv(\"upload-container\");\n    uploadContainer.createEl(\"span\", { text: \"Or upload file: \" });\n\n    const fileInput = uploadContainer.createEl(\"input\", { type: \"file\" });\n    fileInput.accept = \".ttl,.nt,.jsonld,.rdf,.n3,.xml\";\n    fileInput.addEventListener(\"change\", (e) => this.handleFileUpload(e));\n\n    // Selected file display\n    const selectedFileEl = fileSection.createDiv(\"selected-file\");\n    selectedFileEl.style.display = \"none\";\n\n    // Format selection\n    new Setting(contentEl)\n      .setName(\"RDF format\")\n      .setDesc(\"Specify format (auto-detected if not set)\")\n      .addDropdown((dropdown) => {\n        dropdown\n          .addOption(\"\", \"Auto-detect\")\n          .addOption(\"turtle\", \"Turtle (.ttl)\")\n          .addOption(\"ntriples\", \"N-Triples (.nt)\")\n          .addOption(\"jsonld\", \"JSON-LD (.jsonld)\")\n          .addOption(\"rdfxml\", \"RDF/XML (.rdf)\")\n          .setValue(this.options.format || \"\")\n          .onChange((value) => {\n            this.options.format = value ? (value as RDFFormat) : undefined;\n            this.updatePreview();\n          });\n      });\n\n    // Merge mode\n    new Setting(contentEl)\n      .setName(\"Import mode\")\n      .setDesc(\"How to handle existing data\")\n      .addDropdown((dropdown) => {\n        dropdown\n          .addOption(\"merge\", \"Merge with existing graph\")\n          .addOption(\"replace\", \"Replace entire graph\")\n          .setValue(this.options.mergeMode)\n          .onChange((value) => {\n            this.options.mergeMode = value as \"merge\" | \"replace\";\n          });\n      });\n\n    // Base IRI setting\n    new Setting(contentEl)\n      .setName(\"Base IRI\")\n      .setDesc(\"Optional base IRI for relative URIs\")\n      .addText((text) => {\n        text\n          .setPlaceholder(\"https://example.org/data/\")\n          .setValue(this.options.baseIRI || \"\")\n          .onChange((value) => {\n            this.options.baseIRI = value || undefined;\n            this.updatePreview();\n          });\n      });\n\n    // Validation options\n    new Setting(contentEl)\n      .setName(\"Validate input\")\n      .setDesc(\"Validate RDF data during import\")\n      .addToggle((toggle) => {\n        toggle.setValue(this.options.validateInput).onChange((value) => {\n          this.options.validateInput = value;\n        });\n      });\n\n    new Setting(contentEl)\n      .setName(\"Strict mode\")\n      .setDesc(\"Fail import on any parsing errors\")\n      .addToggle((toggle) => {\n        toggle.setValue(this.options.strictMode).onChange((value) => {\n          this.options.strictMode = value;\n        });\n      });\n\n    // Memory optimization settings\n    contentEl.createEl(\"h3\", { text: \"Memory Optimization\" });\n\n    new Setting(contentEl)\n      .setName(\"Use optimized importer\")\n      .setDesc(\"Enable memory-optimized importing for large files\")\n      .addToggle((toggle) => {\n        toggle\n          .setValue(this.options.useOptimizedImporter ?? true)\n          .onChange((value) => {\n            this.options.useOptimizedImporter = value;\n            this.updateOptimizationSettings();\n          });\n      });\n\n    const optimizationContainer = contentEl.createDiv(\"optimization-settings\");\n\n    new Setting(optimizationContainer)\n      .setName(\"Chunk size\")\n      .setDesc(\"Number of triples to process at once\")\n      .addSlider((slider) => {\n        slider\n          .setLimits(100, 5000, 100)\n          .setValue(this.options.chunkSize || 1000)\n          .setDynamicTooltip()\n          .onChange((value) => {\n            this.options.chunkSize = value;\n          });\n      });\n\n    new Setting(optimizationContainer)\n      .setName(\"Memory pooling\")\n      .setDesc(\"Reuse objects to reduce memory allocation\")\n      .addToggle((toggle) => {\n        toggle\n          .setValue(this.options.enableMemoryPooling ?? false)\n          .onChange((value) => {\n            this.options.enableMemoryPooling = value;\n          });\n      });\n\n    // Preview section\n    const previewContainer = contentEl.createDiv(\"import-preview\");\n    previewContainer.createEl(\"h3\", { text: \"Preview\" });\n\n    const previewEl = previewContainer.createEl(\"div\", {\n      cls: \"preview-content\",\n    });\n    previewEl.innerHTML = \"<em>Select a file to see preview</em>\";\n\n    // Buttons\n    const buttonContainer = contentEl.createDiv(\"import-buttons\");\n    buttonContainer.addClass(\"modal-button-container\");\n\n    // Import button\n    const importButton = buttonContainer.createEl(\"button\", {\n      text: \"Import\",\n      cls: \"mod-cta\",\n    });\n    importButton.disabled = true;\n    importButton.onclick = () => this.handleImport();\n\n    // Cancel button\n    const cancelButton = buttonContainer.createEl(\"button\", { text: \"Cancel\" });\n    cancelButton.onclick = () => this.close();\n\n    // Store references\n    this.updateUI();\n\n    // Add styles\n    this.addStyles();\n  }\n\n  /**\n   * Open vault file picker\n   */\n  private openVaultFilePicker(): void {\n    // Get all files that might be RDF\n    const files = this.app.vault\n      .getFiles()\n      .filter((file) => /\\.(ttl|nt|jsonld|rdf|n3|xml)$/i.test(file.extension));\n\n    if (files.length === 0) {\n      new Notice(\"No RDF files found in vault\");\n      return;\n    }\n\n    // Create a simple file picker (in a real implementation, you might use a more sophisticated picker)\n    const picker = document.createElement(\"select\");\n    picker.innerHTML = '<option value=\"\">Select file...</option>';\n\n    for (const file of files) {\n      const option = document.createElement(\"option\");\n      option.value = file.path;\n      option.textContent = file.path;\n      picker.appendChild(option);\n    }\n\n    picker.addEventListener(\"change\", async (e) => {\n      const selectedPath = (e.target as HTMLSelectElement).value;\n      if (selectedPath) {\n        const file = this.app.vault.getAbstractFileByPath(selectedPath);\n        if (file instanceof TFile) {\n          await this.selectVaultFile(file);\n        }\n      }\n    });\n\n    // Add to modal (in a real implementation, this would be better integrated)\n    const container = this.contentEl.querySelector(\".file-input-container\");\n    if (container) {\n      container.appendChild(picker);\n    }\n  }\n\n  /**\n   * Handle file upload from computer\n   */\n  private async handleFileUpload(event: Event): Promise<void> {\n    const input = event.target as HTMLInputElement;\n    const file = input.files?.[0];\n\n    if (file) {\n      try {\n        const content = await this.readFile(file);\n        this.selectedFile = file;\n        this.fileContent = content;\n        this.updateUI();\n        this.updatePreview();\n      } catch (error) {\n        new Notice(`Error reading file: ${error.message}`);\n      }\n    }\n  }\n\n  /**\n   * Select file from vault\n   */\n  private async selectVaultFile(file: TFile): Promise<void> {\n    try {\n      const content = await this.app.vault.read(file);\n      this.selectedFile = file;\n      this.fileContent = content;\n      this.updateUI();\n      this.updatePreview();\n    } catch (error) {\n      new Notice(`Error reading vault file: ${error.message}`);\n    }\n  }\n\n  /**\n   * Read file content\n   */\n  private readFile(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e) => resolve(e.target?.result as string);\n      reader.onerror = (e) => reject(new Error(\"Failed to read file\"));\n      reader.readAsText(file);\n    });\n  }\n\n  /**\n   * Update UI state\n   */\n  private updateUI(): void {\n    // Update selected file display\n    const selectedFileEl = this.contentEl.querySelector(\n      \".selected-file\",\n    ) as HTMLElement;\n    if (selectedFileEl) {\n      if (this.selectedFile) {\n        const fileName =\n          this.selectedFile instanceof TFile\n            ? this.selectedFile.name\n            : this.selectedFile.name;\n\n        selectedFileEl.innerHTML = `\n                    <div class=\"selected-file-info\">\n                        <strong>Selected:</strong> ${fileName}\n                        <span class=\"file-size\">(${this.formatFileSize(this.fileContent.length)})</span>\n                    </div>\n                `;\n        selectedFileEl.style.display = \"block\";\n      } else {\n        selectedFileEl.style.display = \"none\";\n      }\n    }\n\n    // Enable/disable import button\n    const importButton = this.contentEl.querySelector(\n      \"button.mod-cta\",\n    ) as HTMLButtonElement;\n    if (importButton) {\n      importButton.disabled = !this.selectedFile;\n    }\n  }\n\n  /**\n   * Update preview content\n   */\n  private updatePreview(): void {\n    const previewEl = this.contentEl.querySelector(\n      \".preview-content\",\n    ) as HTMLElement;\n    if (!previewEl || !this.fileContent) return;\n\n    try {\n      const parseOptions: ParseOptions = {\n        format: this.options.format,\n        baseIRI: this.options.baseIRI,\n        namespaceManager: this.namespaceManager,\n        validateInput: false, // Don't validate for preview\n        strictMode: false,\n      };\n\n      const result = this.parser.parse(this.fileContent, parseOptions);\n\n      if (result.isSuccess) {\n        const parseResult = result.getValue();\n\n        previewEl.innerHTML = `\n                    <div class=\"preview-stats\">\n                        <h4>Import Preview</h4>\n                        <div class=\"stats-grid\">\n                            <div class=\"stat-item\">\n                                <span class=\"stat-label\">Triples:</span>\n                                <span class=\"stat-value\">${parseResult.tripleCount}</span>\n                            </div>\n                            <div class=\"stat-item\">\n                                <span class=\"stat-label\">Subjects:</span>\n                                <span class=\"stat-value\">${parseResult.graph.subjects().size}</span>\n                            </div>\n                            <div class=\"stat-item\">\n                                <span class=\"stat-label\">Predicates:</span>\n                                <span class=\"stat-value\">${parseResult.graph.predicates().size}</span>\n                            </div>\n                        </div>\n                        ${\n                          Object.keys(parseResult.namespaces).length > 0\n                            ? `\n                            <div class=\"namespaces\">\n                                <strong>Namespaces found:</strong>\n                                <ul>\n                                    ${Object.entries(parseResult.namespaces)\n                                      .slice(0, 5)\n                                      .map(\n                                        ([prefix, uri]) =>\n                                          `<li>${prefix}: ${uri}</li>`,\n                                      )\n                                      .join(\"\")}\n                                    ${Object.keys(parseResult.namespaces).length > 5 ? \"<li>... and more</li>\" : \"\"}\n                                </ul>\n                            </div>\n                        `\n                            : \"\"\n                        }\n                        ${\n                          parseResult.warnings?.length\n                            ? `\n                            <div class=\"warnings\">\n                                <strong>Warnings:</strong>\n                                <ul>\n                                    ${parseResult.warnings\n                                      .slice(0, 3)\n                                      .map((w) => `<li>${w}</li>`)\n                                      .join(\"\")}\n                                    ${parseResult.warnings.length > 3 ? \"<li>... and more</li>\" : \"\"}\n                                </ul>\n                            </div>\n                        `\n                            : \"\"\n                        }\n                    </div>\n                    <div class=\"sample-triples\">\n                        <h4>Sample Triples</h4>\n                        <pre class=\"triple-sample\">${this.formatSampleTriples(parseResult.graph)}</pre>\n                    </div>\n                `;\n      } else {\n        previewEl.innerHTML = `\n                    <div class=\"preview-error\">\n                        <strong>Parse Error:</strong> ${result.errorValue()}\n                    </div>\n                `;\n      }\n    } catch (error) {\n      previewEl.innerHTML = `\n                <div class=\"preview-error\">\n                    <strong>Preview Error:</strong> ${error.message}\n                </div>\n            `;\n    }\n  }\n\n  /**\n   * Format sample triples for display\n   */\n  private formatSampleTriples(graph: Graph): string {\n    const triples = graph.toArray().slice(0, 5);\n    return (\n      triples.map((triple) => triple.toString()).join(\"\\n\") +\n      (graph.size() > 5 ? \"\\n... and more\" : \"\")\n    );\n  }\n\n  /**\n   * Format file size\n   */\n  private formatFileSize(bytes: number): string {\n    if (bytes < 1024) return bytes + \" B\";\n    if (bytes < 1024 * 1024) return Math.round(bytes / 1024) + \" KB\";\n    return Math.round(bytes / (1024 * 1024)) + \" MB\";\n  }\n\n  /**\n   * Handle import action\n   */\n  private async handleImport(): Promise<void> {\n    if (!this.selectedFile || !this.fileContent) {\n      new Notice(\"No file selected\");\n      return;\n    }\n\n    try {\n      let finalGraph: Graph;\n      let importedTripleCount = 0;\n      let importTime = 0;\n\n      if (\n        this.options.useOptimizedImporter &&\n        this.fileContent.length > 50000\n      ) {\n        // Use optimized importer for large files\n        const startTime = performance.now();\n\n        // Convert graph to IndexedGraph if needed\n        const targetGraph =\n          this.graph instanceof IndexedGraph\n            ? this.graph\n            : this.convertToIndexedGraph(this.graph);\n\n        if (this.options.mergeMode === \"replace\") {\n          targetGraph.clear();\n        }\n\n        // Configure optimized import options\n        const importOptions: StreamingImportOptions = {\n          format: this.options.format,\n          baseIRI: this.options.baseIRI,\n          namespaceManager: this.namespaceManager,\n          validateInput: this.options.validateInput,\n          strictMode: this.options.strictMode,\n          chunkSize: this.options.chunkSize || 1000,\n          enableMemoryPooling: this.options.enableMemoryPooling,\n          enableGCHints: true,\n          progressCallback: (processed, total) => {\n            const progress = Math.round((processed / total) * 100);\n            console.log(`Import progress: ${progress}%`);\n          },\n        };\n\n        const result = await this.optimizedImporter.importRDF(\n          this.fileContent,\n          targetGraph,\n          importOptions,\n        );\n\n        importTime = performance.now() - startTime;\n\n        if (result.isFailure) {\n          new Notice(`Optimized import failed: ${result.getError()}`);\n          return;\n        }\n\n        const memoryReport = result.getValue();\n        finalGraph = targetGraph;\n        importedTripleCount = targetGraph.size();\n\n        // Show memory optimization results\n        const memoryReduction =\n          Math.round((memoryReport.memoryReduction / 1024 / 1024) * 10) / 10;\n        if (memoryReduction > 0) {\n          new Notice(`Memory saved: ${memoryReduction}MB`, 2000);\n        }\n      } else {\n        // Use standard parser for small files\n        const startTime = performance.now();\n\n        const parseOptions: ParseOptions = {\n          format: this.options.format,\n          baseIRI: this.options.baseIRI,\n          namespaceManager: this.namespaceManager,\n          validateInput: this.options.validateInput,\n          strictMode: this.options.strictMode,\n        };\n\n        const result = this.parser.parse(this.fileContent, parseOptions);\n\n        if (result.isFailure) {\n          new Notice(`Import failed: ${result.getError()}`);\n          return;\n        }\n\n        const parseResult = result.getValue();\n        importTime = performance.now() - startTime;\n\n        // Handle merge mode\n        if (this.options.mergeMode === \"replace\") {\n          finalGraph = parseResult.graph;\n        } else {\n          // Merge with existing graph\n          finalGraph = this.graph.clone();\n          finalGraph.merge(parseResult.graph);\n        }\n\n        importedTripleCount = parseResult.tripleCount;\n\n        if (parseResult.warnings?.length) {\n          new Notice(\n            `Warnings: ${parseResult.warnings.length} warnings found`,\n            3000,\n          );\n        }\n\n        if (parseResult.errors?.length) {\n          new Notice(`Errors: ${parseResult.errors.length} errors found`, 3000);\n        }\n      }\n\n      // Call onImport callback\n      if (this.onImport) {\n        this.onImport(finalGraph, this.options);\n      }\n\n      const message =\n        this.options.mergeMode === \"replace\"\n          ? `Replaced graph with ${importedTripleCount} triples in ${importTime.toFixed(0)}ms`\n          : `Added ${importedTripleCount} triples to graph in ${importTime.toFixed(0)}ms`;\n\n      new Notice(message);\n\n      this.close();\n    } catch (error) {\n      new Notice(`Import error: ${error.message}`);\n    }\n  }\n\n  /**\n   * Convert regular Graph to IndexedGraph\n   */\n  private convertToIndexedGraph(graph: Graph): IndexedGraph {\n    const indexedGraph = new IndexedGraph();\n\n    indexedGraph.beginBatch();\n    for (const triple of graph.toArray()) {\n      indexedGraph.add(triple);\n    }\n    indexedGraph.commitBatch();\n\n    return indexedGraph;\n  }\n\n  /**\n   * Update optimization settings visibility\n   */\n  private updateOptimizationSettings(): void {\n    const container = this.contentEl.querySelector(\n      \".optimization-settings\",\n    ) as HTMLElement;\n    if (container) {\n      container.style.display = this.options.useOptimizedImporter\n        ? \"block\"\n        : \"none\";\n    }\n  }\n\n  /**\n   * Add custom styles\n   */\n  private addStyles(): void {\n    const style = document.createElement(\"style\");\n    style.textContent = `\n            .current-stats, .preview-stats {\n                margin-bottom: 20px;\n                padding: 15px;\n                background: var(--background-secondary);\n                border-radius: 6px;\n            }\n            \n            .stats-grid {\n                display: flex;\n                gap: 20px;\n                margin-top: 10px;\n            }\n            \n            .stat-item {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n            }\n            \n            .stat-label {\n                font-size: 12px;\n                color: var(--text-muted);\n                margin-bottom: 2px;\n            }\n            \n            .stat-value {\n                font-size: 16px;\n                font-weight: 600;\n                color: var(--text-normal);\n            }\n            \n            .file-selection {\n                margin: 20px 0;\n                padding: 15px;\n                border: 1px solid var(--background-modifier-border);\n                border-radius: 6px;\n            }\n            \n            .file-input-container {\n                margin: 10px 0;\n            }\n            \n            .upload-container {\n                margin: 10px 0;\n                display: flex;\n                align-items: center;\n                gap: 10px;\n            }\n            \n            .selected-file {\n                margin: 10px 0;\n                padding: 10px;\n                background: var(--background-primary-alt);\n                border-radius: 4px;\n            }\n            \n            .selected-file-info {\n                display: flex;\n                align-items: center;\n                gap: 10px;\n            }\n            \n            .file-size {\n                color: var(--text-muted);\n                font-size: 12px;\n            }\n            \n            .preview-content {\n                max-height: 300px;\n                overflow-y: auto;\n                padding: 15px;\n                background: var(--background-secondary);\n                border-radius: 6px;\n            }\n            \n            .preview-error {\n                color: var(--text-error);\n                padding: 10px;\n                background: var(--background-modifier-error);\n                border-radius: 4px;\n            }\n            \n            .namespaces, .warnings {\n                margin: 10px 0;\n            }\n            \n            .namespaces ul, .warnings ul {\n                margin: 5px 0 0 20px;\n                font-size: 12px;\n            }\n            \n            .warnings {\n                color: var(--text-warning);\n            }\n            \n            .sample-triples {\n                margin-top: 15px;\n            }\n            \n            .triple-sample {\n                font-family: var(--font-monospace);\n                font-size: 11px;\n                background: var(--background-primary);\n                padding: 10px;\n                border-radius: 4px;\n                overflow-x: auto;\n                margin: 5px 0 0 0;\n            }\n            \n            .import-buttons {\n                display: flex;\n                gap: 10px;\n                justify-content: flex-end;\n                margin-top: 20px;\n                padding-top: 20px;\n                border-top: 1px solid var(--background-modifier-border);\n            }\n            \n            .modal-button-container button {\n                padding: 8px 16px;\n                border-radius: 4px;\n                border: 1px solid var(--background-modifier-border);\n                background: var(--background-primary);\n                color: var(--text-normal);\n                cursor: pointer;\n            }\n            \n            .modal-button-container button:hover:not(:disabled) {\n                background: var(--background-secondary);\n            }\n            \n            .modal-button-container button:disabled {\n                opacity: 0.5;\n                cursor: not-allowed;\n            }\n            \n            .modal-button-container button.mod-cta:not(:disabled) {\n                background: var(--interactive-accent);\n                color: var(--text-on-accent);\n                border-color: var(--interactive-accent);\n            }\n            \n            .modal-button-container button.mod-cta:hover:not(:disabled) {\n                background: var(--interactive-accent-hover);\n                border-color: var(--interactive-accent-hover);\n            }\n        `;\n\n    document.head.appendChild(style);\n  }\n\n  onClose() {\n    const { contentEl } = this;\n    contentEl.empty();\n  }\n}\n"],"version":3}