a68a6be5a830b97f32a683d60a99dda5
"use strict";

/**
 * RDF Serializer for converting Graph instances to various RDF formats
 * Supports Turtle (.ttl), N-Triples (.nt), JSON-LD (.jsonld), and RDF/XML (.rdf)
 */
/* istanbul ignore next */
function cov_34tvgab89() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFSerializer.ts";
  var hash = "c92064ec014ace8faf124d347aa38bffa4c1d505";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFSerializer.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 31
        }
      },
      "2": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 61
        }
      },
      "3": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "4": {
        start: {
          line: 10,
          column: 27
        },
        end: {
          line: 10,
          column: 56
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 94
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "7": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 27,
          column: 17
        }
      },
      "9": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "10": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 88
        }
      },
      "11": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 72
        }
      },
      "12": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 31
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "14": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 73
        }
      },
      "15": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "16": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 72
        }
      },
      "17": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 26
        }
      },
      "18": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 73
        }
      },
      "19": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 26
        }
      },
      "20": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 73
        }
      },
      "21": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 26
        }
      },
      "22": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 89
        }
      },
      "23": {
        start: {
          line: 48,
          column: 27
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "24": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 46
        }
      },
      "25": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 82
        }
      },
      "26": {
        start: {
          line: 67,
          column: 22
        },
        end: {
          line: 67,
          column: 24
        }
      },
      "27": {
        start: {
          line: 68,
          column: 63
        },
        end: {
          line: 68,
          column: 70
        }
      },
      "28": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "29": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 62
        }
      },
      "30": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 69
        }
      },
      "31": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 58
        }
      },
      "32": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 27
        }
      },
      "33": {
        start: {
          line: 77,
          column: 35
        },
        end: {
          line: 77,
          column: 74
        }
      },
      "34": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "35": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 43
        }
      },
      "36": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 27
        }
      },
      "37": {
        start: {
          line: 83,
          column: 30
        },
        end: {
          line: 83,
          column: 63
        }
      },
      "38": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "39": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 86,
          column: 25
        }
      },
      "40": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 25
        }
      },
      "41": {
        start: {
          line: 87,
          column: 31
        },
        end: {
          line: 87,
          column: 59
        }
      },
      "42": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "43": {
        start: {
          line: 90,
          column: 31
        },
        end: {
          line: 90,
          column: 41
        }
      },
      "44": {
        start: {
          line: 91,
          column: 37
        },
        end: {
          line: 91,
          column: 79
        }
      },
      "45": {
        start: {
          line: 92,
          column: 34
        },
        end: {
          line: 92,
          column: 73
        }
      },
      "46": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 75
        }
      },
      "47": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 44
        }
      },
      "48": {
        start: {
          line: 99,
          column: 40
        },
        end: {
          line: 99,
          column: 77
        }
      },
      "49": {
        start: {
          line: 100,
          column: 41
        },
        end: {
          line: 100,
          column: 78
        }
      },
      "50": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "51": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 101,
          column: 30
        }
      },
      "52": {
        start: {
          line: 102,
          column: 49
        },
        end: {
          line: 102,
          column: 68
        }
      },
      "53": {
        start: {
          line: 103,
          column: 41
        },
        end: {
          line: 103,
          column: 71
        }
      },
      "54": {
        start: {
          line: 104,
          column: 35
        },
        end: {
          line: 104,
          column: 68
        }
      },
      "55": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 117,
          column: 21
        }
      },
      "56": {
        start: {
          line: 106,
          column: 42
        },
        end: {
          line: 106,
          column: 73
        }
      },
      "57": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 107,
          column: 94
        }
      },
      "58": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 58
        }
      },
      "59": {
        start: {
          line: 111,
          column: 24
        },
        end: {
          line: 116,
          column: 25
        }
      },
      "60": {
        start: {
          line: 111,
          column: 37
        },
        end: {
          line: 111,
          column: 38
        }
      },
      "61": {
        start: {
          line: 112,
          column: 46
        },
        end: {
          line: 112,
          column: 77
        }
      },
      "62": {
        start: {
          line: 113,
          column: 49
        },
        end: {
          line: 113,
          column: 73
        }
      },
      "63": {
        start: {
          line: 114,
          column: 43
        },
        end: {
          line: 114,
          column: 87
        }
      },
      "64": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 115,
          column: 72
        }
      },
      "65": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "66": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 31
        }
      },
      "67": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 32
        }
      },
      "68": {
        start: {
          line: 130,
          column: 22
        },
        end: {
          line: 130,
          column: 24
        }
      },
      "69": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "70": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "71": {
        start: {
          line: 133,
          column: 35
        },
        end: {
          line: 133,
          column: 79
        }
      },
      "72": {
        start: {
          line: 134,
          column: 37
        },
        end: {
          line: 134,
          column: 83
        }
      },
      "73": {
        start: {
          line: 135,
          column: 34
        },
        end: {
          line: 135,
          column: 77
        }
      },
      "74": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 75
        }
      },
      "75": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 78
        }
      },
      "76": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 32
        }
      },
      "77": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 26
        }
      },
      "78": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "79": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 67
        }
      },
      "80": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "81": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 47
        }
      },
      "82": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 158,
          column: 27
        }
      },
      "83": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "84": {
        start: {
          line: 160,
          column: 30
        },
        end: {
          line: 160,
          column: 76
        }
      },
      "85": {
        start: {
          line: 161,
          column: 30
        },
        end: {
          line: 161,
          column: 78
        }
      },
      "86": {
        start: {
          line: 162,
          column: 27
        },
        end: {
          line: 162,
          column: 74
        }
      },
      "87": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "88": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 59
        }
      },
      "89": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "90": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 170,
          column: 17
        }
      },
      "91": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 86
        }
      },
      "92": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 60
        }
      },
      "93": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 56
        }
      },
      "94": {
        start: {
          line: 177,
          column: 23
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "95": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 73
        }
      },
      "96": {
        start: {
          line: 187,
          column: 22
        },
        end: {
          line: 187,
          column: 24
        }
      },
      "97": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 61
        }
      },
      "98": {
        start: {
          line: 191,
          column: 25
        },
        end: {
          line: 191,
          column: 35
        }
      },
      "99": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 81
        }
      },
      "100": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "101": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "102": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 91
        }
      },
      "103": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "104": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 59
        }
      },
      "105": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 26
        }
      },
      "106": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 31
        }
      },
      "107": {
        start: {
          line: 204,
          column: 30
        },
        end: {
          line: 204,
          column: 63
        }
      },
      "108": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "109": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 207,
          column: 25
        }
      },
      "110": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 25
        }
      },
      "111": {
        start: {
          line: 209,
          column: 35
        },
        end: {
          line: 209,
          column: 137
        }
      },
      "112": {
        start: {
          line: 209,
          column: 55
        },
        end: {
          line: 209,
          column: 136
        }
      },
      "113": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "114": {
        start: {
          line: 212,
          column: 29
        },
        end: {
          line: 212,
          column: 58
        }
      },
      "115": {
        start: {
          line: 213,
          column: 32
        },
        end: {
          line: 213,
          column: 63
        }
      },
      "116": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 95
        }
      },
      "117": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 100
        }
      },
      "118": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "119": {
        start: {
          line: 222,
          column: 34
        },
        end: {
          line: 222,
          column: 55
        }
      },
      "120": {
        start: {
          line: 223,
          column: 31
        },
        end: {
          line: 223,
          column: 49
        }
      },
      "121": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 227,
          column: 17
        }
      },
      "122": {
        start: {
          line: 226,
          column: 20
        },
        end: {
          line: 226,
          column: 29
        }
      },
      "123": {
        start: {
          line: 228,
          column: 37
        },
        end: {
          line: 228,
          column: 73
        }
      },
      "124": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 246,
          column: 17
        }
      },
      "125": {
        start: {
          line: 230,
          column: 41
        },
        end: {
          line: 230,
          column: 63
        }
      },
      "126": {
        start: {
          line: 231,
          column: 20
        },
        end: {
          line: 233,
          column: 21
        }
      },
      "127": {
        start: {
          line: 232,
          column: 24
        },
        end: {
          line: 232,
          column: 111
        }
      },
      "128": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 236,
          column: 21
        }
      },
      "129": {
        start: {
          line: 235,
          column: 24
        },
        end: {
          line: 235,
          column: 80
        }
      },
      "130": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 237,
          column: 96
        }
      },
      "131": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 47
        }
      },
      "132": {
        start: {
          line: 242,
          column: 39
        },
        end: {
          line: 244,
          column: 79
        }
      },
      "133": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 71
        }
      },
      "134": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 256,
          column: 13
        }
      },
      "135": {
        start: {
          line: 250,
          column: 29
        },
        end: {
          line: 250,
          column: 58
        }
      },
      "136": {
        start: {
          line: 251,
          column: 32
        },
        end: {
          line: 251,
          column: 63
        }
      },
      "137": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 46
        }
      },
      "138": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 255,
          column: 51
        }
      },
      "139": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 33
        }
      },
      "140": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 32
        }
      },
      "141": {
        start: {
          line: 265,
          column: 23
        },
        end: {
          line: 265,
          column: 32
        }
      },
      "142": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "143": {
        start: {
          line: 267,
          column: 28
        },
        end: {
          line: 267,
          column: 47
        }
      },
      "144": {
        start: {
          line: 268,
          column: 31
        },
        end: {
          line: 268,
          column: 49
        }
      },
      "145": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "146": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 40
        }
      },
      "147": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 45
        }
      },
      "148": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 22
        }
      },
      "149": {
        start: {
          line: 280,
          column: 23
        },
        end: {
          line: 280,
          column: 32
        }
      },
      "150": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "151": {
        start: {
          line: 282,
          column: 30
        },
        end: {
          line: 282,
          column: 51
        }
      },
      "152": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "153": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 42
        }
      },
      "154": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 59
        }
      },
      "155": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 22
        }
      },
      "156": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "157": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 40
        }
      },
      "158": {
        start: {
          line: 297,
          column: 13
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "159": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 35
        }
      },
      "160": {
        start: {
          line: 300,
          column: 13
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "161": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 35
        }
      },
      "162": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 61
        }
      },
      "163": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "164": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 42
        }
      },
      "165": {
        start: {
          line: 312,
          column: 13
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "166": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 35
        }
      },
      "167": {
        start: {
          line: 315,
          column: 13
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "168": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 35
        }
      },
      "169": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 61
        }
      },
      "170": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "171": {
        start: {
          line: 325,
          column: 31
        },
        end: {
          line: 325,
          column: 51
        }
      },
      "172": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 328,
          column: 29
        }
      },
      "173": {
        start: {
          line: 330,
          column: 13
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "174": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 35
        }
      },
      "175": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 76
        }
      },
      "176": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "177": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 64
        }
      },
      "178": {
        start: {
          line: 342,
          column: 13
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "179": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 48
        }
      },
      "180": {
        start: {
          line: 345,
          column: 13
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "181": {
        start: {
          line: 346,
          column: 27
        },
        end: {
          line: 346,
          column: 58
        }
      },
      "182": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "183": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 348,
          column: 82
        }
      },
      "184": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 352,
          column: 13
        }
      },
      "185": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 59
        }
      },
      "186": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 26
        }
      },
      "187": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 65
        }
      },
      "188": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "189": {
        start: {
          line: 362,
          column: 31
        },
        end: {
          line: 362,
          column: 51
        }
      },
      "190": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 365,
          column: 29
        }
      },
      "191": {
        start: {
          line: 367,
          column: 13
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "192": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 35
        }
      },
      "193": {
        start: {
          line: 370,
          column: 13
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "194": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 35
        }
      },
      "195": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 61
        }
      },
      "196": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 384,
          column: 36
        }
      },
      "197": {
        start: {
          line: 390,
          column: 27
        },
        end: {
          line: 390,
          column: 29
        }
      },
      "198": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "199": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 70
        }
      },
      "200": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 26
        }
      },
      "201": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "202": {
        start: {
          line: 401,
          column: 27
        },
        end: {
          line: 401,
          column: 41
        }
      },
      "203": {
        start: {
          line: 402,
          column: 30
        },
        end: {
          line: 402,
          column: 43
        }
      },
      "204": {
        start: {
          line: 403,
          column: 28
        },
        end: {
          line: 403,
          column: 45
        }
      },
      "205": {
        start: {
          line: 404,
          column: 28
        },
        end: {
          line: 404,
          column: 42
        }
      },
      "206": {
        start: {
          line: 405,
          column: 21
        },
        end: {
          line: 405,
          column: 35
        }
      },
      "207": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 418,
          column: 9
        }
      },
      "208": {
        start: {
          line: 413,
          column: 27
        },
        end: {
          line: 413,
          column: 48
        }
      },
      "209": {
        start: {
          line: 414,
          column: 30
        },
        end: {
          line: 414,
          column: 61
        }
      },
      "210": {
        start: {
          line: 415,
          column: 28
        },
        end: {
          line: 415,
          column: 57
        }
      },
      "211": {
        start: {
          line: 416,
          column: 28
        },
        end: {
          line: 416,
          column: 57
        }
      },
      "212": {
        start: {
          line: 417,
          column: 21
        },
        end: {
          line: 417,
          column: 50
        }
      },
      "213": {
        start: {
          line: 421,
          column: 0
        },
        end: {
          line: 421,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 42
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 66
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 41
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 129
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 42
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 147
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 42
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 186
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 209,
            column: 50
          },
          end: {
            line: 209,
            column: 51
          }
        },
        loc: {
          start: {
            line: 209,
            column: 55
          },
          end: {
            line: 209,
            column: 136
          }
        },
        line: 209
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        },
        loc: {
          start: {
            line: 264,
            column: 33
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 264
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        loc: {
          start: {
            line: 279,
            column: 37
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 279
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 25
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 293
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 29
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 308
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 31
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 323
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        loc: {
          start: {
            line: 338,
            column: 35
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 338
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        },
        loc: {
          start: {
            line: 360,
            column: 31
          },
          end: {
            line: 374,
            column: 5
          }
        },
        line: 360
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 378,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        },
        loc: {
          start: {
            line: 378,
            column: 20
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 378
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 389,
            column: 5
          }
        },
        loc: {
          start: {
            line: 389,
            column: 26
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 389
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 36
          },
          end: {
            line: 407,
            column: 5
          }
        },
        line: 399
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        },
        loc: {
          start: {
            line: 411,
            column: 31
          },
          end: {
            line: 419,
            column: 5
          }
        },
        line: 411
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 13,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 13,
            column: 48
          }
        }, {
          start: {
            line: 13,
            column: 52
          },
          end: {
            line: 13,
            column: 93
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 47
          }
        }, {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 72
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 35,
            column: 26
          }
        }, {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 38,
            column: 26
          }
        }, {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 41,
            column: 26
          }
        }, {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 26
          }
        }, {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 46,
            column: 89
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 54,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 52
          },
          end: {
            line: 54,
            column: 60
          }
        }, {
          start: {
            line: 54,
            column: 63
          },
          end: {
            line: 54,
            column: 72
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 68,
            column: 34
          },
          end: {
            line: 68,
            column: 38
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 40
          },
          end: {
            line: 68,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 68,
            column: 54
          },
          end: {
            line: 68,
            column: 58
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 86,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 86,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: 95,
            column: 17
          },
          end: {
            line: 119,
            column: 13
          }
        }],
        line: 88
      },
      "11": {
        loc: {
          start: {
            line: 105,
            column: 20
          },
          end: {
            line: 117,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 20
          },
          end: {
            line: 117,
            column: 21
          }
        }, {
          start: {
            line: 109,
            column: 25
          },
          end: {
            line: 117,
            column: 21
          }
        }],
        line: 105
      },
      "12": {
        loc: {
          start: {
            line: 107,
            column: 70
          },
          end: {
            line: 107,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 79
          },
          end: {
            line: 107,
            column: 83
          }
        }, {
          start: {
            line: 107,
            column: 86
          },
          end: {
            line: 107,
            column: 90
          }
        }],
        line: 107
      },
      "13": {
        loc: {
          start: {
            line: 114,
            column: 43
          },
          end: {
            line: 114,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 59
          },
          end: {
            line: 114,
            column: 79
          }
        }, {
          start: {
            line: 114,
            column: 83
          },
          end: {
            line: 114,
            column: 87
          }
        }],
        line: 114
      },
      "14": {
        loc: {
          start: {
            line: 114,
            column: 59
          },
          end: {
            line: 114,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 68
          },
          end: {
            line: 114,
            column: 72
          }
        }, {
          start: {
            line: 114,
            column: 75
          },
          end: {
            line: 114,
            column: 79
          }
        }],
        line: 114
      },
      "15": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "16": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "17": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "18": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: 173,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }],
        line: 167
      },
      "19": {
        loc: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "20": {
        loc: {
          start: {
            line: 181,
            column: 44
          },
          end: {
            line: 181,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 181,
            column: 66
          },
          end: {
            line: 181,
            column: 67
          }
        }, {
          start: {
            line: 181,
            column: 70
          },
          end: {
            line: 181,
            column: 71
          }
        }],
        line: 181
      },
      "21": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "22": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "23": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 207,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 207,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "24": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        }, {
          start: {
            line: 216,
            column: 17
          },
          end: {
            line: 219,
            column: 13
          }
        }],
        line: 210
      },
      "25": {
        loc: {
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 227,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 227,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "26": {
        loc: {
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        }, {
          start: {
            line: 240,
            column: 21
          },
          end: {
            line: 246,
            column: 17
          }
        }],
        line: 229
      },
      "27": {
        loc: {
          start: {
            line: 231,
            column: 20
          },
          end: {
            line: 233,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 20
          },
          end: {
            line: 233,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "28": {
        loc: {
          start: {
            line: 234,
            column: 20
          },
          end: {
            line: 236,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 20
          },
          end: {
            line: 236,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "29": {
        loc: {
          start: {
            line: 242,
            column: 39
          },
          end: {
            line: 244,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 26
          },
          end: {
            line: 243,
            column: 74
          }
        }, {
          start: {
            line: 244,
            column: 26
          },
          end: {
            line: 244,
            column: 79
          }
        }],
        line: 242
      },
      "30": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 256,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 256,
            column: 13
          }
        }, {
          start: {
            line: 254,
            column: 17
          },
          end: {
            line: 256,
            column: 13
          }
        }],
        line: 249
      },
      "31": {
        loc: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "32": {
        loc: {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "33": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: 297,
            column: 13
          },
          end: {
            line: 302,
            column: 9
          }
        }],
        line: 294
      },
      "34": {
        loc: {
          start: {
            line: 297,
            column: 13
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 13
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: 300,
            column: 13
          },
          end: {
            line: 302,
            column: 9
          }
        }],
        line: 297
      },
      "35": {
        loc: {
          start: {
            line: 300,
            column: 13
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 13
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "36": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        }, {
          start: {
            line: 312,
            column: 13
          },
          end: {
            line: 317,
            column: 9
          }
        }],
        line: 309
      },
      "37": {
        loc: {
          start: {
            line: 312,
            column: 13
          },
          end: {
            line: 317,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 13
          },
          end: {
            line: 317,
            column: 9
          }
        }, {
          start: {
            line: 315,
            column: 13
          },
          end: {
            line: 317,
            column: 9
          }
        }],
        line: 312
      },
      "38": {
        loc: {
          start: {
            line: 315,
            column: 13
          },
          end: {
            line: 317,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 13
          },
          end: {
            line: 317,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "39": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: 330,
            column: 13
          },
          end: {
            line: 332,
            column: 9
          }
        }],
        line: 324
      },
      "40": {
        loc: {
          start: {
            line: 326,
            column: 19
          },
          end: {
            line: 328,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 18
          },
          end: {
            line: 327,
            column: 41
          }
        }, {
          start: {
            line: 328,
            column: 18
          },
          end: {
            line: 328,
            column: 28
          }
        }],
        line: 326
      },
      "41": {
        loc: {
          start: {
            line: 326,
            column: 19
          },
          end: {
            line: 326,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 326,
            column: 19
          },
          end: {
            line: 326,
            column: 45
          }
        }, {
          start: {
            line: 326,
            column: 49
          },
          end: {
            line: 326,
            column: 73
          }
        }],
        line: 326
      },
      "42": {
        loc: {
          start: {
            line: 330,
            column: 13
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 13
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "43": {
        loc: {
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: 342,
            column: 13
          },
          end: {
            line: 354,
            column: 9
          }
        }],
        line: 339
      },
      "44": {
        loc: {
          start: {
            line: 342,
            column: 13
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 13
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: 345,
            column: 13
          },
          end: {
            line: 354,
            column: 9
          }
        }],
        line: 342
      },
      "45": {
        loc: {
          start: {
            line: 345,
            column: 13
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 13
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "46": {
        loc: {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 349,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 349,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "47": {
        loc: {
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 352,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 352,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "48": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: 367,
            column: 13
          },
          end: {
            line: 372,
            column: 9
          }
        }],
        line: 361
      },
      "49": {
        loc: {
          start: {
            line: 363,
            column: 19
          },
          end: {
            line: 365,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 18
          },
          end: {
            line: 364,
            column: 33
          }
        }, {
          start: {
            line: 365,
            column: 18
          },
          end: {
            line: 365,
            column: 28
          }
        }],
        line: 363
      },
      "50": {
        loc: {
          start: {
            line: 363,
            column: 19
          },
          end: {
            line: 363,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 19
          },
          end: {
            line: 363,
            column: 45
          }
        }, {
          start: {
            line: 363,
            column: 49
          },
          end: {
            line: 363,
            column: 73
          }
        }],
        line: 363
      },
      "51": {
        loc: {
          start: {
            line: 367,
            column: 13
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 13
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: 370,
            column: 13
          },
          end: {
            line: 372,
            column: 9
          }
        }],
        line: 367
      },
      "52": {
        loc: {
          start: {
            line: 370,
            column: 13
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 13
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "53": {
        loc: {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 41
          }
        }, {
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 402,
            column: 43
          }
        }, {
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 403,
            column: 45
          }
        }, {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 404,
            column: 42
          }
        }, {
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 405,
            column: 35
          }
        }],
        line: 400
      },
      "54": {
        loc: {
          start: {
            line: 412,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 413,
            column: 48
          }
        }, {
          start: {
            line: 414,
            column: 12
          },
          end: {
            line: 414,
            column: 61
          }
        }, {
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 415,
            column: 57
          }
        }, {
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 416,
            column: 57
          }
        }, {
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 417,
            column: 50
          }
        }],
        line: 412
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0, 0, 0, 0],
      "54": [0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFSerializer.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFSerializer.ts"],
      sourcesContent: ["/**\n * RDF Serializer for converting Graph instances to various RDF formats\n * Supports Turtle (.ttl), N-Triples (.nt), JSON-LD (.jsonld), and RDF/XML (.rdf)\n */\n\nimport { Graph } from '../../domain/semantic/core/Graph';\nimport { Triple, IRI, BlankNode, Literal } from '../../domain/semantic/core/Triple';\nimport { Result } from '../../domain/core/Result';\nimport { NamespaceManager } from './NamespaceManager';\n\nexport type RDFFormat = 'turtle' | 'n-triples' | 'json-ld' | 'rdf-xml';\n\nexport interface SerializationOptions {\n    format: RDFFormat;\n    includeComments?: boolean;\n    prettyPrint?: boolean;\n    baseIRI?: string;\n    namespaceManager?: NamespaceManager;\n}\n\nexport interface SerializationResult {\n    content: string;\n    format: RDFFormat;\n    tripleCount: number;\n    metadata?: {\n        namespaces: Record<string, string>;\n        warnings?: string[];\n    };\n}\n\nexport class RDFSerializer {\n    private namespaceManager: NamespaceManager;\n    \n    constructor(namespaceManager?: NamespaceManager) {\n        this.namespaceManager = namespaceManager || new NamespaceManager();\n    }\n    \n    /**\n     * Serialize a graph to the specified RDF format\n     */\n    serialize(graph: Graph, options: SerializationOptions): Result<SerializationResult> {\n        try {\n            // Validate baseIRI if provided\n            if (options.baseIRI) {\n                try {\n                    new URL(options.baseIRI);\n                } catch {\n                    return Result.fail(`Invalid base IRI: ${options.baseIRI}`);\n                }\n            }\n            \n            const nm = options.namespaceManager || this.namespaceManager;\n            \n            let content: string;\n            const warnings: string[] = [];\n            \n            switch (options.format) {\n                case 'turtle':\n                    content = this.serializeToTurtle(graph, nm, options);\n                    break;\n                    \n                case 'n-triples':\n                    content = this.serializeToNTriples(graph, warnings);\n                    break;\n                    \n                case 'json-ld':\n                    content = this.serializeToJSONLD(graph, nm, options);\n                    break;\n                    \n                case 'rdf-xml':\n                    content = this.serializeToRDFXML(graph, nm, options);\n                    break;\n                    \n                default:\n                    return Result.fail(`Unsupported format: ${options.format}`);\n            }\n            \n            const result: SerializationResult = {\n                content,\n                format: options.format,\n                tripleCount: graph.size(),\n                metadata: {\n                    namespaces: this.extractNamespaces(nm),\n                    warnings: warnings.length > 0 ? warnings : undefined\n                }\n            };\n            \n            return Result.ok(result);\n        } catch (error) {\n            return Result.fail(`Serialization failed: ${error.message}`);\n        }\n    }\n    \n    /**\n     * Serialize graph to Turtle format\n     */\n    private serializeToTurtle(graph: Graph, nm: NamespaceManager, options: SerializationOptions): string {\n        const lines: string[] = [];\n        const { includeComments = true, prettyPrint = true } = options;\n        \n        // Add header comment\n        if (includeComments) {\n            lines.push('# RDF Graph exported from Exocortex');\n            lines.push(`# Generated on ${new Date().toISOString()}`);\n            lines.push(`# Triple count: ${graph.size()}`);\n            lines.push('');\n        }\n        \n        // Add namespace prefixes\n        const prefixDeclarations = nm.generatePrefixDeclarations('turtle');\n        if (prefixDeclarations) {\n            lines.push(prefixDeclarations);\n            lines.push('');\n        }\n        \n        // Group triples by subject for prettier output\n        const subjectGroups = this.groupTriplesBySubject(graph);\n        \n        for (const [subject, triples] of subjectGroups) {\n            if (triples.length === 0) continue;\n            \n            const subjectStr = this.formatNode(subject, nm);\n            \n            if (triples.length === 1) {\n                // Single triple on one line\n                const triple = triples[0];\n                const predicateStr = this.formatNode(triple.getPredicate(), nm);\n                const objectStr = this.formatNode(triple.getObject(), nm);\n                lines.push(`${subjectStr} ${predicateStr} ${objectStr} .`);\n            } else {\n                // Multiple triples with same subject - pretty print\n                lines.push(`${subjectStr}`);\n                \n                // Group by predicate\n                const predicateGroups = this.groupTriplesByPredicate(triples);\n                const predicateEntries = Array.from(predicateGroups.entries());\n                \n                for (let i = 0; i < predicateEntries.length; i++) {\n                    const [predicate, objects] = predicateEntries[i];\n                    const predicateStr = this.formatNode(predicate, nm);\n                    const isLast = i === predicateEntries.length - 1;\n                    \n                    if (objects.length === 1) {\n                        const objectStr = this.formatNode(objects[0], nm);\n                        lines.push(`    ${predicateStr} ${objectStr}${isLast ? ' .' : ' ;'}`);\n                    } else {\n                        lines.push(`    ${predicateStr}`);\n                        for (let j = 0; j < objects.length; j++) {\n                            const objectStr = this.formatNode(objects[j], nm);\n                            const isLastObject = j === objects.length - 1;\n                            const suffix = isLastObject ? (isLast ? ' .' : ' ;') : ' ,';\n                            lines.push(`        ${objectStr}${suffix}`);\n                        }\n                    }\n                }\n            }\n            \n            if (prettyPrint) {\n                lines.push(''); // Empty line between subject groups\n            }\n        }\n        \n        return lines.join('\\n');\n    }\n    \n    /**\n     * Serialize graph to N-Triples format\n     */\n    private serializeToNTriples(graph: Graph, warnings: string[]): string {\n        const lines: string[] = [];\n        \n        for (const triple of graph.toArray()) {\n            try {\n                const subjectStr = this.formatNodeNTriples(triple.getSubject());\n                const predicateStr = this.formatNodeNTriples(triple.getPredicate());\n                const objectStr = this.formatNodeNTriples(triple.getObject());\n                \n                lines.push(`${subjectStr} ${predicateStr} ${objectStr} .`);\n            } catch (error) {\n                warnings.push(`Failed to serialize triple: ${error.message}`);\n            }\n        }\n        \n        return lines.join('\\n');\n    }\n    \n    /**\n     * Serialize graph to JSON-LD format\n     */\n    private serializeToJSONLD(graph: Graph, nm: NamespaceManager, options: SerializationOptions): string {\n        const context: Record<string, string> = {};\n        \n        // Build context from namespace manager\n        for (const binding of nm.getAllBindings()) {\n            context[binding.prefix] = binding.namespace.toString();\n        }\n        \n        // Add base IRI if specified\n        if (options.baseIRI) {\n            context['@base'] = options.baseIRI;\n        }\n        \n        // Group triples by subject\n        const subjects: Record<string, any> = {};\n        \n        for (const triple of graph.toArray()) {\n            const subjectId = this.formatNodeJSONLD(triple.getSubject(), nm);\n            const predicate = this.formatNodeJSONLD(triple.getPredicate(), nm);\n            const object = this.formatObjectJSONLD(triple.getObject(), nm);\n            \n            if (!subjects[subjectId]) {\n                subjects[subjectId] = { '@id': subjectId };\n            }\n            \n            // Handle multiple values for same predicate\n            if (subjects[subjectId][predicate]) {\n                if (!Array.isArray(subjects[subjectId][predicate])) {\n                    subjects[subjectId][predicate] = [subjects[subjectId][predicate]];\n                }\n                subjects[subjectId][predicate].push(object);\n            } else {\n                subjects[subjectId][predicate] = object;\n            }\n        }\n        \n        const jsonLD = {\n            '@context': context,\n            '@graph': Object.values(subjects)\n        };\n        \n        return JSON.stringify(jsonLD, null, options.prettyPrint ? 2 : 0);\n    }\n    \n    /**\n     * Serialize graph to RDF/XML format\n     */\n    private serializeToRDFXML(graph: Graph, nm: NamespaceManager, options: SerializationOptions): string {\n        const lines: string[] = [];\n        \n        // XML header\n        lines.push('<?xml version=\"1.0\" encoding=\"UTF-8\"?>');\n        \n        // RDF root element with namespace declarations\n        let rdfElement = '<rdf:RDF';\n        rdfElement += ' xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"';\n        \n        for (const binding of nm.getAllBindings()) {\n            if (binding.prefix !== 'rdf') {\n                rdfElement += ` xmlns:${binding.prefix}=\"${binding.namespace.toString()}\"`;\n            }\n        }\n        \n        if (options.baseIRI) {\n            rdfElement += ` xml:base=\"${options.baseIRI}\"`;\n        }\n        \n        rdfElement += '>';\n        lines.push(rdfElement);\n        \n        // Group triples by subject\n        const subjectGroups = this.groupTriplesBySubject(graph);\n        \n        for (const [subject, triples] of subjectGroups) {\n            if (triples.length === 0) continue;\n            \n            // Determine RDF Description or typed resource\n            const rdfTypeTriples = triples.filter(t => \n                t.getPredicate().toString() === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'\n            );\n            \n            if (rdfTypeTriples.length > 0) {\n                // Use typed element\n                const type = rdfTypeTriples[0].getObject();\n                const typeStr = this.formatNodeRDFXML(type, nm);\n                lines.push(`  <${typeStr} rdf:about=\"${this.escapeXML(subject.toString())}\">`);\n            } else {\n                // Use rdf:Description\n                lines.push(`  <rdf:Description rdf:about=\"${this.escapeXML(subject.toString())}\">`);\n            }\n            \n            // Add properties\n            for (const triple of triples) {\n                const predicate = triple.getPredicate();\n                const object = triple.getObject();\n                \n                // Skip rdf:type as it's handled above\n                if (predicate.toString() === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') {\n                    continue;\n                }\n                \n                const predicateStr = this.formatNodeRDFXML(predicate, nm);\n                \n                if (object instanceof Literal) {\n                    let literalElement = `    <${predicateStr}`;\n                    \n                    if (object.getDatatype()) {\n                        literalElement += ` rdf:datatype=\"${this.escapeXML(object.getDatatype()!.toString())}\"`;\n                    }\n                    \n                    if (object.getLanguage()) {\n                        literalElement += ` xml:lang=\"${object.getLanguage()}\"`;\n                    }\n                    \n                    literalElement += `>${this.escapeXML(object.getValue())}</${predicateStr}>`;\n                    lines.push(literalElement);\n                } else {\n                    // IRI or BlankNode\n                    const objectAttr = object instanceof BlankNode \n                        ? `rdf:nodeID=\"${object.toString().substring(2)}\"` \n                        : `rdf:resource=\"${this.escapeXML(object.toString())}\"`;\n                    \n                    lines.push(`    <${predicateStr} ${objectAttr}/>`);\n                }\n            }\n            \n            // Close element\n            if (rdfTypeTriples.length > 0) {\n                const type = rdfTypeTriples[0].getObject();\n                const typeStr = this.formatNodeRDFXML(type, nm);\n                lines.push(`  </${typeStr}>`);\n            } else {\n                lines.push('  </rdf:Description>');\n            }\n        }\n        \n        lines.push('</rdf:RDF>');\n        \n        return lines.join('\\n');\n    }\n    \n    /**\n     * Group triples by subject\n     */\n    private groupTriplesBySubject(graph: Graph): Map<IRI | BlankNode, Triple[]> {\n        const groups = new Map<IRI | BlankNode, Triple[]>();\n        \n        for (const triple of graph.toArray()) {\n            const subject = triple.getSubject();\n            const subjectKey = subject.toString();\n            \n            if (!groups.has(subject)) {\n                groups.set(subject, []);\n            }\n            \n            groups.get(subject)!.push(triple);\n        }\n        \n        return groups;\n    }\n    \n    /**\n     * Group triples by predicate\n     */\n    private groupTriplesByPredicate(triples: Triple[]): Map<IRI, (IRI | BlankNode | Literal)[]> {\n        const groups = new Map<IRI, (IRI | BlankNode | Literal)[]>();\n        \n        for (const triple of triples) {\n            const predicate = triple.getPredicate();\n            \n            if (!groups.has(predicate)) {\n                groups.set(predicate, []);\n            }\n            \n            groups.get(predicate)!.push(triple.getObject());\n        }\n        \n        return groups;\n    }\n    \n    /**\n     * Format a node for Turtle/N3 output\n     */\n    private formatNode(node: IRI | BlankNode | Literal, nm: NamespaceManager): string {\n        if (node instanceof IRI) {\n            return nm.compressIRI(node);\n        } else if (node instanceof BlankNode) {\n            return node.toString();\n        } else if (node instanceof Literal) {\n            return node.toString();\n        }\n        \n        throw new Error(`Unknown node type: ${typeof node}`);\n    }\n    \n    /**\n     * Format a node for N-Triples output (no prefixes)\n     */\n    private formatNodeNTriples(node: IRI | BlankNode | Literal): string {\n        if (node instanceof IRI) {\n            return `<${node.toString()}>`;\n        } else if (node instanceof BlankNode) {\n            return node.toString();\n        } else if (node instanceof Literal) {\n            return node.toString();\n        }\n        \n        throw new Error(`Unknown node type: ${typeof node}`);\n    }\n    \n    /**\n     * Format a node for JSON-LD output\n     */\n    private formatNodeJSONLD(node: IRI | BlankNode, nm: NamespaceManager): string {\n        if (node instanceof IRI) {\n            const compressed = nm.compressIRI(node);\n            return compressed.startsWith('<') && compressed.endsWith('>') \n                ? compressed.slice(1, -1) // Remove angle brackets\n                : compressed;\n        } else if (node instanceof BlankNode) {\n            return node.toString();\n        }\n        \n        throw new Error(`Invalid node type for JSON-LD ID: ${typeof node}`);\n    }\n    \n    /**\n     * Format an object for JSON-LD output\n     */\n    private formatObjectJSONLD(object: IRI | BlankNode | Literal, nm: NamespaceManager): any {\n        if (object instanceof IRI) {\n            return { '@id': this.formatNodeJSONLD(object, nm) };\n        } else if (object instanceof BlankNode) {\n            return { '@id': object.toString() };\n        } else if (object instanceof Literal) {\n            const result: any = { '@value': object.getValue() };\n            \n            if (object.getDatatype()) {\n                result['@type'] = this.formatNodeJSONLD(object.getDatatype()!, nm);\n            }\n            \n            if (object.getLanguage()) {\n                result['@language'] = object.getLanguage();\n            }\n            \n            return result;\n        }\n        \n        throw new Error(`Unknown object type: ${typeof object}`);\n    }\n    \n    /**\n     * Format a node for RDF/XML output\n     */\n    private formatNodeRDFXML(node: IRI | BlankNode | Literal, nm: NamespaceManager): string {\n        if (node instanceof IRI) {\n            const compressed = nm.compressIRI(node);\n            return compressed.startsWith('<') && compressed.endsWith('>')\n                ? node.toString() // Use full IRI if compression failed\n                : compressed;\n        } else if (node instanceof BlankNode) {\n            return node.toString();\n        } else if (node instanceof Literal) {\n            return node.toString();\n        }\n        \n        throw new Error(`Unknown node type: ${typeof node}`);\n    }\n    \n    /**\n     * Escape special XML characters\n     */\n    private escapeXML(text: string): string {\n        return text\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    }\n    \n    /**\n     * Extract namespaces from namespace manager\n     */\n    private extractNamespaces(nm: NamespaceManager): Record<string, string> {\n        const namespaces: Record<string, string> = {};\n        \n        for (const binding of nm.getAllBindings()) {\n            namespaces[binding.prefix] = binding.namespace.toString();\n        }\n        \n        return namespaces;\n    }\n    \n    /**\n     * Get file extension for format\n     */\n    static getFileExtension(format: RDFFormat): string {\n        switch (format) {\n            case 'turtle': return '.ttl';\n            case 'n-triples': return '.nt';\n            case 'json-ld': return '.jsonld';\n            case 'rdf-xml': return '.rdf';\n            default: return '.rdf';\n        }\n    }\n    \n    /**\n     * Get MIME type for format\n     */\n    static getMimeType(format: RDFFormat): string {\n        switch (format) {\n            case 'turtle': return 'text/turtle';\n            case 'n-triples': return 'application/n-triples';\n            case 'json-ld': return 'application/ld+json';\n            case 'rdf-xml': return 'application/rdf+xml';\n            default: return 'application/rdf+xml';\n        }\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c92064ec014ace8faf124d347aa38bffa4c1d505"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_34tvgab89 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_34tvgab89();
cov_34tvgab89().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_34tvgab89().s[1]++;
exports.RDFSerializer = void 0;
const Triple_1 =
/* istanbul ignore next */
(cov_34tvgab89().s[2]++, require("../../domain/semantic/core/Triple"));
const Result_1 =
/* istanbul ignore next */
(cov_34tvgab89().s[3]++, require("../../domain/core/Result"));
const NamespaceManager_1 =
/* istanbul ignore next */
(cov_34tvgab89().s[4]++, require("./NamespaceManager"));
class RDFSerializer {
  constructor(namespaceManager) {
    /* istanbul ignore next */
    cov_34tvgab89().f[0]++;
    cov_34tvgab89().s[5]++;
    this.namespaceManager =
    /* istanbul ignore next */
    (cov_34tvgab89().b[0][0]++, namespaceManager) ||
    /* istanbul ignore next */
    (cov_34tvgab89().b[0][1]++, new NamespaceManager_1.NamespaceManager());
  }
  /**
   * Serialize a graph to the specified RDF format
   */
  serialize(graph, options) {
    /* istanbul ignore next */
    cov_34tvgab89().f[1]++;
    cov_34tvgab89().s[6]++;
    try {
      /* istanbul ignore next */
      cov_34tvgab89().s[7]++;
      // Validate baseIRI if provided
      if (options.baseIRI) {
        /* istanbul ignore next */
        cov_34tvgab89().b[1][0]++;
        cov_34tvgab89().s[8]++;
        try {
          /* istanbul ignore next */
          cov_34tvgab89().s[9]++;
          new URL(options.baseIRI);
        } catch (_a) {
          /* istanbul ignore next */
          cov_34tvgab89().s[10]++;
          return Result_1.Result.fail(`Invalid base IRI: ${options.baseIRI}`);
        }
      } else
      /* istanbul ignore next */
      {
        cov_34tvgab89().b[1][1]++;
      }
      const nm =
      /* istanbul ignore next */
      (cov_34tvgab89().s[11]++,
      /* istanbul ignore next */
      (cov_34tvgab89().b[2][0]++, options.namespaceManager) ||
      /* istanbul ignore next */
      (cov_34tvgab89().b[2][1]++, this.namespaceManager));
      let content;
      const warnings =
      /* istanbul ignore next */
      (cov_34tvgab89().s[12]++, []);
      /* istanbul ignore next */
      cov_34tvgab89().s[13]++;
      switch (options.format) {
        case 'turtle':
          /* istanbul ignore next */
          cov_34tvgab89().b[3][0]++;
          cov_34tvgab89().s[14]++;
          content = this.serializeToTurtle(graph, nm, options);
          /* istanbul ignore next */
          cov_34tvgab89().s[15]++;
          break;
        case 'n-triples':
          /* istanbul ignore next */
          cov_34tvgab89().b[3][1]++;
          cov_34tvgab89().s[16]++;
          content = this.serializeToNTriples(graph, warnings);
          /* istanbul ignore next */
          cov_34tvgab89().s[17]++;
          break;
        case 'json-ld':
          /* istanbul ignore next */
          cov_34tvgab89().b[3][2]++;
          cov_34tvgab89().s[18]++;
          content = this.serializeToJSONLD(graph, nm, options);
          /* istanbul ignore next */
          cov_34tvgab89().s[19]++;
          break;
        case 'rdf-xml':
          /* istanbul ignore next */
          cov_34tvgab89().b[3][3]++;
          cov_34tvgab89().s[20]++;
          content = this.serializeToRDFXML(graph, nm, options);
          /* istanbul ignore next */
          cov_34tvgab89().s[21]++;
          break;
        default:
          /* istanbul ignore next */
          cov_34tvgab89().b[3][4]++;
          cov_34tvgab89().s[22]++;
          return Result_1.Result.fail(`Unsupported format: ${options.format}`);
      }
      const result =
      /* istanbul ignore next */
      (cov_34tvgab89().s[23]++, {
        content,
        format: options.format,
        tripleCount: graph.size(),
        metadata: {
          namespaces: this.extractNamespaces(nm),
          warnings: warnings.length > 0 ?
          /* istanbul ignore next */
          (cov_34tvgab89().b[4][0]++, warnings) :
          /* istanbul ignore next */
          (cov_34tvgab89().b[4][1]++, undefined)
        }
      });
      /* istanbul ignore next */
      cov_34tvgab89().s[24]++;
      return Result_1.Result.ok(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_34tvgab89().s[25]++;
      return Result_1.Result.fail(`Serialization failed: ${error.message}`);
    }
  }
  /**
   * Serialize graph to Turtle format
   */
  serializeToTurtle(graph, nm, options) {
    /* istanbul ignore next */
    cov_34tvgab89().f[2]++;
    const lines =
    /* istanbul ignore next */
    (cov_34tvgab89().s[26]++, []);
    const {
      includeComments =
      /* istanbul ignore next */
      (cov_34tvgab89().b[5][0]++, true),
      prettyPrint =
      /* istanbul ignore next */
      (cov_34tvgab89().b[6][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_34tvgab89().s[27]++, options);
    // Add header comment
    /* istanbul ignore next */
    cov_34tvgab89().s[28]++;
    if (includeComments) {
      /* istanbul ignore next */
      cov_34tvgab89().b[7][0]++;
      cov_34tvgab89().s[29]++;
      lines.push('# RDF Graph exported from Exocortex');
      /* istanbul ignore next */
      cov_34tvgab89().s[30]++;
      lines.push(`# Generated on ${new Date().toISOString()}`);
      /* istanbul ignore next */
      cov_34tvgab89().s[31]++;
      lines.push(`# Triple count: ${graph.size()}`);
      /* istanbul ignore next */
      cov_34tvgab89().s[32]++;
      lines.push('');
    } else
    /* istanbul ignore next */
    {
      cov_34tvgab89().b[7][1]++;
    }
    // Add namespace prefixes
    const prefixDeclarations =
    /* istanbul ignore next */
    (cov_34tvgab89().s[33]++, nm.generatePrefixDeclarations('turtle'));
    /* istanbul ignore next */
    cov_34tvgab89().s[34]++;
    if (prefixDeclarations) {
      /* istanbul ignore next */
      cov_34tvgab89().b[8][0]++;
      cov_34tvgab89().s[35]++;
      lines.push(prefixDeclarations);
      /* istanbul ignore next */
      cov_34tvgab89().s[36]++;
      lines.push('');
    } else
    /* istanbul ignore next */
    {
      cov_34tvgab89().b[8][1]++;
    }
    // Group triples by subject for prettier output
    const subjectGroups =
    /* istanbul ignore next */
    (cov_34tvgab89().s[37]++, this.groupTriplesBySubject(graph));
    /* istanbul ignore next */
    cov_34tvgab89().s[38]++;
    for (const [subject, triples] of subjectGroups) {
      /* istanbul ignore next */
      cov_34tvgab89().s[39]++;
      if (triples.length === 0) {
        /* istanbul ignore next */
        cov_34tvgab89().b[9][0]++;
        cov_34tvgab89().s[40]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_34tvgab89().b[9][1]++;
      }
      const subjectStr =
      /* istanbul ignore next */
      (cov_34tvgab89().s[41]++, this.formatNode(subject, nm));
      /* istanbul ignore next */
      cov_34tvgab89().s[42]++;
      if (triples.length === 1) {
        /* istanbul ignore next */
        cov_34tvgab89().b[10][0]++;
        // Single triple on one line
        const triple =
        /* istanbul ignore next */
        (cov_34tvgab89().s[43]++, triples[0]);
        const predicateStr =
        /* istanbul ignore next */
        (cov_34tvgab89().s[44]++, this.formatNode(triple.getPredicate(), nm));
        const objectStr =
        /* istanbul ignore next */
        (cov_34tvgab89().s[45]++, this.formatNode(triple.getObject(), nm));
        /* istanbul ignore next */
        cov_34tvgab89().s[46]++;
        lines.push(`${subjectStr} ${predicateStr} ${objectStr} .`);
      } else {
        /* istanbul ignore next */
        cov_34tvgab89().b[10][1]++;
        cov_34tvgab89().s[47]++;
        // Multiple triples with same subject - pretty print
        lines.push(`${subjectStr}`);
        // Group by predicate
        const predicateGroups =
        /* istanbul ignore next */
        (cov_34tvgab89().s[48]++, this.groupTriplesByPredicate(triples));
        const predicateEntries =
        /* istanbul ignore next */
        (cov_34tvgab89().s[49]++, Array.from(predicateGroups.entries()));
        /* istanbul ignore next */
        cov_34tvgab89().s[50]++;
        for (let i =
        /* istanbul ignore next */
        (cov_34tvgab89().s[51]++, 0); i < predicateEntries.length; i++) {
          const [predicate, objects] =
          /* istanbul ignore next */
          (cov_34tvgab89().s[52]++, predicateEntries[i]);
          const predicateStr =
          /* istanbul ignore next */
          (cov_34tvgab89().s[53]++, this.formatNode(predicate, nm));
          const isLast =
          /* istanbul ignore next */
          (cov_34tvgab89().s[54]++, i === predicateEntries.length - 1);
          /* istanbul ignore next */
          cov_34tvgab89().s[55]++;
          if (objects.length === 1) {
            /* istanbul ignore next */
            cov_34tvgab89().b[11][0]++;
            const objectStr =
            /* istanbul ignore next */
            (cov_34tvgab89().s[56]++, this.formatNode(objects[0], nm));
            /* istanbul ignore next */
            cov_34tvgab89().s[57]++;
            lines.push(`    ${predicateStr} ${objectStr}${isLast ?
            /* istanbul ignore next */
            (cov_34tvgab89().b[12][0]++, ' .') :
            /* istanbul ignore next */
            (cov_34tvgab89().b[12][1]++, ' ;')}`);
          } else {
            /* istanbul ignore next */
            cov_34tvgab89().b[11][1]++;
            cov_34tvgab89().s[58]++;
            lines.push(`    ${predicateStr}`);
            /* istanbul ignore next */
            cov_34tvgab89().s[59]++;
            for (let j =
            /* istanbul ignore next */
            (cov_34tvgab89().s[60]++, 0); j < objects.length; j++) {
              const objectStr =
              /* istanbul ignore next */
              (cov_34tvgab89().s[61]++, this.formatNode(objects[j], nm));
              const isLastObject =
              /* istanbul ignore next */
              (cov_34tvgab89().s[62]++, j === objects.length - 1);
              const suffix =
              /* istanbul ignore next */
              (cov_34tvgab89().s[63]++, isLastObject ?
              /* istanbul ignore next */
              (cov_34tvgab89().b[13][0]++, isLast ?
              /* istanbul ignore next */
              (cov_34tvgab89().b[14][0]++, ' .') :
              /* istanbul ignore next */
              (cov_34tvgab89().b[14][1]++, ' ;')) :
              /* istanbul ignore next */
              (cov_34tvgab89().b[13][1]++, ' ,'));
              /* istanbul ignore next */
              cov_34tvgab89().s[64]++;
              lines.push(`        ${objectStr}${suffix}`);
            }
          }
        }
      }
      /* istanbul ignore next */
      cov_34tvgab89().s[65]++;
      if (prettyPrint) {
        /* istanbul ignore next */
        cov_34tvgab89().b[15][0]++;
        cov_34tvgab89().s[66]++;
        lines.push(''); // Empty line between subject groups
      } else
      /* istanbul ignore next */
      {
        cov_34tvgab89().b[15][1]++;
      }
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[67]++;
    return lines.join('\n');
  }
  /**
   * Serialize graph to N-Triples format
   */
  serializeToNTriples(graph, warnings) {
    /* istanbul ignore next */
    cov_34tvgab89().f[3]++;
    const lines =
    /* istanbul ignore next */
    (cov_34tvgab89().s[68]++, []);
    /* istanbul ignore next */
    cov_34tvgab89().s[69]++;
    for (const triple of graph.toArray()) {
      /* istanbul ignore next */
      cov_34tvgab89().s[70]++;
      try {
        const subjectStr =
        /* istanbul ignore next */
        (cov_34tvgab89().s[71]++, this.formatNodeNTriples(triple.getSubject()));
        const predicateStr =
        /* istanbul ignore next */
        (cov_34tvgab89().s[72]++, this.formatNodeNTriples(triple.getPredicate()));
        const objectStr =
        /* istanbul ignore next */
        (cov_34tvgab89().s[73]++, this.formatNodeNTriples(triple.getObject()));
        /* istanbul ignore next */
        cov_34tvgab89().s[74]++;
        lines.push(`${subjectStr} ${predicateStr} ${objectStr} .`);
      } catch (error) {
        /* istanbul ignore next */
        cov_34tvgab89().s[75]++;
        warnings.push(`Failed to serialize triple: ${error.message}`);
      }
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[76]++;
    return lines.join('\n');
  }
  /**
   * Serialize graph to JSON-LD format
   */
  serializeToJSONLD(graph, nm, options) {
    /* istanbul ignore next */
    cov_34tvgab89().f[4]++;
    const context =
    /* istanbul ignore next */
    (cov_34tvgab89().s[77]++, {});
    // Build context from namespace manager
    /* istanbul ignore next */
    cov_34tvgab89().s[78]++;
    for (const binding of nm.getAllBindings()) {
      /* istanbul ignore next */
      cov_34tvgab89().s[79]++;
      context[binding.prefix] = binding.namespace.toString();
    }
    // Add base IRI if specified
    /* istanbul ignore next */
    cov_34tvgab89().s[80]++;
    if (options.baseIRI) {
      /* istanbul ignore next */
      cov_34tvgab89().b[16][0]++;
      cov_34tvgab89().s[81]++;
      context['@base'] = options.baseIRI;
    } else
    /* istanbul ignore next */
    {
      cov_34tvgab89().b[16][1]++;
    }
    // Group triples by subject
    const subjects =
    /* istanbul ignore next */
    (cov_34tvgab89().s[82]++, {});
    /* istanbul ignore next */
    cov_34tvgab89().s[83]++;
    for (const triple of graph.toArray()) {
      const subjectId =
      /* istanbul ignore next */
      (cov_34tvgab89().s[84]++, this.formatNodeJSONLD(triple.getSubject(), nm));
      const predicate =
      /* istanbul ignore next */
      (cov_34tvgab89().s[85]++, this.formatNodeJSONLD(triple.getPredicate(), nm));
      const object =
      /* istanbul ignore next */
      (cov_34tvgab89().s[86]++, this.formatObjectJSONLD(triple.getObject(), nm));
      /* istanbul ignore next */
      cov_34tvgab89().s[87]++;
      if (!subjects[subjectId]) {
        /* istanbul ignore next */
        cov_34tvgab89().b[17][0]++;
        cov_34tvgab89().s[88]++;
        subjects[subjectId] = {
          '@id': subjectId
        };
      } else
      /* istanbul ignore next */
      {
        cov_34tvgab89().b[17][1]++;
      }
      // Handle multiple values for same predicate
      cov_34tvgab89().s[89]++;
      if (subjects[subjectId][predicate]) {
        /* istanbul ignore next */
        cov_34tvgab89().b[18][0]++;
        cov_34tvgab89().s[90]++;
        if (!Array.isArray(subjects[subjectId][predicate])) {
          /* istanbul ignore next */
          cov_34tvgab89().b[19][0]++;
          cov_34tvgab89().s[91]++;
          subjects[subjectId][predicate] = [subjects[subjectId][predicate]];
        } else
        /* istanbul ignore next */
        {
          cov_34tvgab89().b[19][1]++;
        }
        cov_34tvgab89().s[92]++;
        subjects[subjectId][predicate].push(object);
      } else {
        /* istanbul ignore next */
        cov_34tvgab89().b[18][1]++;
        cov_34tvgab89().s[93]++;
        subjects[subjectId][predicate] = object;
      }
    }
    const jsonLD =
    /* istanbul ignore next */
    (cov_34tvgab89().s[94]++, {
      '@context': context,
      '@graph': Object.values(subjects)
    });
    /* istanbul ignore next */
    cov_34tvgab89().s[95]++;
    return JSON.stringify(jsonLD, null, options.prettyPrint ?
    /* istanbul ignore next */
    (cov_34tvgab89().b[20][0]++, 2) :
    /* istanbul ignore next */
    (cov_34tvgab89().b[20][1]++, 0));
  }
  /**
   * Serialize graph to RDF/XML format
   */
  serializeToRDFXML(graph, nm, options) {
    /* istanbul ignore next */
    cov_34tvgab89().f[5]++;
    const lines =
    /* istanbul ignore next */
    (cov_34tvgab89().s[96]++, []);
    // XML header
    /* istanbul ignore next */
    cov_34tvgab89().s[97]++;
    lines.push('<?xml version="1.0" encoding="UTF-8"?>');
    // RDF root element with namespace declarations
    let rdfElement =
    /* istanbul ignore next */
    (cov_34tvgab89().s[98]++, '<rdf:RDF');
    /* istanbul ignore next */
    cov_34tvgab89().s[99]++;
    rdfElement += ' xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"';
    /* istanbul ignore next */
    cov_34tvgab89().s[100]++;
    for (const binding of nm.getAllBindings()) {
      /* istanbul ignore next */
      cov_34tvgab89().s[101]++;
      if (binding.prefix !== 'rdf') {
        /* istanbul ignore next */
        cov_34tvgab89().b[21][0]++;
        cov_34tvgab89().s[102]++;
        rdfElement += ` xmlns:${binding.prefix}="${binding.namespace.toString()}"`;
      } else
      /* istanbul ignore next */
      {
        cov_34tvgab89().b[21][1]++;
      }
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[103]++;
    if (options.baseIRI) {
      /* istanbul ignore next */
      cov_34tvgab89().b[22][0]++;
      cov_34tvgab89().s[104]++;
      rdfElement += ` xml:base="${options.baseIRI}"`;
    } else
    /* istanbul ignore next */
    {
      cov_34tvgab89().b[22][1]++;
    }
    cov_34tvgab89().s[105]++;
    rdfElement += '>';
    /* istanbul ignore next */
    cov_34tvgab89().s[106]++;
    lines.push(rdfElement);
    // Group triples by subject
    const subjectGroups =
    /* istanbul ignore next */
    (cov_34tvgab89().s[107]++, this.groupTriplesBySubject(graph));
    /* istanbul ignore next */
    cov_34tvgab89().s[108]++;
    for (const [subject, triples] of subjectGroups) {
      /* istanbul ignore next */
      cov_34tvgab89().s[109]++;
      if (triples.length === 0) {
        /* istanbul ignore next */
        cov_34tvgab89().b[23][0]++;
        cov_34tvgab89().s[110]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_34tvgab89().b[23][1]++;
      }
      // Determine RDF Description or typed resource
      const rdfTypeTriples =
      /* istanbul ignore next */
      (cov_34tvgab89().s[111]++, triples.filter(t => {
        /* istanbul ignore next */
        cov_34tvgab89().f[6]++;
        cov_34tvgab89().s[112]++;
        return t.getPredicate().toString() === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';
      }));
      /* istanbul ignore next */
      cov_34tvgab89().s[113]++;
      if (rdfTypeTriples.length > 0) {
        /* istanbul ignore next */
        cov_34tvgab89().b[24][0]++;
        // Use typed element
        const type =
        /* istanbul ignore next */
        (cov_34tvgab89().s[114]++, rdfTypeTriples[0].getObject());
        const typeStr =
        /* istanbul ignore next */
        (cov_34tvgab89().s[115]++, this.formatNodeRDFXML(type, nm));
        /* istanbul ignore next */
        cov_34tvgab89().s[116]++;
        lines.push(`  <${typeStr} rdf:about="${this.escapeXML(subject.toString())}">`);
      } else {
        /* istanbul ignore next */
        cov_34tvgab89().b[24][1]++;
        cov_34tvgab89().s[117]++;
        // Use rdf:Description
        lines.push(`  <rdf:Description rdf:about="${this.escapeXML(subject.toString())}">`);
      }
      // Add properties
      /* istanbul ignore next */
      cov_34tvgab89().s[118]++;
      for (const triple of triples) {
        const predicate =
        /* istanbul ignore next */
        (cov_34tvgab89().s[119]++, triple.getPredicate());
        const object =
        /* istanbul ignore next */
        (cov_34tvgab89().s[120]++, triple.getObject());
        // Skip rdf:type as it's handled above
        /* istanbul ignore next */
        cov_34tvgab89().s[121]++;
        if (predicate.toString() === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') {
          /* istanbul ignore next */
          cov_34tvgab89().b[25][0]++;
          cov_34tvgab89().s[122]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_34tvgab89().b[25][1]++;
        }
        const predicateStr =
        /* istanbul ignore next */
        (cov_34tvgab89().s[123]++, this.formatNodeRDFXML(predicate, nm));
        /* istanbul ignore next */
        cov_34tvgab89().s[124]++;
        if (object instanceof Triple_1.Literal) {
          /* istanbul ignore next */
          cov_34tvgab89().b[26][0]++;
          let literalElement =
          /* istanbul ignore next */
          (cov_34tvgab89().s[125]++, `    <${predicateStr}`);
          /* istanbul ignore next */
          cov_34tvgab89().s[126]++;
          if (object.getDatatype()) {
            /* istanbul ignore next */
            cov_34tvgab89().b[27][0]++;
            cov_34tvgab89().s[127]++;
            literalElement += ` rdf:datatype="${this.escapeXML(object.getDatatype().toString())}"`;
          } else
          /* istanbul ignore next */
          {
            cov_34tvgab89().b[27][1]++;
          }
          cov_34tvgab89().s[128]++;
          if (object.getLanguage()) {
            /* istanbul ignore next */
            cov_34tvgab89().b[28][0]++;
            cov_34tvgab89().s[129]++;
            literalElement += ` xml:lang="${object.getLanguage()}"`;
          } else
          /* istanbul ignore next */
          {
            cov_34tvgab89().b[28][1]++;
          }
          cov_34tvgab89().s[130]++;
          literalElement += `>${this.escapeXML(object.getValue())}</${predicateStr}>`;
          /* istanbul ignore next */
          cov_34tvgab89().s[131]++;
          lines.push(literalElement);
        } else {
          /* istanbul ignore next */
          cov_34tvgab89().b[26][1]++;
          // IRI or BlankNode
          const objectAttr =
          /* istanbul ignore next */
          (cov_34tvgab89().s[132]++, object instanceof Triple_1.BlankNode ?
          /* istanbul ignore next */
          (cov_34tvgab89().b[29][0]++, `rdf:nodeID="${object.toString().substring(2)}"`) :
          /* istanbul ignore next */
          (cov_34tvgab89().b[29][1]++, `rdf:resource="${this.escapeXML(object.toString())}"`));
          /* istanbul ignore next */
          cov_34tvgab89().s[133]++;
          lines.push(`    <${predicateStr} ${objectAttr}/>`);
        }
      }
      // Close element
      /* istanbul ignore next */
      cov_34tvgab89().s[134]++;
      if (rdfTypeTriples.length > 0) {
        /* istanbul ignore next */
        cov_34tvgab89().b[30][0]++;
        const type =
        /* istanbul ignore next */
        (cov_34tvgab89().s[135]++, rdfTypeTriples[0].getObject());
        const typeStr =
        /* istanbul ignore next */
        (cov_34tvgab89().s[136]++, this.formatNodeRDFXML(type, nm));
        /* istanbul ignore next */
        cov_34tvgab89().s[137]++;
        lines.push(`  </${typeStr}>`);
      } else {
        /* istanbul ignore next */
        cov_34tvgab89().b[30][1]++;
        cov_34tvgab89().s[138]++;
        lines.push('  </rdf:Description>');
      }
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[139]++;
    lines.push('</rdf:RDF>');
    /* istanbul ignore next */
    cov_34tvgab89().s[140]++;
    return lines.join('\n');
  }
  /**
   * Group triples by subject
   */
  groupTriplesBySubject(graph) {
    /* istanbul ignore next */
    cov_34tvgab89().f[7]++;
    const groups =
    /* istanbul ignore next */
    (cov_34tvgab89().s[141]++, new Map());
    /* istanbul ignore next */
    cov_34tvgab89().s[142]++;
    for (const triple of graph.toArray()) {
      const subject =
      /* istanbul ignore next */
      (cov_34tvgab89().s[143]++, triple.getSubject());
      const subjectKey =
      /* istanbul ignore next */
      (cov_34tvgab89().s[144]++, subject.toString());
      /* istanbul ignore next */
      cov_34tvgab89().s[145]++;
      if (!groups.has(subject)) {
        /* istanbul ignore next */
        cov_34tvgab89().b[31][0]++;
        cov_34tvgab89().s[146]++;
        groups.set(subject, []);
      } else
      /* istanbul ignore next */
      {
        cov_34tvgab89().b[31][1]++;
      }
      cov_34tvgab89().s[147]++;
      groups.get(subject).push(triple);
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[148]++;
    return groups;
  }
  /**
   * Group triples by predicate
   */
  groupTriplesByPredicate(triples) {
    /* istanbul ignore next */
    cov_34tvgab89().f[8]++;
    const groups =
    /* istanbul ignore next */
    (cov_34tvgab89().s[149]++, new Map());
    /* istanbul ignore next */
    cov_34tvgab89().s[150]++;
    for (const triple of triples) {
      const predicate =
      /* istanbul ignore next */
      (cov_34tvgab89().s[151]++, triple.getPredicate());
      /* istanbul ignore next */
      cov_34tvgab89().s[152]++;
      if (!groups.has(predicate)) {
        /* istanbul ignore next */
        cov_34tvgab89().b[32][0]++;
        cov_34tvgab89().s[153]++;
        groups.set(predicate, []);
      } else
      /* istanbul ignore next */
      {
        cov_34tvgab89().b[32][1]++;
      }
      cov_34tvgab89().s[154]++;
      groups.get(predicate).push(triple.getObject());
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[155]++;
    return groups;
  }
  /**
   * Format a node for Turtle/N3 output
   */
  formatNode(node, nm) {
    /* istanbul ignore next */
    cov_34tvgab89().f[9]++;
    cov_34tvgab89().s[156]++;
    if (node instanceof Triple_1.IRI) {
      /* istanbul ignore next */
      cov_34tvgab89().b[33][0]++;
      cov_34tvgab89().s[157]++;
      return nm.compressIRI(node);
    } else {
      /* istanbul ignore next */
      cov_34tvgab89().b[33][1]++;
      cov_34tvgab89().s[158]++;
      if (node instanceof Triple_1.BlankNode) {
        /* istanbul ignore next */
        cov_34tvgab89().b[34][0]++;
        cov_34tvgab89().s[159]++;
        return node.toString();
      } else {
        /* istanbul ignore next */
        cov_34tvgab89().b[34][1]++;
        cov_34tvgab89().s[160]++;
        if (node instanceof Triple_1.Literal) {
          /* istanbul ignore next */
          cov_34tvgab89().b[35][0]++;
          cov_34tvgab89().s[161]++;
          return node.toString();
        } else
        /* istanbul ignore next */
        {
          cov_34tvgab89().b[35][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[162]++;
    throw new Error(`Unknown node type: ${typeof node}`);
  }
  /**
   * Format a node for N-Triples output (no prefixes)
   */
  formatNodeNTriples(node) {
    /* istanbul ignore next */
    cov_34tvgab89().f[10]++;
    cov_34tvgab89().s[163]++;
    if (node instanceof Triple_1.IRI) {
      /* istanbul ignore next */
      cov_34tvgab89().b[36][0]++;
      cov_34tvgab89().s[164]++;
      return `<${node.toString()}>`;
    } else {
      /* istanbul ignore next */
      cov_34tvgab89().b[36][1]++;
      cov_34tvgab89().s[165]++;
      if (node instanceof Triple_1.BlankNode) {
        /* istanbul ignore next */
        cov_34tvgab89().b[37][0]++;
        cov_34tvgab89().s[166]++;
        return node.toString();
      } else {
        /* istanbul ignore next */
        cov_34tvgab89().b[37][1]++;
        cov_34tvgab89().s[167]++;
        if (node instanceof Triple_1.Literal) {
          /* istanbul ignore next */
          cov_34tvgab89().b[38][0]++;
          cov_34tvgab89().s[168]++;
          return node.toString();
        } else
        /* istanbul ignore next */
        {
          cov_34tvgab89().b[38][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[169]++;
    throw new Error(`Unknown node type: ${typeof node}`);
  }
  /**
   * Format a node for JSON-LD output
   */
  formatNodeJSONLD(node, nm) {
    /* istanbul ignore next */
    cov_34tvgab89().f[11]++;
    cov_34tvgab89().s[170]++;
    if (node instanceof Triple_1.IRI) {
      /* istanbul ignore next */
      cov_34tvgab89().b[39][0]++;
      const compressed =
      /* istanbul ignore next */
      (cov_34tvgab89().s[171]++, nm.compressIRI(node));
      /* istanbul ignore next */
      cov_34tvgab89().s[172]++;
      return /* istanbul ignore next */(cov_34tvgab89().b[41][0]++, compressed.startsWith('<')) &&
      /* istanbul ignore next */
      (cov_34tvgab89().b[41][1]++, compressed.endsWith('>')) ?
      /* istanbul ignore next */
      (cov_34tvgab89().b[40][0]++, compressed.slice(1, -1) // Remove angle brackets
      ) :
      /* istanbul ignore next */
      (cov_34tvgab89().b[40][1]++, compressed);
    } else {
      /* istanbul ignore next */
      cov_34tvgab89().b[39][1]++;
      cov_34tvgab89().s[173]++;
      if (node instanceof Triple_1.BlankNode) {
        /* istanbul ignore next */
        cov_34tvgab89().b[42][0]++;
        cov_34tvgab89().s[174]++;
        return node.toString();
      } else
      /* istanbul ignore next */
      {
        cov_34tvgab89().b[42][1]++;
      }
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[175]++;
    throw new Error(`Invalid node type for JSON-LD ID: ${typeof node}`);
  }
  /**
   * Format an object for JSON-LD output
   */
  formatObjectJSONLD(object, nm) {
    /* istanbul ignore next */
    cov_34tvgab89().f[12]++;
    cov_34tvgab89().s[176]++;
    if (object instanceof Triple_1.IRI) {
      /* istanbul ignore next */
      cov_34tvgab89().b[43][0]++;
      cov_34tvgab89().s[177]++;
      return {
        '@id': this.formatNodeJSONLD(object, nm)
      };
    } else {
      /* istanbul ignore next */
      cov_34tvgab89().b[43][1]++;
      cov_34tvgab89().s[178]++;
      if (object instanceof Triple_1.BlankNode) {
        /* istanbul ignore next */
        cov_34tvgab89().b[44][0]++;
        cov_34tvgab89().s[179]++;
        return {
          '@id': object.toString()
        };
      } else {
        /* istanbul ignore next */
        cov_34tvgab89().b[44][1]++;
        cov_34tvgab89().s[180]++;
        if (object instanceof Triple_1.Literal) {
          /* istanbul ignore next */
          cov_34tvgab89().b[45][0]++;
          const result =
          /* istanbul ignore next */
          (cov_34tvgab89().s[181]++, {
            '@value': object.getValue()
          });
          /* istanbul ignore next */
          cov_34tvgab89().s[182]++;
          if (object.getDatatype()) {
            /* istanbul ignore next */
            cov_34tvgab89().b[46][0]++;
            cov_34tvgab89().s[183]++;
            result['@type'] = this.formatNodeJSONLD(object.getDatatype(), nm);
          } else
          /* istanbul ignore next */
          {
            cov_34tvgab89().b[46][1]++;
          }
          cov_34tvgab89().s[184]++;
          if (object.getLanguage()) {
            /* istanbul ignore next */
            cov_34tvgab89().b[47][0]++;
            cov_34tvgab89().s[185]++;
            result['@language'] = object.getLanguage();
          } else
          /* istanbul ignore next */
          {
            cov_34tvgab89().b[47][1]++;
          }
          cov_34tvgab89().s[186]++;
          return result;
        } else
        /* istanbul ignore next */
        {
          cov_34tvgab89().b[45][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[187]++;
    throw new Error(`Unknown object type: ${typeof object}`);
  }
  /**
   * Format a node for RDF/XML output
   */
  formatNodeRDFXML(node, nm) {
    /* istanbul ignore next */
    cov_34tvgab89().f[13]++;
    cov_34tvgab89().s[188]++;
    if (node instanceof Triple_1.IRI) {
      /* istanbul ignore next */
      cov_34tvgab89().b[48][0]++;
      const compressed =
      /* istanbul ignore next */
      (cov_34tvgab89().s[189]++, nm.compressIRI(node));
      /* istanbul ignore next */
      cov_34tvgab89().s[190]++;
      return /* istanbul ignore next */(cov_34tvgab89().b[50][0]++, compressed.startsWith('<')) &&
      /* istanbul ignore next */
      (cov_34tvgab89().b[50][1]++, compressed.endsWith('>')) ?
      /* istanbul ignore next */
      (cov_34tvgab89().b[49][0]++, node.toString() // Use full IRI if compression failed
      ) :
      /* istanbul ignore next */
      (cov_34tvgab89().b[49][1]++, compressed);
    } else {
      /* istanbul ignore next */
      cov_34tvgab89().b[48][1]++;
      cov_34tvgab89().s[191]++;
      if (node instanceof Triple_1.BlankNode) {
        /* istanbul ignore next */
        cov_34tvgab89().b[51][0]++;
        cov_34tvgab89().s[192]++;
        return node.toString();
      } else {
        /* istanbul ignore next */
        cov_34tvgab89().b[51][1]++;
        cov_34tvgab89().s[193]++;
        if (node instanceof Triple_1.Literal) {
          /* istanbul ignore next */
          cov_34tvgab89().b[52][0]++;
          cov_34tvgab89().s[194]++;
          return node.toString();
        } else
        /* istanbul ignore next */
        {
          cov_34tvgab89().b[52][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[195]++;
    throw new Error(`Unknown node type: ${typeof node}`);
  }
  /**
   * Escape special XML characters
   */
  escapeXML(text) {
    /* istanbul ignore next */
    cov_34tvgab89().f[14]++;
    cov_34tvgab89().s[196]++;
    return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#39;');
  }
  /**
   * Extract namespaces from namespace manager
   */
  extractNamespaces(nm) {
    /* istanbul ignore next */
    cov_34tvgab89().f[15]++;
    const namespaces =
    /* istanbul ignore next */
    (cov_34tvgab89().s[197]++, {});
    /* istanbul ignore next */
    cov_34tvgab89().s[198]++;
    for (const binding of nm.getAllBindings()) {
      /* istanbul ignore next */
      cov_34tvgab89().s[199]++;
      namespaces[binding.prefix] = binding.namespace.toString();
    }
    /* istanbul ignore next */
    cov_34tvgab89().s[200]++;
    return namespaces;
  }
  /**
   * Get file extension for format
   */
  static getFileExtension(format) {
    /* istanbul ignore next */
    cov_34tvgab89().f[16]++;
    cov_34tvgab89().s[201]++;
    switch (format) {
      case 'turtle':
        /* istanbul ignore next */
        cov_34tvgab89().b[53][0]++;
        cov_34tvgab89().s[202]++;
        return '.ttl';
      case 'n-triples':
        /* istanbul ignore next */
        cov_34tvgab89().b[53][1]++;
        cov_34tvgab89().s[203]++;
        return '.nt';
      case 'json-ld':
        /* istanbul ignore next */
        cov_34tvgab89().b[53][2]++;
        cov_34tvgab89().s[204]++;
        return '.jsonld';
      case 'rdf-xml':
        /* istanbul ignore next */
        cov_34tvgab89().b[53][3]++;
        cov_34tvgab89().s[205]++;
        return '.rdf';
      default:
        /* istanbul ignore next */
        cov_34tvgab89().b[53][4]++;
        cov_34tvgab89().s[206]++;
        return '.rdf';
    }
  }
  /**
   * Get MIME type for format
   */
  static getMimeType(format) {
    /* istanbul ignore next */
    cov_34tvgab89().f[17]++;
    cov_34tvgab89().s[207]++;
    switch (format) {
      case 'turtle':
        /* istanbul ignore next */
        cov_34tvgab89().b[54][0]++;
        cov_34tvgab89().s[208]++;
        return 'text/turtle';
      case 'n-triples':
        /* istanbul ignore next */
        cov_34tvgab89().b[54][1]++;
        cov_34tvgab89().s[209]++;
        return 'application/n-triples';
      case 'json-ld':
        /* istanbul ignore next */
        cov_34tvgab89().b[54][2]++;
        cov_34tvgab89().s[210]++;
        return 'application/ld+json';
      case 'rdf-xml':
        /* istanbul ignore next */
        cov_34tvgab89().b[54][3]++;
        cov_34tvgab89().s[211]++;
        return 'application/rdf+xml';
      default:
        /* istanbul ignore next */
        cov_34tvgab89().b[54][4]++;
        cov_34tvgab89().s[212]++;
        return 'application/rdf+xml';
    }
  }
}
/* istanbul ignore next */
cov_34tvgab89().s[213]++;
exports.RDFSerializer = RDFSerializer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,