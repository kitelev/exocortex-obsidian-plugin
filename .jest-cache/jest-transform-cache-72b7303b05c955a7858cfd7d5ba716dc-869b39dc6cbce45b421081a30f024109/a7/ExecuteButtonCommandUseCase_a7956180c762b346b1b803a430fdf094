baab3e9f8c728be01d1d753fa9f78e74
"use strict";

/* istanbul ignore next */
function cov_153r617lut() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/ExecuteButtonCommandUseCase.ts";
  var hash = "0c1610840178068e3c1086d307d6404d78c5fa39";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/ExecuteButtonCommandUseCase.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 45
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 52
        }
      },
      "4": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 49
        }
      },
      "6": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 47
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "8": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 18,
          column: 13
        }
      },
      "9": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "10": {
        start: {
          line: 20,
          column: 35
        },
        end: {
          line: 20,
          column: 77
        }
      },
      "11": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 23,
          column: 13
        }
      },
      "12": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 65
        }
      },
      "13": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "14": {
        start: {
          line: 26,
          column: 33
        },
        end: {
          line: 26,
          column: 85
        }
      },
      "15": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 29,
          column: 13
        }
      },
      "16": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 92
        }
      },
      "17": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "18": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 33,
          column: 13
        }
      },
      "19": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 64
        }
      },
      "20": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "21": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 66
        }
      },
      "22": {
        start: {
          line: 39,
          column: 34
        },
        end: {
          line: 39,
          column: 95
        }
      },
      "23": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "24": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 94
        }
      },
      "25": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 52
        }
      },
      "26": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "27": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 65
        }
      },
      "28": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "29": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "30": {
        start: {
          line: 61,
          column: 34
        },
        end: {
          line: 61,
          column: 94
        }
      },
      "31": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "32": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 90
        }
      },
      "33": {
        start: {
          line: 65,
          column: 37
        },
        end: {
          line: 65,
          column: 61
        }
      },
      "34": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "35": {
        start: {
          line: 68,
          column: 40
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "36": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 74,
          column: 17
        }
      },
      "37": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 102
        }
      },
      "38": {
        start: {
          line: 75,
          column: 31
        },
        end: {
          line: 75,
          column: 57
        }
      },
      "39": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 31
        }
      },
      "40": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 82,
          column: 19
        }
      },
      "41": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 107
        }
      },
      "42": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 90,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 55
          },
          end: {
            line: 14,
            column: 56
          }
        },
        loc: {
          start: {
            line: 14,
            column: 68
          },
          end: {
            line: 87,
            column: 9
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 23,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 23,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 37
          }
        }, {
          start: {
            line: 48,
            column: 41
          },
          end: {
            line: 48,
            column: 65
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 61,
            column: 64
          },
          end: {
            line: 61,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 64
          },
          end: {
            line: 61,
            column: 87
          }
        }, {
          start: {
            line: 61,
            column: 91
          },
          end: {
            line: 61,
            column: 93
          }
        }],
        line: 61
      },
      "10": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 121
          },
          end: {
            line: 70,
            column: 195
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 172
          },
          end: {
            line: 70,
            column: 178
          }
        }, {
          start: {
            line: 70,
            column: 181
          },
          end: {
            line: 70,
            column: 195
          }
        }],
        line: 70
      },
      "12": {
        loc: {
          start: {
            line: 70,
            column: 121
          },
          end: {
            line: 70,
            column: 169
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 121
          },
          end: {
            line: 70,
            column: 152
          }
        }, {
          start: {
            line: 70,
            column: 156
          },
          end: {
            line: 70,
            column: 169
          }
        }],
        line: 70
      },
      "13": {
        loc: {
          start: {
            line: 70,
            column: 211
          },
          end: {
            line: 70,
            column: 286
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 262
          },
          end: {
            line: 70,
            column: 268
          }
        }, {
          start: {
            line: 70,
            column: 271
          },
          end: {
            line: 70,
            column: 286
          }
        }],
        line: 70
      },
      "14": {
        loc: {
          start: {
            line: 70,
            column: 211
          },
          end: {
            line: 70,
            column: 259
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 211
          },
          end: {
            line: 70,
            column: 242
          }
        }, {
          start: {
            line: 70,
            column: 246
          },
          end: {
            line: 70,
            column: 259
          }
        }],
        line: 70
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 299
          },
          end: {
            line: 70,
            column: 371
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 350
          },
          end: {
            line: 70,
            column: 356
          }
        }, {
          start: {
            line: 70,
            column: 359
          },
          end: {
            line: 70,
            column: 371
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 70,
            column: 299
          },
          end: {
            line: 70,
            column: 347
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 299
          },
          end: {
            line: 70,
            column: 330
          }
        }, {
          start: {
            line: 70,
            column: 334
          },
          end: {
            line: 70,
            column: 347
          }
        }],
        line: 70
      },
      "17": {
        loc: {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/ExecuteButtonCommandUseCase.ts",
      mappings: ";;;;AACA,qDAAkD;AAGlD,gEAA6D;AAyB7D,MAAa,2BAA2B;IAGpC,YACY,gBAAmC,EACnC,eAAiC;QADjC,qBAAgB,GAAhB,gBAAgB,CAAmB;QACnC,oBAAe,GAAf,eAAe,CAAkB;IAC1C,CAAC;IAEE,OAAO,CAAC,OAAoC;;;YAC9C,mBAAmB;YACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACnB,OAAO,eAAM,CAAC,IAAI,CAA+B,uBAAuB,CAAC,CAAC;aAC7E;YAED,kBAAkB;YAClB,MAAM,cAAc,GAAG,iBAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,cAAc,CAAC,SAAS,EAAE;gBAC1B,OAAO,eAAM,CAAC,IAAI,CAA+B,mBAAmB,CAAC,CAAC;aACzE;YACD,MAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,EAAE,CAAC;YAE3C,kBAAkB;YAClB,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC1E,IAAI,YAAY,CAAC,SAAS,EAAE;gBACxB,OAAO,eAAM,CAAC,IAAI,CACd,0BAA0B,YAAY,CAAC,KAAK,EAAE,CACjD,CAAC;aACL;YAED,MAAM,MAAM,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;YACvC,IAAI,CAAC,MAAM,EAAE;gBACT,OAAO,eAAM,CAAC,IAAI,CAA+B,kBAAkB,CAAC,CAAC;aACxE;YAED,kCAAkC;YAClC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE;gBACtB,OAAO,eAAM,CAAC,IAAI,CAA+B,oBAAoB,CAAC,CAAC;aAC1E;YAED,mBAAmB;YACnB,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACpF,IAAI,aAAa,CAAC,SAAS,EAAE;gBACzB,OAAO,eAAM,CAAC,IAAI,CACd,2BAA2B,aAAa,CAAC,KAAK,EAAE,CACnD,CAAC;aACL;YAED,MAAM,OAAO,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC;YACzC,IAAI,CAAC,OAAO,EAAE;gBACV,OAAO,eAAM,CAAC,IAAI,CAA+B,mBAAmB,CAAC,CAAC;aACzE;YAED,oDAAoD;YACpD,IAAI,OAAO,CAAC,aAAa,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBACnD,qCAAqC;gBACrC,OAAO,eAAM,CAAC,EAAE,CAA+B;oBAC3C,OAAO,EAAE,KAAK;oBACd,aAAa,EAAE,IAAI;oBACnB,WAAW,EAAE;wBACT,KAAK,EAAE,OAAO,CAAC,IAAI;wBACnB,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,UAAU,EAAE,OAAO,CAAC,UAAU;qBACjC;iBACJ,CAAC,CAAC;aACN;YAED,yCAAyC;YACzC,MAAM,aAAa,GAAG,OAAO,CAAC,qBAAqB,CAC/C,OAAO,CAAC,eAAe,IAAI,EAAE,CAChC,CAAC;YAEF,IAAI,aAAa,CAAC,SAAS,EAAE;gBACzB,OAAO,eAAM,CAAC,IAAI,CACd,uBAAuB,aAAa,CAAC,KAAK,EAAE,CAC/C,CAAC;aACL;YAED,MAAM,gBAAgB,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC;YAElD,2DAA2D;YAC3D,IAAI;gBACA,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;oBACvD,OAAO,EAAE,OAAO;oBAChB,OAAO,kCACA,gBAAgB,KACnB,OAAO,EAAE,OAAO,CAAC,OAAO,EACxB,WAAW,EAAE,MAAA,OAAO,CAAC,OAAO,0CAAE,WAAW,EACzC,YAAY,EAAE,MAAA,OAAO,CAAC,OAAO,0CAAE,YAAY,EAC3C,SAAS,EAAE,MAAA,OAAO,CAAC,OAAO,0CAAE,SAAS,GACxC;iBACJ,CAAC,CAAC;gBAEH,IAAI,eAAe,CAAC,SAAS,EAAE;oBAC3B,OAAO,eAAM,CAAC,IAAI,CACd,6BAA6B,eAAe,CAAC,KAAK,EAAE,CACvD,CAAC;iBACL;gBAED,MAAM,MAAM,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;gBAE1C,4BAA4B;gBAC5B,MAAM,CAAC,KAAK,EAAE,CAAC;gBAEf,OAAO,eAAM,CAAC,EAAE,CAA+B;oBAC3C,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,YAAY,OAAO,CAAC,IAAI,yBAAyB;oBAC1D,MAAM,EAAE,MAAM;iBACjB,CAAC,CAAC;aAEN;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,eAAM,CAAC,IAAI,CACd,8CAA8C,KAAK,CAAC,OAAO,EAAE,CAChE,CAAC;aACL;;KACJ;CACJ;AAnHD,kEAmHC",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/ExecuteButtonCommandUseCase.ts"],
      sourcesContent: ["import { UseCase } from '../core/UseCase';\nimport { Result } from '../../domain/core/Result';\nimport { IButtonRepository } from '../../domain/repositories/IButtonRepository';\nimport { ICommandExecutor } from '../services/ICommandExecutor';\nimport { AssetId } from '../../domain/value-objects/AssetId';\nimport { CommandType } from '../../domain/entities/ButtonCommand';\n\n/**\n * Use Case for executing a button command\n */\nexport interface ExecuteButtonCommandRequest {\n    buttonId: string;\n    assetId?: string;\n    inputParameters?: Record<string, any>;\n    context?: {\n        currentView?: string;\n        currentClass?: string;\n        selection?: string[];\n    };\n}\n\nexport interface ExecuteButtonCommandResponse {\n    success: boolean;\n    message?: string;\n    result?: any;\n    requiresInput?: boolean;\n    inputSchema?: any;\n}\n\nexport class ExecuteButtonCommandUseCase \n    implements UseCase<ExecuteButtonCommandRequest, ExecuteButtonCommandResponse> {\n    \n    constructor(\n        private buttonRepository: IButtonRepository,\n        private commandExecutor: ICommandExecutor\n    ) {}\n\n    async execute(request: ExecuteButtonCommandRequest): Promise<Result<ExecuteButtonCommandResponse>> {\n        // Validate request\n        if (!request.buttonId) {\n            return Result.fail<ExecuteButtonCommandResponse>('Button ID is required');\n        }\n\n        // Parse button ID\n        const buttonIdResult = AssetId.create(request.buttonId);\n        if (buttonIdResult.isFailure) {\n            return Result.fail<ExecuteButtonCommandResponse>('Invalid button ID');\n        }\n        const buttonId = buttonIdResult.getValue();\n\n        // Find the button\n        const buttonResult = await this.buttonRepository.findButtonById(buttonId);\n        if (buttonResult.isFailure) {\n            return Result.fail<ExecuteButtonCommandResponse>(\n                `Failed to load button: ${buttonResult.error}`\n            );\n        }\n\n        const button = buttonResult.getValue();\n        if (!button) {\n            return Result.fail<ExecuteButtonCommandResponse>('Button not found');\n        }\n\n        // Check if button can be executed\n        if (!button.canExecute()) {\n            return Result.fail<ExecuteButtonCommandResponse>('Button is disabled');\n        }\n\n        // Load the command\n        const commandResult = await this.buttonRepository.findCommandById(button.commandId);\n        if (commandResult.isFailure) {\n            return Result.fail<ExecuteButtonCommandResponse>(\n                `Failed to load command: ${commandResult.error}`\n            );\n        }\n\n        const command = commandResult.getValue();\n        if (!command) {\n            return Result.fail<ExecuteButtonCommandResponse>('Command not found');\n        }\n\n        // Check if command requires input but none provided\n        if (command.requiresInput && !request.inputParameters) {\n            // Return schema for input collection\n            return Result.ok<ExecuteButtonCommandResponse>({\n                success: false,\n                requiresInput: true,\n                inputSchema: {\n                    title: command.name,\n                    description: command.description,\n                    parameters: command.parameters\n                }\n            });\n        }\n\n        // Validate and prepare execution context\n        const contextResult = command.buildExecutionContext(\n            request.inputParameters || {}\n        );\n        \n        if (contextResult.isFailure) {\n            return Result.fail<ExecuteButtonCommandResponse>(\n                `Invalid parameters: ${contextResult.error}`\n            );\n        }\n\n        const executionContext = contextResult.getValue();\n\n        // Execute the command through the command executor service\n        try {\n            const executionResult = await this.commandExecutor.execute({\n                command: command,\n                context: {\n                    ...executionContext,\n                    assetId: request.assetId,\n                    currentView: request.context?.currentView,\n                    currentClass: request.context?.currentClass,\n                    selection: request.context?.selection\n                }\n            });\n\n            if (executionResult.isFailure) {\n                return Result.fail<ExecuteButtonCommandResponse>(\n                    `Command execution failed: ${executionResult.error}`\n                );\n            }\n\n            const result = executionResult.getValue();\n\n            // Record button click event\n            button.click();\n\n            return Result.ok<ExecuteButtonCommandResponse>({\n                success: true,\n                message: `Command '${command.name}' executed successfully`,\n                result: result\n            });\n\n        } catch (error) {\n            return Result.fail<ExecuteButtonCommandResponse>(\n                `Unexpected error during command execution: ${error.message}`\n            );\n        }\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c1610840178068e3c1086d307d6404d78c5fa39"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_153r617lut = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_153r617lut();
cov_153r617lut().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_153r617lut().s[1]++;
exports.ExecuteButtonCommandUseCase = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_153r617lut().s[2]++, require("tslib"));
const Result_1 =
/* istanbul ignore next */
(cov_153r617lut().s[3]++, require("../../domain/core/Result"));
const AssetId_1 =
/* istanbul ignore next */
(cov_153r617lut().s[4]++, require("../../domain/value-objects/AssetId"));
class ExecuteButtonCommandUseCase {
  constructor(buttonRepository, commandExecutor) {
    /* istanbul ignore next */
    cov_153r617lut().f[0]++;
    cov_153r617lut().s[5]++;
    this.buttonRepository = buttonRepository;
    /* istanbul ignore next */
    cov_153r617lut().s[6]++;
    this.commandExecutor = commandExecutor;
  }
  execute(request) {
    /* istanbul ignore next */
    cov_153r617lut().f[1]++;
    var _a, _b, _c;
    /* istanbul ignore next */
    cov_153r617lut().s[7]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_153r617lut().f[2]++;
      cov_153r617lut().s[8]++;
      // Validate request
      if (!request.buttonId) {
        /* istanbul ignore next */
        cov_153r617lut().b[0][0]++;
        cov_153r617lut().s[9]++;
        return Result_1.Result.fail('Button ID is required');
      } else
      /* istanbul ignore next */
      {
        cov_153r617lut().b[0][1]++;
      }
      // Parse button ID
      const buttonIdResult =
      /* istanbul ignore next */
      (cov_153r617lut().s[10]++, AssetId_1.AssetId.create(request.buttonId));
      /* istanbul ignore next */
      cov_153r617lut().s[11]++;
      if (buttonIdResult.isFailure) {
        /* istanbul ignore next */
        cov_153r617lut().b[1][0]++;
        cov_153r617lut().s[12]++;
        return Result_1.Result.fail('Invalid button ID');
      } else
      /* istanbul ignore next */
      {
        cov_153r617lut().b[1][1]++;
      }
      const buttonId =
      /* istanbul ignore next */
      (cov_153r617lut().s[13]++, buttonIdResult.getValue());
      // Find the button
      const buttonResult =
      /* istanbul ignore next */
      (cov_153r617lut().s[14]++, yield this.buttonRepository.findButtonById(buttonId));
      /* istanbul ignore next */
      cov_153r617lut().s[15]++;
      if (buttonResult.isFailure) {
        /* istanbul ignore next */
        cov_153r617lut().b[2][0]++;
        cov_153r617lut().s[16]++;
        return Result_1.Result.fail(`Failed to load button: ${buttonResult.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_153r617lut().b[2][1]++;
      }
      const button =
      /* istanbul ignore next */
      (cov_153r617lut().s[17]++, buttonResult.getValue());
      /* istanbul ignore next */
      cov_153r617lut().s[18]++;
      if (!button) {
        /* istanbul ignore next */
        cov_153r617lut().b[3][0]++;
        cov_153r617lut().s[19]++;
        return Result_1.Result.fail('Button not found');
      } else
      /* istanbul ignore next */
      {
        cov_153r617lut().b[3][1]++;
      }
      // Check if button can be executed
      cov_153r617lut().s[20]++;
      if (!button.canExecute()) {
        /* istanbul ignore next */
        cov_153r617lut().b[4][0]++;
        cov_153r617lut().s[21]++;
        return Result_1.Result.fail('Button is disabled');
      } else
      /* istanbul ignore next */
      {
        cov_153r617lut().b[4][1]++;
      }
      // Load the command
      const commandResult =
      /* istanbul ignore next */
      (cov_153r617lut().s[22]++, yield this.buttonRepository.findCommandById(button.commandId));
      /* istanbul ignore next */
      cov_153r617lut().s[23]++;
      if (commandResult.isFailure) {
        /* istanbul ignore next */
        cov_153r617lut().b[5][0]++;
        cov_153r617lut().s[24]++;
        return Result_1.Result.fail(`Failed to load command: ${commandResult.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_153r617lut().b[5][1]++;
      }
      const command =
      /* istanbul ignore next */
      (cov_153r617lut().s[25]++, commandResult.getValue());
      /* istanbul ignore next */
      cov_153r617lut().s[26]++;
      if (!command) {
        /* istanbul ignore next */
        cov_153r617lut().b[6][0]++;
        cov_153r617lut().s[27]++;
        return Result_1.Result.fail('Command not found');
      } else
      /* istanbul ignore next */
      {
        cov_153r617lut().b[6][1]++;
      }
      // Check if command requires input but none provided
      cov_153r617lut().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_153r617lut().b[8][0]++, command.requiresInput) &&
      /* istanbul ignore next */
      (cov_153r617lut().b[8][1]++, !request.inputParameters)) {
        /* istanbul ignore next */
        cov_153r617lut().b[7][0]++;
        cov_153r617lut().s[29]++;
        // Return schema for input collection
        return Result_1.Result.ok({
          success: false,
          requiresInput: true,
          inputSchema: {
            title: command.name,
            description: command.description,
            parameters: command.parameters
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_153r617lut().b[7][1]++;
      }
      // Validate and prepare execution context
      const contextResult =
      /* istanbul ignore next */
      (cov_153r617lut().s[30]++, command.buildExecutionContext(
      /* istanbul ignore next */
      (cov_153r617lut().b[9][0]++, request.inputParameters) ||
      /* istanbul ignore next */
      (cov_153r617lut().b[9][1]++, {})));
      /* istanbul ignore next */
      cov_153r617lut().s[31]++;
      if (contextResult.isFailure) {
        /* istanbul ignore next */
        cov_153r617lut().b[10][0]++;
        cov_153r617lut().s[32]++;
        return Result_1.Result.fail(`Invalid parameters: ${contextResult.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_153r617lut().b[10][1]++;
      }
      const executionContext =
      /* istanbul ignore next */
      (cov_153r617lut().s[33]++, contextResult.getValue());
      // Execute the command through the command executor service
      /* istanbul ignore next */
      cov_153r617lut().s[34]++;
      try {
        const executionResult =
        /* istanbul ignore next */
        (cov_153r617lut().s[35]++, yield this.commandExecutor.execute({
          command: command,
          context: Object.assign(Object.assign({}, executionContext), {
            assetId: request.assetId,
            currentView:
            /* istanbul ignore next */
            (cov_153r617lut().b[12][0]++, (_a = request.context) === null) ||
            /* istanbul ignore next */
            (cov_153r617lut().b[12][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_153r617lut().b[11][0]++, void 0) :
            /* istanbul ignore next */
            (cov_153r617lut().b[11][1]++, _a.currentView),
            currentClass:
            /* istanbul ignore next */
            (cov_153r617lut().b[14][0]++, (_b = request.context) === null) ||
            /* istanbul ignore next */
            (cov_153r617lut().b[14][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_153r617lut().b[13][0]++, void 0) :
            /* istanbul ignore next */
            (cov_153r617lut().b[13][1]++, _b.currentClass),
            selection:
            /* istanbul ignore next */
            (cov_153r617lut().b[16][0]++, (_c = request.context) === null) ||
            /* istanbul ignore next */
            (cov_153r617lut().b[16][1]++, _c === void 0) ?
            /* istanbul ignore next */
            (cov_153r617lut().b[15][0]++, void 0) :
            /* istanbul ignore next */
            (cov_153r617lut().b[15][1]++, _c.selection)
          })
        }));
        /* istanbul ignore next */
        cov_153r617lut().s[36]++;
        if (executionResult.isFailure) {
          /* istanbul ignore next */
          cov_153r617lut().b[17][0]++;
          cov_153r617lut().s[37]++;
          return Result_1.Result.fail(`Command execution failed: ${executionResult.error}`);
        } else
        /* istanbul ignore next */
        {
          cov_153r617lut().b[17][1]++;
        }
        const result =
        /* istanbul ignore next */
        (cov_153r617lut().s[38]++, executionResult.getValue());
        // Record button click event
        /* istanbul ignore next */
        cov_153r617lut().s[39]++;
        button.click();
        /* istanbul ignore next */
        cov_153r617lut().s[40]++;
        return Result_1.Result.ok({
          success: true,
          message: `Command '${command.name}' executed successfully`,
          result: result
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_153r617lut().s[41]++;
        return Result_1.Result.fail(`Unexpected error during command execution: ${error.message}`);
      }
    });
  }
}
/* istanbul ignore next */
cov_153r617lut().s[42]++;
exports.ExecuteButtonCommandUseCase = ExecuteButtonCommandUseCase;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,