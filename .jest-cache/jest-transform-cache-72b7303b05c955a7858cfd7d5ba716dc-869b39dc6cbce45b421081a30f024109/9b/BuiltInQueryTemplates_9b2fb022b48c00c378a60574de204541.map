{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/BuiltInQueryTemplates.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/BuiltInQueryTemplates.ts"],"sourcesContent":["import {\n  QueryTemplate,\n  TemplateCategory,\n  TemplateDifficulty,\n  TemplateLayout,\n} from \"../../domain/visual/QueryTemplate\";\nimport { NodeType } from \"../../domain/visual/VisualQueryNode\";\nimport { EdgeType } from \"../../domain/visual/VisualQueryEdge\";\n\nexport class BuiltInQueryTemplates {\n  private static templates: QueryTemplate[] = [];\n\n  static getAll(): QueryTemplate[] {\n    if (this.templates.length === 0) {\n      this.templates = this.createBuiltInTemplates();\n    }\n    return [...this.templates];\n  }\n\n  private static createBuiltInTemplates(): QueryTemplate[] {\n    return [\n      this.createFindAllRelatedTemplate(),\n      this.createPropertyChainTemplate(),\n      this.createTypeHierarchyTemplate(),\n      this.createEntityPropertiesTemplate(),\n      this.createOptionalPropertiesTemplate(),\n      this.createFilterByValueTemplate(),\n      this.createCountEntitiesTemplate(),\n      this.createFindByLabelTemplate(),\n      this.createRelationshipPathTemplate(),\n      this.createValueComparisonTemplate(),\n    ];\n  }\n\n  private static createFindAllRelatedTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"entity1\",\n          type: NodeType.ENTITY,\n          label: \"{{entityName}}\",\n          position: { x: 100, y: 200 },\n          uri: \"{{entityUri}}\",\n        },\n        {\n          id: \"var1\",\n          type: NodeType.VARIABLE,\n          label: \"related\",\n          position: { x: 400, y: 200 },\n          variableName: \"related\",\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"entity1\",\n          targetNodeId: \"var1\",\n          type: EdgeType.PROPERTY,\n          label: \"?property\",\n          propertyUri: undefined,\n        },\n      ],\n      viewport: { x: 0, y: 0, zoom: 1 },\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_find_all_related\",\n      metadata: {\n        name: \"Find All Related\",\n        description: \"Find all entities related to a specific entity\",\n        category: TemplateCategory.EXPLORATION,\n        difficulty: TemplateDifficulty.BEGINNER,\n        tags: [\"exploration\", \"relationships\", \"basic\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [\n        {\n          name: \"entityName\",\n          type: \"entity\",\n          description: \"Name of the entity to explore\",\n          required: true,\n          placeholder: \"Entity name\",\n        },\n        {\n          name: \"entityUri\",\n          type: \"entity\",\n          description: \"URI of the entity\",\n          required: false,\n          placeholder: \"Optional entity URI\",\n        },\n      ],\n      sparqlTemplate: `SELECT ?property ?related\nWHERE {\n  <{{entityUri}}> ?property ?related .\n}`,\n      isBuiltIn: true,\n    });\n  }\n\n  private static createPropertyChainTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"start\",\n          type: NodeType.VARIABLE,\n          label: \"start\",\n          position: { x: 100, y: 200 },\n          variableName: \"start\",\n        },\n        {\n          id: \"middle\",\n          type: NodeType.VARIABLE,\n          label: \"middle\",\n          position: { x: 300, y: 200 },\n          variableName: \"middle\",\n        },\n        {\n          id: \"end\",\n          type: NodeType.VARIABLE,\n          label: \"end\",\n          position: { x: 500, y: 200 },\n          variableName: \"end\",\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"start\",\n          targetNodeId: \"middle\",\n          type: EdgeType.PROPERTY,\n          label: \"{{property1}}\",\n          propertyUri: undefined,\n        },\n        {\n          id: \"edge2\",\n          sourceNodeId: \"middle\",\n          targetNodeId: \"end\",\n          type: EdgeType.PROPERTY,\n          label: \"{{property2}}\",\n          propertyUri: undefined,\n        },\n      ],\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_property_chain\",\n      metadata: {\n        name: \"Property Chain\",\n        description: \"Follow a chain of properties between entities\",\n        category: TemplateCategory.RELATIONSHIP,\n        difficulty: TemplateDifficulty.INTERMEDIATE,\n        tags: [\"path\", \"chain\", \"relationship\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [\n        {\n          name: \"property1\",\n          type: \"property\",\n          description: \"First property in the chain\",\n          required: true,\n          defaultValue: \"hasParent\",\n        },\n        {\n          name: \"property2\",\n          type: \"property\",\n          description: \"Second property in the chain\",\n          required: true,\n          defaultValue: \"hasChild\",\n        },\n      ],\n      sparqlTemplate: `SELECT ?start ?middle ?end\nWHERE {\n  ?start {{property1}} ?middle .\n  ?middle {{property2}} ?end .\n}`,\n      isBuiltIn: true,\n    });\n  }\n\n  private static createTypeHierarchyTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"instance\",\n          type: NodeType.VARIABLE,\n          label: \"instance\",\n          position: { x: 100, y: 200 },\n          variableName: \"instance\",\n        },\n        {\n          id: \"type\",\n          type: NodeType.ENTITY,\n          label: \"{{typeClass}}\",\n          position: { x: 400, y: 200 },\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"instance\",\n          targetNodeId: \"type\",\n          type: EdgeType.PROPERTY,\n          label: \"rdf:type\",\n          propertyUri: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",\n        },\n      ],\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_type_hierarchy\",\n      metadata: {\n        name: \"Type Hierarchy\",\n        description: \"Find all instances of a specific type or class\",\n        category: TemplateCategory.ANALYSIS,\n        difficulty: TemplateDifficulty.BEGINNER,\n        tags: [\"type\", \"class\", \"hierarchy\", \"rdf\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [\n        {\n          name: \"typeClass\",\n          type: \"entity\",\n          description: \"The type/class to search for\",\n          required: true,\n          defaultValue: \"Person\",\n        },\n      ],\n      sparqlTemplate: `SELECT ?instance\nWHERE {\n  ?instance rdf:type {{typeClass}} .\n}`,\n      isBuiltIn: true,\n    });\n  }\n\n  private static createEntityPropertiesTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"entity\",\n          type: NodeType.ENTITY,\n          label: \"{{entityName}}\",\n          position: { x: 100, y: 200 },\n        },\n        {\n          id: \"value\",\n          type: NodeType.VARIABLE,\n          label: \"value\",\n          position: { x: 400, y: 200 },\n          variableName: \"value\",\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"entity\",\n          targetNodeId: \"value\",\n          type: EdgeType.PROPERTY,\n          label: \"?property\",\n          propertyUri: undefined,\n        },\n      ],\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_entity_properties\",\n      metadata: {\n        name: \"Entity Properties\",\n        description: \"List all properties and values of an entity\",\n        category: TemplateCategory.PROPERTY,\n        difficulty: TemplateDifficulty.BEGINNER,\n        tags: [\"properties\", \"attributes\", \"exploration\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [\n        {\n          name: \"entityName\",\n          type: \"entity\",\n          description: \"Entity to explore\",\n          required: true,\n        },\n      ],\n      sparqlTemplate: `SELECT ?property ?value\nWHERE {\n  {{entityName}} ?property ?value .\n}`,\n      isBuiltIn: true,\n    });\n  }\n\n  private static createOptionalPropertiesTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"subject\",\n          type: NodeType.VARIABLE,\n          label: \"subject\",\n          position: { x: 100, y: 200 },\n          variableName: \"subject\",\n        },\n        {\n          id: \"name\",\n          type: NodeType.VARIABLE,\n          label: \"name\",\n          position: { x: 400, y: 100 },\n          variableName: \"name\",\n        },\n        {\n          id: \"description\",\n          type: NodeType.VARIABLE,\n          label: \"description\",\n          position: { x: 400, y: 300 },\n          variableName: \"description\",\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"subject\",\n          targetNodeId: \"name\",\n          type: EdgeType.PROPERTY,\n          label: \"rdfs:label\",\n          propertyUri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        },\n        {\n          id: \"edge2\",\n          sourceNodeId: \"subject\",\n          targetNodeId: \"description\",\n          type: EdgeType.OPTIONAL,\n          label: \"rdfs:comment\",\n          propertyUri: \"http://www.w3.org/2000/01/rdf-schema#comment\",\n        },\n      ],\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_optional_properties\",\n      metadata: {\n        name: \"Optional Properties\",\n        description: \"Query with optional properties that may or may not exist\",\n        category: TemplateCategory.PROPERTY,\n        difficulty: TemplateDifficulty.INTERMEDIATE,\n        tags: [\"optional\", \"properties\", \"flexible\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [],\n      sparqlTemplate: `SELECT ?subject ?name ?description\nWHERE {\n  ?subject rdfs:label ?name .\n  OPTIONAL { ?subject rdfs:comment ?description }\n}`,\n      isBuiltIn: true,\n    });\n  }\n\n  private static createFilterByValueTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"entity\",\n          type: NodeType.VARIABLE,\n          label: \"entity\",\n          position: { x: 100, y: 200 },\n          variableName: \"entity\",\n        },\n        {\n          id: \"value\",\n          type: NodeType.VARIABLE,\n          label: \"value\",\n          position: { x: 400, y: 200 },\n          variableName: \"value\",\n        },\n        {\n          id: \"filter\",\n          type: NodeType.FILTER,\n          label: \"?value > {{threshold}}\",\n          position: { x: 250, y: 350 },\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"entity\",\n          targetNodeId: \"value\",\n          type: EdgeType.PROPERTY,\n          label: \"{{property}}\",\n          propertyUri: undefined,\n        },\n      ],\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_filter_by_value\",\n      metadata: {\n        name: \"Filter by Value\",\n        description: \"Find entities with property values matching a condition\",\n        category: TemplateCategory.ANALYSIS,\n        difficulty: TemplateDifficulty.INTERMEDIATE,\n        tags: [\"filter\", \"condition\", \"comparison\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [\n        {\n          name: \"property\",\n          type: \"property\",\n          description: \"Property to filter on\",\n          required: true,\n          defaultValue: \"hasAge\",\n        },\n        {\n          name: \"threshold\",\n          type: \"literal\",\n          description: \"Threshold value\",\n          required: true,\n          defaultValue: \"18\",\n          constraints: {\n            pattern: \"^\\\\d+$\",\n          },\n        },\n      ],\n      sparqlTemplate: `SELECT ?entity ?value\nWHERE {\n  ?entity {{property}} ?value .\n  FILTER (?value > {{threshold}})\n}`,\n      isBuiltIn: true,\n    });\n  }\n\n  private static createCountEntitiesTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"entity\",\n          type: NodeType.VARIABLE,\n          label: \"entity\",\n          position: { x: 100, y: 200 },\n          variableName: \"entity\",\n        },\n        {\n          id: \"type\",\n          type: NodeType.ENTITY,\n          label: \"{{entityType}}\",\n          position: { x: 400, y: 200 },\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"entity\",\n          targetNodeId: \"type\",\n          type: EdgeType.PROPERTY,\n          label: \"rdf:type\",\n          propertyUri: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",\n        },\n      ],\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_count_entities\",\n      metadata: {\n        name: \"Count Entities\",\n        description: \"Count the number of entities of a specific type\",\n        category: TemplateCategory.ANALYSIS,\n        difficulty: TemplateDifficulty.BEGINNER,\n        tags: [\"count\", \"aggregate\", \"statistics\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [\n        {\n          name: \"entityType\",\n          type: \"entity\",\n          description: \"Type of entities to count\",\n          required: true,\n          defaultValue: \"Person\",\n        },\n      ],\n      sparqlTemplate: `SELECT (COUNT(?entity) AS ?count)\nWHERE {\n  ?entity rdf:type {{entityType}} .\n}`,\n      isBuiltIn: true,\n    });\n  }\n\n  private static createFindByLabelTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"entity\",\n          type: NodeType.VARIABLE,\n          label: \"entity\",\n          position: { x: 100, y: 200 },\n          variableName: \"entity\",\n        },\n        {\n          id: \"label\",\n          type: NodeType.VARIABLE,\n          label: \"label\",\n          position: { x: 400, y: 200 },\n          variableName: \"label\",\n        },\n        {\n          id: \"filter\",\n          type: NodeType.FILTER,\n          label: 'regex(?label, \"{{searchTerm}}\", \"i\")',\n          position: { x: 250, y: 350 },\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"entity\",\n          targetNodeId: \"label\",\n          type: EdgeType.PROPERTY,\n          label: \"rdfs:label\",\n          propertyUri: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        },\n      ],\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_find_by_label\",\n      metadata: {\n        name: \"Find by Label\",\n        description: \"Search for entities by their label text\",\n        category: TemplateCategory.EXPLORATION,\n        difficulty: TemplateDifficulty.INTERMEDIATE,\n        tags: [\"search\", \"text\", \"label\", \"regex\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [\n        {\n          name: \"searchTerm\",\n          type: \"literal\",\n          description: \"Text to search for in labels\",\n          required: true,\n          placeholder: \"Search term\",\n        },\n      ],\n      sparqlTemplate: `SELECT ?entity ?label\nWHERE {\n  ?entity rdfs:label ?label .\n  FILTER (regex(?label, \"{{searchTerm}}\", \"i\"))\n}`,\n      isBuiltIn: true,\n    });\n  }\n\n  private static createRelationshipPathTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"source\",\n          type: NodeType.ENTITY,\n          label: \"{{sourceEntity}}\",\n          position: { x: 100, y: 200 },\n        },\n        {\n          id: \"target\",\n          type: NodeType.ENTITY,\n          label: \"{{targetEntity}}\",\n          position: { x: 500, y: 200 },\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"source\",\n          targetNodeId: \"target\",\n          type: EdgeType.PROPERTY,\n          label: \"{{relationship}}+\",\n          propertyUri: undefined,\n        },\n      ],\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_relationship_path\",\n      metadata: {\n        name: \"Relationship Path\",\n        description: \"Find paths between two specific entities\",\n        category: TemplateCategory.RELATIONSHIP,\n        difficulty: TemplateDifficulty.ADVANCED,\n        tags: [\"path\", \"connection\", \"graph\", \"traversal\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [\n        {\n          name: \"sourceEntity\",\n          type: \"entity\",\n          description: \"Starting entity\",\n          required: true,\n        },\n        {\n          name: \"targetEntity\",\n          type: \"entity\",\n          description: \"Target entity\",\n          required: true,\n        },\n        {\n          name: \"relationship\",\n          type: \"property\",\n          description: \"Relationship type to follow\",\n          required: false,\n          defaultValue: \"knows\",\n        },\n      ],\n      sparqlTemplate: `SELECT ?path\nWHERE {\n  {{sourceEntity}} {{relationship}}+ {{targetEntity}} .\n  BIND({{relationship}} AS ?path)\n}`,\n      isBuiltIn: true,\n    });\n  }\n\n  private static createValueComparisonTemplate(): QueryTemplate {\n    const layout: TemplateLayout = {\n      nodes: [\n        {\n          id: \"entity\",\n          type: NodeType.VARIABLE,\n          label: \"entity\",\n          position: { x: 250, y: 100 },\n          variableName: \"entity\",\n        },\n        {\n          id: \"value1\",\n          type: NodeType.VARIABLE,\n          label: \"value1\",\n          position: { x: 100, y: 250 },\n          variableName: \"value1\",\n        },\n        {\n          id: \"value2\",\n          type: NodeType.VARIABLE,\n          label: \"value2\",\n          position: { x: 400, y: 250 },\n          variableName: \"value2\",\n        },\n        {\n          id: \"filter\",\n          type: NodeType.FILTER,\n          label: \"?value1 > ?value2\",\n          position: { x: 250, y: 400 },\n        },\n      ],\n      edges: [\n        {\n          id: \"edge1\",\n          sourceNodeId: \"entity\",\n          targetNodeId: \"value1\",\n          type: EdgeType.PROPERTY,\n          label: \"{{property1}}\",\n          propertyUri: undefined,\n        },\n        {\n          id: \"edge2\",\n          sourceNodeId: \"entity\",\n          targetNodeId: \"value2\",\n          type: EdgeType.PROPERTY,\n          label: \"{{property2}}\",\n          propertyUri: undefined,\n        },\n      ],\n    };\n\n    return new QueryTemplate({\n      id: \"builtin_value_comparison\",\n      metadata: {\n        name: \"Value Comparison\",\n        description:\n          \"Compare values of different properties on the same entity\",\n        category: TemplateCategory.ANALYSIS,\n        difficulty: TemplateDifficulty.ADVANCED,\n        tags: [\"comparison\", \"analysis\", \"filter\"],\n        author: \"Exocortex\",\n        version: \"1.0.0\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      layout,\n      parameters: [\n        {\n          name: \"property1\",\n          type: \"property\",\n          description: \"First property to compare\",\n          required: true,\n          defaultValue: \"hasIncome\",\n        },\n        {\n          name: \"property2\",\n          type: \"property\",\n          description: \"Second property to compare\",\n          required: true,\n          defaultValue: \"hasExpenses\",\n        },\n      ],\n      sparqlTemplate: `SELECT ?entity ?value1 ?value2\nWHERE {\n  ?entity {{property1}} ?value1 .\n  ?entity {{property2}} ?value2 .\n  FILTER (?value1 > ?value2)\n}`,\n      isBuiltIn: true,\n    });\n  }\n}\n"],"version":3}