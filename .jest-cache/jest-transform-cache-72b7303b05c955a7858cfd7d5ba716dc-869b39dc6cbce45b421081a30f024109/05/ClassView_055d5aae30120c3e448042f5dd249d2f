ec8d68504c44b55938dcdd28b1a071ea
"use strict";

/* istanbul ignore next */
function cov_2rmlsclzuk() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/aggregates/ClassView.ts";
  var hash = "8edc893efdc3ba741fa8c7e20501d6a7c3af15a3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/aggregates/ClassView.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 27
        }
      },
      "2": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 4,
          column: 56
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 21
        }
      },
      "5": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "6": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 86
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "8": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 118
        }
      },
      "9": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 54
        }
      },
      "10": {
        start: {
          line: 23,
          column: 46
        },
        end: {
          line: 23,
          column: 53
        }
      },
      "11": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 44
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "13": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 86
        }
      },
      "14": {
        start: {
          line: 29,
          column: 38
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 157
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 73
        }
      },
      "19": {
        start: {
          line: 47,
          column: 54
        },
        end: {
          line: 47,
          column: 71
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "21": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "22": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 121
        }
      },
      "23": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "24": {
        start: {
          line: 67,
          column: 41
        },
        end: {
          line: 67,
          column: 63
        }
      },
      "25": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 78
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "27": {
        start: {
          line: 71,
          column: 41
        },
        end: {
          line: 71,
          column: 65
        }
      },
      "28": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 92
        }
      },
      "29": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 40
        }
      },
      "30": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "31": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 36
        }
      },
      "32": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 92,
          column: 84
        }
      },
      "33": {
        start: {
          line: 92,
          column: 62
        },
        end: {
          line: 92,
          column: 83
        }
      },
      "34": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "35": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 73
        }
      },
      "36": {
        start: {
          line: 96,
          column: 30
        },
        end: {
          line: 96,
          column: 74
        }
      },
      "37": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "38": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 36
        }
      },
      "39": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "40": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 117,
          column: 13
        }
      },
      "41": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 96
        }
      },
      "42": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "43": {
        start: {
          line: 121,
          column: 29
        },
        end: {
          line: 121,
          column: 44
        }
      },
      "44": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "45": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 78
        }
      },
      "46": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "47": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 127,
          column: 67
        }
      },
      "48": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "49": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 76
        }
      },
      "50": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "51": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 36
        }
      },
      "52": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 99
        }
      },
      "53": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "54": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 36
        }
      },
      "55": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 53
        }
      },
      "56": {
        start: {
          line: 167,
          column: 40
        },
        end: {
          line: 167,
          column: 51
        }
      },
      "57": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 86
        }
      },
      "58": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 67
        }
      },
      "59": {
        start: {
          line: 179,
          column: 44
        },
        end: {
          line: 179,
          column: 65
        }
      },
      "60": {
        start: {
          line: 182,
          column: 0
        },
        end: {
          line: 182,
          column: 30
        }
      },
      "61": {
        start: {
          line: 183,
          column: 0
        },
        end: {
          line: 183,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 23
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 23,
            column: 42
          }
        },
        loc: {
          start: {
            line: 23,
            column: 46
          },
          end: {
            line: 23,
            column: 53
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 13
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 20
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 18
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 47,
            column: 45
          }
        },
        loc: {
          start: {
            line: 47,
            column: 54
          },
          end: {
            line: 47,
            column: 71
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 49
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 61
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 37
          }
        },
        loc: {
          start: {
            line: 67,
            column: 41
          },
          end: {
            line: 67,
            column: 63
          }
        },
        line: 67
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 71,
            column: 36
          },
          end: {
            line: 71,
            column: 37
          }
        },
        loc: {
          start: {
            line: 71,
            column: 41
          },
          end: {
            line: 71,
            column: 65
          }
        },
        line: 71
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 27
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 92,
            column: 57
          },
          end: {
            line: 92,
            column: 58
          }
        },
        loc: {
          start: {
            line: 92,
            column: 62
          },
          end: {
            line: 92,
            column: 83
          }
        },
        line: 92
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 112
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 34
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 149
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 24
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 166
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 167,
            column: 36
          }
        },
        loc: {
          start: {
            line: 167,
            column: 40
          },
          end: {
            line: 167,
            column: 51
          }
        },
        line: 167
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 172
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 25
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 178
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 179,
            column: 39
          },
          end: {
            line: 179,
            column: 40
          }
        },
        loc: {
          start: {
            line: 179,
            column: 44
          },
          end: {
            line: 179,
            column: 65
          }
        },
        line: 179
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 106
          },
          end: {
            line: 36,
            column: 151
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 106
          },
          end: {
            line: 36,
            column: 126
          }
        }, {
          start: {
            line: 36,
            column: 130
          },
          end: {
            line: 36,
            column: 151
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 40
          }
        }, {
          start: {
            line: 50,
            column: 44
          },
          end: {
            line: 56,
            column: 9
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "9": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 117,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 117,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "10": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "11": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "12": {
        loc: {
          start: {
            line: 173,
            column: 15
          },
          end: {
            line: 173,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 15
          },
          end: {
            line: 173,
            column: 50
          }
        }, {
          start: {
            line: 173,
            column: 54
          },
          end: {
            line: 173,
            column: 85
          }
        }],
        line: 173
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/aggregates/ClassView.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/aggregates/ClassView.ts"],
      sourcesContent: ["import { AggregateRoot } from '../core/AggregateRoot';\nimport { AssetId } from '../value-objects/AssetId';\nimport { ClassName } from '../value-objects/ClassName';\nimport { Result } from '../core/Result';\nimport { UIButton } from '../entities/UIButton';\n\n/**\n * Aggregate Root for Class View Configuration\n * This aggregate manages the relationship between classes and their UI buttons\n */\nexport interface ClassViewProps {\n    id: AssetId;\n    className: ClassName;\n    buttons: UIButton[];\n    layoutTemplate?: string;\n    displayOptions?: DisplayOptions;\n}\n\nexport interface DisplayOptions {\n    showProperties: boolean;\n    showRelations: boolean;\n    showBacklinks: boolean;\n    showButtons: boolean;\n    buttonPosition: 'top' | 'bottom' | 'floating';\n}\n\nexport class ClassView extends AggregateRoot<ClassViewProps> {\n    private static readonly MAX_BUTTONS_PER_VIEW = 20;\n\n    private constructor(props: ClassViewProps) {\n        super(props);\n    }\n\n    /**\n     * Factory method with business rules validation\n     */\n    public static create(props: ClassViewProps): Result<ClassView> {\n        // Validate class name\n        if (!props.className) {\n            return Result.fail<ClassView>('Class view must be associated with a class');\n        }\n\n        // Validate button count\n        if (props.buttons.length > ClassView.MAX_BUTTONS_PER_VIEW) {\n            return Result.fail<ClassView>(\n                `Class view cannot have more than ${ClassView.MAX_BUTTONS_PER_VIEW} buttons`\n            );\n        }\n\n        // Check for duplicate button orders\n        const orders = props.buttons.map(b => b.order);\n        const uniqueOrders = new Set(orders);\n        if (uniqueOrders.size !== orders.length) {\n            return Result.fail<ClassView>('Buttons cannot have duplicate order values');\n        }\n\n        // Set default display options\n        const defaultDisplayOptions: DisplayOptions = {\n            showProperties: true,\n            showRelations: true,\n            showBacklinks: true,\n            showButtons: true,\n            buttonPosition: 'top'\n        };\n\n        return Result.ok<ClassView>(new ClassView({\n            ...props,\n            displayOptions: props.displayOptions || defaultDisplayOptions\n        }));\n    }\n\n    // Getters\n    get id(): AssetId {\n        return this.props.id;\n    }\n\n    get className(): ClassName {\n        return this.props.className;\n    }\n\n    get buttons(): UIButton[] {\n        // Return sorted by order\n        return [...this.props.buttons].sort((a, b) => a.order - b.order);\n    }\n\n    get displayOptions(): DisplayOptions {\n        return this.props.displayOptions || {\n            showProperties: true,\n            showRelations: true,\n            showBacklinks: true,\n            showButtons: true,\n            buttonPosition: 'top'\n        };\n    }\n\n    /**\n     * Add a button to the view\n     */\n    public addButton(button: UIButton): Result<void> {\n        // Check max buttons limit\n        if (this.props.buttons.length >= ClassView.MAX_BUTTONS_PER_VIEW) {\n            return Result.fail<void>(\n                `Cannot add more buttons. Maximum of ${ClassView.MAX_BUTTONS_PER_VIEW} reached`\n            );\n        }\n\n        // Check for duplicate button\n        if (this.props.buttons.some(b => b.id.equals(button.id))) {\n            return Result.fail<void>('Button already exists in this view');\n        }\n\n        // Check for order conflict\n        if (this.props.buttons.some(b => b.order === button.order)) {\n            return Result.fail<void>(`Button with order ${button.order} already exists`);\n        }\n\n        this.props.buttons.push(button);\n\n        // Raise domain event\n        this.addDomainEvent({\n            aggregateId: this.id.toString(),\n            eventType: 'ButtonAddedToClassView',\n            eventData: {\n                classViewId: this.id.toString(),\n                className: this.className.value,\n                buttonId: button.id.toString(),\n                buttonLabel: button.label\n            }\n        });\n\n        return Result.ok<void>();\n    }\n\n    /**\n     * Remove a button from the view\n     */\n    public removeButton(buttonId: AssetId): Result<void> {\n        const buttonIndex = this.props.buttons.findIndex(b => b.id.equals(buttonId));\n        \n        if (buttonIndex === -1) {\n            return Result.fail<void>('Button not found in this view');\n        }\n\n        const removedButton = this.props.buttons.splice(buttonIndex, 1)[0];\n\n        // Raise domain event\n        this.addDomainEvent({\n            aggregateId: this.id.toString(),\n            eventType: 'ButtonRemovedFromClassView',\n            eventData: {\n                classViewId: this.id.toString(),\n                className: this.className.value,\n                buttonId: removedButton.id.toString()\n            }\n        });\n\n        return Result.ok<void>();\n    }\n\n    /**\n     * Reorder buttons\n     */\n    public reorderButtons(buttonOrders: Map<string, number>): Result<void> {\n        // Validate all buttons are present\n        for (const button of this.props.buttons) {\n            if (!buttonOrders.has(button.id.toString())) {\n                return Result.fail<void>(`Missing order for button ${button.id.toString()}`);\n            }\n        }\n\n        // Check for duplicate orders\n        const orders = Array.from(buttonOrders.values());\n        const uniqueOrders = new Set(orders);\n        if (uniqueOrders.size !== orders.length) {\n            return Result.fail<void>('Duplicate order values not allowed');\n        }\n\n        // Apply new orders\n        for (const button of this.props.buttons) {\n            const newOrder = buttonOrders.get(button.id.toString());\n            if (newOrder !== undefined) {\n                // This would normally update the button's order\n                // but we need to maintain immutability\n                Object.defineProperty(button, 'order', { value: newOrder });\n            }\n        }\n\n        // Raise domain event\n        this.addDomainEvent({\n            aggregateId: this.id.toString(),\n            eventType: 'ButtonsReordered',\n            eventData: {\n                classViewId: this.id.toString(),\n                className: this.className.value,\n                newOrder: Array.from(buttonOrders.entries())\n            }\n        });\n\n        return Result.ok<void>();\n    }\n\n    /**\n     * Update display options\n     */\n    public updateDisplayOptions(options: Partial<DisplayOptions>): Result<void> {\n        this.props.displayOptions = {\n            ...this.displayOptions,\n            ...options\n        };\n\n        // Raise domain event\n        this.addDomainEvent({\n            aggregateId: this.id.toString(),\n            eventType: 'DisplayOptionsUpdated',\n            eventData: {\n                classViewId: this.id.toString(),\n                className: this.className.value,\n                displayOptions: this.props.displayOptions\n            }\n        });\n\n        return Result.ok<void>();\n    }\n\n    /**\n     * Get enabled buttons only\n     */\n    public getEnabledButtons(): UIButton[] {\n        return this.buttons.filter(b => b.isEnabled);\n    }\n\n    /**\n     * Check if view has any executable buttons\n     */\n    public hasExecutableButtons(): boolean {\n        return this.getEnabledButtons().length > 0 && this.displayOptions.showButtons;\n    }\n\n    /**\n     * Find button by ID\n     */\n    public findButton(buttonId: AssetId): UIButton | undefined {\n        return this.props.buttons.find(b => b.id.equals(buttonId));\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8edc893efdc3ba741fa8c7e20501d6a7c3af15a3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2rmlsclzuk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rmlsclzuk();
cov_2rmlsclzuk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2rmlsclzuk().s[1]++;
exports.ClassView = void 0;
const AggregateRoot_1 =
/* istanbul ignore next */
(cov_2rmlsclzuk().s[2]++, require("../core/AggregateRoot"));
const Result_1 =
/* istanbul ignore next */
(cov_2rmlsclzuk().s[3]++, require("../core/Result"));
class ClassView extends
/* istanbul ignore next */
(AggregateRoot_1.AggregateRoot) {
  constructor(props) {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[0]++;
    cov_2rmlsclzuk().s[4]++;
    super(props);
  }
  /**
   * Factory method with business rules validation
   */
  static create(props) {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[1]++;
    cov_2rmlsclzuk().s[5]++;
    // Validate class name
    if (!props.className) {
      /* istanbul ignore next */
      cov_2rmlsclzuk().b[0][0]++;
      cov_2rmlsclzuk().s[6]++;
      return Result_1.Result.fail('Class view must be associated with a class');
    } else
    /* istanbul ignore next */
    {
      cov_2rmlsclzuk().b[0][1]++;
    }
    // Validate button count
    cov_2rmlsclzuk().s[7]++;
    if (props.buttons.length > ClassView.MAX_BUTTONS_PER_VIEW) {
      /* istanbul ignore next */
      cov_2rmlsclzuk().b[1][0]++;
      cov_2rmlsclzuk().s[8]++;
      return Result_1.Result.fail(`Class view cannot have more than ${ClassView.MAX_BUTTONS_PER_VIEW} buttons`);
    } else
    /* istanbul ignore next */
    {
      cov_2rmlsclzuk().b[1][1]++;
    }
    // Check for duplicate button orders
    const orders =
    /* istanbul ignore next */
    (cov_2rmlsclzuk().s[9]++, props.buttons.map(b => {
      /* istanbul ignore next */
      cov_2rmlsclzuk().f[2]++;
      cov_2rmlsclzuk().s[10]++;
      return b.order;
    }));
    const uniqueOrders =
    /* istanbul ignore next */
    (cov_2rmlsclzuk().s[11]++, new Set(orders));
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[12]++;
    if (uniqueOrders.size !== orders.length) {
      /* istanbul ignore next */
      cov_2rmlsclzuk().b[2][0]++;
      cov_2rmlsclzuk().s[13]++;
      return Result_1.Result.fail('Buttons cannot have duplicate order values');
    } else
    /* istanbul ignore next */
    {
      cov_2rmlsclzuk().b[2][1]++;
    }
    // Set default display options
    const defaultDisplayOptions =
    /* istanbul ignore next */
    (cov_2rmlsclzuk().s[14]++, {
      showProperties: true,
      showRelations: true,
      showBacklinks: true,
      showButtons: true,
      buttonPosition: 'top'
    });
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[15]++;
    return Result_1.Result.ok(new ClassView(Object.assign(Object.assign({}, props), {
      displayOptions:
      /* istanbul ignore next */
      (cov_2rmlsclzuk().b[3][0]++, props.displayOptions) ||
      /* istanbul ignore next */
      (cov_2rmlsclzuk().b[3][1]++, defaultDisplayOptions)
    })));
  }
  // Getters
  get id() {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[3]++;
    cov_2rmlsclzuk().s[16]++;
    return this.props.id;
  }
  get className() {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[4]++;
    cov_2rmlsclzuk().s[17]++;
    return this.props.className;
  }
  get buttons() {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[5]++;
    cov_2rmlsclzuk().s[18]++;
    // Return sorted by order
    return [...this.props.buttons].sort((a, b) => {
      /* istanbul ignore next */
      cov_2rmlsclzuk().f[6]++;
      cov_2rmlsclzuk().s[19]++;
      return a.order - b.order;
    });
  }
  get displayOptions() {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[7]++;
    cov_2rmlsclzuk().s[20]++;
    return /* istanbul ignore next */(cov_2rmlsclzuk().b[4][0]++, this.props.displayOptions) ||
    /* istanbul ignore next */
    (cov_2rmlsclzuk().b[4][1]++, {
      showProperties: true,
      showRelations: true,
      showBacklinks: true,
      showButtons: true,
      buttonPosition: 'top'
    });
  }
  /**
   * Add a button to the view
   */
  addButton(button) {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[8]++;
    cov_2rmlsclzuk().s[21]++;
    // Check max buttons limit
    if (this.props.buttons.length >= ClassView.MAX_BUTTONS_PER_VIEW) {
      /* istanbul ignore next */
      cov_2rmlsclzuk().b[5][0]++;
      cov_2rmlsclzuk().s[22]++;
      return Result_1.Result.fail(`Cannot add more buttons. Maximum of ${ClassView.MAX_BUTTONS_PER_VIEW} reached`);
    } else
    /* istanbul ignore next */
    {
      cov_2rmlsclzuk().b[5][1]++;
    }
    // Check for duplicate button
    cov_2rmlsclzuk().s[23]++;
    if (this.props.buttons.some(b => {
      /* istanbul ignore next */
      cov_2rmlsclzuk().f[9]++;
      cov_2rmlsclzuk().s[24]++;
      return b.id.equals(button.id);
    })) {
      /* istanbul ignore next */
      cov_2rmlsclzuk().b[6][0]++;
      cov_2rmlsclzuk().s[25]++;
      return Result_1.Result.fail('Button already exists in this view');
    } else
    /* istanbul ignore next */
    {
      cov_2rmlsclzuk().b[6][1]++;
    }
    // Check for order conflict
    cov_2rmlsclzuk().s[26]++;
    if (this.props.buttons.some(b => {
      /* istanbul ignore next */
      cov_2rmlsclzuk().f[10]++;
      cov_2rmlsclzuk().s[27]++;
      return b.order === button.order;
    })) {
      /* istanbul ignore next */
      cov_2rmlsclzuk().b[7][0]++;
      cov_2rmlsclzuk().s[28]++;
      return Result_1.Result.fail(`Button with order ${button.order} already exists`);
    } else
    /* istanbul ignore next */
    {
      cov_2rmlsclzuk().b[7][1]++;
    }
    cov_2rmlsclzuk().s[29]++;
    this.props.buttons.push(button);
    // Raise domain event
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[30]++;
    this.addDomainEvent({
      aggregateId: this.id.toString(),
      eventType: 'ButtonAddedToClassView',
      eventData: {
        classViewId: this.id.toString(),
        className: this.className.value,
        buttonId: button.id.toString(),
        buttonLabel: button.label
      }
    });
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[31]++;
    return Result_1.Result.ok();
  }
  /**
   * Remove a button from the view
   */
  removeButton(buttonId) {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[11]++;
    const buttonIndex =
    /* istanbul ignore next */
    (cov_2rmlsclzuk().s[32]++, this.props.buttons.findIndex(b => {
      /* istanbul ignore next */
      cov_2rmlsclzuk().f[12]++;
      cov_2rmlsclzuk().s[33]++;
      return b.id.equals(buttonId);
    }));
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[34]++;
    if (buttonIndex === -1) {
      /* istanbul ignore next */
      cov_2rmlsclzuk().b[8][0]++;
      cov_2rmlsclzuk().s[35]++;
      return Result_1.Result.fail('Button not found in this view');
    } else
    /* istanbul ignore next */
    {
      cov_2rmlsclzuk().b[8][1]++;
    }
    const removedButton =
    /* istanbul ignore next */
    (cov_2rmlsclzuk().s[36]++, this.props.buttons.splice(buttonIndex, 1)[0]);
    // Raise domain event
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[37]++;
    this.addDomainEvent({
      aggregateId: this.id.toString(),
      eventType: 'ButtonRemovedFromClassView',
      eventData: {
        classViewId: this.id.toString(),
        className: this.className.value,
        buttonId: removedButton.id.toString()
      }
    });
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[38]++;
    return Result_1.Result.ok();
  }
  /**
   * Reorder buttons
   */
  reorderButtons(buttonOrders) {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[13]++;
    cov_2rmlsclzuk().s[39]++;
    // Validate all buttons are present
    for (const button of this.props.buttons) {
      /* istanbul ignore next */
      cov_2rmlsclzuk().s[40]++;
      if (!buttonOrders.has(button.id.toString())) {
        /* istanbul ignore next */
        cov_2rmlsclzuk().b[9][0]++;
        cov_2rmlsclzuk().s[41]++;
        return Result_1.Result.fail(`Missing order for button ${button.id.toString()}`);
      } else
      /* istanbul ignore next */
      {
        cov_2rmlsclzuk().b[9][1]++;
      }
    }
    // Check for duplicate orders
    const orders =
    /* istanbul ignore next */
    (cov_2rmlsclzuk().s[42]++, Array.from(buttonOrders.values()));
    const uniqueOrders =
    /* istanbul ignore next */
    (cov_2rmlsclzuk().s[43]++, new Set(orders));
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[44]++;
    if (uniqueOrders.size !== orders.length) {
      /* istanbul ignore next */
      cov_2rmlsclzuk().b[10][0]++;
      cov_2rmlsclzuk().s[45]++;
      return Result_1.Result.fail('Duplicate order values not allowed');
    } else
    /* istanbul ignore next */
    {
      cov_2rmlsclzuk().b[10][1]++;
    }
    // Apply new orders
    cov_2rmlsclzuk().s[46]++;
    for (const button of this.props.buttons) {
      const newOrder =
      /* istanbul ignore next */
      (cov_2rmlsclzuk().s[47]++, buttonOrders.get(button.id.toString()));
      /* istanbul ignore next */
      cov_2rmlsclzuk().s[48]++;
      if (newOrder !== undefined) {
        /* istanbul ignore next */
        cov_2rmlsclzuk().b[11][0]++;
        cov_2rmlsclzuk().s[49]++;
        // This would normally update the button's order
        // but we need to maintain immutability
        Object.defineProperty(button, 'order', {
          value: newOrder
        });
      } else
      /* istanbul ignore next */
      {
        cov_2rmlsclzuk().b[11][1]++;
      }
    }
    // Raise domain event
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[50]++;
    this.addDomainEvent({
      aggregateId: this.id.toString(),
      eventType: 'ButtonsReordered',
      eventData: {
        classViewId: this.id.toString(),
        className: this.className.value,
        newOrder: Array.from(buttonOrders.entries())
      }
    });
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[51]++;
    return Result_1.Result.ok();
  }
  /**
   * Update display options
   */
  updateDisplayOptions(options) {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[14]++;
    cov_2rmlsclzuk().s[52]++;
    this.props.displayOptions = Object.assign(Object.assign({}, this.displayOptions), options);
    // Raise domain event
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[53]++;
    this.addDomainEvent({
      aggregateId: this.id.toString(),
      eventType: 'DisplayOptionsUpdated',
      eventData: {
        classViewId: this.id.toString(),
        className: this.className.value,
        displayOptions: this.props.displayOptions
      }
    });
    /* istanbul ignore next */
    cov_2rmlsclzuk().s[54]++;
    return Result_1.Result.ok();
  }
  /**
   * Get enabled buttons only
   */
  getEnabledButtons() {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[15]++;
    cov_2rmlsclzuk().s[55]++;
    return this.buttons.filter(b => {
      /* istanbul ignore next */
      cov_2rmlsclzuk().f[16]++;
      cov_2rmlsclzuk().s[56]++;
      return b.isEnabled;
    });
  }
  /**
   * Check if view has any executable buttons
   */
  hasExecutableButtons() {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[17]++;
    cov_2rmlsclzuk().s[57]++;
    return /* istanbul ignore next */(cov_2rmlsclzuk().b[12][0]++, this.getEnabledButtons().length > 0) &&
    /* istanbul ignore next */
    (cov_2rmlsclzuk().b[12][1]++, this.displayOptions.showButtons);
  }
  /**
   * Find button by ID
   */
  findButton(buttonId) {
    /* istanbul ignore next */
    cov_2rmlsclzuk().f[18]++;
    cov_2rmlsclzuk().s[58]++;
    return this.props.buttons.find(b => {
      /* istanbul ignore next */
      cov_2rmlsclzuk().f[19]++;
      cov_2rmlsclzuk().s[59]++;
      return b.id.equals(buttonId);
    });
  }
}
/* istanbul ignore next */
cov_2rmlsclzuk().s[60]++;
exports.ClassView = ClassView;
/* istanbul ignore next */
cov_2rmlsclzuk().s[61]++;
ClassView.MAX_BUTTONS_PER_VIEW = 20;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,