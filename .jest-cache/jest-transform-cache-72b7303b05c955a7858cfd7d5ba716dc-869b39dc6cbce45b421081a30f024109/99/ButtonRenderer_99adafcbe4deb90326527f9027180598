d55bbfea23772c1e8d50038617961d7b
"use strict";

/* istanbul ignore next */
function cov_1mbo3ilo1b() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/components/ButtonRenderer.ts";
  var hash = "dc16d463481a65c866bda94dcd2f34e75e4903d7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/components/ButtonRenderer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 23
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 57
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 43,
          column: 11
        }
      },
      "8": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 26,
          column: 14
        }
      },
      "9": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 30,
          column: 13
        }
      },
      "10": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 75
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "12": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 46
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "14": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 23
        }
      },
      "15": {
        start: {
          line: 36,
          column: 36
        },
        end: {
          line: 38,
          column: 14
        }
      },
      "16": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "17": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 81
        }
      },
      "18": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "19": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "20": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 71
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "22": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 50
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "24": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 37
        }
      },
      "25": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "26": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 76
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 80
        }
      },
      "28": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 110,
          column: 11
        }
      },
      "29": {
        start: {
          line: 71,
          column: 27
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "30": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "31": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 74
        }
      },
      "32": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 73
        }
      },
      "33": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 23
        }
      },
      "34": {
        start: {
          line: 82,
          column: 29
        },
        end: {
          line: 82,
          column: 46
        }
      },
      "35": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "36": {
        start: {
          line: 86,
          column: 30
        },
        end: {
          line: 103,
          column: 19
        }
      },
      "37": {
        start: {
          line: 86,
          column: 101
        },
        end: {
          line: 103,
          column: 18
        }
      },
      "38": {
        start: {
          line: 88,
          column: 39
        },
        end: {
          line: 93,
          column: 22
        }
      },
      "39": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 102,
          column: 21
        }
      },
      "40": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 85
        }
      },
      "41": {
        start: {
          line: 98,
          column: 45
        },
        end: {
          line: 98,
          column: 66
        }
      },
      "42": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 101,
          column: 25
        }
      },
      "43": {
        start: {
          line: 100,
          column: 28
        },
        end: {
          line: 100,
          column: 118
        }
      },
      "44": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 29
        }
      },
      "45": {
        start: {
          line: 106,
          column: 17
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "46": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 102
        }
      },
      "47": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 71
        }
      },
      "48": {
        start: {
          line: 120,
          column: 0
        },
        end: {
          line: 120,
          column: 40
        }
      },
      "49": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 19
        }
      },
      "50": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 29
        }
      },
      "51": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 33
        }
      },
      "52": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 30
        }
      },
      "53": {
        start: {
          line: 132,
          column: 30
        },
        end: {
          line: 132,
          column: 34
        }
      },
      "54": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 62
        }
      },
      "55": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "56": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 140,
          column: 15
        }
      },
      "57": {
        start: {
          line: 143,
          column: 23
        },
        end: {
          line: 143,
          column: 77
        }
      },
      "58": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "59": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 53
        }
      },
      "60": {
        start: {
          line: 149,
          column: 32
        },
        end: {
          line: 149,
          column: 86
        }
      },
      "61": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 166,
          column: 12
        }
      },
      "62": {
        start: {
          line: 151,
          column: 30
        },
        end: {
          line: 153,
          column: 40
        }
      },
      "63": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 153,
          column: 39
        }
      },
      "64": {
        start: {
          line: 154,
          column: 30
        },
        end: {
          line: 166,
          column: 10
        }
      },
      "65": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 48
        }
      },
      "66": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "67": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 40
        }
      },
      "68": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 23
        }
      },
      "69": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 44
        }
      },
      "70": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 25
        }
      },
      "71": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 171,
          column: 45
        }
      },
      "72": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "73": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 81
        }
      },
      "74": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "75": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 188,
          column: 19
        }
      },
      "76": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 67
        }
      },
      "77": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 184,
          column: 21
        }
      },
      "78": {
        start: {
          line: 182,
          column: 24
        },
        end: {
          line: 182,
          column: 58
        }
      },
      "79": {
        start: {
          line: 183,
          column: 24
        },
        end: {
          line: 183,
          column: 74
        }
      },
      "80": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 187,
          column: 23
        }
      },
      "81": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 61
        }
      },
      "82": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 22
        }
      },
      "83": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 200,
          column: 19
        }
      },
      "84": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 49
        }
      },
      "85": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 196,
          column: 21
        }
      },
      "86": {
        start: {
          line: 194,
          column: 24
        },
        end: {
          line: 194,
          column: 66
        }
      },
      "87": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 74
        }
      },
      "88": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 199,
          column: 23
        }
      },
      "89": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 198,
          column: 69
        }
      },
      "90": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 22
        }
      },
      "91": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 211,
          column: 19
        }
      },
      "92": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 207,
          column: 21
        }
      },
      "93": {
        start: {
          line: 205,
          column: 24
        },
        end: {
          line: 205,
          column: 60
        }
      },
      "94": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 74
        }
      },
      "95": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 210,
          column: 23
        }
      },
      "96": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 209,
          column: 61
        }
      },
      "97": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 22
        }
      },
      "98": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 223,
          column: 19
        }
      },
      "99": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 47
        }
      },
      "100": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 219,
          column: 21
        }
      },
      "101": {
        start: {
          line: 217,
          column: 24
        },
        end: {
          line: 217,
          column: 58
        }
      },
      "102": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 74
        }
      },
      "103": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 222,
          column: 23
        }
      },
      "104": {
        start: {
          line: 221,
          column: 24
        },
        end: {
          line: 221,
          column: 61
        }
      },
      "105": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 22
        }
      },
      "106": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 239,
          column: 19
        }
      },
      "107": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 227,
          column: 58
        }
      },
      "108": {
        start: {
          line: 228,
          column: 20
        },
        end: {
          line: 231,
          column: 21
        }
      },
      "109": {
        start: {
          line: 229,
          column: 24
        },
        end: {
          line: 229,
          column: 58
        }
      },
      "110": {
        start: {
          line: 230,
          column: 24
        },
        end: {
          line: 230,
          column: 74
        }
      },
      "111": {
        start: {
          line: 232,
          column: 20
        },
        end: {
          line: 238,
          column: 23
        }
      },
      "112": {
        start: {
          line: 234,
          column: 24
        },
        end: {
          line: 236,
          column: 25
        }
      },
      "113": {
        start: {
          line: 235,
          column: 28
        },
        end: {
          line: 235,
          column: 51
        }
      },
      "114": {
        start: {
          line: 237,
          column: 24
        },
        end: {
          line: 237,
          column: 61
        }
      },
      "115": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 22
        }
      },
      "116": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 254,
          column: 19
        }
      },
      "117": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 243,
          column: 65
        }
      },
      "118": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 250,
          column: 21
        }
      },
      "119": {
        start: {
          line: 245,
          column: 44
        },
        end: {
          line: 247,
          column: 48
        }
      },
      "120": {
        start: {
          line: 248,
          column: 24
        },
        end: {
          line: 248,
          column: 55
        }
      },
      "121": {
        start: {
          line: 249,
          column: 24
        },
        end: {
          line: 249,
          column: 74
        }
      },
      "122": {
        start: {
          line: 251,
          column: 20
        },
        end: {
          line: 253,
          column: 23
        }
      },
      "123": {
        start: {
          line: 252,
          column: 24
        },
        end: {
          line: 252,
          column: 95
        }
      },
      "124": {
        start: {
          line: 252,
          column: 85
        },
        end: {
          line: 252,
          column: 93
        }
      },
      "125": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 255,
          column: 22
        }
      },
      "126": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 262,
          column: 19
        }
      },
      "127": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 261,
          column: 23
        }
      },
      "128": {
        start: {
          line: 260,
          column: 24
        },
        end: {
          line: 260,
          column: 61
        }
      },
      "129": {
        start: {
          line: 266,
          column: 23
        },
        end: {
          line: 266,
          column: 25
        }
      },
      "130": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "131": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "132": {
        start: {
          line: 269,
          column: 30
        },
        end: {
          line: 269,
          column: 58
        }
      },
      "133": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 272,
          column: 17
        }
      },
      "134": {
        start: {
          line: 271,
          column: 20
        },
        end: {
          line: 271,
          column: 76
        }
      },
      "135": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "136": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 284,
          column: 17
        }
      },
      "137": {
        start: {
          line: 277,
          column: 34
        },
        end: {
          line: 277,
          column: 62
        }
      },
      "138": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 280,
          column: 21
        }
      },
      "139": {
        start: {
          line: 279,
          column: 24
        },
        end: {
          line: 279,
          column: 86
        }
      },
      "140": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 22
        }
      },
      "141": {
        start: {
          line: 291,
          column: 29
        },
        end: {
          line: 291,
          column: 85
        }
      },
      "142": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 50
        }
      },
      "143": {
        start: {
          line: 295,
          column: 30
        },
        end: {
          line: 295,
          column: 34
        }
      },
      "144": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 66
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 51
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 55
          },
          end: {
            line: 20,
            column: 56
          }
        },
        loc: {
          start: {
            line: 20,
            column: 68
          },
          end: {
            line: 43,
            column: 9
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 58
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 51,
            column: 21
          },
          end: {
            line: 51,
            column: 22
          }
        },
        loc: {
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 53,
            column: 10
          }
        },
        line: 51
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 67
          },
          end: {
            line: 51,
            column: 68
          }
        },
        loc: {
          start: {
            line: 51,
            column: 80
          },
          end: {
            line: 53,
            column: 9
          }
        },
        line: 51
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 52
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 55
          },
          end: {
            line: 69,
            column: 56
          }
        },
        loc: {
          start: {
            line: 69,
            column: 68
          },
          end: {
            line: 110,
            column: 9
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 86,
            column: 84
          },
          end: {
            line: 86,
            column: 85
          }
        },
        loc: {
          start: {
            line: 86,
            column: 101
          },
          end: {
            line: 103,
            column: 18
          }
        },
        line: 86
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 86,
            column: 141
          },
          end: {
            line: 86,
            column: 142
          }
        },
        loc: {
          start: {
            line: 86,
            column: 154
          },
          end: {
            line: 103,
            column: 17
          }
        },
        line: 86
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 36
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 115
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 39
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 13
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 131
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 151,
            column: 23
          },
          end: {
            line: 151,
            column: 24
          }
        },
        loc: {
          start: {
            line: 151,
            column: 30
          },
          end: {
            line: 153,
            column: 40
          }
        },
        line: 151
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 153,
            column: 21
          },
          end: {
            line: 153,
            column: 22
          }
        },
        loc: {
          start: {
            line: 153,
            column: 27
          },
          end: {
            line: 153,
            column: 39
          }
        },
        line: 153
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 154,
            column: 23
          },
          end: {
            line: 154,
            column: 24
          }
        },
        loc: {
          start: {
            line: 154,
            column: 30
          },
          end: {
            line: 166,
            column: 10
          }
        },
        line: 154
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 157,
            column: 21
          },
          end: {
            line: 157,
            column: 22
          }
        },
        loc: {
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 166,
            column: 9
          }
        },
        line: 157
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 43
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 168
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 179,
            column: 32
          },
          end: {
            line: 179,
            column: 33
          }
        },
        loc: {
          start: {
            line: 179,
            column: 40
          },
          end: {
            line: 188,
            column: 17
          }
        },
        line: 179
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 185,
            column: 34
          },
          end: {
            line: 185,
            column: 35
          }
        },
        loc: {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 187,
            column: 21
          }
        },
        line: 185
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 191,
            column: 32
          },
          end: {
            line: 191,
            column: 33
          }
        },
        loc: {
          start: {
            line: 191,
            column: 40
          },
          end: {
            line: 200,
            column: 17
          }
        },
        line: 191
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 197,
            column: 34
          },
          end: {
            line: 197,
            column: 35
          }
        },
        loc: {
          start: {
            line: 197,
            column: 43
          },
          end: {
            line: 199,
            column: 21
          }
        },
        line: 197
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 203,
            column: 34
          },
          end: {
            line: 203,
            column: 35
          }
        },
        loc: {
          start: {
            line: 203,
            column: 44
          },
          end: {
            line: 211,
            column: 17
          }
        },
        line: 203
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 208,
            column: 36
          },
          end: {
            line: 208,
            column: 37
          }
        },
        loc: {
          start: {
            line: 208,
            column: 45
          },
          end: {
            line: 210,
            column: 21
          }
        },
        line: 208
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 214,
            column: 32
          },
          end: {
            line: 214,
            column: 33
          }
        },
        loc: {
          start: {
            line: 214,
            column: 40
          },
          end: {
            line: 223,
            column: 17
          }
        },
        line: 214
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 220,
            column: 34
          },
          end: {
            line: 220,
            column: 35
          }
        },
        loc: {
          start: {
            line: 220,
            column: 43
          },
          end: {
            line: 222,
            column: 21
          }
        },
        line: 220
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 226,
            column: 32
          },
          end: {
            line: 226,
            column: 33
          }
        },
        loc: {
          start: {
            line: 226,
            column: 40
          },
          end: {
            line: 239,
            column: 17
          }
        },
        line: 226
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 232,
            column: 34
          },
          end: {
            line: 232,
            column: 35
          }
        },
        loc: {
          start: {
            line: 232,
            column: 43
          },
          end: {
            line: 238,
            column: 21
          }
        },
        line: 232
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 242,
            column: 36
          },
          end: {
            line: 242,
            column: 37
          }
        },
        loc: {
          start: {
            line: 242,
            column: 48
          },
          end: {
            line: 254,
            column: 17
          }
        },
        line: 242
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 251,
            column: 38
          },
          end: {
            line: 251,
            column: 39
          }
        },
        loc: {
          start: {
            line: 251,
            column: 47
          },
          end: {
            line: 253,
            column: 21
          }
        },
        line: 251
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 252,
            column: 80
          },
          end: {
            line: 252,
            column: 81
          }
        },
        loc: {
          start: {
            line: 252,
            column: 85
          },
          end: {
            line: 252,
            column: 93
          }
        },
        line: 252
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 258,
            column: 32
          },
          end: {
            line: 258,
            column: 33
          }
        },
        loc: {
          start: {
            line: 258,
            column: 40
          },
          end: {
            line: 262,
            column: 17
          }
        },
        line: 258
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 259,
            column: 34
          },
          end: {
            line: 259,
            column: 35
          }
        },
        loc: {
          start: {
            line: 259,
            column: 43
          },
          end: {
            line: 261,
            column: 21
          }
        },
        line: 259
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 21
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 265
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        loc: {
          start: {
            line: 289,
            column: 23
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 289
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 14
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 294
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 52
          }
        }, {
          start: {
            line: 32,
            column: 56
          },
          end: {
            line: 32,
            column: 85
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "6": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: 106,
            column: 17
          },
          end: {
            line: 109,
            column: 13
          }
        }],
        line: 84
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 38
          }
        }, {
          start: {
            line: 84,
            column: 42
          },
          end: {
            line: 84,
            column: 62
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 102,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 102,
            column: 21
          }
        }, {
          start: {
            line: 97,
            column: 25
          },
          end: {
            line: 102,
            column: 21
          }
        }],
        line: 94
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 24
          },
          end: {
            line: 101,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 24
          },
          end: {
            line: 101,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 50
          },
          end: {
            line: 100,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 50
          },
          end: {
            line: 100,
            column: 70
          }
        }, {
          start: {
            line: 100,
            column: 74
          },
          end: {
            line: 100,
            column: 105
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 106,
            column: 17
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 17
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "12": {
        loc: {
          start: {
            line: 108,
            column: 38
          },
          end: {
            line: 108,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 38
          },
          end: {
            line: 108,
            column: 54
          }
        }, {
          start: {
            line: 108,
            column: 58
          },
          end: {
            line: 108,
            column: 89
          }
        }],
        line: 108
      },
      "13": {
        loc: {
          start: {
            line: 117,
            column: 39
          },
          end: {
            line: 117,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 58
          },
          end: {
            line: 117,
            column: 62
          }
        }, {
          start: {
            line: 117,
            column: 65
          },
          end: {
            line: 117,
            column: 69
          }
        }],
        line: 117
      },
      "14": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "15": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "16": {
        loc: {
          start: {
            line: 170,
            column: 21
          },
          end: {
            line: 170,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 21
          },
          end: {
            line: 170,
            column: 32
          }
        }, {
          start: {
            line: 170,
            column: 36
          },
          end: {
            line: 170,
            column: 46
          }
        }],
        line: 170
      },
      "17": {
        loc: {
          start: {
            line: 171,
            column: 21
          },
          end: {
            line: 171,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 21
          },
          end: {
            line: 171,
            column: 38
          }
        }, {
          start: {
            line: 171,
            column: 42
          },
          end: {
            line: 171,
            column: 44
          }
        }],
        line: 171
      },
      "18": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "19": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 189,
            column: 22
          }
        }, {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 201,
            column: 22
          }
        }, {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 212,
            column: 22
          }
        }, {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 224,
            column: 22
          }
        }, {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 240,
            column: 22
          }
        }, {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 255,
            column: 22
          }
        }, {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 262,
            column: 19
          }
        }],
        line: 177
      },
      "20": {
        loc: {
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 180,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 180,
            column: 51
          }
        }, {
          start: {
            line: 180,
            column: 55
          },
          end: {
            line: 180,
            column: 65
          }
        }],
        line: 180
      },
      "21": {
        loc: {
          start: {
            line: 181,
            column: 20
          },
          end: {
            line: 184,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 20
          },
          end: {
            line: 184,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "22": {
        loc: {
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 196,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 196,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "23": {
        loc: {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 207,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 207,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "24": {
        loc: {
          start: {
            line: 216,
            column: 20
          },
          end: {
            line: 219,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 20
          },
          end: {
            line: 219,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "25": {
        loc: {
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 231,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 231,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "26": {
        loc: {
          start: {
            line: 234,
            column: 24
          },
          end: {
            line: 236,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 24
          },
          end: {
            line: 236,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "27": {
        loc: {
          start: {
            line: 234,
            column: 28
          },
          end: {
            line: 234,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 28
          },
          end: {
            line: 234,
            column: 33
          }
        }, {
          start: {
            line: 234,
            column: 37
          },
          end: {
            line: 234,
            column: 60
          }
        }],
        line: 234
      },
      "28": {
        loc: {
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 250,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 250,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "29": {
        loc: {
          start: {
            line: 245,
            column: 44
          },
          end: {
            line: 247,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 30
          },
          end: {
            line: 246,
            column: 59
          }
        }, {
          start: {
            line: 247,
            column: 30
          },
          end: {
            line: 247,
            column: 48
          }
        }],
        line: 245
      },
      "30": {
        loc: {
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "31": {
        loc: {
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 272,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 272,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "32": {
        loc: {
          start: {
            line: 270,
            column: 20
          },
          end: {
            line: 270,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 20
          },
          end: {
            line: 270,
            column: 39
          }
        }, {
          start: {
            line: 270,
            column: 43
          },
          end: {
            line: 270,
            column: 57
          }
        }, {
          start: {
            line: 270,
            column: 61
          },
          end: {
            line: 270,
            column: 73
          }
        }],
        line: 270
      },
      "33": {
        loc: {
          start: {
            line: 271,
            column: 35
          },
          end: {
            line: 271,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 35
          },
          end: {
            line: 271,
            column: 46
          }
        }, {
          start: {
            line: 271,
            column: 50
          },
          end: {
            line: 271,
            column: 60
          }
        }],
        line: 271
      },
      "34": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "35": {
        loc: {
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 32
          }
        }, {
          start: {
            line: 275,
            column: 36
          },
          end: {
            line: 275,
            column: 64
          }
        }],
        line: 275
      },
      "36": {
        loc: {
          start: {
            line: 278,
            column: 20
          },
          end: {
            line: 280,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 20
          },
          end: {
            line: 280,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "37": {
        loc: {
          start: {
            line: 279,
            column: 39
          },
          end: {
            line: 279,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 39
          },
          end: {
            line: 279,
            column: 50
          }
        }, {
          start: {
            line: 279,
            column: 54
          },
          end: {
            line: 279,
            column: 64
          }
        }],
        line: 279
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0, 0, 0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/components/ButtonRenderer.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/components/ButtonRenderer.ts"],
      sourcesContent: ["import { ButtonComponent, Modal, App, Setting, Notice } from 'obsidian';\nimport { RenderClassButtonsUseCase, ButtonRenderData } from '../../application/use-cases/RenderClassButtonsUseCase';\nimport { ExecuteButtonCommandUseCase } from '../../application/use-cases/ExecuteButtonCommandUseCase';\nimport { CommandParameter } from '../../domain/entities/ButtonCommand';\n\n/**\n * Presentation layer component for rendering buttons in asset views\n * Following Clean Architecture - this is a framework-specific adapter\n */\nexport class ButtonRenderer {\n    constructor(\n        private app: App,\n        private renderButtonsUseCase: RenderClassButtonsUseCase,\n        private executeCommandUseCase: ExecuteButtonCommandUseCase\n    ) {}\n\n    /**\n     * Render buttons for a class view\n     */\n    async render(\n        container: HTMLElement,\n        className: string,\n        assetId?: string,\n        context?: any\n    ): Promise<void> {\n        // Get buttons from use case\n        const result = await this.renderButtonsUseCase.execute({\n            className,\n            assetId,\n            context\n        });\n\n        if (result.isFailure) {\n            console.error(`Failed to render buttons: ${result.error}`);\n            return;\n        }\n\n        const response = result.getValue();\n        \n        if (!response.displayOptions.showButtons || response.buttons.length === 0) {\n            return;\n        }\n\n        // Create button container\n        const buttonContainer = container.createDiv({\n            cls: `exocortex-button-container exocortex-buttons-${response.displayOptions.position}`\n        });\n\n        // Render each button\n        for (const buttonData of response.buttons) {\n            this.renderButton(buttonContainer, buttonData, assetId, context);\n        }\n    }\n\n    /**\n     * Render individual button\n     */\n    private renderButton(\n        container: HTMLElement,\n        buttonData: ButtonRenderData,\n        assetId?: string,\n        context?: any\n    ): void {\n        const button = new ButtonComponent(container)\n            .setButtonText(buttonData.label)\n            .onClick(async () => {\n                await this.handleButtonClick(buttonData, assetId, context);\n            });\n\n        if (buttonData.tooltip) {\n            button.setTooltip(buttonData.tooltip);\n        }\n\n        if (!buttonData.isEnabled) {\n            button.setDisabled(true);\n        }\n\n        // Add custom CSS class for styling\n        button.buttonEl.addClass('exocortex-ui-button');\n        button.buttonEl.setAttribute('data-button-id', buttonData.buttonId);\n        button.buttonEl.setAttribute('data-order', buttonData.order.toString());\n    }\n\n    /**\n     * Handle button click\n     */\n    private async handleButtonClick(\n        buttonData: ButtonRenderData,\n        assetId?: string,\n        context?: any\n    ): Promise<void> {\n        // First execution attempt without parameters\n        const result = await this.executeCommandUseCase.execute({\n            buttonId: buttonData.buttonId,\n            assetId,\n            context\n        });\n\n        if (result.isFailure) {\n            console.error(`Button execution failed: ${result.error}`);\n            // Show error notification\n            this.showNotification(`Error: ${result.error}`, 'error');\n            return;\n        }\n\n        const response = result.getValue();\n\n        // Check if input is required\n        if (response.requiresInput && response.inputSchema) {\n            // Open input modal\n            const modal = new CommandInputModal(\n                this.app,\n                response.inputSchema,\n                async (inputValues) => {\n                    // Execute with parameters\n                    const execResult = await this.executeCommandUseCase.execute({\n                        buttonId: buttonData.buttonId,\n                        assetId,\n                        inputParameters: inputValues,\n                        context\n                    });\n\n                    if (execResult.isFailure) {\n                        this.showNotification(`Error: ${execResult.error}`, 'error');\n                    } else {\n                        const execResponse = execResult.getValue();\n                        if (execResponse.success) {\n                            this.showNotification(\n                                execResponse.message || 'Command executed successfully',\n                                'success'\n                            );\n                        }\n                    }\n                }\n            );\n            modal.open();\n        } else if (response.success) {\n            // Command executed successfully\n            this.showNotification(\n                response.message || 'Command executed successfully',\n                'success'\n            );\n        }\n    }\n\n    /**\n     * Show notification to user\n     */\n    private showNotification(message: string, type: 'success' | 'error' | 'info'): void {\n        // In Obsidian, we use Notice for notifications\n        new Notice(message, type === 'error' ? 5000 : 3000);\n    }\n}\n\n/**\n * Modal for collecting command input parameters\n */\nclass CommandInputModal extends Modal {\n    private inputValues: Record<string, any> = {};\n\n    constructor(\n        app: App,\n        private schema: {\n            title: string;\n            description?: string;\n            parameters: CommandParameter[];\n        },\n        private onSubmit: (values: Record<string, any>) => void\n    ) {\n        super(app);\n    }\n\n    onOpen(): void {\n        const { contentEl } = this;\n        \n        // Add title\n        contentEl.createEl('h2', { text: this.schema.title });\n        \n        // Add description if present\n        if (this.schema.description) {\n            contentEl.createEl('p', { \n                text: this.schema.description,\n                cls: 'exocortex-modal-description'\n            });\n        }\n\n        // Create form\n        const formEl = contentEl.createDiv({ cls: 'exocortex-command-form' });\n\n        // Add input for each parameter\n        for (const param of this.schema.parameters) {\n            this.createParameterInput(formEl, param);\n        }\n\n        // Add buttons\n        const buttonContainer = contentEl.createDiv({ cls: 'modal-button-container' });\n        \n        new Setting(buttonContainer)\n            .addButton(btn => btn\n                .setButtonText('Cancel')\n                .onClick(() => this.close()))\n            .addButton(btn => btn\n                .setButtonText('Execute')\n                .setCta()\n                .onClick(() => {\n                    // Validate required fields\n                    const errors = this.validateInputs();\n                    if (errors.length > 0) {\n                        this.showErrors(errors);\n                        return;\n                    }\n                    \n                    this.onSubmit(this.inputValues);\n                    this.close();\n                }));\n    }\n\n    private createParameterInput(container: HTMLElement, param: CommandParameter): void {\n        const setting = new Setting(container)\n            .setName(param.label || param.name)\n            .setDesc(param.description || '');\n\n        // Mark required fields\n        if (param.required) {\n            setting.nameEl.createSpan({ text: ' *', cls: 'required-indicator' });\n        }\n\n        // Create appropriate input based on type\n        switch (param.type) {\n            case 'string':\n                setting.addText(text => {\n                    text.setPlaceholder(param.label || param.name);\n                    if (param.defaultValue) {\n                        text.setValue(param.defaultValue);\n                        this.inputValues[param.name] = param.defaultValue;\n                    }\n                    text.onChange(value => {\n                        this.inputValues[param.name] = value;\n                    });\n                });\n                break;\n\n            case 'number':\n                setting.addText(text => {\n                    text.inputEl.type = 'number';\n                    if (param.defaultValue !== undefined) {\n                        text.setValue(String(param.defaultValue));\n                        this.inputValues[param.name] = param.defaultValue;\n                    }\n                    text.onChange(value => {\n                        this.inputValues[param.name] = Number(value);\n                    });\n                });\n                break;\n\n            case 'boolean':\n                setting.addToggle(toggle => {\n                    if (param.defaultValue !== undefined) {\n                        toggle.setValue(param.defaultValue);\n                        this.inputValues[param.name] = param.defaultValue;\n                    }\n                    toggle.onChange(value => {\n                        this.inputValues[param.name] = value;\n                    });\n                });\n                break;\n\n            case 'date':\n                setting.addText(text => {\n                    text.inputEl.type = 'date';\n                    if (param.defaultValue) {\n                        text.setValue(param.defaultValue);\n                        this.inputValues[param.name] = param.defaultValue;\n                    }\n                    text.onChange(value => {\n                        this.inputValues[param.name] = value;\n                    });\n                });\n                break;\n\n            case 'asset':\n                setting.addText(text => {\n                    text.setPlaceholder('[[Asset Name]]');\n                    if (param.defaultValue) {\n                        text.setValue(param.defaultValue);\n                        this.inputValues[param.name] = param.defaultValue;\n                    }\n                    text.onChange(value => {\n                        // Ensure it's in wiki link format\n                        if (value && !value.startsWith('[[')) {\n                            value = `[[${value}]]`;\n                        }\n                        this.inputValues[param.name] = value;\n                    });\n                });\n                break;\n\n            case 'array':\n                setting.addTextArea(textarea => {\n                    textarea.setPlaceholder('One item per line');\n                    if (param.defaultValue) {\n                        const defaultText = Array.isArray(param.defaultValue)\n                            ? param.defaultValue.join('\\n')\n                            : param.defaultValue;\n                        textarea.setValue(defaultText);\n                        this.inputValues[param.name] = param.defaultValue;\n                    }\n                    textarea.onChange(value => {\n                        this.inputValues[param.name] = value.split('\\n').filter(v => v.trim());\n                    });\n                });\n                break;\n\n            default:\n                // Default to text input\n                setting.addText(text => {\n                    text.onChange(value => {\n                        this.inputValues[param.name] = value;\n                    });\n                });\n        }\n    }\n\n    private validateInputs(): string[] {\n        const errors: string[] = [];\n        \n        for (const param of this.schema.parameters) {\n            if (param.required) {\n                const value = this.inputValues[param.name];\n                if (value === undefined || value === null || value === '') {\n                    errors.push(`${param.label || param.name} is required`);\n                }\n            }\n\n            // Custom validation if provided\n            if (param.validation && this.inputValues[param.name]) {\n                try {\n                    const regex = new RegExp(param.validation);\n                    if (!regex.test(String(this.inputValues[param.name]))) {\n                        errors.push(`${param.label || param.name} format is invalid`);\n                    }\n                } catch (e) {\n                    // Invalid regex, skip validation\n                }\n            }\n        }\n\n        return errors;\n    }\n\n    private showErrors(errors: string[]): void {\n        // Show errors in a notice\n        const errorMessage = 'Please fix the following errors:\\n' + errors.join('\\n');\n        new Notice(errorMessage, 5000);\n    }\n\n    onClose(): void {\n        const { contentEl } = this;\n        contentEl.empty();\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dc16d463481a65c866bda94dcd2f34e75e4903d7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mbo3ilo1b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mbo3ilo1b();
cov_1mbo3ilo1b().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1mbo3ilo1b().s[1]++;
exports.ButtonRenderer = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1mbo3ilo1b().s[2]++, require("tslib"));
const obsidian_1 =
/* istanbul ignore next */
(cov_1mbo3ilo1b().s[3]++, require("obsidian"));
/**
 * Presentation layer component for rendering buttons in asset views
 * Following Clean Architecture - this is a framework-specific adapter
 */
class ButtonRenderer {
  constructor(app, renderButtonsUseCase, executeCommandUseCase) {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[0]++;
    cov_1mbo3ilo1b().s[4]++;
    this.app = app;
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[5]++;
    this.renderButtonsUseCase = renderButtonsUseCase;
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[6]++;
    this.executeCommandUseCase = executeCommandUseCase;
  }
  /**
   * Render buttons for a class view
   */
  render(container, className, assetId, context) {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[1]++;
    cov_1mbo3ilo1b().s[7]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().f[2]++;
      // Get buttons from use case
      const result =
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().s[8]++, yield this.renderButtonsUseCase.execute({
        className,
        assetId,
        context
      }));
      /* istanbul ignore next */
      cov_1mbo3ilo1b().s[9]++;
      if (result.isFailure) {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[0][0]++;
        cov_1mbo3ilo1b().s[10]++;
        console.error(`Failed to render buttons: ${result.error}`);
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[11]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1mbo3ilo1b().b[0][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().s[12]++, result.getValue());
      /* istanbul ignore next */
      cov_1mbo3ilo1b().s[13]++;
      if (
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().b[2][0]++, !response.displayOptions.showButtons) ||
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().b[2][1]++, response.buttons.length === 0)) {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[1][0]++;
        cov_1mbo3ilo1b().s[14]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1mbo3ilo1b().b[1][1]++;
      }
      // Create button container
      const buttonContainer =
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().s[15]++, container.createDiv({
        cls: `exocortex-button-container exocortex-buttons-${response.displayOptions.position}`
      }));
      // Render each button
      /* istanbul ignore next */
      cov_1mbo3ilo1b().s[16]++;
      for (const buttonData of response.buttons) {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[17]++;
        this.renderButton(buttonContainer, buttonData, assetId, context);
      }
    });
  }
  /**
   * Render individual button
   */
  renderButton(container, buttonData, assetId, context) {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[3]++;
    const button =
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().s[18]++, new obsidian_1.ButtonComponent(container).setButtonText(buttonData.label).onClick(() => {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().f[4]++;
      cov_1mbo3ilo1b().s[19]++;
      return tslib_1.__awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().f[5]++;
        cov_1mbo3ilo1b().s[20]++;
        yield this.handleButtonClick(buttonData, assetId, context);
      });
    }));
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[21]++;
    if (buttonData.tooltip) {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().b[3][0]++;
      cov_1mbo3ilo1b().s[22]++;
      button.setTooltip(buttonData.tooltip);
    } else
    /* istanbul ignore next */
    {
      cov_1mbo3ilo1b().b[3][1]++;
    }
    cov_1mbo3ilo1b().s[23]++;
    if (!buttonData.isEnabled) {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().b[4][0]++;
      cov_1mbo3ilo1b().s[24]++;
      button.setDisabled(true);
    } else
    /* istanbul ignore next */
    {
      cov_1mbo3ilo1b().b[4][1]++;
    }
    // Add custom CSS class for styling
    cov_1mbo3ilo1b().s[25]++;
    button.buttonEl.addClass('exocortex-ui-button');
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[26]++;
    button.buttonEl.setAttribute('data-button-id', buttonData.buttonId);
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[27]++;
    button.buttonEl.setAttribute('data-order', buttonData.order.toString());
  }
  /**
   * Handle button click
   */
  handleButtonClick(buttonData, assetId, context) {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[6]++;
    cov_1mbo3ilo1b().s[28]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().f[7]++;
      // First execution attempt without parameters
      const result =
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().s[29]++, yield this.executeCommandUseCase.execute({
        buttonId: buttonData.buttonId,
        assetId,
        context
      }));
      /* istanbul ignore next */
      cov_1mbo3ilo1b().s[30]++;
      if (result.isFailure) {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[5][0]++;
        cov_1mbo3ilo1b().s[31]++;
        console.error(`Button execution failed: ${result.error}`);
        // Show error notification
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[32]++;
        this.showNotification(`Error: ${result.error}`, 'error');
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[33]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1mbo3ilo1b().b[5][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().s[34]++, result.getValue());
      // Check if input is required
      /* istanbul ignore next */
      cov_1mbo3ilo1b().s[35]++;
      if (
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().b[7][0]++, response.requiresInput) &&
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().b[7][1]++, response.inputSchema)) {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[6][0]++;
        // Open input modal
        const modal =
        /* istanbul ignore next */
        (cov_1mbo3ilo1b().s[36]++, new CommandInputModal(this.app, response.inputSchema, inputValues => {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().f[8]++;
          cov_1mbo3ilo1b().s[37]++;
          return tslib_1.__awaiter(this, void 0, void 0, function* () {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().f[9]++;
            // Execute with parameters
            const execResult =
            /* istanbul ignore next */
            (cov_1mbo3ilo1b().s[38]++, yield this.executeCommandUseCase.execute({
              buttonId: buttonData.buttonId,
              assetId,
              inputParameters: inputValues,
              context
            }));
            /* istanbul ignore next */
            cov_1mbo3ilo1b().s[39]++;
            if (execResult.isFailure) {
              /* istanbul ignore next */
              cov_1mbo3ilo1b().b[8][0]++;
              cov_1mbo3ilo1b().s[40]++;
              this.showNotification(`Error: ${execResult.error}`, 'error');
            } else {
              /* istanbul ignore next */
              cov_1mbo3ilo1b().b[8][1]++;
              const execResponse =
              /* istanbul ignore next */
              (cov_1mbo3ilo1b().s[41]++, execResult.getValue());
              /* istanbul ignore next */
              cov_1mbo3ilo1b().s[42]++;
              if (execResponse.success) {
                /* istanbul ignore next */
                cov_1mbo3ilo1b().b[9][0]++;
                cov_1mbo3ilo1b().s[43]++;
                this.showNotification(
                /* istanbul ignore next */
                (cov_1mbo3ilo1b().b[10][0]++, execResponse.message) ||
                /* istanbul ignore next */
                (cov_1mbo3ilo1b().b[10][1]++, 'Command executed successfully'), 'success');
              } else
              /* istanbul ignore next */
              {
                cov_1mbo3ilo1b().b[9][1]++;
              }
            }
          });
        }));
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[44]++;
        modal.open();
      } else {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[6][1]++;
        cov_1mbo3ilo1b().s[45]++;
        if (response.success) {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().b[11][0]++;
          cov_1mbo3ilo1b().s[46]++;
          // Command executed successfully
          this.showNotification(
          /* istanbul ignore next */
          (cov_1mbo3ilo1b().b[12][0]++, response.message) ||
          /* istanbul ignore next */
          (cov_1mbo3ilo1b().b[12][1]++, 'Command executed successfully'), 'success');
        } else
        /* istanbul ignore next */
        {
          cov_1mbo3ilo1b().b[11][1]++;
        }
      }
    });
  }
  /**
   * Show notification to user
   */
  showNotification(message, type) {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[10]++;
    cov_1mbo3ilo1b().s[47]++;
    // In Obsidian, we use Notice for notifications
    new obsidian_1.Notice(message, type === 'error' ?
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().b[13][0]++, 5000) :
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().b[13][1]++, 3000));
  }
}
/* istanbul ignore next */
cov_1mbo3ilo1b().s[48]++;
exports.ButtonRenderer = ButtonRenderer;
/**
 * Modal for collecting command input parameters
 */
class CommandInputModal extends
/* istanbul ignore next */
(obsidian_1.Modal) {
  constructor(app, schema, onSubmit) {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[11]++;
    cov_1mbo3ilo1b().s[49]++;
    super(app);
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[50]++;
    this.schema = schema;
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[51]++;
    this.onSubmit = onSubmit;
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[52]++;
    this.inputValues = {};
  }
  onOpen() {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[12]++;
    const {
      contentEl
    } =
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().s[53]++, this);
    // Add title
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[54]++;
    contentEl.createEl('h2', {
      text: this.schema.title
    });
    // Add description if present
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[55]++;
    if (this.schema.description) {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().b[14][0]++;
      cov_1mbo3ilo1b().s[56]++;
      contentEl.createEl('p', {
        text: this.schema.description,
        cls: 'exocortex-modal-description'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mbo3ilo1b().b[14][1]++;
    }
    // Create form
    const formEl =
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().s[57]++, contentEl.createDiv({
      cls: 'exocortex-command-form'
    }));
    // Add input for each parameter
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[58]++;
    for (const param of this.schema.parameters) {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().s[59]++;
      this.createParameterInput(formEl, param);
    }
    // Add buttons
    const buttonContainer =
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().s[60]++, contentEl.createDiv({
      cls: 'modal-button-container'
    }));
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[61]++;
    new obsidian_1.Setting(buttonContainer).addButton(btn => {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().f[13]++;
      cov_1mbo3ilo1b().s[62]++;
      return btn.setButtonText('Cancel').onClick(() => {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().f[14]++;
        cov_1mbo3ilo1b().s[63]++;
        return this.close();
      });
    }).addButton(btn => {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().f[15]++;
      cov_1mbo3ilo1b().s[64]++;
      return btn.setButtonText('Execute').setCta().onClick(() => {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().f[16]++;
        // Validate required fields
        const errors =
        /* istanbul ignore next */
        (cov_1mbo3ilo1b().s[65]++, this.validateInputs());
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[66]++;
        if (errors.length > 0) {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().b[15][0]++;
          cov_1mbo3ilo1b().s[67]++;
          this.showErrors(errors);
          /* istanbul ignore next */
          cov_1mbo3ilo1b().s[68]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1mbo3ilo1b().b[15][1]++;
        }
        cov_1mbo3ilo1b().s[69]++;
        this.onSubmit(this.inputValues);
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[70]++;
        this.close();
      });
    });
  }
  createParameterInput(container, param) {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[17]++;
    const setting =
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().s[71]++, new obsidian_1.Setting(container).setName(
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().b[16][0]++, param.label) ||
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().b[16][1]++, param.name)).setDesc(
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().b[17][0]++, param.description) ||
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().b[17][1]++, '')));
    // Mark required fields
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[72]++;
    if (param.required) {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().b[18][0]++;
      cov_1mbo3ilo1b().s[73]++;
      setting.nameEl.createSpan({
        text: ' *',
        cls: 'required-indicator'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mbo3ilo1b().b[18][1]++;
    }
    // Create appropriate input based on type
    cov_1mbo3ilo1b().s[74]++;
    switch (param.type) {
      case 'string':
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[19][0]++;
        cov_1mbo3ilo1b().s[75]++;
        setting.addText(text => {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().f[18]++;
          cov_1mbo3ilo1b().s[76]++;
          text.setPlaceholder(
          /* istanbul ignore next */
          (cov_1mbo3ilo1b().b[20][0]++, param.label) ||
          /* istanbul ignore next */
          (cov_1mbo3ilo1b().b[20][1]++, param.name));
          /* istanbul ignore next */
          cov_1mbo3ilo1b().s[77]++;
          if (param.defaultValue) {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().b[21][0]++;
            cov_1mbo3ilo1b().s[78]++;
            text.setValue(param.defaultValue);
            /* istanbul ignore next */
            cov_1mbo3ilo1b().s[79]++;
            this.inputValues[param.name] = param.defaultValue;
          } else
          /* istanbul ignore next */
          {
            cov_1mbo3ilo1b().b[21][1]++;
          }
          cov_1mbo3ilo1b().s[80]++;
          text.onChange(value => {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().f[19]++;
            cov_1mbo3ilo1b().s[81]++;
            this.inputValues[param.name] = value;
          });
        });
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[82]++;
        break;
      case 'number':
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[19][1]++;
        cov_1mbo3ilo1b().s[83]++;
        setting.addText(text => {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().f[20]++;
          cov_1mbo3ilo1b().s[84]++;
          text.inputEl.type = 'number';
          /* istanbul ignore next */
          cov_1mbo3ilo1b().s[85]++;
          if (param.defaultValue !== undefined) {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().b[22][0]++;
            cov_1mbo3ilo1b().s[86]++;
            text.setValue(String(param.defaultValue));
            /* istanbul ignore next */
            cov_1mbo3ilo1b().s[87]++;
            this.inputValues[param.name] = param.defaultValue;
          } else
          /* istanbul ignore next */
          {
            cov_1mbo3ilo1b().b[22][1]++;
          }
          cov_1mbo3ilo1b().s[88]++;
          text.onChange(value => {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().f[21]++;
            cov_1mbo3ilo1b().s[89]++;
            this.inputValues[param.name] = Number(value);
          });
        });
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[90]++;
        break;
      case 'boolean':
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[19][2]++;
        cov_1mbo3ilo1b().s[91]++;
        setting.addToggle(toggle => {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().f[22]++;
          cov_1mbo3ilo1b().s[92]++;
          if (param.defaultValue !== undefined) {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().b[23][0]++;
            cov_1mbo3ilo1b().s[93]++;
            toggle.setValue(param.defaultValue);
            /* istanbul ignore next */
            cov_1mbo3ilo1b().s[94]++;
            this.inputValues[param.name] = param.defaultValue;
          } else
          /* istanbul ignore next */
          {
            cov_1mbo3ilo1b().b[23][1]++;
          }
          cov_1mbo3ilo1b().s[95]++;
          toggle.onChange(value => {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().f[23]++;
            cov_1mbo3ilo1b().s[96]++;
            this.inputValues[param.name] = value;
          });
        });
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[97]++;
        break;
      case 'date':
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[19][3]++;
        cov_1mbo3ilo1b().s[98]++;
        setting.addText(text => {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().f[24]++;
          cov_1mbo3ilo1b().s[99]++;
          text.inputEl.type = 'date';
          /* istanbul ignore next */
          cov_1mbo3ilo1b().s[100]++;
          if (param.defaultValue) {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().b[24][0]++;
            cov_1mbo3ilo1b().s[101]++;
            text.setValue(param.defaultValue);
            /* istanbul ignore next */
            cov_1mbo3ilo1b().s[102]++;
            this.inputValues[param.name] = param.defaultValue;
          } else
          /* istanbul ignore next */
          {
            cov_1mbo3ilo1b().b[24][1]++;
          }
          cov_1mbo3ilo1b().s[103]++;
          text.onChange(value => {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().f[25]++;
            cov_1mbo3ilo1b().s[104]++;
            this.inputValues[param.name] = value;
          });
        });
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[105]++;
        break;
      case 'asset':
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[19][4]++;
        cov_1mbo3ilo1b().s[106]++;
        setting.addText(text => {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().f[26]++;
          cov_1mbo3ilo1b().s[107]++;
          text.setPlaceholder('[[Asset Name]]');
          /* istanbul ignore next */
          cov_1mbo3ilo1b().s[108]++;
          if (param.defaultValue) {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().b[25][0]++;
            cov_1mbo3ilo1b().s[109]++;
            text.setValue(param.defaultValue);
            /* istanbul ignore next */
            cov_1mbo3ilo1b().s[110]++;
            this.inputValues[param.name] = param.defaultValue;
          } else
          /* istanbul ignore next */
          {
            cov_1mbo3ilo1b().b[25][1]++;
          }
          cov_1mbo3ilo1b().s[111]++;
          text.onChange(value => {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().f[27]++;
            cov_1mbo3ilo1b().s[112]++;
            // Ensure it's in wiki link format
            if (
            /* istanbul ignore next */
            (cov_1mbo3ilo1b().b[27][0]++, value) &&
            /* istanbul ignore next */
            (cov_1mbo3ilo1b().b[27][1]++, !value.startsWith('[['))) {
              /* istanbul ignore next */
              cov_1mbo3ilo1b().b[26][0]++;
              cov_1mbo3ilo1b().s[113]++;
              value = `[[${value}]]`;
            } else
            /* istanbul ignore next */
            {
              cov_1mbo3ilo1b().b[26][1]++;
            }
            cov_1mbo3ilo1b().s[114]++;
            this.inputValues[param.name] = value;
          });
        });
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[115]++;
        break;
      case 'array':
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[19][5]++;
        cov_1mbo3ilo1b().s[116]++;
        setting.addTextArea(textarea => {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().f[28]++;
          cov_1mbo3ilo1b().s[117]++;
          textarea.setPlaceholder('One item per line');
          /* istanbul ignore next */
          cov_1mbo3ilo1b().s[118]++;
          if (param.defaultValue) {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().b[28][0]++;
            const defaultText =
            /* istanbul ignore next */
            (cov_1mbo3ilo1b().s[119]++, Array.isArray(param.defaultValue) ?
            /* istanbul ignore next */
            (cov_1mbo3ilo1b().b[29][0]++, param.defaultValue.join('\n')) :
            /* istanbul ignore next */
            (cov_1mbo3ilo1b().b[29][1]++, param.defaultValue));
            /* istanbul ignore next */
            cov_1mbo3ilo1b().s[120]++;
            textarea.setValue(defaultText);
            /* istanbul ignore next */
            cov_1mbo3ilo1b().s[121]++;
            this.inputValues[param.name] = param.defaultValue;
          } else
          /* istanbul ignore next */
          {
            cov_1mbo3ilo1b().b[28][1]++;
          }
          cov_1mbo3ilo1b().s[122]++;
          textarea.onChange(value => {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().f[29]++;
            cov_1mbo3ilo1b().s[123]++;
            this.inputValues[param.name] = value.split('\n').filter(v => {
              /* istanbul ignore next */
              cov_1mbo3ilo1b().f[30]++;
              cov_1mbo3ilo1b().s[124]++;
              return v.trim();
            });
          });
        });
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[125]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[19][6]++;
        cov_1mbo3ilo1b().s[126]++;
        // Default to text input
        setting.addText(text => {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().f[31]++;
          cov_1mbo3ilo1b().s[127]++;
          text.onChange(value => {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().f[32]++;
            cov_1mbo3ilo1b().s[128]++;
            this.inputValues[param.name] = value;
          });
        });
    }
  }
  validateInputs() {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[33]++;
    const errors =
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().s[129]++, []);
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[130]++;
    for (const param of this.schema.parameters) {
      /* istanbul ignore next */
      cov_1mbo3ilo1b().s[131]++;
      if (param.required) {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[30][0]++;
        const value =
        /* istanbul ignore next */
        (cov_1mbo3ilo1b().s[132]++, this.inputValues[param.name]);
        /* istanbul ignore next */
        cov_1mbo3ilo1b().s[133]++;
        if (
        /* istanbul ignore next */
        (cov_1mbo3ilo1b().b[32][0]++, value === undefined) ||
        /* istanbul ignore next */
        (cov_1mbo3ilo1b().b[32][1]++, value === null) ||
        /* istanbul ignore next */
        (cov_1mbo3ilo1b().b[32][2]++, value === '')) {
          /* istanbul ignore next */
          cov_1mbo3ilo1b().b[31][0]++;
          cov_1mbo3ilo1b().s[134]++;
          errors.push(`${
          /* istanbul ignore next */
          (cov_1mbo3ilo1b().b[33][0]++, param.label) ||
          /* istanbul ignore next */
          (cov_1mbo3ilo1b().b[33][1]++, param.name)} is required`);
        } else
        /* istanbul ignore next */
        {
          cov_1mbo3ilo1b().b[31][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1mbo3ilo1b().b[30][1]++;
      }
      // Custom validation if provided
      cov_1mbo3ilo1b().s[135]++;
      if (
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().b[35][0]++, param.validation) &&
      /* istanbul ignore next */
      (cov_1mbo3ilo1b().b[35][1]++, this.inputValues[param.name])) {
        /* istanbul ignore next */
        cov_1mbo3ilo1b().b[34][0]++;
        cov_1mbo3ilo1b().s[136]++;
        try {
          const regex =
          /* istanbul ignore next */
          (cov_1mbo3ilo1b().s[137]++, new RegExp(param.validation));
          /* istanbul ignore next */
          cov_1mbo3ilo1b().s[138]++;
          if (!regex.test(String(this.inputValues[param.name]))) {
            /* istanbul ignore next */
            cov_1mbo3ilo1b().b[36][0]++;
            cov_1mbo3ilo1b().s[139]++;
            errors.push(`${
            /* istanbul ignore next */
            (cov_1mbo3ilo1b().b[37][0]++, param.label) ||
            /* istanbul ignore next */
            (cov_1mbo3ilo1b().b[37][1]++, param.name)} format is invalid`);
          } else
          /* istanbul ignore next */
          {
            cov_1mbo3ilo1b().b[36][1]++;
          }
        } catch (e) {
          // Invalid regex, skip validation
        }
      } else
      /* istanbul ignore next */
      {
        cov_1mbo3ilo1b().b[34][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[140]++;
    return errors;
  }
  showErrors(errors) {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[34]++;
    // Show errors in a notice
    const errorMessage =
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().s[141]++, 'Please fix the following errors:\n' + errors.join('\n'));
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[142]++;
    new obsidian_1.Notice(errorMessage, 5000);
  }
  onClose() {
    /* istanbul ignore next */
    cov_1mbo3ilo1b().f[35]++;
    const {
      contentEl
    } =
    /* istanbul ignore next */
    (cov_1mbo3ilo1b().s[143]++, this);
    /* istanbul ignore next */
    cov_1mbo3ilo1b().s[144]++;
    contentEl.empty();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,