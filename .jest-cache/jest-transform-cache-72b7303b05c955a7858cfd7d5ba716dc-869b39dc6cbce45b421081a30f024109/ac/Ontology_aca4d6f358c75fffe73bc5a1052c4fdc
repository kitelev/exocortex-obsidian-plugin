f17e12f2515d9f996986fd76de68fab4
"use strict";

/* istanbul ignore next */
function cov_2pk0pqwnq1() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/entities/Ontology.ts";
  var hash = "add7e002430f3d6db834d5af114b55cba1841475";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/entities/Ontology.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 26
        }
      },
      "2": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 4,
          column: 67
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 27
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "10": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 30
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 32
        }
      },
      "13": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 59
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 45
        }
      },
      "15": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 48
        }
      },
      "16": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "17": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 50,
          column: 113
        }
      },
      "18": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 130
        }
      },
      "19": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "20": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 24
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 19
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 21
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 41
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 40
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 49
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 45,
            column: 39
          },
          end: {
            line: 45,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 39
          },
          end: {
            line: 45,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 59
          }
        }],
        line: 45
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 41
          },
          end: {
            line: 46,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 41
          },
          end: {
            line: 46,
            column: 57
          }
        }, {
          start: {
            line: 46,
            column: 61
          },
          end: {
            line: 46,
            column: 63
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 68
          },
          end: {
            line: 50,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 68
          },
          end: {
            line: 50,
            column: 103
          }
        }, {
          start: {
            line: 50,
            column: 107
          },
          end: {
            line: 50,
            column: 112
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 48
          },
          end: {
            line: 51,
            column: 71
          }
        }, {
          start: {
            line: 51,
            column: 74
          },
          end: {
            line: 51,
            column: 130
          }
        }],
        line: 51
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 53
          }
        }, {
          start: {
            line: 54,
            column: 57
          },
          end: {
            line: 54,
            column: 74
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/entities/Ontology.ts",
      mappings: ";;;AAAA,oEAAiE;AAEjE;;;GAGG;AACH,MAAa,QAAQ;IAOnB,YAAY,MAMX;QACC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;IACxC,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,cAAc;QACZ,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;IACrD,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,KAAe;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,aAAa;QACX,OAAO;YACL,sBAAsB,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC9C,qBAAqB,EAAE,IAAI,CAAC,KAAK;YACjC,yBAAyB,EAAE,IAAI,CAAC,SAAS,IAAI,EAAE;YAC/C,2BAA2B,EAAE,IAAI,CAAC,WAAW,IAAI,EAAE;SACpD,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,eAAe,CAAC,WAAgC;QACrD,MAAM,YAAY,GAAG,+BAAc,CAAC,MAAM,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,KAAK,CAAC,CAAC;QACzF,MAAM,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,+BAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAG,CAAC;QAE3G,OAAO,IAAI,QAAQ,CAAC;YAClB,MAAM;YACN,KAAK,EAAE,WAAW,CAAC,qBAAqB,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE;YAC9D,QAAQ,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK;YACpC,SAAS,EAAE,WAAW,CAAC,yBAAyB,CAAC;YACjD,WAAW,EAAE,WAAW,CAAC,2BAA2B,CAAC;SACtD,CAAC,CAAC;IACL,CAAC;CACF;AA1ED,4BA0EC",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/entities/Ontology.ts"],
      sourcesContent: ["import { OntologyPrefix } from '../value-objects/OntologyPrefix';\n\n/**\n * Domain entity representing an ontology\n * Manages ontology metadata and relationships\n */\nexport class Ontology {\n  private readonly prefix: OntologyPrefix;\n  private readonly label: string;\n  private readonly fileName: string;\n  private readonly namespace?: string;\n  private readonly description?: string;\n\n  constructor(params: {\n    prefix: OntologyPrefix;\n    label: string;\n    fileName: string;\n    namespace?: string;\n    description?: string;\n  }) {\n    this.prefix = params.prefix;\n    this.label = params.label;\n    this.fileName = params.fileName;\n    this.namespace = params.namespace;\n    this.description = params.description;\n  }\n\n  getPrefix(): OntologyPrefix {\n    return this.prefix;\n  }\n\n  getLabel(): string {\n    return this.label;\n  }\n\n  getFileName(): string {\n    return this.fileName;\n  }\n\n  getNamespace(): string | undefined {\n    return this.namespace;\n  }\n\n  getDescription(): string | undefined {\n    return this.description;\n  }\n\n  getDisplayName(): string {\n    return `${this.prefix.toString()} - ${this.label}`;\n  }\n\n  isInternal(): boolean {\n    return this.fileName.startsWith('!');\n  }\n\n  equals(other: Ontology): boolean {\n    return this.prefix.equals(other.prefix);\n  }\n\n  toFrontmatter(): Record<string, any> {\n    return {\n      'exo__Ontology_prefix': this.prefix.toString(),\n      'exo__Ontology_label': this.label,\n      'exo__Ontology_namespace': this.namespace || '',\n      'exo__Ontology_description': this.description || ''\n    };\n  }\n\n  static fromFrontmatter(frontmatter: Record<string, any>): Ontology {\n    const prefixResult = OntologyPrefix.create(frontmatter['exo__Ontology_prefix'] || 'exo');\n    const prefix = prefixResult.isSuccess ? prefixResult.getValue() : OntologyPrefix.create('exo').getValue()!;\n    \n    return new Ontology({\n      prefix,\n      label: frontmatter['exo__Ontology_label'] || prefix.toString(),\n      fileName: `!${prefix.toString()}.md`,\n      namespace: frontmatter['exo__Ontology_namespace'],\n      description: frontmatter['exo__Ontology_description']\n    });\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "add7e002430f3d6db834d5af114b55cba1841475"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pk0pqwnq1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2pk0pqwnq1();
cov_2pk0pqwnq1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2pk0pqwnq1().s[1]++;
exports.Ontology = void 0;
const OntologyPrefix_1 =
/* istanbul ignore next */
(cov_2pk0pqwnq1().s[2]++, require("../value-objects/OntologyPrefix"));
/**
 * Domain entity representing an ontology
 * Manages ontology metadata and relationships
 */
class Ontology {
  constructor(params) {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[0]++;
    cov_2pk0pqwnq1().s[3]++;
    this.prefix = params.prefix;
    /* istanbul ignore next */
    cov_2pk0pqwnq1().s[4]++;
    this.label = params.label;
    /* istanbul ignore next */
    cov_2pk0pqwnq1().s[5]++;
    this.fileName = params.fileName;
    /* istanbul ignore next */
    cov_2pk0pqwnq1().s[6]++;
    this.namespace = params.namespace;
    /* istanbul ignore next */
    cov_2pk0pqwnq1().s[7]++;
    this.description = params.description;
  }
  getPrefix() {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[1]++;
    cov_2pk0pqwnq1().s[8]++;
    return this.prefix;
  }
  getLabel() {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[2]++;
    cov_2pk0pqwnq1().s[9]++;
    return this.label;
  }
  getFileName() {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[3]++;
    cov_2pk0pqwnq1().s[10]++;
    return this.fileName;
  }
  getNamespace() {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[4]++;
    cov_2pk0pqwnq1().s[11]++;
    return this.namespace;
  }
  getDescription() {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[5]++;
    cov_2pk0pqwnq1().s[12]++;
    return this.description;
  }
  getDisplayName() {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[6]++;
    cov_2pk0pqwnq1().s[13]++;
    return `${this.prefix.toString()} - ${this.label}`;
  }
  isInternal() {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[7]++;
    cov_2pk0pqwnq1().s[14]++;
    return this.fileName.startsWith('!');
  }
  equals(other) {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[8]++;
    cov_2pk0pqwnq1().s[15]++;
    return this.prefix.equals(other.prefix);
  }
  toFrontmatter() {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[9]++;
    cov_2pk0pqwnq1().s[16]++;
    return {
      'exo__Ontology_prefix': this.prefix.toString(),
      'exo__Ontology_label': this.label,
      'exo__Ontology_namespace':
      /* istanbul ignore next */
      (cov_2pk0pqwnq1().b[0][0]++, this.namespace) ||
      /* istanbul ignore next */
      (cov_2pk0pqwnq1().b[0][1]++, ''),
      'exo__Ontology_description':
      /* istanbul ignore next */
      (cov_2pk0pqwnq1().b[1][0]++, this.description) ||
      /* istanbul ignore next */
      (cov_2pk0pqwnq1().b[1][1]++, '')
    };
  }
  static fromFrontmatter(frontmatter) {
    /* istanbul ignore next */
    cov_2pk0pqwnq1().f[10]++;
    const prefixResult =
    /* istanbul ignore next */
    (cov_2pk0pqwnq1().s[17]++, OntologyPrefix_1.OntologyPrefix.create(
    /* istanbul ignore next */
    (cov_2pk0pqwnq1().b[2][0]++, frontmatter['exo__Ontology_prefix']) ||
    /* istanbul ignore next */
    (cov_2pk0pqwnq1().b[2][1]++, 'exo')));
    const prefix =
    /* istanbul ignore next */
    (cov_2pk0pqwnq1().s[18]++, prefixResult.isSuccess ?
    /* istanbul ignore next */
    (cov_2pk0pqwnq1().b[3][0]++, prefixResult.getValue()) :
    /* istanbul ignore next */
    (cov_2pk0pqwnq1().b[3][1]++, OntologyPrefix_1.OntologyPrefix.create('exo').getValue()));
    /* istanbul ignore next */
    cov_2pk0pqwnq1().s[19]++;
    return new Ontology({
      prefix,
      label:
      /* istanbul ignore next */
      (cov_2pk0pqwnq1().b[4][0]++, frontmatter['exo__Ontology_label']) ||
      /* istanbul ignore next */
      (cov_2pk0pqwnq1().b[4][1]++, prefix.toString()),
      fileName: `!${prefix.toString()}.md`,
      namespace: frontmatter['exo__Ontology_namespace'],
      description: frontmatter['exo__Ontology_description']
    });
  }
}
/* istanbul ignore next */
cov_2pk0pqwnq1().s[20]++;
exports.Ontology = Ontology;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,