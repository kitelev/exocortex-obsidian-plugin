8902eaecb51f90d2c1442a86bd8b0a9e
"use strict";

/* istanbul ignore next */
function cov_1nzs9qrdu9() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/GetCurrentProjectUseCase.ts";
  var hash = "faf607a9ae00a5fa119dbfb13527505db095fb76";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/GetCurrentProjectUseCase.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 42
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 20
        },
        end: {
          line: 5,
          column: 67
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "5": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "8": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "9": {
        start: {
          line: 22,
          column: 42
        },
        end: {
          line: 22,
          column: 326
        }
      },
      "10": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 98
        }
      },
      "11": {
        start: {
          line: 26,
          column: 32
        },
        end: {
          line: 26,
          column: 78
        }
      },
      "12": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 32,
          column: 18
        }
      },
      "13": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 44,
          column: 18
        }
      },
      "14": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "15": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "16": {
        start: {
          line: 55,
          column: 41
        },
        end: {
          line: 55,
          column: 85
        }
      },
      "17": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 58,
          column: 17
        }
      },
      "18": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 30
        }
      },
      "19": {
        start: {
          line: 59,
          column: 38
        },
        end: {
          line: 59,
          column: 105
        }
      },
      "20": {
        start: {
          line: 61,
          column: 33
        },
        end: {
          line: 86,
          column: 41
        }
      },
      "21": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 66,
          column: 21
        }
      },
      "22": {
        start: {
          line: 64,
          column: 39
        },
        end: {
          line: 64,
          column: 66
        }
      },
      "23": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 80
        }
      },
      "24": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 32
        }
      },
      "25": {
        start: {
          line: 69,
          column: 35
        },
        end: {
          line: 77,
          column: 17
        }
      },
      "26": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 81,
          column: 34
        }
      },
      "27": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 34
        }
      },
      "28": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 83,
          column: 33
        }
      },
      "29": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 83,
          column: 33
        }
      },
      "30": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 97
        }
      },
      "31": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 32
        }
      },
      "32": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 73
        }
      },
      "33": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 26
        }
      },
      "34": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "35": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 101,
          column: 128
        }
      },
      "36": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "37": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 104,
          column: 76
        }
      },
      "38": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 106,
          column: 74
        }
      },
      "39": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 72
        }
      },
      "40": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 68
        }
      },
      "41": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 112,
          column: 76
        }
      },
      "42": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "43": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "44": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 70
        }
      },
      "45": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "46": {
        start: {
          line: 126,
          column: 37
        },
        end: {
          line: 126,
          column: 98
        }
      },
      "47": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 142,
          column: 17
        }
      },
      "48": {
        start: {
          line: 128,
          column: 38
        },
        end: {
          line: 128,
          column: 76
        }
      },
      "49": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 131,
          column: 21
        }
      },
      "50": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 130,
          column: 73
        }
      },
      "51": {
        start: {
          line: 133,
          column: 38
        },
        end: {
          line: 134,
          column: 70
        }
      },
      "52": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 141,
          column: 21
        }
      },
      "53": {
        start: {
          line: 136,
          column: 47
        },
        end: {
          line: 136,
          column: 93
        }
      },
      "54": {
        start: {
          line: 137,
          column: 40
        },
        end: {
          line: 137,
          column: 92
        }
      },
      "55": {
        start: {
          line: 137,
          column: 68
        },
        end: {
          line: 137,
          column: 91
        }
      },
      "56": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 140,
          column: 25
        }
      },
      "57": {
        start: {
          line: 139,
          column: 28
        },
        end: {
          line: 139,
          column: 43
        }
      },
      "58": {
        start: {
          line: 144,
          column: 41
        },
        end: {
          line: 144,
          column: 111
        }
      },
      "59": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "60": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 44
        }
      },
      "61": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 70
        }
      },
      "62": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 79
        }
      },
      "63": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 70
        }
      },
      "64": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "65": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "66": {
        start: {
          line: 164,
          column: 32
        },
        end: {
          line: 164,
          column: 84
        }
      },
      "67": {
        start: {
          line: 166,
          column: 39
        },
        end: {
          line: 166,
          column: 86
        }
      },
      "68": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 173,
          column: 17
        }
      },
      "69": {
        start: {
          line: 168,
          column: 39
        },
        end: {
          line: 168,
          column: 79
        }
      },
      "70": {
        start: {
          line: 169,
          column: 36
        },
        end: {
          line: 169,
          column: 131
        }
      },
      "71": {
        start: {
          line: 169,
          column: 64
        },
        end: {
          line: 169,
          column: 130
        }
      },
      "72": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 172,
          column: 21
        }
      },
      "73": {
        start: {
          line: 171,
          column: 24
        },
        end: {
          line: 171,
          column: 39
        }
      },
      "74": {
        start: {
          line: 175,
          column: 36
        },
        end: {
          line: 175,
          column: 94
        }
      },
      "75": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 182,
          column: 17
        }
      },
      "76": {
        start: {
          line: 177,
          column: 45
        },
        end: {
          line: 177,
          column: 75
        }
      },
      "77": {
        start: {
          line: 178,
          column: 36
        },
        end: {
          line: 178,
          column: 143
        }
      },
      "78": {
        start: {
          line: 178,
          column: 64
        },
        end: {
          line: 178,
          column: 142
        }
      },
      "79": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 181,
          column: 21
        }
      },
      "80": {
        start: {
          line: 180,
          column: 24
        },
        end: {
          line: 180,
          column: 39
        }
      },
      "81": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 33
        }
      },
      "82": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 77
        }
      },
      "83": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 33
        }
      },
      "84": {
        start: {
          line: 195,
          column: 31
        },
        end: {
          line: 197,
          column: 98
        }
      },
      "85": {
        start: {
          line: 196,
          column: 25
        },
        end: {
          line: 196,
          column: 35
        }
      },
      "86": {
        start: {
          line: 197,
          column: 28
        },
        end: {
          line: 197,
          column: 97
        }
      },
      "87": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 33
        }
      },
      "88": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 55
        }
      },
      "89": {
        start: {
          line: 204,
          column: 43
        },
        end: {
          line: 204,
          column: 53
        }
      },
      "90": {
        start: {
          line: 210,
          column: 30
        },
        end: {
          line: 210,
          column: 71
        }
      },
      "91": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 213,
          column: 100
        }
      },
      "92": {
        start: {
          line: 212,
          column: 25
        },
        end: {
          line: 212,
          column: 35
        }
      },
      "93": {
        start: {
          line: 213,
          column: 28
        },
        end: {
          line: 213,
          column: 95
        }
      },
      "94": {
        start: {
          line: 220,
          column: 25
        },
        end: {
          line: 220,
          column: 124
        }
      },
      "95": {
        start: {
          line: 221,
          column: 25
        },
        end: {
          line: 221,
          column: 26
        }
      },
      "96": {
        start: {
          line: 222,
          column: 24
        },
        end: {
          line: 222,
          column: 26
        }
      },
      "97": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "98": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 243,
          column: 13
        }
      },
      "99": {
        start: {
          line: 226,
          column: 20
        },
        end: {
          line: 226,
          column: 64
        }
      },
      "100": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 229,
          column: 60
        }
      },
      "101": {
        start: {
          line: 230,
          column: 20
        },
        end: {
          line: 230,
          column: 26
        }
      },
      "102": {
        start: {
          line: 232,
          column: 20
        },
        end: {
          line: 232,
          column: 37
        }
      },
      "103": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 80
        }
      },
      "104": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 234,
          column: 26
        }
      },
      "105": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 37
        }
      },
      "106": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 237,
          column: 64
        }
      },
      "107": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 26
        }
      },
      "108": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 240,
          column: 37
        }
      },
      "109": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 241,
          column: 75
        }
      },
      "110": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 242,
          column: 26
        }
      },
      "111": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 52
        }
      },
      "112": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 252,
          column: 10
        }
      },
      "113": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 264,
          column: 10
        }
      },
      "114": {
        start: {
          line: 267,
          column: 0
        },
        end: {
          line: 267,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 54
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 55
          },
          end: {
            line: 19,
            column: 56
          }
        },
        loc: {
          start: {
            line: 19,
            column: 68
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 55
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 55
          },
          end: {
            line: 52,
            column: 56
          }
        },
        loc: {
          start: {
            line: 52,
            column: 68
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 29
          }
        },
        loc: {
          start: {
            line: 62,
            column: 37
          },
          end: {
            line: 68,
            column: 17
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 69,
            column: 26
          }
        },
        loc: {
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 77,
            column: 17
          }
        },
        line: 69
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 27
          }
        },
        loc: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 85,
            column: 17
          }
        },
        line: 78
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 53
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 98
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 55
          },
          end: {
            line: 100,
            column: 56
          }
        },
        loc: {
          start: {
            line: 100,
            column: 68
          },
          end: {
            line: 114,
            column: 9
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 48
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 119
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 120,
            column: 55
          },
          end: {
            line: 120,
            column: 56
          }
        },
        loc: {
          start: {
            line: 120,
            column: 68
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 120
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 137,
            column: 63
          },
          end: {
            line: 137,
            column: 64
          }
        },
        loc: {
          start: {
            line: 137,
            column: 68
          },
          end: {
            line: 137,
            column: 91
          }
        },
        line: 137
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 56
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 160
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 161,
            column: 55
          },
          end: {
            line: 161,
            column: 56
          }
        },
        loc: {
          start: {
            line: 161,
            column: 68
          },
          end: {
            line: 189,
            column: 9
          }
        },
        line: 161
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 169,
            column: 59
          },
          end: {
            line: 169,
            column: 60
          }
        },
        loc: {
          start: {
            line: 169,
            column: 64
          },
          end: {
            line: 169,
            column: 130
          }
        },
        line: 169
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 178,
            column: 59
          },
          end: {
            line: 178,
            column: 60
          }
        },
        loc: {
          start: {
            line: 178,
            column: 64
          },
          end: {
            line: 178,
            column: 142
          }
        },
        line: 178
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 46
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 194
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 196,
            column: 21
          }
        },
        loc: {
          start: {
            line: 196,
            column: 25
          },
          end: {
            line: 196,
            column: 35
          }
        },
        line: 196
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 197,
            column: 18
          },
          end: {
            line: 197,
            column: 19
          }
        },
        loc: {
          start: {
            line: 197,
            column: 28
          },
          end: {
            line: 197,
            column: 97
          }
        },
        line: 197
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 44
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 203
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 204,
            column: 38
          },
          end: {
            line: 204,
            column: 39
          }
        },
        loc: {
          start: {
            line: 204,
            column: 43
          },
          end: {
            line: 204,
            column: 53
          }
        },
        line: 204
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 40
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 209
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 212,
            column: 20
          },
          end: {
            line: 212,
            column: 21
          }
        },
        loc: {
          start: {
            line: 212,
            column: 25
          },
          end: {
            line: 212,
            column: 35
          }
        },
        line: 212
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 213,
            column: 18
          },
          end: {
            line: 213,
            column: 19
          }
        },
        loc: {
          start: {
            line: 213,
            column: 28
          },
          end: {
            line: 213,
            column: 95
          }
        },
        line: 213
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 46
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 218
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 34
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 257
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 74
          },
          end: {
            line: 22,
            column: 203
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 193
          },
          end: {
            line: 22,
            column: 195
          }
        }, {
          start: {
            line: 22,
            column: 198
          },
          end: {
            line: 22,
            column: 203
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 74
          },
          end: {
            line: 22,
            column: 190
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 74
          },
          end: {
            line: 22,
            column: 173
          }
        }, {
          start: {
            line: 22,
            column: 177
          },
          end: {
            line: 22,
            column: 190
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 80
          },
          end: {
            line: 22,
            column: 163
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 135
          },
          end: {
            line: 22,
            column: 141
          }
        }, {
          start: {
            line: 22,
            column: 144
          },
          end: {
            line: 22,
            column: 163
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 80
          },
          end: {
            line: 22,
            column: 132
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 80
          },
          end: {
            line: 22,
            column: 115
          }
        }, {
          start: {
            line: 22,
            column: 119
          },
          end: {
            line: 22,
            column: 132
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 22,
            column: 205
          },
          end: {
            line: 22,
            column: 325
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 318
          },
          end: {
            line: 22,
            column: 320
          }
        }, {
          start: {
            line: 22,
            column: 323
          },
          end: {
            line: 22,
            column: 325
          }
        }],
        line: 22
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 205
          },
          end: {
            line: 22,
            column: 315
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 205
          },
          end: {
            line: 22,
            column: 298
          }
        }, {
          start: {
            line: 22,
            column: 302
          },
          end: {
            line: 22,
            column: 315
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 22,
            column: 211
          },
          end: {
            line: 22,
            column: 288
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 266
          },
          end: {
            line: 22,
            column: 272
          }
        }, {
          start: {
            line: 22,
            column: 275
          },
          end: {
            line: 22,
            column: 288
          }
        }],
        line: 22
      },
      "7": {
        loc: {
          start: {
            line: 22,
            column: 211
          },
          end: {
            line: 22,
            column: 263
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 211
          },
          end: {
            line: 22,
            column: 246
          }
        }, {
          start: {
            line: 22,
            column: 250
          },
          end: {
            line: 22,
            column: 263
          }
        }],
        line: 22
      },
      "8": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 66,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 66,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 65,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 65,
            column: 53
          }
        }, {
          start: {
            line: 65,
            column: 57
          },
          end: {
            line: 65,
            column: 79
          }
        }],
        line: 65
      },
      "11": {
        loc: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 72,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 72,
            column: 55
          }
        }, {
          start: {
            line: 72,
            column: 59
          },
          end: {
            line: 72,
            column: 67
          }
        }],
        line: 72
      },
      "12": {
        loc: {
          start: {
            line: 73,
            column: 30
          },
          end: {
            line: 73,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 30
          },
          end: {
            line: 73,
            column: 59
          }
        }, {
          start: {
            line: 73,
            column: 63
          },
          end: {
            line: 73,
            column: 71
          }
        }],
        line: 73
      },
      "13": {
        loc: {
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 63
          }
        }, {
          start: {
            line: 76,
            column: 67
          },
          end: {
            line: 76,
            column: 91
          }
        }],
        line: 76
      },
      "14": {
        loc: {
          start: {
            line: 80,
            column: 20
          },
          end: {
            line: 81,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 20
          },
          end: {
            line: 81,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "15": {
        loc: {
          start: {
            line: 80,
            column: 24
          },
          end: {
            line: 80,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 24
          },
          end: {
            line: 80,
            column: 34
          }
        }, {
          start: {
            line: 80,
            column: 38
          },
          end: {
            line: 80,
            column: 49
          }
        }],
        line: 80
      },
      "16": {
        loc: {
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 83,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 83,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "17": {
        loc: {
          start: {
            line: 82,
            column: 24
          },
          end: {
            line: 82,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 24
          },
          end: {
            line: 82,
            column: 35
          }
        }, {
          start: {
            line: 82,
            column: 39
          },
          end: {
            line: 82,
            column: 49
          }
        }],
        line: 82
      },
      "18": {
        loc: {
          start: {
            line: 101,
            column: 29
          },
          end: {
            line: 101,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 101,
            column: 114
          }
        }, {
          start: {
            line: 101,
            column: 119
          },
          end: {
            line: 101,
            column: 128
          }
        }],
        line: 101
      },
      "19": {
        loc: {
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 101,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 85
          },
          end: {
            line: 101,
            column: 91
          }
        }, {
          start: {
            line: 101,
            column: 94
          },
          end: {
            line: 101,
            column: 114
          }
        }],
        line: 101
      },
      "20": {
        loc: {
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 101,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 101,
            column: 65
          }
        }, {
          start: {
            line: 101,
            column: 69
          },
          end: {
            line: 101,
            column: 82
          }
        }],
        line: 101
      },
      "21": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 104,
            column: 76
          }
        }, {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 106,
            column: 74
          }
        }, {
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 108,
            column: 72
          }
        }, {
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 110,
            column: 68
          }
        }, {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 112,
            column: 76
          }
        }],
        line: 102
      },
      "22": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "23": {
        loc: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 142,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 142,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "24": {
        loc: {
          start: {
            line: 129,
            column: 20
          },
          end: {
            line: 131,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 20
          },
          end: {
            line: 131,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "25": {
        loc: {
          start: {
            line: 133,
            column: 38
          },
          end: {
            line: 134,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 38
          },
          end: {
            line: 133,
            column: 75
          }
        }, {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 134,
            column: 70
          }
        }],
        line: 133
      },
      "26": {
        loc: {
          start: {
            line: 135,
            column: 20
          },
          end: {
            line: 141,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 20
          },
          end: {
            line: 141,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "27": {
        loc: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 140,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 140,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "28": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "29": {
        loc: {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 173,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 173,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "30": {
        loc: {
          start: {
            line: 169,
            column: 64
          },
          end: {
            line: 169,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 64
          },
          end: {
            line: 169,
            column: 83
          }
        }, {
          start: {
            line: 169,
            column: 87
          },
          end: {
            line: 169,
            column: 130
          }
        }],
        line: 169
      },
      "31": {
        loc: {
          start: {
            line: 170,
            column: 20
          },
          end: {
            line: 172,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 20
          },
          end: {
            line: 172,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "32": {
        loc: {
          start: {
            line: 178,
            column: 64
          },
          end: {
            line: 178,
            column: 142
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 64
          },
          end: {
            line: 178,
            column: 89
          }
        }, {
          start: {
            line: 178,
            column: 93
          },
          end: {
            line: 178,
            column: 142
          }
        }],
        line: 178
      },
      "33": {
        loc: {
          start: {
            line: 179,
            column: 20
          },
          end: {
            line: 181,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 20
          },
          end: {
            line: 181,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "34": {
        loc: {
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 213,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 213,
            column: 54
          }
        }, {
          start: {
            line: 213,
            column: 58
          },
          end: {
            line: 213,
            column: 59
          }
        }],
        line: 213
      },
      "35": {
        loc: {
          start: {
            line: 213,
            column: 64
          },
          end: {
            line: 213,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 64
          },
          end: {
            line: 213,
            column: 89
          }
        }, {
          start: {
            line: 213,
            column: 93
          },
          end: {
            line: 213,
            column: 94
          }
        }],
        line: 213
      },
      "36": {
        loc: {
          start: {
            line: 220,
            column: 25
          },
          end: {
            line: 220,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 26
          },
          end: {
            line: 220,
            column: 110
          }
        }, {
          start: {
            line: 220,
            column: 115
          },
          end: {
            line: 220,
            column: 124
          }
        }],
        line: 220
      },
      "37": {
        loc: {
          start: {
            line: 220,
            column: 26
          },
          end: {
            line: 220,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 81
          },
          end: {
            line: 220,
            column: 87
          }
        }, {
          start: {
            line: 220,
            column: 90
          },
          end: {
            line: 220,
            column: 110
          }
        }],
        line: 220
      },
      "38": {
        loc: {
          start: {
            line: 220,
            column: 26
          },
          end: {
            line: 220,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 26
          },
          end: {
            line: 220,
            column: 61
          }
        }, {
          start: {
            line: 220,
            column: 65
          },
          end: {
            line: 220,
            column: 78
          }
        }],
        line: 220
      },
      "39": {
        loc: {
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: 245,
            column: 13
          },
          end: {
            line: 247,
            column: 9
          }
        }],
        line: 223
      },
      "40": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 230,
            column: 26
          }
        }, {
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 234,
            column: 26
          }
        }, {
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 238,
            column: 26
          }
        }, {
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 242,
            column: 26
          }
        }],
        line: 224
      },
      "41": {
        loc: {
          start: {
            line: 226,
            column: 33
          },
          end: {
            line: 226,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 226,
            column: 54
          },
          end: {
            line: 226,
            column: 57
          }
        }, {
          start: {
            line: 226,
            column: 60
          },
          end: {
            line: 226,
            column: 63
          }
        }],
        line: 226
      },
      "42": {
        loc: {
          start: {
            line: 227,
            column: 32
          },
          end: {
            line: 229,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 26
          },
          end: {
            line: 228,
            column: 85
          }
        }, {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 59
          }
        }],
        line: 227
      },
      "43": {
        loc: {
          start: {
            line: 261,
            column: 20
          },
          end: {
            line: 261,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 20
          },
          end: {
            line: 261,
            column: 47
          }
        }, {
          start: {
            line: 261,
            column: 51
          },
          end: {
            line: 261,
            column: 59
          }
        }],
        line: 261
      },
      "44": {
        loc: {
          start: {
            line: 262,
            column: 22
          },
          end: {
            line: 262,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 22
          },
          end: {
            line: 262,
            column: 51
          }
        }, {
          start: {
            line: 262,
            column: 55
          },
          end: {
            line: 262,
            column: 63
          }
        }],
        line: 262
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/GetCurrentProjectUseCase.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/GetCurrentProjectUseCase.ts"],
      sourcesContent: ["import { Asset } from '../../domain/entities/Asset';\nimport { AssetId } from '../../domain/value-objects/AssetId';\nimport { ClassName } from '../../domain/value-objects/ClassName';\nimport { IAssetRepository } from '../../domain/repositories/IAssetRepository';\nimport { ExoFocusService } from '../services/ExoFocusService';\nimport { IndexedGraph } from '../../domain/semantic/core/IndexedGraph';\nimport { IRI } from '../../domain/semantic/core/Triple';\nimport { GetCurrentProjectRequest, GetCurrentProjectResponse } from '../dtos/CreateTaskRequest';\n\n/**\n * Use case for getting current project context\n * Implements intelligent project detection based on user context\n * Following TOGAF principles for business capability\n */\nexport class GetCurrentProjectUseCase {\n  constructor(\n    private readonly assetRepository: IAssetRepository,\n    private readonly focusService: ExoFocusService,\n    private readonly graph: IndexedGraph\n  ) {}\n\n  async execute(request: GetCurrentProjectRequest): Promise<GetCurrentProjectResponse> {\n    try {\n      // Get all available projects\n      const availableProjects = await this.getAvailableProjects(\n        request.preferences?.includeCompleted ?? false,\n        request.preferences?.maxResults ?? 10\n      );\n\n      // Detect current project based on context\n      const currentProject = await this.detectCurrentProject(\n        request,\n        availableProjects\n      );\n\n      // Determine detection strategy and confidence\n      const context = this.buildContextInfo(request, currentProject);\n\n      return {\n        success: true,\n        currentProject,\n        availableProjects,\n        context\n      };\n    } catch (error) {\n      return {\n        success: false,\n        availableProjects: [],\n        context: {\n          strategy: 'error',\n          confidence: 0,\n          reasoning: `Failed to get project context: ${error.message}`\n        },\n        message: error.message\n      };\n    }\n  }\n\n  /**\n   * Get all available projects from the system\n   */\n  private async getAvailableProjects(\n    includeCompleted: boolean,\n    maxResults: number\n  ): Promise<GetCurrentProjectResponse['availableProjects']> {\n    try {\n      // Find assets with Project class\n      const projectClassName = ClassName.create('ems__Project');\n      if (projectClassName.isFailure) {\n        return [];\n      }\n\n      const projectAssets = await this.assetRepository.findByClass(\n        projectClassName.getValue()\n      );\n\n      // Convert to response format and filter\n      const projects = projectAssets\n        .filter(asset => {\n          if (!includeCompleted) {\n            const status = asset.getProperty('status');\n            return status !== 'completed' && status !== 'cancelled';\n          }\n          return true;\n        })\n        .map(asset => ({\n          id: asset.getId().toString(),\n          title: asset.getTitle(),\n          status: asset.getProperty('status') || 'active',\n          priority: asset.getProperty('priority') || 'medium',\n          description: asset.getProperty('description'),\n          isActive: asset.getProperty('status') === 'active',\n          lastUpdated: asset.getProperty('updatedAt') || new Date().toISOString()\n        }))\n        .sort((a, b) => {\n          // Sort by active status first, then by last updated\n          if (a.isActive && !b.isActive) return -1;\n          if (!a.isActive && b.isActive) return 1;\n          return new Date(b.lastUpdated).getTime() - new Date(a.lastUpdated).getTime();\n        })\n        .slice(0, maxResults);\n\n      return projects;\n    } catch (error) {\n      console.warn('Failed to get available projects:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Detect current project based on context clues\n   */\n  private async detectCurrentProject(\n    request: GetCurrentProjectRequest,\n    availableProjects: GetCurrentProjectResponse['availableProjects']\n  ): Promise<GetCurrentProjectResponse['currentProject'] | undefined> {\n    const strategy = request.preferences?.selectionStrategy || 'context';\n\n    switch (strategy) {\n      case 'context':\n        return this.detectByContext(request, availableProjects);\n      case 'recent':\n        return this.detectByRecentActivity(availableProjects);\n      case 'active':\n        return this.detectByActiveStatus(availableProjects);\n      case 'priority':\n        return this.detectByPriority(availableProjects);\n      default:\n        return this.detectByContext(request, availableProjects);\n    }\n  }\n\n  /**\n   * Detect project by analyzing current file context\n   */\n  private async detectByContext(\n    request: GetCurrentProjectRequest,\n    availableProjects: GetCurrentProjectResponse['availableProjects']\n  ): Promise<GetCurrentProjectResponse['currentProject'] | undefined> {\n    if (!request.activeFile) {\n      return this.detectByRecentActivity(availableProjects);\n    }\n\n    try {\n      // Check if current file is a project file\n      const currentAsset = await this.assetRepository.findByFilename(request.activeFile);\n      if (currentAsset) {\n        const className = currentAsset.getClassName().toString();\n        if (className === 'ems__Project') {\n          return this.assetToProjectResponse(currentAsset);\n        }\n\n        // Check if current asset has project relationship\n        const projectId = currentAsset.getProperty('projectId') || \n                         currentAsset.getProperty('exo__Effort_parent');\n        if (projectId) {\n          const cleanProjectId = projectId.toString().replace(/\\[\\[|\\]\\]/g, '');\n          const project = availableProjects.find(p => p.id === cleanProjectId);\n          if (project) {\n            return project;\n          }\n        }\n      }\n\n      // Use RDF graph to find project relationships\n      const projectFromGraph = await this.findProjectFromGraph(request.activeFile, availableProjects);\n      if (projectFromGraph) {\n        return projectFromGraph;\n      }\n\n      // Fallback to recent activity\n      return this.detectByRecentActivity(availableProjects);\n    } catch (error) {\n      console.warn('Context-based project detection failed:', error);\n      return this.detectByRecentActivity(availableProjects);\n    }\n  }\n\n  /**\n   * Detect project using RDF graph relationships\n   */\n  private async findProjectFromGraph(\n    activeFile: string,\n    availableProjects: GetCurrentProjectResponse['availableProjects']\n  ): Promise<GetCurrentProjectResponse['currentProject'] | undefined> {\n    try {\n      // Clean file path for IRI\n      const fileIRI = activeFile.replace(/\\.md$/, '').replace(/\\s+/g, '_');\n\n      // Query for project relationships\n      const projectTriples = this.graph.query(\n        fileIRI,\n        'exo__Effort_parent'\n      );\n\n      if (projectTriples.length > 0) {\n        const projectIRI = projectTriples[0].getObject().toString();\n        const project = availableProjects.find(p => \n          p.id === projectIRI || p.title.replace(/\\s+/g, '_') === projectIRI\n        );\n        if (project) {\n          return project;\n        }\n      }\n\n      // Check reverse relationships (project -> task)\n      const taskTriples = this.graph.query(\n        undefined,\n        'exo__Effort_parent',\n        fileIRI\n      );\n\n      for (const triple of taskTriples) {\n        const potentialProject = triple.getSubject().toString();\n        const project = availableProjects.find(p => \n          p.id === potentialProject || p.title.replace(/\\s+/g, '_') === potentialProject\n        );\n        if (project) {\n          return project;\n        }\n      }\n\n      return undefined;\n    } catch (error) {\n      console.warn('Graph-based project detection failed:', error);\n      return undefined;\n    }\n  }\n\n\n  /**\n   * Detect project by recent activity\n   */\n  private detectByRecentActivity(\n    availableProjects: GetCurrentProjectResponse['availableProjects']\n  ): GetCurrentProjectResponse['currentProject'] | undefined {\n    const recentProjects = availableProjects\n      .filter(p => p.isActive)\n      .sort((a, b) => new Date(b.lastUpdated).getTime() - new Date(a.lastUpdated).getTime());\n\n    return recentProjects[0];\n  }\n\n  /**\n   * Detect project by active status\n   */\n  private detectByActiveStatus(\n    availableProjects: GetCurrentProjectResponse['availableProjects']\n  ): GetCurrentProjectResponse['currentProject'] | undefined {\n    return availableProjects.find(p => p.isActive);\n  }\n\n  /**\n   * Detect project by priority\n   */\n  private detectByPriority(\n    availableProjects: GetCurrentProjectResponse['availableProjects']\n  ): GetCurrentProjectResponse['currentProject'] | undefined {\n    const priorityOrder: Record<string, number> = { urgent: 4, high: 3, medium: 2, low: 1 };\n    \n    return availableProjects\n      .filter(p => p.isActive)\n      .sort((a, b) => (priorityOrder[b.priority] || 2) - (priorityOrder[a.priority] || 2))[0];\n  }\n\n  /**\n   * Build context information for response\n   */\n  private buildContextInfo(\n    request: GetCurrentProjectRequest,\n    currentProject?: GetCurrentProjectResponse['currentProject']\n  ): GetCurrentProjectResponse['context'] {\n    const strategy = request.preferences?.selectionStrategy || 'context';\n    \n    let confidence = 0;\n    let reasoning = '';\n\n    if (currentProject) {\n      switch (strategy) {\n        case 'context':\n          confidence = request.activeFile ? 0.8 : 0.3;\n          reasoning = request.activeFile \n            ? `Detected from current file context: ${request.activeFile}`\n            : 'Used most recent active project';\n          break;\n        case 'recent':\n          confidence = 0.6;\n          reasoning = 'Selected most recently updated active project';\n          break;\n        case 'active':\n          confidence = 0.5;\n          reasoning = 'Selected first active project';\n          break;\n        case 'priority':\n          confidence = 0.7;\n          reasoning = 'Selected highest priority active project';\n          break;\n      }\n    } else {\n      reasoning = 'No suitable project found';\n    }\n\n    return {\n      strategy,\n      confidence,\n      reasoning\n    };\n  }\n\n  /**\n   * Convert Asset to project response format\n   */\n  private assetToProjectResponse(asset: Asset): GetCurrentProjectResponse['currentProject'] {\n    return {\n      id: asset.getId().toString(),\n      title: asset.getTitle(),\n      status: asset.getProperty('status') || 'active',\n      priority: asset.getProperty('priority') || 'medium',\n      description: asset.getProperty('description')\n    };\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "faf607a9ae00a5fa119dbfb13527505db095fb76"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nzs9qrdu9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nzs9qrdu9();
cov_1nzs9qrdu9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1nzs9qrdu9().s[1]++;
exports.GetCurrentProjectUseCase = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1nzs9qrdu9().s[2]++, require("tslib"));
const ClassName_1 =
/* istanbul ignore next */
(cov_1nzs9qrdu9().s[3]++, require("../../domain/value-objects/ClassName"));
/**
 * Use case for getting current project context
 * Implements intelligent project detection based on user context
 * Following TOGAF principles for business capability
 */
class GetCurrentProjectUseCase {
  constructor(assetRepository, focusService, graph) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[0]++;
    cov_1nzs9qrdu9().s[4]++;
    this.assetRepository = assetRepository;
    /* istanbul ignore next */
    cov_1nzs9qrdu9().s[5]++;
    this.focusService = focusService;
    /* istanbul ignore next */
    cov_1nzs9qrdu9().s[6]++;
    this.graph = graph;
  }
  execute(request) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[1]++;
    var _a, _b, _c, _d;
    /* istanbul ignore next */
    cov_1nzs9qrdu9().s[7]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[2]++;
      cov_1nzs9qrdu9().s[8]++;
      try {
        // Get all available projects
        const availableProjects =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[9]++, yield this.getAvailableProjects(
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[1][0]++, (_b =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[3][0]++, (_a = request.preferences) === null) ||
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[3][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[2][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[2][1]++, _a.includeCompleted)) !== null) &&
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[1][1]++, _b !== void 0) ?
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[0][0]++, _b) :
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[0][1]++, false),
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[5][0]++, (_d =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[7][0]++, (_c = request.preferences) === null) ||
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[7][1]++, _c === void 0) ?
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[6][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[6][1]++, _c.maxResults)) !== null) &&
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[5][1]++, _d !== void 0) ?
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[4][0]++, _d) :
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().b[4][1]++, 10)));
        // Detect current project based on context
        const currentProject =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[10]++, yield this.detectCurrentProject(request, availableProjects));
        // Determine detection strategy and confidence
        const context =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[11]++, this.buildContextInfo(request, currentProject));
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[12]++;
        return {
          success: true,
          currentProject,
          availableProjects,
          context
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[13]++;
        return {
          success: false,
          availableProjects: [],
          context: {
            strategy: 'error',
            confidence: 0,
            reasoning: `Failed to get project context: ${error.message}`
          },
          message: error.message
        };
      }
    });
  }
  /**
   * Get all available projects from the system
   */
  getAvailableProjects(includeCompleted, maxResults) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[3]++;
    cov_1nzs9qrdu9().s[14]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[4]++;
      cov_1nzs9qrdu9().s[15]++;
      try {
        // Find assets with Project class
        const projectClassName =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[16]++, ClassName_1.ClassName.create('ems__Project'));
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[17]++;
        if (projectClassName.isFailure) {
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[8][0]++;
          cov_1nzs9qrdu9().s[18]++;
          return [];
        } else
        /* istanbul ignore next */
        {
          cov_1nzs9qrdu9().b[8][1]++;
        }
        const projectAssets =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[19]++, yield this.assetRepository.findByClass(projectClassName.getValue()));
        // Convert to response format and filter
        const projects =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[20]++, projectAssets.filter(asset => {
          /* istanbul ignore next */
          cov_1nzs9qrdu9().f[5]++;
          cov_1nzs9qrdu9().s[21]++;
          if (!includeCompleted) {
            /* istanbul ignore next */
            cov_1nzs9qrdu9().b[9][0]++;
            const status =
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().s[22]++, asset.getProperty('status'));
            /* istanbul ignore next */
            cov_1nzs9qrdu9().s[23]++;
            return /* istanbul ignore next */(cov_1nzs9qrdu9().b[10][0]++, status !== 'completed') &&
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().b[10][1]++, status !== 'cancelled');
          } else
          /* istanbul ignore next */
          {
            cov_1nzs9qrdu9().b[9][1]++;
          }
          cov_1nzs9qrdu9().s[24]++;
          return true;
        }).map(asset => {
          /* istanbul ignore next */
          cov_1nzs9qrdu9().f[6]++;
          cov_1nzs9qrdu9().s[25]++;
          return {
            id: asset.getId().toString(),
            title: asset.getTitle(),
            status:
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().b[11][0]++, asset.getProperty('status')) ||
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().b[11][1]++, 'active'),
            priority:
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().b[12][0]++, asset.getProperty('priority')) ||
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().b[12][1]++, 'medium'),
            description: asset.getProperty('description'),
            isActive: asset.getProperty('status') === 'active',
            lastUpdated:
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().b[13][0]++, asset.getProperty('updatedAt')) ||
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().b[13][1]++, new Date().toISOString())
          };
        }).sort((a, b) => {
          /* istanbul ignore next */
          cov_1nzs9qrdu9().f[7]++;
          cov_1nzs9qrdu9().s[26]++;
          // Sort by active status first, then by last updated
          if (
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[15][0]++, a.isActive) &&
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[15][1]++, !b.isActive)) {
            /* istanbul ignore next */
            cov_1nzs9qrdu9().b[14][0]++;
            cov_1nzs9qrdu9().s[27]++;
            return -1;
          } else
          /* istanbul ignore next */
          {
            cov_1nzs9qrdu9().b[14][1]++;
          }
          cov_1nzs9qrdu9().s[28]++;
          if (
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[17][0]++, !a.isActive) &&
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[17][1]++, b.isActive)) {
            /* istanbul ignore next */
            cov_1nzs9qrdu9().b[16][0]++;
            cov_1nzs9qrdu9().s[29]++;
            return 1;
          } else
          /* istanbul ignore next */
          {
            cov_1nzs9qrdu9().b[16][1]++;
          }
          cov_1nzs9qrdu9().s[30]++;
          return new Date(b.lastUpdated).getTime() - new Date(a.lastUpdated).getTime();
        }).slice(0, maxResults));
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[31]++;
        return projects;
      } catch (error) {
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[32]++;
        console.warn('Failed to get available projects:', error);
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[33]++;
        return [];
      }
    });
  }
  /**
   * Detect current project based on context clues
   */
  detectCurrentProject(request, availableProjects) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[8]++;
    var _a;
    /* istanbul ignore next */
    cov_1nzs9qrdu9().s[34]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[9]++;
      const strategy =
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().s[35]++,
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[18][0]++,
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[20][0]++, (_a = request.preferences) === null) ||
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[20][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[19][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[19][1]++, _a.selectionStrategy)) ||
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[18][1]++, 'context'));
      /* istanbul ignore next */
      cov_1nzs9qrdu9().s[36]++;
      switch (strategy) {
        case 'context':
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[21][0]++;
          cov_1nzs9qrdu9().s[37]++;
          return this.detectByContext(request, availableProjects);
        case 'recent':
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[21][1]++;
          cov_1nzs9qrdu9().s[38]++;
          return this.detectByRecentActivity(availableProjects);
        case 'active':
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[21][2]++;
          cov_1nzs9qrdu9().s[39]++;
          return this.detectByActiveStatus(availableProjects);
        case 'priority':
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[21][3]++;
          cov_1nzs9qrdu9().s[40]++;
          return this.detectByPriority(availableProjects);
        default:
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[21][4]++;
          cov_1nzs9qrdu9().s[41]++;
          return this.detectByContext(request, availableProjects);
      }
    });
  }
  /**
   * Detect project by analyzing current file context
   */
  detectByContext(request, availableProjects) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[10]++;
    cov_1nzs9qrdu9().s[42]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[11]++;
      cov_1nzs9qrdu9().s[43]++;
      if (!request.activeFile) {
        /* istanbul ignore next */
        cov_1nzs9qrdu9().b[22][0]++;
        cov_1nzs9qrdu9().s[44]++;
        return this.detectByRecentActivity(availableProjects);
      } else
      /* istanbul ignore next */
      {
        cov_1nzs9qrdu9().b[22][1]++;
      }
      cov_1nzs9qrdu9().s[45]++;
      try {
        // Check if current file is a project file
        const currentAsset =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[46]++, yield this.assetRepository.findByFilename(request.activeFile));
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[47]++;
        if (currentAsset) {
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[23][0]++;
          const className =
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().s[48]++, currentAsset.getClassName().toString());
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[49]++;
          if (className === 'ems__Project') {
            /* istanbul ignore next */
            cov_1nzs9qrdu9().b[24][0]++;
            cov_1nzs9qrdu9().s[50]++;
            return this.assetToProjectResponse(currentAsset);
          } else
          /* istanbul ignore next */
          {
            cov_1nzs9qrdu9().b[24][1]++;
          }
          // Check if current asset has project relationship
          const projectId =
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().s[51]++,
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[25][0]++, currentAsset.getProperty('projectId')) ||
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[25][1]++, currentAsset.getProperty('exo__Effort_parent')));
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[52]++;
          if (projectId) {
            /* istanbul ignore next */
            cov_1nzs9qrdu9().b[26][0]++;
            const cleanProjectId =
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().s[53]++, projectId.toString().replace(/\[\[|\]\]/g, ''));
            const project =
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().s[54]++, availableProjects.find(p => {
              /* istanbul ignore next */
              cov_1nzs9qrdu9().f[12]++;
              cov_1nzs9qrdu9().s[55]++;
              return p.id === cleanProjectId;
            }));
            /* istanbul ignore next */
            cov_1nzs9qrdu9().s[56]++;
            if (project) {
              /* istanbul ignore next */
              cov_1nzs9qrdu9().b[27][0]++;
              cov_1nzs9qrdu9().s[57]++;
              return project;
            } else
            /* istanbul ignore next */
            {
              cov_1nzs9qrdu9().b[27][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_1nzs9qrdu9().b[26][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1nzs9qrdu9().b[23][1]++;
        }
        // Use RDF graph to find project relationships
        const projectFromGraph =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[58]++, yield this.findProjectFromGraph(request.activeFile, availableProjects));
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[59]++;
        if (projectFromGraph) {
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[28][0]++;
          cov_1nzs9qrdu9().s[60]++;
          return projectFromGraph;
        } else
        /* istanbul ignore next */
        {
          cov_1nzs9qrdu9().b[28][1]++;
        }
        // Fallback to recent activity
        cov_1nzs9qrdu9().s[61]++;
        return this.detectByRecentActivity(availableProjects);
      } catch (error) {
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[62]++;
        console.warn('Context-based project detection failed:', error);
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[63]++;
        return this.detectByRecentActivity(availableProjects);
      }
    });
  }
  /**
   * Detect project using RDF graph relationships
   */
  findProjectFromGraph(activeFile, availableProjects) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[13]++;
    cov_1nzs9qrdu9().s[64]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[14]++;
      cov_1nzs9qrdu9().s[65]++;
      try {
        // Clean file path for IRI
        const fileIRI =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[66]++, activeFile.replace(/\.md$/, '').replace(/\s+/g, '_'));
        // Query for project relationships
        const projectTriples =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[67]++, this.graph.query(fileIRI, 'exo__Effort_parent'));
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[68]++;
        if (projectTriples.length > 0) {
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[29][0]++;
          const projectIRI =
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().s[69]++, projectTriples[0].getObject().toString());
          const project =
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().s[70]++, availableProjects.find(p => {
            /* istanbul ignore next */
            cov_1nzs9qrdu9().f[15]++;
            cov_1nzs9qrdu9().s[71]++;
            return /* istanbul ignore next */(cov_1nzs9qrdu9().b[30][0]++, p.id === projectIRI) ||
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().b[30][1]++, p.title.replace(/\s+/g, '_') === projectIRI);
          }));
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[72]++;
          if (project) {
            /* istanbul ignore next */
            cov_1nzs9qrdu9().b[31][0]++;
            cov_1nzs9qrdu9().s[73]++;
            return project;
          } else
          /* istanbul ignore next */
          {
            cov_1nzs9qrdu9().b[31][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1nzs9qrdu9().b[29][1]++;
        }
        // Check reverse relationships (project -> task)
        const taskTriples =
        /* istanbul ignore next */
        (cov_1nzs9qrdu9().s[74]++, this.graph.query(undefined, 'exo__Effort_parent', fileIRI));
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[75]++;
        for (const triple of taskTriples) {
          const potentialProject =
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().s[76]++, triple.getSubject().toString());
          const project =
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().s[77]++, availableProjects.find(p => {
            /* istanbul ignore next */
            cov_1nzs9qrdu9().f[16]++;
            cov_1nzs9qrdu9().s[78]++;
            return /* istanbul ignore next */(cov_1nzs9qrdu9().b[32][0]++, p.id === potentialProject) ||
            /* istanbul ignore next */
            (cov_1nzs9qrdu9().b[32][1]++, p.title.replace(/\s+/g, '_') === potentialProject);
          }));
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[79]++;
          if (project) {
            /* istanbul ignore next */
            cov_1nzs9qrdu9().b[33][0]++;
            cov_1nzs9qrdu9().s[80]++;
            return project;
          } else
          /* istanbul ignore next */
          {
            cov_1nzs9qrdu9().b[33][1]++;
          }
        }
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[81]++;
        return undefined;
      } catch (error) {
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[82]++;
        console.warn('Graph-based project detection failed:', error);
        /* istanbul ignore next */
        cov_1nzs9qrdu9().s[83]++;
        return undefined;
      }
    });
  }
  /**
   * Detect project by recent activity
   */
  detectByRecentActivity(availableProjects) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[17]++;
    const recentProjects =
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().s[84]++, availableProjects.filter(p => {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[18]++;
      cov_1nzs9qrdu9().s[85]++;
      return p.isActive;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[19]++;
      cov_1nzs9qrdu9().s[86]++;
      return new Date(b.lastUpdated).getTime() - new Date(a.lastUpdated).getTime();
    }));
    /* istanbul ignore next */
    cov_1nzs9qrdu9().s[87]++;
    return recentProjects[0];
  }
  /**
   * Detect project by active status
   */
  detectByActiveStatus(availableProjects) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[20]++;
    cov_1nzs9qrdu9().s[88]++;
    return availableProjects.find(p => {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[21]++;
      cov_1nzs9qrdu9().s[89]++;
      return p.isActive;
    });
  }
  /**
   * Detect project by priority
   */
  detectByPriority(availableProjects) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[22]++;
    const priorityOrder =
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().s[90]++, {
      urgent: 4,
      high: 3,
      medium: 2,
      low: 1
    });
    /* istanbul ignore next */
    cov_1nzs9qrdu9().s[91]++;
    return availableProjects.filter(p => {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[23]++;
      cov_1nzs9qrdu9().s[92]++;
      return p.isActive;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().f[24]++;
      cov_1nzs9qrdu9().s[93]++;
      return (
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[34][0]++, priorityOrder[b.priority]) ||
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[34][1]++, 2)) - (
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[35][0]++, priorityOrder[a.priority]) ||
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[35][1]++, 2));
    })[0];
  }
  /**
   * Build context information for response
   */
  buildContextInfo(request, currentProject) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[25]++;
    var _a;
    const strategy =
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().s[94]++,
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().b[36][0]++,
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().b[38][0]++, (_a = request.preferences) === null) ||
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().b[38][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().b[37][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().b[37][1]++, _a.selectionStrategy)) ||
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().b[36][1]++, 'context'));
    let confidence =
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().s[95]++, 0);
    let reasoning =
    /* istanbul ignore next */
    (cov_1nzs9qrdu9().s[96]++, '');
    /* istanbul ignore next */
    cov_1nzs9qrdu9().s[97]++;
    if (currentProject) {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().b[39][0]++;
      cov_1nzs9qrdu9().s[98]++;
      switch (strategy) {
        case 'context':
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[40][0]++;
          cov_1nzs9qrdu9().s[99]++;
          confidence = request.activeFile ?
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[41][0]++, 0.8) :
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[41][1]++, 0.3);
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[100]++;
          reasoning = request.activeFile ?
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[42][0]++, `Detected from current file context: ${request.activeFile}`) :
          /* istanbul ignore next */
          (cov_1nzs9qrdu9().b[42][1]++, 'Used most recent active project');
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[101]++;
          break;
        case 'recent':
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[40][1]++;
          cov_1nzs9qrdu9().s[102]++;
          confidence = 0.6;
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[103]++;
          reasoning = 'Selected most recently updated active project';
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[104]++;
          break;
        case 'active':
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[40][2]++;
          cov_1nzs9qrdu9().s[105]++;
          confidence = 0.5;
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[106]++;
          reasoning = 'Selected first active project';
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[107]++;
          break;
        case 'priority':
          /* istanbul ignore next */
          cov_1nzs9qrdu9().b[40][3]++;
          cov_1nzs9qrdu9().s[108]++;
          confidence = 0.7;
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[109]++;
          reasoning = 'Selected highest priority active project';
          /* istanbul ignore next */
          cov_1nzs9qrdu9().s[110]++;
          break;
      }
    } else {
      /* istanbul ignore next */
      cov_1nzs9qrdu9().b[39][1]++;
      cov_1nzs9qrdu9().s[111]++;
      reasoning = 'No suitable project found';
    }
    /* istanbul ignore next */
    cov_1nzs9qrdu9().s[112]++;
    return {
      strategy,
      confidence,
      reasoning
    };
  }
  /**
   * Convert Asset to project response format
   */
  assetToProjectResponse(asset) {
    /* istanbul ignore next */
    cov_1nzs9qrdu9().f[26]++;
    cov_1nzs9qrdu9().s[113]++;
    return {
      id: asset.getId().toString(),
      title: asset.getTitle(),
      status:
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[43][0]++, asset.getProperty('status')) ||
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[43][1]++, 'active'),
      priority:
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[44][0]++, asset.getProperty('priority')) ||
      /* istanbul ignore next */
      (cov_1nzs9qrdu9().b[44][1]++, 'medium'),
      description: asset.getProperty('description')
    };
  }
}
/* istanbul ignore next */
cov_1nzs9qrdu9().s[114]++;
exports.GetCurrentProjectUseCase = GetCurrentProjectUseCase;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,