ce95b7b0f006d4487b4a0ca021354321
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VisualQueryNode = exports.NodeType = void 0;
var NodeType;
(function (NodeType) {
    NodeType["ENTITY"] = "entity";
    NodeType["VARIABLE"] = "variable";
    NodeType["LITERAL"] = "literal";
    NodeType["FILTER"] = "filter";
})(NodeType = exports.NodeType || (exports.NodeType = {}));
class VisualQueryNode {
    constructor(params) {
        this.selected = false;
        this.valid = true;
        this.errors = [];
        this.id = params.id;
        this.type = params.type;
        this.label = params.label;
        this.position = params.position;
        this.variableName = params.variableName;
        this.uri = params.uri;
        this.dimensions = params.dimensions || { width: 150, height: 60 };
        Object.freeze(this.id);
        Object.freeze(this.type);
    }
    getId() {
        return this.id;
    }
    getType() {
        return this.type;
    }
    getLabel() {
        return this.label;
    }
    setLabel(label) {
        this.label = label;
    }
    getVariableName() {
        return this.variableName;
    }
    setVariableName(name) {
        this.variableName = name;
    }
    getUri() {
        return this.uri;
    }
    setUri(uri) {
        this.uri = uri;
    }
    getPosition() {
        return Object.assign({}, this.position);
    }
    setPosition(position) {
        this.position = Object.assign({}, position);
    }
    getDimensions() {
        return Object.assign({}, this.dimensions);
    }
    setDimensions(dimensions) {
        this.dimensions = Object.assign({}, dimensions);
    }
    isSelected() {
        return this.selected;
    }
    setSelected(selected) {
        this.selected = selected;
    }
    isValid() {
        return this.valid;
    }
    setValid(valid, errors) {
        this.valid = valid;
        this.errors = errors || [];
    }
    getErrors() {
        return [...this.errors];
    }
    containsPoint(x, y) {
        return x >= this.position.x &&
            x <= this.position.x + this.dimensions.width &&
            y >= this.position.y &&
            y <= this.position.y + this.dimensions.height;
    }
    getConnectionPoints() {
        return {
            top: {
                x: this.position.x + this.dimensions.width / 2,
                y: this.position.y
            },
            right: {
                x: this.position.x + this.dimensions.width,
                y: this.position.y + this.dimensions.height / 2
            },
            bottom: {
                x: this.position.x + this.dimensions.width / 2,
                y: this.position.y + this.dimensions.height
            },
            left: {
                x: this.position.x,
                y: this.position.y + this.dimensions.height / 2
            }
        };
    }
    toSPARQLElement() {
        switch (this.type) {
            case NodeType.ENTITY:
                if (this.uri) {
                    return `<${this.uri}>`;
                }
                else if (this.variableName) {
                    return `?${this.variableName}`;
                }
                else {
                    return `?${this.label.toLowerCase().replace(/\s+/g, '_')}`;
                }
            case NodeType.VARIABLE:
                return `?${this.variableName || this.label.toLowerCase().replace(/\s+/g, '_')}`;
            case NodeType.LITERAL:
                return `"${this.label}"`;
            case NodeType.FILTER:
                return this.label;
            default:
                return '?unknown';
        }
    }
    clone() {
        return new VisualQueryNode({
            id: `${this.id}_clone_${Date.now()}`,
            type: this.type,
            label: this.label,
            position: Object.assign({}, this.position),
            variableName: this.variableName,
            uri: this.uri,
            dimensions: Object.assign({}, this.dimensions)
        });
    }
    static createEntity(label, uri, position) {
        return new VisualQueryNode({
            id: `entity_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
            type: NodeType.ENTITY,
            label,
            uri,
            position: position || { x: 0, y: 0 }
        });
    }
    static createVariable(name, position) {
        return new VisualQueryNode({
            id: `var_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
            type: NodeType.VARIABLE,
            label: name,
            variableName: name,
            position: position || { x: 0, y: 0 }
        });
    }
    static createLiteral(value, position) {
        return new VisualQueryNode({
            id: `literal_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
            type: NodeType.LITERAL,
            label: value,
            position: position || { x: 0, y: 0 }
        });
    }
    static createFilter(expression, position) {
        return new VisualQueryNode({
            id: `filter_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
            type: NodeType.FILTER,
            label: expression,
            position: position || { x: 0, y: 0 },
            dimensions: { width: 200, height: 80 }
        });
    }
}
exports.VisualQueryNode = VisualQueryNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,