acfc628eb8f64465d874be4ecc486e3c
"use strict";

/* istanbul ignore next */
function cov_1iofn2y3cl() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/CreateAssetModal.ts";
  var hash = "e8d991cbab0e0a56d3ceaa6b842a8aa790fb9a42";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/CreateAssetModal.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 75
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "12": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 65
        }
      },
      "13": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 73
        }
      },
      "14": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 80
        }
      },
      "15": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 82
        }
      },
      "16": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "17": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "18": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "19": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 50
        }
      },
      "20": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "21": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "22": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "23": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "24": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "25": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 44,
          column: 61
        }
      },
      "26": {
        start: {
          line: 41,
          column: 33
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "27": {
        start: {
          line: 44,
          column: 35
        },
        end: {
          line: 44,
          column: 58
        }
      },
      "28": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "29": {
        start: {
          line: 50,
          column: 26
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "30": {
        start: {
          line: 51,
          column: 28
        },
        end: {
          line: 51,
          column: 30
        }
      },
      "31": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "32": {
        start: {
          line: 54,
          column: 30
        },
        end: {
          line: 54,
          column: 71
        }
      },
      "33": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 62,
          column: 17
        }
      },
      "34": {
        start: {
          line: 56,
          column: 42
        },
        end: {
          line: 56,
          column: 82
        }
      },
      "35": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 61,
          column: 21
        }
      },
      "36": {
        start: {
          line: 58,
          column: 42
        },
        end: {
          line: 58,
          column: 55
        }
      },
      "37": {
        start: {
          line: 59,
          column: 44
        },
        end: {
          line: 59,
          column: 89
        }
      },
      "38": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 65
        }
      },
      "39": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "40": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 188
        }
      },
      "41": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 80,
          column: 15
        }
      },
      "42": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 74,
          column: 17
        }
      },
      "43": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 83
        }
      },
      "44": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 51
        }
      },
      "45": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 79,
          column: 20
        }
      },
      "46": {
        start: {
          line: 76,
          column: 45
        },
        end: {
          line: 79,
          column: 18
        }
      },
      "47": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 44
        }
      },
      "48": {
        start: {
          line: 78,
          column: 20
        },
        end: {
          line: 78,
          column: 63
        }
      },
      "49": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "50": {
        start: {
          line: 86,
          column: 26
        },
        end: {
          line: 86,
          column: 59
        }
      },
      "51": {
        start: {
          line: 87,
          column: 31
        },
        end: {
          line: 87,
          column: 33
        }
      },
      "52": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "53": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 97,
          column: 17
        }
      },
      "54": {
        start: {
          line: 91,
          column: 34
        },
        end: {
          line: 91,
          column: 75
        }
      },
      "55": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 96,
          column: 21
        }
      },
      "56": {
        start: {
          line: 93,
          column: 39
        },
        end: {
          line: 93,
          column: 110
        }
      },
      "57": {
        start: {
          line: 94,
          column: 44
        },
        end: {
          line: 94,
          column: 86
        }
      },
      "58": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 65
        }
      },
      "59": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "60": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 178
        }
      },
      "61": {
        start: {
          line: 103,
          column: 36
        },
        end: {
          line: 103,
          column: 41
        }
      },
      "62": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "63": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 53
        }
      },
      "64": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 127,
          column: 15
        }
      },
      "65": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 114,
          column: 17
        }
      },
      "66": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 113,
          column: 78
        }
      },
      "67": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 123,
          column: 17
        }
      },
      "68": {
        start: {
          line: 116,
          column: 62
        },
        end: {
          line: 116,
          column: 90
        }
      },
      "69": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 57
        }
      },
      "70": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 55
        }
      },
      "71": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 123,
          column: 17
        }
      },
      "72": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 62
        }
      },
      "73": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 122,
          column: 60
        }
      },
      "74": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 126,
          column: 19
        }
      },
      "75": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 47
        }
      },
      "76": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "77": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "78": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "79": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 65
        }
      },
      "80": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 226,
          column: 11
        }
      },
      "81": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 145,
          column: 23
        }
      },
      "82": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 23
        }
      },
      "83": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 71
        }
      },
      "84": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "85": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 49
        }
      },
      "86": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 56
        }
      },
      "87": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 40
        }
      },
      "88": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 33
        }
      },
      "89": {
        start: {
          line: 158,
          column: 26
        },
        end: {
          line: 158,
          column: 59
        }
      },
      "90": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 76
        }
      },
      "91": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "92": {
        start: {
          line: 162,
          column: 30
        },
        end: {
          line: 162,
          column: 71
        }
      },
      "93": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 196,
          column: 17
        }
      },
      "94": {
        start: {
          line: 164,
          column: 42
        },
        end: {
          line: 164,
          column: 82
        }
      },
      "95": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 195,
          column: 21
        }
      },
      "96": {
        start: {
          line: 166,
          column: 39
        },
        end: {
          line: 166,
          column: 72
        }
      },
      "97": {
        start: {
          line: 168,
          column: 24
        },
        end: {
          line: 194,
          column: 25
        }
      },
      "98": {
        start: {
          line: 170,
          column: 49
        },
        end: {
          line: 170,
          column: 62
        }
      },
      "99": {
        start: {
          line: 171,
          column: 42
        },
        end: {
          line: 171,
          column: 90
        }
      },
      "100": {
        start: {
          line: 172,
          column: 48
        },
        end: {
          line: 172,
          column: 88
        }
      },
      "101": {
        start: {
          line: 173,
          column: 42
        },
        end: {
          line: 173,
          column: 86
        }
      },
      "102": {
        start: {
          line: 174,
          column: 47
        },
        end: {
          line: 174,
          column: 101
        }
      },
      "103": {
        start: {
          line: 175,
          column: 44
        },
        end: {
          line: 175,
          column: 94
        }
      },
      "104": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 176,
          column: 97
        }
      },
      "105": {
        start: {
          line: 178,
          column: 39
        },
        end: {
          line: 178,
          column: 65
        }
      },
      "106": {
        start: {
          line: 179,
          column: 28
        },
        end: {
          line: 184,
          column: 29
        }
      },
      "107": {
        start: {
          line: 180,
          column: 32
        },
        end: {
          line: 180,
          column: 46
        }
      },
      "108": {
        start: {
          line: 182,
          column: 33
        },
        end: {
          line: 184,
          column: 29
        }
      },
      "109": {
        start: {
          line: 183,
          column: 32
        },
        end: {
          line: 183,
          column: 46
        }
      },
      "110": {
        start: {
          line: 185,
          column: 28
        },
        end: {
          line: 193,
          column: 31
        }
      },
      "111": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 93
        }
      },
      "112": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "113": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 213,
          column: 19
        }
      },
      "114": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 221,
          column: 13
        }
      },
      "115": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 219,
          column: 19
        }
      },
      "116": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 220,
          column: 23
        }
      },
      "117": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 225,
          column: 13
        }
      },
      "118": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 47
        }
      },
      "119": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 231,
          column: 26
        }
      },
      "120": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 26
        }
      },
      "121": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 233,
          column: 29
        }
      },
      "122": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 29
        }
      },
      "123": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 235,
          column: 26
        }
      },
      "124": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 26
        }
      },
      "125": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 237,
          column: 28
        }
      },
      "126": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 28
        }
      },
      "127": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 239,
          column: 27
        }
      },
      "128": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 27
        }
      },
      "129": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 241,
          column: 26
        }
      },
      "130": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 26
        }
      },
      "131": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 24
        }
      },
      "132": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 246,
          column: 19
        }
      },
      "133": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 19
        }
      },
      "134": {
        start: {
          line: 247,
          column: 24
        },
        end: {
          line: 249,
          column: 42
        }
      },
      "135": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "136": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 56
        }
      },
      "137": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 22
        }
      },
      "138": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 59
        }
      },
      "139": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 22
        }
      },
      "140": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 56
        }
      },
      "141": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 22
        }
      },
      "142": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 58
        }
      },
      "143": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 22
        }
      },
      "144": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 60
        }
      },
      "145": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 22
        }
      },
      "146": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 57
        }
      },
      "147": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 22
        }
      },
      "148": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 56
        }
      },
      "149": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 288,
          column: 11
        }
      },
      "150": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 51
        }
      },
      "151": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 279,
          column: 13
        }
      },
      "152": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 51
        }
      },
      "153": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 287,
          column: 15
        }
      },
      "154": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 286,
          column: 17
        }
      },
      "155": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 282,
          column: 66
        }
      },
      "156": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 62
        }
      },
      "157": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 295,
          column: 11
        }
      },
      "158": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 294,
          column: 15
        }
      },
      "159": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 62
        }
      },
      "160": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 310,
          column: 11
        }
      },
      "161": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 307,
          column: 15
        }
      },
      "162": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 306,
          column: 17
        }
      },
      "163": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 302,
          column: 66
        }
      },
      "164": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 62
        }
      },
      "165": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 39
        }
      },
      "166": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 326,
          column: 11
        }
      },
      "167": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 325,
          column: 15
        }
      },
      "168": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 324,
          column: 17
        }
      },
      "169": {
        start: {
          line: 317,
          column: 32
        },
        end: {
          line: 317,
          column: 49
        }
      },
      "170": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 320,
          column: 21
        }
      },
      "171": {
        start: {
          line: 319,
          column: 24
        },
        end: {
          line: 319,
          column: 68
        }
      },
      "172": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 323,
          column: 62
        }
      },
      "173": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 339,
          column: 11
        }
      },
      "174": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 338,
          column: 15
        }
      },
      "175": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 337,
          column: 17
        }
      },
      "176": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 66
        }
      },
      "177": {
        start: {
          line: 336,
          column: 20
        },
        end: {
          line: 336,
          column: 62
        }
      },
      "178": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 359,
          column: 11
        }
      },
      "179": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 358,
          column: 15
        }
      },
      "180": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 357,
          column: 17
        }
      },
      "181": {
        start: {
          line: 346,
          column: 20
        },
        end: {
          line: 353,
          column: 21
        }
      },
      "182": {
        start: {
          line: 347,
          column: 38
        },
        end: {
          line: 347,
          column: 76
        }
      },
      "183": {
        start: {
          line: 348,
          column: 24
        },
        end: {
          line: 348,
          column: 70
        }
      },
      "184": {
        start: {
          line: 351,
          column: 38
        },
        end: {
          line: 351,
          column: 88
        }
      },
      "185": {
        start: {
          line: 351,
          column: 64
        },
        end: {
          line: 351,
          column: 72
        }
      },
      "186": {
        start: {
          line: 351,
          column: 86
        },
        end: {
          line: 351,
          column: 87
        }
      },
      "187": {
        start: {
          line: 352,
          column: 24
        },
        end: {
          line: 352,
          column: 70
        }
      },
      "188": {
        start: {
          line: 356,
          column: 20
        },
        end: {
          line: 356,
          column: 62
        }
      },
      "189": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 372,
          column: 11
        }
      },
      "190": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 371,
          column: 15
        }
      },
      "191": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 370,
          column: 17
        }
      },
      "192": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 366,
          column: 66
        }
      },
      "193": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 369,
          column: 62
        }
      },
      "194": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 381,
          column: 13
        }
      },
      "195": {
        start: {
          line: 376,
          column: 30
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "196": {
        start: {
          line: 379,
          column: 27
        },
        end: {
          line: 381,
          column: 10
        }
      },
      "197": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 37
        }
      },
      "198": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 409,
          column: 11
        }
      },
      "199": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 408,
          column: 13
        }
      },
      "200": {
        start: {
          line: 387,
          column: 35
        },
        end: {
          line: 387,
          column: 37
        }
      },
      "201": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 390,
          column: 17
        }
      },
      "202": {
        start: {
          line: 389,
          column: 20
        },
        end: {
          line: 389,
          column: 44
        }
      },
      "203": {
        start: {
          line: 392,
          column: 33
        },
        end: {
          line: 397,
          column: 18
        }
      },
      "204": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 404,
          column: 17
        }
      },
      "205": {
        start: {
          line: 399,
          column: 20
        },
        end: {
          line: 399,
          column: 60
        }
      },
      "206": {
        start: {
          line: 400,
          column: 20
        },
        end: {
          line: 400,
          column: 33
        }
      },
      "207": {
        start: {
          line: 403,
          column: 20
        },
        end: {
          line: 403,
          column: 68
        }
      },
      "208": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 407,
          column: 65
        }
      },
      "209": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "210": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 35
        }
      },
      "211": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 42
        }
      },
      "212": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 423,
          column: 13
        }
      },
      "213": {
        start: {
          line: 422,
          column: 16
        },
        end: {
          line: 422,
          column: 70
        }
      },
      "214": {
        start: {
          line: 427,
          column: 0
        },
        end: {
          line: 427,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 55
          },
          end: {
            line: 26,
            column: 56
          }
        },
        loc: {
          start: {
            line: 26,
            column: 68
          },
          end: {
            line: 34,
            column: 9
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 33
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 55
          },
          end: {
            line: 37,
            column: 56
          }
        },
        loc: {
          start: {
            line: 37,
            column: 68
          },
          end: {
            line: 45,
            column: 9
          }
        },
        line: 37
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 26
          }
        },
        loc: {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 44,
            column: 59
          }
        },
        line: 41
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 26
          },
          end: {
            line: 44,
            column: 27
          }
        },
        loc: {
          start: {
            line: 44,
            column: 35
          },
          end: {
            line: 44,
            column: 58
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 47
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 48,
            column: 55
          },
          end: {
            line: 48,
            column: 56
          }
        },
        loc: {
          start: {
            line: 48,
            column: 68
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 48
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 71,
            column: 30
          }
        },
        loc: {
          start: {
            line: 71,
            column: 41
          },
          end: {
            line: 80,
            column: 13
          }
        },
        line: 71
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 76,
            column: 34
          },
          end: {
            line: 76,
            column: 35
          }
        },
        loc: {
          start: {
            line: 76,
            column: 45
          },
          end: {
            line: 79,
            column: 18
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 76,
            column: 85
          },
          end: {
            line: 76,
            column: 86
          }
        },
        loc: {
          start: {
            line: 76,
            column: 98
          },
          end: {
            line: 79,
            column: 17
          }
        },
        line: 76
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 83
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 84,
            column: 55
          },
          end: {
            line: 84,
            column: 56
          }
        },
        loc: {
          start: {
            line: 84,
            column: 68
          },
          end: {
            line: 128,
            column: 9
          }
        },
        line: 84
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 111,
            column: 29
          },
          end: {
            line: 111,
            column: 30
          }
        },
        loc: {
          start: {
            line: 111,
            column: 41
          },
          end: {
            line: 127,
            column: 13
          }
        },
        line: 111
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 116,
            column: 55
          },
          end: {
            line: 116,
            column: 56
          }
        },
        loc: {
          start: {
            line: 116,
            column: 62
          },
          end: {
            line: 116,
            column: 90
          }
        },
        line: 116
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 124,
            column: 34
          },
          end: {
            line: 124,
            column: 35
          }
        },
        loc: {
          start: {
            line: 124,
            column: 43
          },
          end: {
            line: 126,
            column: 17
          }
        },
        line: 124
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 40
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 130
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 131,
            column: 55
          },
          end: {
            line: 131,
            column: 56
          }
        },
        loc: {
          start: {
            line: 131,
            column: 68
          },
          end: {
            line: 140,
            column: 9
          }
        },
        line: 131
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 40
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 142
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 143,
            column: 55
          },
          end: {
            line: 143,
            column: 56
          }
        },
        loc: {
          start: {
            line: 143,
            column: 68
          },
          end: {
            line: 226,
            column: 9
          }
        },
        line: 143
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 26
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 228
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        },
        loc: {
          start: {
            line: 244,
            column: 34
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 244
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        loc: {
          start: {
            line: 274,
            column: 39
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 274
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 275,
            column: 28
          },
          end: {
            line: 275,
            column: 29
          }
        },
        loc: {
          start: {
            line: 275,
            column: 40
          },
          end: {
            line: 288,
            column: 9
          }
        },
        line: 275
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 280,
            column: 30
          },
          end: {
            line: 280,
            column: 31
          }
        },
        loc: {
          start: {
            line: 280,
            column: 39
          },
          end: {
            line: 287,
            column: 13
          }
        },
        line: 280
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 42
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 290
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 291,
            column: 26
          },
          end: {
            line: 291,
            column: 27
          }
        },
        loc: {
          start: {
            line: 291,
            column: 36
          },
          end: {
            line: 295,
            column: 9
          }
        },
        line: 291
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 292,
            column: 28
          },
          end: {
            line: 292,
            column: 29
          }
        },
        loc: {
          start: {
            line: 292,
            column: 37
          },
          end: {
            line: 294,
            column: 13
          }
        },
        line: 292
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 39
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 297
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 298,
            column: 24
          },
          end: {
            line: 298,
            column: 25
          }
        },
        loc: {
          start: {
            line: 298,
            column: 32
          },
          end: {
            line: 310,
            column: 9
          }
        },
        line: 298
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 300,
            column: 26
          },
          end: {
            line: 300,
            column: 27
          }
        },
        loc: {
          start: {
            line: 300,
            column: 35
          },
          end: {
            line: 307,
            column: 13
          }
        },
        line: 300
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 41
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 312
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 313,
            column: 24
          },
          end: {
            line: 313,
            column: 25
          }
        },
        loc: {
          start: {
            line: 313,
            column: 32
          },
          end: {
            line: 326,
            column: 9
          }
        },
        line: 313
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 315,
            column: 26
          },
          end: {
            line: 315,
            column: 27
          }
        },
        loc: {
          start: {
            line: 315,
            column: 35
          },
          end: {
            line: 325,
            column: 13
          }
        },
        line: 315
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 43
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 328
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 329,
            column: 28
          },
          end: {
            line: 329,
            column: 29
          }
        },
        loc: {
          start: {
            line: 329,
            column: 36
          },
          end: {
            line: 339,
            column: 9
          }
        },
        line: 329
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 331,
            column: 26
          },
          end: {
            line: 331,
            column: 27
          }
        },
        loc: {
          start: {
            line: 331,
            column: 35
          },
          end: {
            line: 338,
            column: 13
          }
        },
        line: 331
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 40
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 341
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 342,
            column: 24
          },
          end: {
            line: 342,
            column: 25
          }
        },
        loc: {
          start: {
            line: 342,
            column: 32
          },
          end: {
            line: 359,
            column: 9
          }
        },
        line: 342
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 344,
            column: 26
          },
          end: {
            line: 344,
            column: 27
          }
        },
        loc: {
          start: {
            line: 344,
            column: 35
          },
          end: {
            line: 358,
            column: 13
          }
        },
        line: 344
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 351,
            column: 59
          },
          end: {
            line: 351,
            column: 60
          }
        },
        loc: {
          start: {
            line: 351,
            column: 64
          },
          end: {
            line: 351,
            column: 72
          }
        },
        line: 351
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 351,
            column: 81
          },
          end: {
            line: 351,
            column: 82
          }
        },
        loc: {
          start: {
            line: 351,
            column: 86
          },
          end: {
            line: 351,
            column: 87
          }
        },
        line: 351
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 39
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 361
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 362,
            column: 24
          },
          end: {
            line: 362,
            column: 25
          }
        },
        loc: {
          start: {
            line: 362,
            column: 32
          },
          end: {
            line: 372,
            column: 9
          }
        },
        line: 362
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 364,
            column: 26
          },
          end: {
            line: 364,
            column: 27
          }
        },
        loc: {
          start: {
            line: 364,
            column: 35
          },
          end: {
            line: 371,
            column: 13
          }
        },
        line: 364
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        loc: {
          start: {
            line: 374,
            column: 36
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 374
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 376,
            column: 23
          },
          end: {
            line: 376,
            column: 24
          }
        },
        loc: {
          start: {
            line: 376,
            column: 30
          },
          end: {
            line: 381,
            column: 11
          }
        },
        line: 376
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 379,
            column: 21
          },
          end: {
            line: 379,
            column: 22
          }
        },
        loc: {
          start: {
            line: 379,
            column: 27
          },
          end: {
            line: 381,
            column: 10
          }
        },
        line: 379
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 379,
            column: 67
          },
          end: {
            line: 379,
            column: 68
          }
        },
        loc: {
          start: {
            line: 379,
            column: 80
          },
          end: {
            line: 381,
            column: 9
          }
        },
        line: 379
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 383,
            column: 5
          }
        },
        loc: {
          start: {
            line: 383,
            column: 18
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 383
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 384,
            column: 55
          },
          end: {
            line: 384,
            column: 56
          }
        },
        loc: {
          start: {
            line: 384,
            column: 68
          },
          end: {
            line: 409,
            column: 9
          }
        },
        line: 384
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        },
        loc: {
          start: {
            line: 411,
            column: 14
          },
          end: {
            line: 425,
            column: 5
          }
        },
        line: 411
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 57
          },
          end: {
            line: 55,
            column: 63
          }
        }, {
          start: {
            line: 55,
            column: 66
          },
          end: {
            line: 55,
            column: 83
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 34
          }
        }, {
          start: {
            line: 55,
            column: 38
          },
          end: {
            line: 55,
            column: 54
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 61,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 61,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 58
          }
        }, {
          start: {
            line: 57,
            column: 62
          },
          end: {
            line: 57,
            column: 92
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 59,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 59,
            column: 76
          }
        }, {
          start: {
            line: 59,
            column: 80
          },
          end: {
            line: 59,
            column: 89
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 97,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 97,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 96,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 96,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 61
          },
          end: {
            line: 92,
            column: 67
          }
        }, {
          start: {
            line: 92,
            column: 70
          },
          end: {
            line: 92,
            column: 87
          }
        }],
        line: 92
      },
      "10": {
        loc: {
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 38
          }
        }, {
          start: {
            line: 92,
            column: 42
          },
          end: {
            line: 92,
            column: 58
          }
        }],
        line: 92
      },
      "11": {
        loc: {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 93,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 93,
            column: 80
          }
        }, {
          start: {
            line: 93,
            column: 84
          },
          end: {
            line: 93,
            column: 110
          }
        }],
        line: 93
      },
      "12": {
        loc: {
          start: {
            line: 94,
            column: 44
          },
          end: {
            line: 94,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 44
          },
          end: {
            line: 94,
            column: 76
          }
        }, {
          start: {
            line: 94,
            column: 80
          },
          end: {
            line: 94,
            column: 86
          }
        }],
        line: 94
      },
      "13": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "14": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "15": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 37
          }
        }, {
          start: {
            line: 105,
            column: 41
          },
          end: {
            line: 105,
            column: 60
          }
        }],
        line: 105
      },
      "16": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 123,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 123,
            column: 17
          }
        }, {
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 123,
            column: 17
          }
        }],
        line: 116
      },
      "17": {
        loc: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 35
          }
        }, {
          start: {
            line: 116,
            column: 39
          },
          end: {
            line: 116,
            column: 91
          }
        }],
        line: 116
      },
      "18": {
        loc: {
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 123,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 123,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "19": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 145,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 145,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "20": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: 151,
            column: 17
          },
          end: {
            line: 154,
            column: 13
          }
        }],
        line: 148
      },
      "21": {
        loc: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 148,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 148,
            column: 51
          }
        }, {
          start: {
            line: 148,
            column: 55
          },
          end: {
            line: 148,
            column: 107
          }
        }],
        line: 148
      },
      "22": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "23": {
        loc: {
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 57
          },
          end: {
            line: 163,
            column: 63
          }
        }, {
          start: {
            line: 163,
            column: 66
          },
          end: {
            line: 163,
            column: 83
          }
        }],
        line: 163
      },
      "24": {
        loc: {
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 34
          }
        }, {
          start: {
            line: 163,
            column: 38
          },
          end: {
            line: 163,
            column: 54
          }
        }],
        line: 163
      },
      "25": {
        loc: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 195,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 195,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "26": {
        loc: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 61
          }
        }, {
          start: {
            line: 165,
            column: 65
          },
          end: {
            line: 165,
            column: 98
          }
        }],
        line: 165
      },
      "27": {
        loc: {
          start: {
            line: 168,
            column: 24
          },
          end: {
            line: 194,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 24
          },
          end: {
            line: 194,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "28": {
        loc: {
          start: {
            line: 168,
            column: 28
          },
          end: {
            line: 169,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 28
          },
          end: {
            line: 168,
            column: 57
          }
        }, {
          start: {
            line: 168,
            column: 61
          },
          end: {
            line: 168,
            column: 81
          }
        }, {
          start: {
            line: 169,
            column: 29
          },
          end: {
            line: 169,
            column: 50
          }
        }, {
          start: {
            line: 169,
            column: 55
          },
          end: {
            line: 169,
            column: 81
          }
        }, {
          start: {
            line: 169,
            column: 85
          },
          end: {
            line: 169,
            column: 120
          }
        }],
        line: 168
      },
      "29": {
        loc: {
          start: {
            line: 171,
            column: 42
          },
          end: {
            line: 171,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 42
          },
          end: {
            line: 171,
            column: 74
          }
        }, {
          start: {
            line: 171,
            column: 78
          },
          end: {
            line: 171,
            column: 90
          }
        }],
        line: 171
      },
      "30": {
        loc: {
          start: {
            line: 172,
            column: 48
          },
          end: {
            line: 172,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 48
          },
          end: {
            line: 172,
            column: 82
          }
        }, {
          start: {
            line: 172,
            column: 86
          },
          end: {
            line: 172,
            column: 88
          }
        }],
        line: 172
      },
      "31": {
        loc: {
          start: {
            line: 173,
            column: 42
          },
          end: {
            line: 173,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 42
          },
          end: {
            line: 173,
            column: 74
          }
        }, {
          start: {
            line: 173,
            column: 78
          },
          end: {
            line: 173,
            column: 86
          }
        }],
        line: 173
      },
      "32": {
        loc: {
          start: {
            line: 174,
            column: 47
          },
          end: {
            line: 174,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 47
          },
          end: {
            line: 174,
            column: 92
          }
        }, {
          start: {
            line: 174,
            column: 96
          },
          end: {
            line: 174,
            column: 101
          }
        }],
        line: 174
      },
      "33": {
        loc: {
          start: {
            line: 175,
            column: 44
          },
          end: {
            line: 175,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 44
          },
          end: {
            line: 175,
            column: 86
          }
        }, {
          start: {
            line: 175,
            column: 90
          },
          end: {
            line: 175,
            column: 94
          }
        }],
        line: 175
      },
      "34": {
        loc: {
          start: {
            line: 179,
            column: 28
          },
          end: {
            line: 184,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 28
          },
          end: {
            line: 184,
            column: 29
          }
        }, {
          start: {
            line: 182,
            column: 33
          },
          end: {
            line: 184,
            column: 29
          }
        }],
        line: 179
      },
      "35": {
        loc: {
          start: {
            line: 179,
            column: 32
          },
          end: {
            line: 179,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 32
          },
          end: {
            line: 179,
            column: 39
          }
        }, {
          start: {
            line: 179,
            column: 43
          },
          end: {
            line: 179,
            column: 65
          }
        }],
        line: 179
      },
      "36": {
        loc: {
          start: {
            line: 182,
            column: 33
          },
          end: {
            line: 184,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 33
          },
          end: {
            line: 184,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "37": {
        loc: {
          start: {
            line: 182,
            column: 37
          },
          end: {
            line: 182,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 37
          },
          end: {
            line: 182,
            column: 55
          }
        }, {
          start: {
            line: 182,
            column: 59
          },
          end: {
            line: 182,
            column: 66
          }
        }],
        line: 182
      },
      "38": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "39": {
        loc: {
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 200,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 200,
            column: 44
          }
        }, {
          start: {
            line: 200,
            column: 48
          },
          end: {
            line: 200,
            column: 74
          }
        }],
        line: 200
      },
      "40": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 221,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 221,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "41": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 231,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 231,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "42": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 233,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 233,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "43": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 235,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 235,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "44": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 34
          }
        }, {
          start: {
            line: 234,
            column: 38
          },
          end: {
            line: 234,
            column: 60
          }
        }],
        line: 234
      },
      "45": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 237,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 237,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "46": {
        loc: {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 37
          }
        }, {
          start: {
            line: 236,
            column: 41
          },
          end: {
            line: 236,
            column: 66
          }
        }, {
          start: {
            line: 236,
            column: 70
          },
          end: {
            line: 236,
            column: 93
          }
        }],
        line: 236
      },
      "47": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 239,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 239,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "48": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 36
          }
        }, {
          start: {
            line: 238,
            column: 40
          },
          end: {
            line: 238,
            column: 60
          }
        }],
        line: 238
      },
      "49": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 241,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 241,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "50": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 34
          }
        }, {
          start: {
            line: 240,
            column: 38
          },
          end: {
            line: 240,
            column: 60
          }
        }],
        line: 240
      },
      "51": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 246,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 246,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "52": {
        loc: {
          start: {
            line: 248,
            column: 39
          },
          end: {
            line: 248,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 61
          },
          end: {
            line: 248,
            column: 65
          }
        }, {
          start: {
            line: 248,
            column: 68
          },
          end: {
            line: 248,
            column: 70
          }
        }],
        line: 248
      },
      "53": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 254,
            column: 22
          }
        }, {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 257,
            column: 22
          }
        }, {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 260,
            column: 22
          }
        }, {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 263,
            column: 22
          }
        }, {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 266,
            column: 22
          }
        }, {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 269,
            column: 22
          }
        }, {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 271,
            column: 56
          }
        }],
        line: 251
      },
      "54": {
        loc: {
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 286,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 286,
            column: 17
          }
        }, {
          start: {
            line: 284,
            column: 21
          },
          end: {
            line: 286,
            column: 17
          }
        }],
        line: 281
      },
      "55": {
        loc: {
          start: {
            line: 301,
            column: 16
          },
          end: {
            line: 306,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 16
          },
          end: {
            line: 306,
            column: 17
          }
        }, {
          start: {
            line: 304,
            column: 21
          },
          end: {
            line: 306,
            column: 17
          }
        }],
        line: 301
      },
      "56": {
        loc: {
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 324,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 324,
            column: 17
          }
        }, {
          start: {
            line: 322,
            column: 21
          },
          end: {
            line: 324,
            column: 17
          }
        }],
        line: 316
      },
      "57": {
        loc: {
          start: {
            line: 318,
            column: 20
          },
          end: {
            line: 320,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 20
          },
          end: {
            line: 320,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "58": {
        loc: {
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 337,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 337,
            column: 17
          }
        }, {
          start: {
            line: 335,
            column: 21
          },
          end: {
            line: 337,
            column: 17
          }
        }],
        line: 332
      },
      "59": {
        loc: {
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 357,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 357,
            column: 17
          }
        }, {
          start: {
            line: 355,
            column: 21
          },
          end: {
            line: 357,
            column: 17
          }
        }],
        line: 345
      },
      "60": {
        loc: {
          start: {
            line: 346,
            column: 20
          },
          end: {
            line: 353,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 20
          },
          end: {
            line: 353,
            column: 21
          }
        }, {
          start: {
            line: 350,
            column: 25
          },
          end: {
            line: 353,
            column: 21
          }
        }],
        line: 346
      },
      "61": {
        loc: {
          start: {
            line: 347,
            column: 38
          },
          end: {
            line: 347,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 38
          },
          end: {
            line: 347,
            column: 70
          }
        }, {
          start: {
            line: 347,
            column: 74
          },
          end: {
            line: 347,
            column: 76
          }
        }],
        line: 347
      },
      "62": {
        loc: {
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 370,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 370,
            column: 17
          }
        }, {
          start: {
            line: 368,
            column: 21
          },
          end: {
            line: 370,
            column: 17
          }
        }],
        line: 365
      },
      "63": {
        loc: {
          start: {
            line: 398,
            column: 16
          },
          end: {
            line: 404,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 16
          },
          end: {
            line: 404,
            column: 17
          }
        }, {
          start: {
            line: 402,
            column: 21
          },
          end: {
            line: 404,
            column: 17
          }
        }],
        line: 398
      },
      "64": {
        loc: {
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        }, {
          start: {
            line: 416,
            column: 13
          },
          end: {
            line: 424,
            column: 9
          }
        }],
        line: 413
      },
      "65": {
        loc: {
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 413,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 413,
            column: 37
          }
        }, {
          start: {
            line: 413,
            column: 41
          },
          end: {
            line: 413,
            column: 83
          }
        }],
        line: 413
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0, 0, 0, 0, 0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/CreateAssetModal.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/CreateAssetModal.ts"],
      sourcesContent: ["import { App, Modal, Setting, Notice, TFile } from 'obsidian';\nimport { CreateAssetUseCase } from '../../application/use-cases/CreateAssetUseCase';\nimport { DIContainer } from '../../infrastructure/container/DIContainer';\nimport { IOntologyRepository } from '../../domain/repositories/IOntologyRepository';\nimport { IClassViewRepository } from '../../domain/repositories/IClassViewRepository';\n\n/**\n * Modal for creating new ExoAssets\n * Presentation layer component that delegates to use cases\n */\nexport class CreateAssetModal extends Modal {\n  private assetTitle: string = '';\n  private assetClass: string = 'exo__Asset';\n  private assetOntology: string = '';\n  private propertyValues: Map<string, any> = new Map();\n  private propertiesContainer: HTMLElement | null = null;\n  private properties: any[] = []; // Store current properties for testing\n  \n  private createAssetUseCase: CreateAssetUseCase;\n  private container: DIContainer;\n  private ontologyRepository: IOntologyRepository;\n  private classViewRepository: IClassViewRepository;\n\n  constructor(app: App) {\n    super(app);\n    this.container = DIContainer.getInstance();\n    this.createAssetUseCase = this.container.getCreateAssetUseCase();\n    this.ontologyRepository = this.container.resolve<IOntologyRepository>('IOntologyRepository');\n    this.classViewRepository = this.container.resolve<IClassViewRepository>('IClassViewRepository');\n  }\n\n  async onOpen() {\n    const { contentEl } = this;\n    contentEl.createEl(\"h2\", { text: \"Create ExoAsset\" });\n\n    await this.setupTitleField(contentEl);\n    await this.setupClassField(contentEl);\n    await this.setupOntologyField(contentEl);\n    await this.setupPropertiesSection(contentEl);\n    this.setupActionButtons(contentEl);\n  }\n\n  private async setupTitleField(containerEl: HTMLElement): Promise<void> {\n    new Setting(containerEl)\n      .setName(\"Title\")\n      .setDesc(\"Asset title\")\n      .addText(text => text\n        .setPlaceholder(\"Enter asset title\")\n        .setValue(this.assetTitle)\n        .onChange(value => this.assetTitle = value));\n  }\n\n  private async setupClassField(containerEl: HTMLElement): Promise<void> {\n    // Get all class files from the vault\n    const files = this.app.vault.getMarkdownFiles();\n    const classes: { className: string; displayName: string }[] = [];\n    \n    // Find all class definitions (files with exo__Class frontmatter)\n    for (const file of files) {\n      const cache = this.app.metadataCache.getFileCache(file);\n      if (cache?.frontmatter) {\n        const instanceClass = cache.frontmatter['exo__Instance_class'];\n        if (instanceClass === '[[exo__Class]]' || instanceClass === 'exo__Class') {\n          const className = file.basename;\n          const displayName = cache.frontmatter['rdfs__label'] || className;\n          classes.push({ className, displayName });\n        }\n      }\n    }\n    \n    // Add default classes if none found\n    if (classes.length === 0) {\n      classes.push(\n        { className: 'exo__Asset', displayName: 'Asset' },\n        { className: 'exo__Class', displayName: 'Class' },\n        { className: 'exo__Property', displayName: 'Property' }\n      );\n    }\n\n    new Setting(containerEl)\n      .setName(\"Class\")\n      .setDesc(\"Select the type of asset\")\n      .addDropdown(dropdown => {\n        for (const classInfo of classes) {\n          dropdown.addOption(classInfo.className, classInfo.displayName);\n        }\n        \n        dropdown.setValue(this.assetClass);\n        dropdown.onChange(async value => {\n          this.assetClass = value;\n          await this.updatePropertiesForClass(value);\n        });\n      });\n  }\n\n  private async setupOntologyField(containerEl: HTMLElement): Promise<void> {\n    // Get all ontology files from the vault\n    const files = this.app.vault.getMarkdownFiles();\n    const ontologies: { prefix: string; displayName: string }[] = [];\n    \n    // Find all ontology definitions (files starting with ! or having exo__Ontology_prefix)\n    for (const file of files) {\n      if (file.name.startsWith('!')) {\n        const cache = this.app.metadataCache.getFileCache(file);\n        if (cache?.frontmatter) {\n          const prefix = cache.frontmatter['exo__Ontology_prefix'] || file.basename.substring(1);\n          const displayName = cache.frontmatter['rdfs__label'] || prefix;\n          ontologies.push({ prefix, displayName });\n        }\n      }\n    }\n    \n    // Add default ontologies if none found\n    if (ontologies.length === 0) {\n      ontologies.push(\n        { prefix: 'exo', displayName: 'Exocortex Core' },\n        { prefix: 'ui', displayName: 'User Interface' },\n        { prefix: 'rdfs', displayName: 'RDF Schema' }\n      );\n    }\n    \n    const defaultOntology = 'exo';\n    \n    // Set default ontology when no ontologies found in vault\n    if (ontologies.length > 0 && !this.assetOntology) {\n      this.assetOntology = defaultOntology;\n    }\n\n    new Setting(containerEl)\n      .setName(\"Ontology\")\n      .setDesc(\"Select which knowledge graph this asset belongs to\")\n      .addDropdown(dropdown => {\n        for (const ontology of ontologies) {\n          dropdown.addOption(ontology.prefix, ontology.displayName);\n        }\n        \n        // Set default ontology\n        if (defaultOntology && ontologies.some((o: any) => o.prefix === defaultOntology)) {\n          this.assetOntology = defaultOntology;\n          dropdown.setValue(defaultOntology);\n        } else if (ontologies.length > 0) {\n          this.assetOntology = ontologies[0].prefix;\n          dropdown.setValue(ontologies[0].prefix);\n        }\n        \n        dropdown.onChange(value => {\n          this.assetOntology = value;\n        });\n      });\n  }\n\n  private async setupPropertiesSection(containerEl: HTMLElement): Promise<void> {\n    containerEl.createEl(\"h3\", { \n      text: \"Properties\", \n      cls: \"exocortex-properties-header\" \n    });\n    \n    this.propertiesContainer = containerEl.createDiv({ \n      cls: \"exocortex-properties-container\" \n    });\n    \n    await this.updatePropertiesForClass(this.assetClass);\n  }\n\n  private async updatePropertiesForClass(className: string): Promise<void> {\n    if (!this.propertiesContainer) return;\n    \n    console.log(`Updating properties for class: ${className}`);\n    \n    // Clear the container - try Obsidian method first, fallback to DOM\n    if ('empty' in this.propertiesContainer && typeof (this.propertiesContainer as any).empty === 'function') {\n      (this.propertiesContainer as any).empty();\n    } else {\n      // Fallback to standard DOM method - use innerHTML for complete cleanup\n      this.propertiesContainer.innerHTML = '';\n    }\n    this.propertyValues.clear();\n    \n    // Get properties for this class\n    this.properties = [];\n    const files = this.app.vault.getMarkdownFiles();\n    \n    console.log(`Scanning ${files.length} files for properties...`);\n    \n    // Find all property definitions related to this class\n    for (const file of files) {\n      const cache = this.app.metadataCache.getFileCache(file);\n      if (cache?.frontmatter) {\n        const instanceClass = cache.frontmatter['exo__Instance_class'];\n        if (instanceClass === '[[exo__Property]]' || instanceClass === 'exo__Property') {\n          const domain = cache.frontmatter['rdfs__domain'];\n          // Check if this property belongs to the current class\n          if (domain === `[[${className}]]` || domain === className || \n              (Array.isArray(domain) && (domain.includes(className) || domain.includes(`[[${className}]]`)))) {\n            const propertyName = file.basename;\n            const label = cache.frontmatter['rdfs__label'] || propertyName;\n            const description = cache.frontmatter['rdfs__comment'] || '';\n            const range = cache.frontmatter['rdfs__range'] || 'string';\n            const isRequired = cache.frontmatter['exo__Property_isRequired'] || false;\n            const options = cache.frontmatter['exo__Property_options'] || null;\n            \n            console.log(`Found property ${propertyName} for class ${className}`);\n            \n            // Determine property type based on range and options\n            let type = this.mapRangeToType(range);\n            if (options && Array.isArray(options)) {\n              type = 'enum';\n            } else if (range === 'select' && options) {\n              type = 'enum';\n            }\n            \n            this.properties.push({\n              name: propertyName,\n              label: label,\n              description: description,\n              type: type,\n              isRequired: isRequired,\n              range: range,\n              options: options\n            });\n          }\n        }\n      }\n    }\n    \n    console.log(`Found ${this.properties.length} properties for class ${className}`);\n    \n    // Add some default properties for common classes\n    if (this.properties.length === 0 && className === 'exo__Asset') {\n      this.properties.push(\n        {\n          name: 'description',\n          label: 'Description',\n          description: 'A brief description of the asset',\n          type: 'text',\n          isRequired: false\n        },\n        {\n          name: 'tags',\n          label: 'Tags',\n          description: 'Tags for categorization',\n          type: 'array',\n          isRequired: false\n        }\n      );\n    }\n    \n    if (this.properties.length === 0) {\n      this.propertiesContainer.createEl(\"p\", {\n        text: \"No specific properties for this class\",\n        cls: \"exocortex-no-properties\"\n      });\n      return;\n    }\n    \n    // Create fields for all properties (including defaults)\n    for (const prop of this.properties) {\n      this.createPropertyField(prop);\n    }\n  }\n  \n  private mapRangeToType(range: string): string {\n    // Map RDF/OWL ranges to input types\n    if (range === 'select') return 'enum';\n    if (range.includes('boolean')) return 'boolean';\n    if (range.includes('date') || range.includes('Date')) return 'date';\n    if (range.includes('integer') || range.includes('decimal') || range.includes('float')) return 'number';\n    if (range.includes('string') && range.includes('[]')) return 'array';\n    if (range.includes('text') || range.includes('Text')) return 'text';\n    return 'string'; // default\n  }\n\n  private createPropertyField(property: any): void {\n    if (!this.propertiesContainer) return;\n    \n    const setting = new Setting(this.propertiesContainer)\n      .setName(property.label + (property.isRequired ? ' *' : ''))\n      .setDesc(property.description);\n    \n    // Create appropriate input based on property type\n    switch (property.type) {\n      case 'enum':\n        this.createEnumField(setting, property);\n        break;\n      case 'boolean':\n        this.createBooleanField(setting, property);\n        break;\n      case 'date':\n        this.createDateField(setting, property);\n        break;\n      case 'number':\n        this.createNumberField(setting, property);\n        break;\n      case 'text':\n        this.createTextAreaField(setting, property);\n        break;\n      case 'array':\n        this.createArrayField(setting, property);\n        break;\n      default:\n        this.createTextField(setting, property);\n    }\n  }\n\n  private createEnumField(setting: Setting, property: any): void {\n    setting.addDropdown(dropdown => {\n      dropdown.addOption('', '-- Select --');\n      for (const option of property.options) {\n        dropdown.addOption(option, option);\n      }\n      dropdown.onChange(value => {\n        if (value) {\n          this.propertyValues.set(property.name, value);\n        } else {\n          this.propertyValues.delete(property.name);\n        }\n      });\n    });\n  }\n\n  private createBooleanField(setting: Setting, property: any): void {\n    setting.addToggle(toggle => {\n      toggle.onChange(value => {\n        this.propertyValues.set(property.name, value);\n      });\n    });\n  }\n\n  private createDateField(setting: Setting, property: any): void {\n    setting.addText(text => {\n      text.setPlaceholder('YYYY-MM-DD')\n        .onChange(value => {\n          if (value) {\n            this.propertyValues.set(property.name, value);\n          } else {\n            this.propertyValues.delete(property.name);\n          }\n        });\n      // Set the input type to date\n      text.inputEl.type = 'date';\n    });\n  }\n\n  private createNumberField(setting: Setting, property: any): void {\n    setting.addText(text => {\n      text.setPlaceholder('Enter number')\n        .onChange(value => {\n          if (value) {\n            const num = parseFloat(value);\n            if (!isNaN(num)) {\n              this.propertyValues.set(property.name, num);\n            }\n          } else {\n            this.propertyValues.delete(property.name);\n          }\n        });\n    });\n  }\n\n  private createTextAreaField(setting: Setting, property: any): void {\n    setting.addTextArea(text => {\n      text.setPlaceholder('Enter ' + property.label.toLowerCase())\n        .onChange(value => {\n          if (value) {\n            this.propertyValues.set(property.name, value);\n          } else {\n            this.propertyValues.delete(property.name);\n          }\n        });\n    });\n  }\n\n  private createArrayField(setting: Setting, property: any): void {\n    setting.addText(text => {\n      text.setPlaceholder('Comma-separated values or [[links]]')\n        .onChange(value => {\n          if (value) {\n            if (value.includes('[[')) {\n              const links = value.match(/\\[\\[([^\\]]+)\\]\\]/g) || [];\n              this.propertyValues.set(property.name, links);\n            } else {\n              const items = value.split(',').map(s => s.trim()).filter(s => s);\n              this.propertyValues.set(property.name, items);\n            }\n          } else {\n            this.propertyValues.delete(property.name);\n          }\n        });\n    });\n  }\n\n  private createTextField(setting: Setting, property: any): void {\n    setting.addText(text => {\n      text.setPlaceholder('Enter ' + property.label.toLowerCase())\n        .onChange(value => {\n          if (value) {\n            this.propertyValues.set(property.name, value);\n          } else {\n            this.propertyValues.delete(property.name);\n          }\n        });\n    });\n  }\n\n  private setupActionButtons(containerEl: HTMLElement): void {\n    new Setting(containerEl)\n      .addButton(btn => btn\n        .setButtonText(\"Create\")\n        .setCta()\n        .onClick(async () => {\n          await this.createAsset();\n        }));\n  }\n\n  private async createAsset(): Promise<void> {\n    try {\n      // Convert property values to plain object\n      const properties: Record<string, any> = {};\n      for (const [key, value] of this.propertyValues) {\n        properties[key] = value;\n      }\n      \n      // Execute use case\n      const response = await this.createAssetUseCase.execute({\n        title: this.assetTitle,\n        className: this.assetClass,\n        ontologyPrefix: this.assetOntology,\n        properties\n      });\n      \n      if (response.success) {\n        new Notice(response.message);\n        this.close();\n      } else {\n        new Notice(`Failed to create asset`);\n      }\n    } catch (error: any) {\n      new Notice(`Error: ${error.message}`);\n    }\n  }\n\n  onClose() {\n    // Clear content - try Obsidian method first, fallback to DOM\n    if ('empty' in this.contentEl && typeof (this.contentEl as any).empty === 'function') {\n      (this.contentEl as any).empty();\n    } else {\n      // Fallback to standard DOM method - use innerHTML for complete cleanup\n      // Try both methods to ensure compatibility\n      this.contentEl.innerHTML = '';\n      // Also try removing children manually as additional fallback\n      while (this.contentEl.firstChild) {\n        this.contentEl.removeChild(this.contentEl.firstChild);\n      }\n    }\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e8d991cbab0e0a56d3ceaa6b842a8aa790fb9a42"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1iofn2y3cl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1iofn2y3cl();
cov_1iofn2y3cl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1iofn2y3cl().s[1]++;
exports.CreateAssetModal = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1iofn2y3cl().s[2]++, require("tslib"));
const obsidian_1 =
/* istanbul ignore next */
(cov_1iofn2y3cl().s[3]++, require("obsidian"));
const DIContainer_1 =
/* istanbul ignore next */
(cov_1iofn2y3cl().s[4]++, require("../../infrastructure/container/DIContainer"));
/**
 * Modal for creating new ExoAssets
 * Presentation layer component that delegates to use cases
 */
class CreateAssetModal extends
/* istanbul ignore next */
(obsidian_1.Modal) {
  constructor(app) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[0]++;
    cov_1iofn2y3cl().s[5]++;
    super(app);
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[6]++;
    this.assetTitle = '';
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[7]++;
    this.assetClass = 'exo__Asset';
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[8]++;
    this.assetOntology = '';
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[9]++;
    this.propertyValues = new Map();
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[10]++;
    this.propertiesContainer = null;
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[11]++;
    this.properties = []; // Store current properties for testing
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[12]++;
    this.container = DIContainer_1.DIContainer.getInstance();
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[13]++;
    this.createAssetUseCase = this.container.getCreateAssetUseCase();
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[14]++;
    this.ontologyRepository = this.container.resolve('IOntologyRepository');
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[15]++;
    this.classViewRepository = this.container.resolve('IClassViewRepository');
  }
  onOpen() {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[1]++;
    cov_1iofn2y3cl().s[16]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[2]++;
      const {
        contentEl
      } =
      /* istanbul ignore next */
      (cov_1iofn2y3cl().s[17]++, this);
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[18]++;
      contentEl.createEl("h2", {
        text: "Create ExoAsset"
      });
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[19]++;
      yield this.setupTitleField(contentEl);
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[20]++;
      yield this.setupClassField(contentEl);
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[21]++;
      yield this.setupOntologyField(contentEl);
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[22]++;
      yield this.setupPropertiesSection(contentEl);
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[23]++;
      this.setupActionButtons(contentEl);
    });
  }
  setupTitleField(containerEl) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[3]++;
    cov_1iofn2y3cl().s[24]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[4]++;
      cov_1iofn2y3cl().s[25]++;
      new obsidian_1.Setting(containerEl).setName("Title").setDesc("Asset title").addText(text => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[5]++;
        cov_1iofn2y3cl().s[26]++;
        return text.setPlaceholder("Enter asset title").setValue(this.assetTitle).onChange(value => {
          /* istanbul ignore next */
          cov_1iofn2y3cl().f[6]++;
          cov_1iofn2y3cl().s[27]++;
          return this.assetTitle = value;
        });
      });
    });
  }
  setupClassField(containerEl) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[7]++;
    cov_1iofn2y3cl().s[28]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[8]++;
      // Get all class files from the vault
      const files =
      /* istanbul ignore next */
      (cov_1iofn2y3cl().s[29]++, this.app.vault.getMarkdownFiles());
      const classes =
      /* istanbul ignore next */
      (cov_1iofn2y3cl().s[30]++, []);
      // Find all class definitions (files with exo__Class frontmatter)
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[31]++;
      for (const file of files) {
        const cache =
        /* istanbul ignore next */
        (cov_1iofn2y3cl().s[32]++, this.app.metadataCache.getFileCache(file));
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[33]++;
        if (
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[2][0]++, cache === null) ||
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[2][1]++, cache === void 0) ?
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[1][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[1][1]++, cache.frontmatter)) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[0][0]++;
          const instanceClass =
          /* istanbul ignore next */
          (cov_1iofn2y3cl().s[34]++, cache.frontmatter['exo__Instance_class']);
          /* istanbul ignore next */
          cov_1iofn2y3cl().s[35]++;
          if (
          /* istanbul ignore next */
          (cov_1iofn2y3cl().b[4][0]++, instanceClass === '[[exo__Class]]') ||
          /* istanbul ignore next */
          (cov_1iofn2y3cl().b[4][1]++, instanceClass === 'exo__Class')) {
            /* istanbul ignore next */
            cov_1iofn2y3cl().b[3][0]++;
            const className =
            /* istanbul ignore next */
            (cov_1iofn2y3cl().s[36]++, file.basename);
            const displayName =
            /* istanbul ignore next */
            (cov_1iofn2y3cl().s[37]++,
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[5][0]++, cache.frontmatter['rdfs__label']) ||
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[5][1]++, className));
            /* istanbul ignore next */
            cov_1iofn2y3cl().s[38]++;
            classes.push({
              className,
              displayName
            });
          } else
          /* istanbul ignore next */
          {
            cov_1iofn2y3cl().b[3][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1iofn2y3cl().b[0][1]++;
        }
      }
      // Add default classes if none found
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[39]++;
      if (classes.length === 0) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[6][0]++;
        cov_1iofn2y3cl().s[40]++;
        classes.push({
          className: 'exo__Asset',
          displayName: 'Asset'
        }, {
          className: 'exo__Class',
          displayName: 'Class'
        }, {
          className: 'exo__Property',
          displayName: 'Property'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1iofn2y3cl().b[6][1]++;
      }
      cov_1iofn2y3cl().s[41]++;
      new obsidian_1.Setting(containerEl).setName("Class").setDesc("Select the type of asset").addDropdown(dropdown => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[9]++;
        cov_1iofn2y3cl().s[42]++;
        for (const classInfo of classes) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().s[43]++;
          dropdown.addOption(classInfo.className, classInfo.displayName);
        }
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[44]++;
        dropdown.setValue(this.assetClass);
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[45]++;
        dropdown.onChange(value => {
          /* istanbul ignore next */
          cov_1iofn2y3cl().f[10]++;
          cov_1iofn2y3cl().s[46]++;
          return tslib_1.__awaiter(this, void 0, void 0, function* () {
            /* istanbul ignore next */
            cov_1iofn2y3cl().f[11]++;
            cov_1iofn2y3cl().s[47]++;
            this.assetClass = value;
            /* istanbul ignore next */
            cov_1iofn2y3cl().s[48]++;
            yield this.updatePropertiesForClass(value);
          });
        });
      });
    });
  }
  setupOntologyField(containerEl) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[12]++;
    cov_1iofn2y3cl().s[49]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[13]++;
      // Get all ontology files from the vault
      const files =
      /* istanbul ignore next */
      (cov_1iofn2y3cl().s[50]++, this.app.vault.getMarkdownFiles());
      const ontologies =
      /* istanbul ignore next */
      (cov_1iofn2y3cl().s[51]++, []);
      // Find all ontology definitions (files starting with ! or having exo__Ontology_prefix)
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[52]++;
      for (const file of files) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[53]++;
        if (file.name.startsWith('!')) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[7][0]++;
          const cache =
          /* istanbul ignore next */
          (cov_1iofn2y3cl().s[54]++, this.app.metadataCache.getFileCache(file));
          /* istanbul ignore next */
          cov_1iofn2y3cl().s[55]++;
          if (
          /* istanbul ignore next */
          (cov_1iofn2y3cl().b[10][0]++, cache === null) ||
          /* istanbul ignore next */
          (cov_1iofn2y3cl().b[10][1]++, cache === void 0) ?
          /* istanbul ignore next */
          (cov_1iofn2y3cl().b[9][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1iofn2y3cl().b[9][1]++, cache.frontmatter)) {
            /* istanbul ignore next */
            cov_1iofn2y3cl().b[8][0]++;
            const prefix =
            /* istanbul ignore next */
            (cov_1iofn2y3cl().s[56]++,
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[11][0]++, cache.frontmatter['exo__Ontology_prefix']) ||
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[11][1]++, file.basename.substring(1)));
            const displayName =
            /* istanbul ignore next */
            (cov_1iofn2y3cl().s[57]++,
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[12][0]++, cache.frontmatter['rdfs__label']) ||
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[12][1]++, prefix));
            /* istanbul ignore next */
            cov_1iofn2y3cl().s[58]++;
            ontologies.push({
              prefix,
              displayName
            });
          } else
          /* istanbul ignore next */
          {
            cov_1iofn2y3cl().b[8][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1iofn2y3cl().b[7][1]++;
        }
      }
      // Add default ontologies if none found
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[59]++;
      if (ontologies.length === 0) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[13][0]++;
        cov_1iofn2y3cl().s[60]++;
        ontologies.push({
          prefix: 'exo',
          displayName: 'Exocortex Core'
        }, {
          prefix: 'ui',
          displayName: 'User Interface'
        }, {
          prefix: 'rdfs',
          displayName: 'RDF Schema'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1iofn2y3cl().b[13][1]++;
      }
      const defaultOntology =
      /* istanbul ignore next */
      (cov_1iofn2y3cl().s[61]++, 'exo');
      // Set default ontology when no ontologies found in vault
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[62]++;
      if (
      /* istanbul ignore next */
      (cov_1iofn2y3cl().b[15][0]++, ontologies.length > 0) &&
      /* istanbul ignore next */
      (cov_1iofn2y3cl().b[15][1]++, !this.assetOntology)) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[14][0]++;
        cov_1iofn2y3cl().s[63]++;
        this.assetOntology = defaultOntology;
      } else
      /* istanbul ignore next */
      {
        cov_1iofn2y3cl().b[14][1]++;
      }
      cov_1iofn2y3cl().s[64]++;
      new obsidian_1.Setting(containerEl).setName("Ontology").setDesc("Select which knowledge graph this asset belongs to").addDropdown(dropdown => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[14]++;
        cov_1iofn2y3cl().s[65]++;
        for (const ontology of ontologies) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().s[66]++;
          dropdown.addOption(ontology.prefix, ontology.displayName);
        }
        // Set default ontology
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[67]++;
        if (
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[17][0]++, defaultOntology) &&
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[17][1]++, ontologies.some(o => {
          /* istanbul ignore next */
          cov_1iofn2y3cl().f[15]++;
          cov_1iofn2y3cl().s[68]++;
          return o.prefix === defaultOntology;
        }))) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[16][0]++;
          cov_1iofn2y3cl().s[69]++;
          this.assetOntology = defaultOntology;
          /* istanbul ignore next */
          cov_1iofn2y3cl().s[70]++;
          dropdown.setValue(defaultOntology);
        } else {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[16][1]++;
          cov_1iofn2y3cl().s[71]++;
          if (ontologies.length > 0) {
            /* istanbul ignore next */
            cov_1iofn2y3cl().b[18][0]++;
            cov_1iofn2y3cl().s[72]++;
            this.assetOntology = ontologies[0].prefix;
            /* istanbul ignore next */
            cov_1iofn2y3cl().s[73]++;
            dropdown.setValue(ontologies[0].prefix);
          } else
          /* istanbul ignore next */
          {
            cov_1iofn2y3cl().b[18][1]++;
          }
        }
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[74]++;
        dropdown.onChange(value => {
          /* istanbul ignore next */
          cov_1iofn2y3cl().f[16]++;
          cov_1iofn2y3cl().s[75]++;
          this.assetOntology = value;
        });
      });
    });
  }
  setupPropertiesSection(containerEl) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[17]++;
    cov_1iofn2y3cl().s[76]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[18]++;
      cov_1iofn2y3cl().s[77]++;
      containerEl.createEl("h3", {
        text: "Properties",
        cls: "exocortex-properties-header"
      });
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[78]++;
      this.propertiesContainer = containerEl.createDiv({
        cls: "exocortex-properties-container"
      });
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[79]++;
      yield this.updatePropertiesForClass(this.assetClass);
    });
  }
  updatePropertiesForClass(className) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[19]++;
    cov_1iofn2y3cl().s[80]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[20]++;
      cov_1iofn2y3cl().s[81]++;
      if (!this.propertiesContainer) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[19][0]++;
        cov_1iofn2y3cl().s[82]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1iofn2y3cl().b[19][1]++;
      }
      cov_1iofn2y3cl().s[83]++;
      console.log(`Updating properties for class: ${className}`);
      // Clear the container - try Obsidian method first, fallback to DOM
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[84]++;
      if (
      /* istanbul ignore next */
      (cov_1iofn2y3cl().b[21][0]++, 'empty' in this.propertiesContainer) &&
      /* istanbul ignore next */
      (cov_1iofn2y3cl().b[21][1]++, typeof this.propertiesContainer.empty === 'function')) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[20][0]++;
        cov_1iofn2y3cl().s[85]++;
        this.propertiesContainer.empty();
      } else {
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[20][1]++;
        cov_1iofn2y3cl().s[86]++;
        // Fallback to standard DOM method - use innerHTML for complete cleanup
        this.propertiesContainer.innerHTML = '';
      }
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[87]++;
      this.propertyValues.clear();
      // Get properties for this class
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[88]++;
      this.properties = [];
      const files =
      /* istanbul ignore next */
      (cov_1iofn2y3cl().s[89]++, this.app.vault.getMarkdownFiles());
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[90]++;
      console.log(`Scanning ${files.length} files for properties...`);
      // Find all property definitions related to this class
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[91]++;
      for (const file of files) {
        const cache =
        /* istanbul ignore next */
        (cov_1iofn2y3cl().s[92]++, this.app.metadataCache.getFileCache(file));
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[93]++;
        if (
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[24][0]++, cache === null) ||
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[24][1]++, cache === void 0) ?
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[23][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1iofn2y3cl().b[23][1]++, cache.frontmatter)) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[22][0]++;
          const instanceClass =
          /* istanbul ignore next */
          (cov_1iofn2y3cl().s[94]++, cache.frontmatter['exo__Instance_class']);
          /* istanbul ignore next */
          cov_1iofn2y3cl().s[95]++;
          if (
          /* istanbul ignore next */
          (cov_1iofn2y3cl().b[26][0]++, instanceClass === '[[exo__Property]]') ||
          /* istanbul ignore next */
          (cov_1iofn2y3cl().b[26][1]++, instanceClass === 'exo__Property')) {
            /* istanbul ignore next */
            cov_1iofn2y3cl().b[25][0]++;
            const domain =
            /* istanbul ignore next */
            (cov_1iofn2y3cl().s[96]++, cache.frontmatter['rdfs__domain']);
            // Check if this property belongs to the current class
            /* istanbul ignore next */
            cov_1iofn2y3cl().s[97]++;
            if (
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[28][0]++, domain === `[[${className}]]`) ||
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[28][1]++, domain === className) ||
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[28][2]++, Array.isArray(domain)) && (
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[28][3]++, domain.includes(className)) ||
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[28][4]++, domain.includes(`[[${className}]]`)))) {
              /* istanbul ignore next */
              cov_1iofn2y3cl().b[27][0]++;
              const propertyName =
              /* istanbul ignore next */
              (cov_1iofn2y3cl().s[98]++, file.basename);
              const label =
              /* istanbul ignore next */
              (cov_1iofn2y3cl().s[99]++,
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[29][0]++, cache.frontmatter['rdfs__label']) ||
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[29][1]++, propertyName));
              const description =
              /* istanbul ignore next */
              (cov_1iofn2y3cl().s[100]++,
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[30][0]++, cache.frontmatter['rdfs__comment']) ||
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[30][1]++, ''));
              const range =
              /* istanbul ignore next */
              (cov_1iofn2y3cl().s[101]++,
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[31][0]++, cache.frontmatter['rdfs__range']) ||
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[31][1]++, 'string'));
              const isRequired =
              /* istanbul ignore next */
              (cov_1iofn2y3cl().s[102]++,
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[32][0]++, cache.frontmatter['exo__Property_isRequired']) ||
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[32][1]++, false));
              const options =
              /* istanbul ignore next */
              (cov_1iofn2y3cl().s[103]++,
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[33][0]++, cache.frontmatter['exo__Property_options']) ||
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[33][1]++, null));
              /* istanbul ignore next */
              cov_1iofn2y3cl().s[104]++;
              console.log(`Found property ${propertyName} for class ${className}`);
              // Determine property type based on range and options
              let type =
              /* istanbul ignore next */
              (cov_1iofn2y3cl().s[105]++, this.mapRangeToType(range));
              /* istanbul ignore next */
              cov_1iofn2y3cl().s[106]++;
              if (
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[35][0]++, options) &&
              /* istanbul ignore next */
              (cov_1iofn2y3cl().b[35][1]++, Array.isArray(options))) {
                /* istanbul ignore next */
                cov_1iofn2y3cl().b[34][0]++;
                cov_1iofn2y3cl().s[107]++;
                type = 'enum';
              } else {
                /* istanbul ignore next */
                cov_1iofn2y3cl().b[34][1]++;
                cov_1iofn2y3cl().s[108]++;
                if (
                /* istanbul ignore next */
                (cov_1iofn2y3cl().b[37][0]++, range === 'select') &&
                /* istanbul ignore next */
                (cov_1iofn2y3cl().b[37][1]++, options)) {
                  /* istanbul ignore next */
                  cov_1iofn2y3cl().b[36][0]++;
                  cov_1iofn2y3cl().s[109]++;
                  type = 'enum';
                } else
                /* istanbul ignore next */
                {
                  cov_1iofn2y3cl().b[36][1]++;
                }
              }
              /* istanbul ignore next */
              cov_1iofn2y3cl().s[110]++;
              this.properties.push({
                name: propertyName,
                label: label,
                description: description,
                type: type,
                isRequired: isRequired,
                range: range,
                options: options
              });
            } else
            /* istanbul ignore next */
            {
              cov_1iofn2y3cl().b[27][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_1iofn2y3cl().b[25][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1iofn2y3cl().b[22][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[111]++;
      console.log(`Found ${this.properties.length} properties for class ${className}`);
      // Add some default properties for common classes
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[112]++;
      if (
      /* istanbul ignore next */
      (cov_1iofn2y3cl().b[39][0]++, this.properties.length === 0) &&
      /* istanbul ignore next */
      (cov_1iofn2y3cl().b[39][1]++, className === 'exo__Asset')) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[38][0]++;
        cov_1iofn2y3cl().s[113]++;
        this.properties.push({
          name: 'description',
          label: 'Description',
          description: 'A brief description of the asset',
          type: 'text',
          isRequired: false
        }, {
          name: 'tags',
          label: 'Tags',
          description: 'Tags for categorization',
          type: 'array',
          isRequired: false
        });
      } else
      /* istanbul ignore next */
      {
        cov_1iofn2y3cl().b[38][1]++;
      }
      cov_1iofn2y3cl().s[114]++;
      if (this.properties.length === 0) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[40][0]++;
        cov_1iofn2y3cl().s[115]++;
        this.propertiesContainer.createEl("p", {
          text: "No specific properties for this class",
          cls: "exocortex-no-properties"
        });
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[116]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1iofn2y3cl().b[40][1]++;
      }
      // Create fields for all properties (including defaults)
      cov_1iofn2y3cl().s[117]++;
      for (const prop of this.properties) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[118]++;
        this.createPropertyField(prop);
      }
    });
  }
  mapRangeToType(range) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[21]++;
    cov_1iofn2y3cl().s[119]++;
    // Map RDF/OWL ranges to input types
    if (range === 'select') {
      /* istanbul ignore next */
      cov_1iofn2y3cl().b[41][0]++;
      cov_1iofn2y3cl().s[120]++;
      return 'enum';
    } else
    /* istanbul ignore next */
    {
      cov_1iofn2y3cl().b[41][1]++;
    }
    cov_1iofn2y3cl().s[121]++;
    if (range.includes('boolean')) {
      /* istanbul ignore next */
      cov_1iofn2y3cl().b[42][0]++;
      cov_1iofn2y3cl().s[122]++;
      return 'boolean';
    } else
    /* istanbul ignore next */
    {
      cov_1iofn2y3cl().b[42][1]++;
    }
    cov_1iofn2y3cl().s[123]++;
    if (
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[44][0]++, range.includes('date')) ||
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[44][1]++, range.includes('Date'))) {
      /* istanbul ignore next */
      cov_1iofn2y3cl().b[43][0]++;
      cov_1iofn2y3cl().s[124]++;
      return 'date';
    } else
    /* istanbul ignore next */
    {
      cov_1iofn2y3cl().b[43][1]++;
    }
    cov_1iofn2y3cl().s[125]++;
    if (
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[46][0]++, range.includes('integer')) ||
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[46][1]++, range.includes('decimal')) ||
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[46][2]++, range.includes('float'))) {
      /* istanbul ignore next */
      cov_1iofn2y3cl().b[45][0]++;
      cov_1iofn2y3cl().s[126]++;
      return 'number';
    } else
    /* istanbul ignore next */
    {
      cov_1iofn2y3cl().b[45][1]++;
    }
    cov_1iofn2y3cl().s[127]++;
    if (
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[48][0]++, range.includes('string')) &&
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[48][1]++, range.includes('[]'))) {
      /* istanbul ignore next */
      cov_1iofn2y3cl().b[47][0]++;
      cov_1iofn2y3cl().s[128]++;
      return 'array';
    } else
    /* istanbul ignore next */
    {
      cov_1iofn2y3cl().b[47][1]++;
    }
    cov_1iofn2y3cl().s[129]++;
    if (
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[50][0]++, range.includes('text')) ||
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[50][1]++, range.includes('Text'))) {
      /* istanbul ignore next */
      cov_1iofn2y3cl().b[49][0]++;
      cov_1iofn2y3cl().s[130]++;
      return 'text';
    } else
    /* istanbul ignore next */
    {
      cov_1iofn2y3cl().b[49][1]++;
    }
    cov_1iofn2y3cl().s[131]++;
    return 'string'; // default
  }
  createPropertyField(property) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[22]++;
    cov_1iofn2y3cl().s[132]++;
    if (!this.propertiesContainer) {
      /* istanbul ignore next */
      cov_1iofn2y3cl().b[51][0]++;
      cov_1iofn2y3cl().s[133]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1iofn2y3cl().b[51][1]++;
    }
    const setting =
    /* istanbul ignore next */
    (cov_1iofn2y3cl().s[134]++, new obsidian_1.Setting(this.propertiesContainer).setName(property.label + (property.isRequired ?
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[52][0]++, ' *') :
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[52][1]++, ''))).setDesc(property.description));
    // Create appropriate input based on property type
    /* istanbul ignore next */
    cov_1iofn2y3cl().s[135]++;
    switch (property.type) {
      case 'enum':
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[53][0]++;
        cov_1iofn2y3cl().s[136]++;
        this.createEnumField(setting, property);
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[137]++;
        break;
      case 'boolean':
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[53][1]++;
        cov_1iofn2y3cl().s[138]++;
        this.createBooleanField(setting, property);
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[139]++;
        break;
      case 'date':
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[53][2]++;
        cov_1iofn2y3cl().s[140]++;
        this.createDateField(setting, property);
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[141]++;
        break;
      case 'number':
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[53][3]++;
        cov_1iofn2y3cl().s[142]++;
        this.createNumberField(setting, property);
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[143]++;
        break;
      case 'text':
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[53][4]++;
        cov_1iofn2y3cl().s[144]++;
        this.createTextAreaField(setting, property);
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[145]++;
        break;
      case 'array':
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[53][5]++;
        cov_1iofn2y3cl().s[146]++;
        this.createArrayField(setting, property);
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[147]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1iofn2y3cl().b[53][6]++;
        cov_1iofn2y3cl().s[148]++;
        this.createTextField(setting, property);
    }
  }
  createEnumField(setting, property) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[23]++;
    cov_1iofn2y3cl().s[149]++;
    setting.addDropdown(dropdown => {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[24]++;
      cov_1iofn2y3cl().s[150]++;
      dropdown.addOption('', '-- Select --');
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[151]++;
      for (const option of property.options) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[152]++;
        dropdown.addOption(option, option);
      }
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[153]++;
      dropdown.onChange(value => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[25]++;
        cov_1iofn2y3cl().s[154]++;
        if (value) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[54][0]++;
          cov_1iofn2y3cl().s[155]++;
          this.propertyValues.set(property.name, value);
        } else {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[54][1]++;
          cov_1iofn2y3cl().s[156]++;
          this.propertyValues.delete(property.name);
        }
      });
    });
  }
  createBooleanField(setting, property) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[26]++;
    cov_1iofn2y3cl().s[157]++;
    setting.addToggle(toggle => {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[27]++;
      cov_1iofn2y3cl().s[158]++;
      toggle.onChange(value => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[28]++;
        cov_1iofn2y3cl().s[159]++;
        this.propertyValues.set(property.name, value);
      });
    });
  }
  createDateField(setting, property) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[29]++;
    cov_1iofn2y3cl().s[160]++;
    setting.addText(text => {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[30]++;
      cov_1iofn2y3cl().s[161]++;
      text.setPlaceholder('YYYY-MM-DD').onChange(value => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[31]++;
        cov_1iofn2y3cl().s[162]++;
        if (value) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[55][0]++;
          cov_1iofn2y3cl().s[163]++;
          this.propertyValues.set(property.name, value);
        } else {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[55][1]++;
          cov_1iofn2y3cl().s[164]++;
          this.propertyValues.delete(property.name);
        }
      });
      // Set the input type to date
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[165]++;
      text.inputEl.type = 'date';
    });
  }
  createNumberField(setting, property) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[32]++;
    cov_1iofn2y3cl().s[166]++;
    setting.addText(text => {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[33]++;
      cov_1iofn2y3cl().s[167]++;
      text.setPlaceholder('Enter number').onChange(value => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[34]++;
        cov_1iofn2y3cl().s[168]++;
        if (value) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[56][0]++;
          const num =
          /* istanbul ignore next */
          (cov_1iofn2y3cl().s[169]++, parseFloat(value));
          /* istanbul ignore next */
          cov_1iofn2y3cl().s[170]++;
          if (!isNaN(num)) {
            /* istanbul ignore next */
            cov_1iofn2y3cl().b[57][0]++;
            cov_1iofn2y3cl().s[171]++;
            this.propertyValues.set(property.name, num);
          } else
          /* istanbul ignore next */
          {
            cov_1iofn2y3cl().b[57][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[56][1]++;
          cov_1iofn2y3cl().s[172]++;
          this.propertyValues.delete(property.name);
        }
      });
    });
  }
  createTextAreaField(setting, property) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[35]++;
    cov_1iofn2y3cl().s[173]++;
    setting.addTextArea(text => {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[36]++;
      cov_1iofn2y3cl().s[174]++;
      text.setPlaceholder('Enter ' + property.label.toLowerCase()).onChange(value => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[37]++;
        cov_1iofn2y3cl().s[175]++;
        if (value) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[58][0]++;
          cov_1iofn2y3cl().s[176]++;
          this.propertyValues.set(property.name, value);
        } else {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[58][1]++;
          cov_1iofn2y3cl().s[177]++;
          this.propertyValues.delete(property.name);
        }
      });
    });
  }
  createArrayField(setting, property) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[38]++;
    cov_1iofn2y3cl().s[178]++;
    setting.addText(text => {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[39]++;
      cov_1iofn2y3cl().s[179]++;
      text.setPlaceholder('Comma-separated values or [[links]]').onChange(value => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[40]++;
        cov_1iofn2y3cl().s[180]++;
        if (value) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[59][0]++;
          cov_1iofn2y3cl().s[181]++;
          if (value.includes('[[')) {
            /* istanbul ignore next */
            cov_1iofn2y3cl().b[60][0]++;
            const links =
            /* istanbul ignore next */
            (cov_1iofn2y3cl().s[182]++,
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[61][0]++, value.match(/\[\[([^\]]+)\]\]/g)) ||
            /* istanbul ignore next */
            (cov_1iofn2y3cl().b[61][1]++, []));
            /* istanbul ignore next */
            cov_1iofn2y3cl().s[183]++;
            this.propertyValues.set(property.name, links);
          } else {
            /* istanbul ignore next */
            cov_1iofn2y3cl().b[60][1]++;
            const items =
            /* istanbul ignore next */
            (cov_1iofn2y3cl().s[184]++, value.split(',').map(s => {
              /* istanbul ignore next */
              cov_1iofn2y3cl().f[41]++;
              cov_1iofn2y3cl().s[185]++;
              return s.trim();
            }).filter(s => {
              /* istanbul ignore next */
              cov_1iofn2y3cl().f[42]++;
              cov_1iofn2y3cl().s[186]++;
              return s;
            }));
            /* istanbul ignore next */
            cov_1iofn2y3cl().s[187]++;
            this.propertyValues.set(property.name, items);
          }
        } else {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[59][1]++;
          cov_1iofn2y3cl().s[188]++;
          this.propertyValues.delete(property.name);
        }
      });
    });
  }
  createTextField(setting, property) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[43]++;
    cov_1iofn2y3cl().s[189]++;
    setting.addText(text => {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[44]++;
      cov_1iofn2y3cl().s[190]++;
      text.setPlaceholder('Enter ' + property.label.toLowerCase()).onChange(value => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[45]++;
        cov_1iofn2y3cl().s[191]++;
        if (value) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[62][0]++;
          cov_1iofn2y3cl().s[192]++;
          this.propertyValues.set(property.name, value);
        } else {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[62][1]++;
          cov_1iofn2y3cl().s[193]++;
          this.propertyValues.delete(property.name);
        }
      });
    });
  }
  setupActionButtons(containerEl) {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[46]++;
    cov_1iofn2y3cl().s[194]++;
    new obsidian_1.Setting(containerEl).addButton(btn => {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[47]++;
      cov_1iofn2y3cl().s[195]++;
      return btn.setButtonText("Create").setCta().onClick(() => {
        /* istanbul ignore next */
        cov_1iofn2y3cl().f[48]++;
        cov_1iofn2y3cl().s[196]++;
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_1iofn2y3cl().f[49]++;
          cov_1iofn2y3cl().s[197]++;
          yield this.createAsset();
        });
      });
    });
  }
  createAsset() {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[50]++;
    cov_1iofn2y3cl().s[198]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1iofn2y3cl().f[51]++;
      cov_1iofn2y3cl().s[199]++;
      try {
        // Convert property values to plain object
        const properties =
        /* istanbul ignore next */
        (cov_1iofn2y3cl().s[200]++, {});
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[201]++;
        for (const [key, value] of this.propertyValues) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().s[202]++;
          properties[key] = value;
        }
        // Execute use case
        const response =
        /* istanbul ignore next */
        (cov_1iofn2y3cl().s[203]++, yield this.createAssetUseCase.execute({
          title: this.assetTitle,
          className: this.assetClass,
          ontologyPrefix: this.assetOntology,
          properties
        }));
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[204]++;
        if (response.success) {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[63][0]++;
          cov_1iofn2y3cl().s[205]++;
          new obsidian_1.Notice(response.message);
          /* istanbul ignore next */
          cov_1iofn2y3cl().s[206]++;
          this.close();
        } else {
          /* istanbul ignore next */
          cov_1iofn2y3cl().b[63][1]++;
          cov_1iofn2y3cl().s[207]++;
          new obsidian_1.Notice(`Failed to create asset`);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[208]++;
        new obsidian_1.Notice(`Error: ${error.message}`);
      }
    });
  }
  onClose() {
    /* istanbul ignore next */
    cov_1iofn2y3cl().f[52]++;
    cov_1iofn2y3cl().s[209]++;
    // Clear content - try Obsidian method first, fallback to DOM
    if (
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[65][0]++, 'empty' in this.contentEl) &&
    /* istanbul ignore next */
    (cov_1iofn2y3cl().b[65][1]++, typeof this.contentEl.empty === 'function')) {
      /* istanbul ignore next */
      cov_1iofn2y3cl().b[64][0]++;
      cov_1iofn2y3cl().s[210]++;
      this.contentEl.empty();
    } else {
      /* istanbul ignore next */
      cov_1iofn2y3cl().b[64][1]++;
      cov_1iofn2y3cl().s[211]++;
      // Fallback to standard DOM method - use innerHTML for complete cleanup
      // Try both methods to ensure compatibility
      this.contentEl.innerHTML = '';
      // Also try removing children manually as additional fallback
      /* istanbul ignore next */
      cov_1iofn2y3cl().s[212]++;
      while (this.contentEl.firstChild) {
        /* istanbul ignore next */
        cov_1iofn2y3cl().s[213]++;
        this.contentEl.removeChild(this.contentEl.firstChild);
      }
    }
  }
}
/* istanbul ignore next */
cov_1iofn2y3cl().s[214]++;
exports.CreateAssetModal = CreateAssetModal;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,