{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/components/MobileUIComponents.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/components/MobileUIComponents.ts"],"sourcesContent":["import { PlatformDetector } from \"../../infrastructure/utils/PlatformDetector\";\nimport { MobilePerformanceOptimizer } from \"../../infrastructure/optimizers/MobilePerformanceOptimizer\";\n\n/**\n * Touch Gesture Types\n */\nexport type TouchGestureType =\n  | \"tap\"\n  | \"doubletap\"\n  | \"longtap\"\n  | \"swipe\"\n  | \"pinch\";\n\n/**\n * Touch Event Handler\n */\nexport interface TouchEventHandler {\n  onTap?: (event: TouchEvent) => void;\n  onDoubleTap?: (event: TouchEvent) => void;\n  onLongTap?: (event: TouchEvent) => void;\n  onSwipeLeft?: (event: TouchEvent) => void;\n  onSwipeRight?: (event: TouchEvent) => void;\n  onSwipeUp?: (event: TouchEvent) => void;\n  onSwipeDown?: (event: TouchEvent) => void;\n  onPinch?: (event: TouchEvent, scale: number) => void;\n}\n\n/**\n * Mobile Button Configuration\n */\nexport interface MobileButtonConfig {\n  text: string;\n  icon?: string;\n  variant?: \"primary\" | \"secondary\" | \"danger\" | \"ghost\";\n  size?: \"small\" | \"medium\" | \"large\";\n  disabled?: boolean;\n  loading?: boolean;\n  fullWidth?: boolean;\n  hapticFeedback?: boolean;\n  accessibilityLabel?: string;\n}\n\n/**\n * Mobile List Item Configuration\n */\nexport interface MobileListItemConfig {\n  title: string;\n  subtitle?: string;\n  icon?: string;\n  rightText?: string;\n  rightIcon?: string;\n  showChevron?: boolean;\n  swipeable?: boolean;\n  swipeActions?: Array<{\n    text: string;\n    icon?: string;\n    color?: string;\n    action: () => void;\n  }>;\n}\n\n/**\n * Mobile Input Configuration\n */\nexport interface MobileInputConfig {\n  placeholder?: string;\n  type?: \"text\" | \"password\" | \"email\" | \"number\" | \"search\";\n  value?: string;\n  disabled?: boolean;\n  autoFocus?: boolean;\n  spellCheck?: boolean;\n  autoCorrect?: boolean;\n  accessibilityLabel?: string;\n  clearButton?: boolean;\n}\n\n/**\n * Touch Gesture Recognizer\n */\nexport class TouchGestureRecognizer {\n  private element: HTMLElement;\n  private handlers: TouchEventHandler;\n  private touchStartTime = 0;\n  private touchStartPos = { x: 0, y: 0 };\n  private lastTapTime = 0;\n  private touchCount = 0;\n  private longTapTimer?: NodeJS.Timeout;\n  private isTracking = false;\n\n  constructor(element: HTMLElement, handlers: TouchEventHandler) {\n    this.element = element;\n    this.handlers = handlers;\n    this.setupEventListeners();\n  }\n\n  private setupEventListeners(): void {\n    this.element.addEventListener(\n      \"touchstart\",\n      this.handleTouchStart.bind(this),\n      { passive: false },\n    );\n    this.element.addEventListener(\n      \"touchmove\",\n      this.handleTouchMove.bind(this),\n      { passive: false },\n    );\n    this.element.addEventListener(\"touchend\", this.handleTouchEnd.bind(this), {\n      passive: false,\n    });\n    this.element.addEventListener(\n      \"touchcancel\",\n      this.handleTouchCancel.bind(this),\n    );\n  }\n\n  private handleTouchStart(event: TouchEvent): void {\n    if (event.touches.length > 2) return; // Only handle 1-2 finger gestures\n\n    this.isTracking = true;\n    this.touchStartTime = Date.now();\n    this.touchCount = event.touches.length;\n\n    if (event.touches[0]) {\n      this.touchStartPos = {\n        x: event.touches[0].clientX,\n        y: event.touches[0].clientY,\n      };\n    }\n\n    // Setup long tap detection\n    if (this.handlers.onLongTap && event.touches.length === 1) {\n      this.longTapTimer = setTimeout(() => {\n        if (this.isTracking) {\n          this.handlers.onLongTap!(event);\n          this.provideTactileFeedback();\n        }\n      }, 500);\n    }\n  }\n\n  private handleTouchMove(event: TouchEvent): void {\n    if (!this.isTracking || !event.touches[0]) return;\n\n    const currentPos = {\n      x: event.touches[0].clientX,\n      y: event.touches[0].clientY,\n    };\n\n    const deltaX = Math.abs(currentPos.x - this.touchStartPos.x);\n    const deltaY = Math.abs(currentPos.y - this.touchStartPos.y);\n\n    // Cancel long tap if finger moves too much\n    if ((deltaX > 10 || deltaY > 10) && this.longTapTimer) {\n      clearTimeout(this.longTapTimer);\n      this.longTapTimer = undefined;\n    }\n  }\n\n  private handleTouchEnd(event: TouchEvent): void {\n    if (!this.isTracking) return;\n\n    const touchDuration = Date.now() - this.touchStartTime;\n    const currentTime = Date.now();\n\n    if (this.longTapTimer) {\n      clearTimeout(this.longTapTimer);\n      this.longTapTimer = undefined;\n    }\n\n    if (event.changedTouches[0] && this.touchCount === 1) {\n      const endPos = {\n        x: event.changedTouches[0].clientX,\n        y: event.changedTouches[0].clientY,\n      };\n\n      const deltaX = endPos.x - this.touchStartPos.x;\n      const deltaY = endPos.y - this.touchStartPos.y;\n      const absX = Math.abs(deltaX);\n      const absY = Math.abs(deltaY);\n\n      // Determine gesture type\n      if (absX < 10 && absY < 10 && touchDuration < 500) {\n        // Tap gesture\n        const timeSinceLastTap = currentTime - this.lastTapTime;\n\n        if (timeSinceLastTap < 300 && this.handlers.onDoubleTap) {\n          this.handlers.onDoubleTap(event);\n          this.provideTactileFeedback();\n        } else if (this.handlers.onTap) {\n          this.handlers.onTap(event);\n          this.provideTactileFeedback();\n        }\n\n        this.lastTapTime = currentTime;\n      } else if (absX > 50 || absY > 50) {\n        // Swipe gesture\n        if (absX > absY) {\n          // Horizontal swipe\n          if (deltaX > 0 && this.handlers.onSwipeRight) {\n            this.handlers.onSwipeRight(event);\n          } else if (deltaX < 0 && this.handlers.onSwipeLeft) {\n            this.handlers.onSwipeLeft(event);\n          }\n        } else {\n          // Vertical swipe\n          if (deltaY > 0 && this.handlers.onSwipeDown) {\n            this.handlers.onSwipeDown(event);\n          } else if (deltaY < 0 && this.handlers.onSwipeUp) {\n            this.handlers.onSwipeUp(event);\n          }\n        }\n        this.provideTactileFeedback();\n      }\n    }\n\n    this.isTracking = false;\n  }\n\n  private handleTouchCancel(): void {\n    if (this.longTapTimer) {\n      clearTimeout(this.longTapTimer);\n      this.longTapTimer = undefined;\n    }\n    this.isTracking = false;\n  }\n\n  private provideTactileFeedback(): void {\n    if (\"vibrate\" in navigator && PlatformDetector.isMobile()) {\n      navigator.vibrate(10); // Short haptic feedback\n    }\n  }\n\n  public destroy(): void {\n    this.element.removeEventListener(\n      \"touchstart\",\n      this.handleTouchStart.bind(this),\n    );\n    this.element.removeEventListener(\n      \"touchmove\",\n      this.handleTouchMove.bind(this),\n    );\n    this.element.removeEventListener(\n      \"touchend\",\n      this.handleTouchEnd.bind(this),\n    );\n    this.element.removeEventListener(\n      \"touchcancel\",\n      this.handleTouchCancel.bind(this),\n    );\n\n    if (this.longTapTimer) {\n      clearTimeout(this.longTapTimer);\n    }\n  }\n}\n\n/**\n * Mobile UI Components Factory\n */\nexport class MobileUIComponents {\n  private performanceOptimizer?: MobilePerformanceOptimizer;\n\n  constructor(performanceOptimizer?: MobilePerformanceOptimizer) {\n    this.performanceOptimizer = performanceOptimizer;\n  }\n\n  /**\n   * Create a mobile-optimized button\n   */\n  public createButton(\n    container: HTMLElement,\n    config: MobileButtonConfig,\n    onClick: () => void,\n  ): HTMLElement {\n    const button = container.createEl(\"button\", {\n      cls: `exocortex-mobile-button exocortex-mobile-button--${config.variant || \"primary\"} exocortex-mobile-button--${config.size || \"medium\"}`,\n      attr: {\n        \"aria-label\": config.accessibilityLabel || config.text,\n        disabled: config.disabled ? \"true\" : \"false\",\n      },\n    });\n\n    if (config.fullWidth) {\n      button.addClass(\"exocortex-mobile-button--full-width\");\n    }\n\n    if (config.loading) {\n      button.addClass(\"exocortex-mobile-button--loading\");\n      const spinner = button.createEl(\"span\", {\n        cls: \"exocortex-mobile-spinner\",\n      });\n      spinner.innerHTML = \"⟳\";\n    }\n\n    if (config.icon) {\n      const icon = button.createEl(\"span\", {\n        cls: \"exocortex-mobile-button-icon\",\n      });\n      icon.innerHTML = config.icon;\n    }\n\n    const text = button.createEl(\"span\", {\n      cls: \"exocortex-mobile-button-text\",\n      text: config.text,\n    });\n\n    // Add touch gesture support\n    new TouchGestureRecognizer(button, {\n      onTap: (event) => {\n        if (!config.disabled && !config.loading) {\n          onClick();\n        }\n      },\n    });\n\n    // Add press animation\n    button.addEventListener(\"touchstart\", () => {\n      if (!config.disabled) {\n        button.addClass(\"exocortex-mobile-button--pressed\");\n      }\n    });\n\n    button.addEventListener(\"touchend\", () => {\n      button.removeClass(\"exocortex-mobile-button--pressed\");\n    });\n\n    return button;\n  }\n\n  /**\n   * Create a mobile-optimized list\n   */\n  public createList(\n    container: HTMLElement,\n    items: MobileListItemConfig[],\n    onItemClick?: (item: MobileListItemConfig, index: number) => void,\n  ): HTMLElement {\n    const list = container.createEl(\"div\", { cls: \"exocortex-mobile-list\" });\n\n    const shouldUseVirtualScrolling =\n      this.performanceOptimizer &&\n      PlatformDetector.shouldUseVirtualScrolling(items.length);\n\n    if (shouldUseVirtualScrolling) {\n      return this.createVirtualizedList(list, items, onItemClick);\n    }\n\n    items.forEach((item, index) => {\n      const listItem = this.createListItem(list, item, index, onItemClick);\n    });\n\n    return list;\n  }\n\n  /**\n   * Create a mobile-optimized input field\n   */\n  public createInput(\n    container: HTMLElement,\n    config: MobileInputConfig,\n    onChange?: (value: string) => void,\n  ): HTMLElement {\n    const inputContainer = container.createEl(\"div\", {\n      cls: \"exocortex-mobile-input-container\",\n    });\n\n    const input = inputContainer.createEl(\"input\", {\n      cls: \"exocortex-mobile-input\",\n      attr: {\n        type: config.type || \"text\",\n        placeholder: config.placeholder || \"\",\n        value: config.value || \"\",\n        \"aria-label\": config.accessibilityLabel || config.placeholder || \"\",\n        autocomplete: config.type === \"password\" ? \"current-password\" : \"off\",\n        spellcheck: config.spellCheck !== false ? \"true\" : \"false\",\n        autocorrect: config.autoCorrect !== false ? \"on\" : \"off\",\n        autocapitalize: config.type === \"email\" ? \"off\" : \"sentences\",\n      },\n    });\n\n    if (config.disabled) {\n      input.setAttribute(\"disabled\", \"true\");\n      inputContainer.addClass(\"exocortex-mobile-input-container--disabled\");\n    }\n\n    if (config.autoFocus && PlatformDetector.isMobile()) {\n      // Delay autofocus on mobile to prevent keyboard issues\n      setTimeout(() => input.focus(), 300);\n    } else if (config.autoFocus) {\n      input.focus();\n    }\n\n    // Add clear button for mobile\n    if (config.clearButton && PlatformDetector.isMobile()) {\n      const clearButton = inputContainer.createEl(\"button\", {\n        cls: \"exocortex-mobile-input-clear\",\n        attr: { \"aria-label\": \"Clear input\" },\n      });\n      clearButton.innerHTML = \"✕\";\n\n      clearButton.addEventListener(\"click\", () => {\n        input.value = \"\";\n        input.focus();\n        if (onChange) onChange(\"\");\n      });\n\n      // Show/hide clear button based on input content\n      const toggleClearButton = () => {\n        clearButton.style.display = input.value ? \"block\" : \"none\";\n      };\n\n      input.addEventListener(\"input\", toggleClearButton);\n      toggleClearButton(); // Initial state\n    }\n\n    if (onChange) {\n      const debouncedOnChange =\n        this.performanceOptimizer?.debounce(onChange, 300) || onChange;\n\n      input.addEventListener(\"input\", (e) => {\n        const target = e.target as HTMLInputElement;\n        debouncedOnChange(target.value);\n      });\n    }\n\n    return inputContainer;\n  }\n\n  /**\n   * Create a mobile-optimized modal\n   */\n  public createModal(\n    title: string,\n    content: HTMLElement,\n    options?: {\n      showCloseButton?: boolean;\n      swipeToClose?: boolean;\n      fullScreen?: boolean;\n      onClose?: () => void;\n    },\n  ): HTMLElement {\n    const modal = document.body.createEl(\"div\", {\n      cls: \"exocortex-mobile-modal-overlay\",\n    });\n\n    const modalContent = modal.createEl(\"div\", {\n      cls: `exocortex-mobile-modal ${options?.fullScreen ? \"exocortex-mobile-modal--fullscreen\" : \"\"}`,\n    });\n\n    // Modal header\n    const header = modalContent.createEl(\"div\", {\n      cls: \"exocortex-mobile-modal-header\",\n    });\n\n    if (options?.showCloseButton !== false) {\n      const closeButton = header.createEl(\"button\", {\n        cls: \"exocortex-mobile-modal-close\",\n        attr: { \"aria-label\": \"Close modal\" },\n      });\n      closeButton.innerHTML = \"✕\";\n\n      new TouchGestureRecognizer(closeButton, {\n        onTap: () => {\n          if (options?.onClose) options.onClose();\n          this.closeModal(modal);\n        },\n      });\n    }\n\n    const titleEl = header.createEl(\"h2\", {\n      cls: \"exocortex-mobile-modal-title\",\n      text: title,\n    });\n\n    // Modal body\n    const body = modalContent.createEl(\"div\", {\n      cls: \"exocortex-mobile-modal-body\",\n    });\n    body.appendChild(content);\n\n    // Swipe to close on mobile\n    if (options?.swipeToClose !== false && PlatformDetector.isMobile()) {\n      new TouchGestureRecognizer(modalContent, {\n        onSwipeDown: () => {\n          if (options?.onClose) options.onClose();\n          this.closeModal(modal);\n        },\n      });\n    }\n\n    // Close on overlay tap\n    modal.addEventListener(\"click\", (e) => {\n      if (e.target === modal) {\n        if (options?.onClose) options.onClose();\n        this.closeModal(modal);\n      }\n    });\n\n    // Prevent body scroll\n    document.body.style.overflow = \"hidden\";\n\n    // Add entrance animation\n    modal.style.opacity = \"0\";\n    modalContent.style.transform = \"translateY(100%)\";\n\n    requestAnimationFrame(() => {\n      modal.style.opacity = \"1\";\n      modalContent.style.transform = \"translateY(0)\";\n    });\n\n    return modal;\n  }\n\n  /**\n   * Create a mobile-optimized floating action button\n   */\n  public createFAB(\n    container: HTMLElement,\n    icon: string,\n    onClick: () => void,\n    options?: {\n      position?: \"bottom-right\" | \"bottom-left\" | \"top-right\" | \"top-left\";\n      color?: string;\n      accessibilityLabel?: string;\n    },\n  ): HTMLElement {\n    const fab = container.createEl(\"button\", {\n      cls: `exocortex-mobile-fab exocortex-mobile-fab--${options?.position || \"bottom-right\"}`,\n      attr: {\n        \"aria-label\": options?.accessibilityLabel || \"Floating action button\",\n      },\n    });\n\n    fab.innerHTML = icon;\n\n    if (options?.color) {\n      fab.style.backgroundColor = options.color;\n    }\n\n    new TouchGestureRecognizer(fab, {\n      onTap: onClick,\n    });\n\n    // Add press animation\n    fab.addEventListener(\"touchstart\", () => {\n      fab.style.transform = \"scale(0.95)\";\n    });\n\n    fab.addEventListener(\"touchend\", () => {\n      fab.style.transform = \"scale(1)\";\n    });\n\n    return fab;\n  }\n\n  /**\n   * Create a mobile-optimized loading indicator\n   */\n  public createLoadingIndicator(\n    container: HTMLElement,\n    message?: string,\n  ): HTMLElement {\n    const loader = container.createEl(\"div\", {\n      cls: \"exocortex-mobile-loader\",\n    });\n\n    const spinner = loader.createEl(\"div\", {\n      cls: \"exocortex-mobile-spinner-large\",\n    });\n\n    if (message) {\n      loader.createEl(\"p\", {\n        cls: \"exocortex-mobile-loader-message\",\n        text: message,\n      });\n    }\n\n    return loader;\n  }\n\n  private createListItem(\n    container: HTMLElement,\n    item: MobileListItemConfig,\n    index: number,\n    onItemClick?: (item: MobileListItemConfig, index: number) => void,\n  ): HTMLElement {\n    const listItem = container.createEl(\"div\", {\n      cls: \"exocortex-mobile-list-item\",\n      attr: { role: \"button\", tabindex: \"0\" },\n    });\n\n    const content = listItem.createEl(\"div\", {\n      cls: \"exocortex-mobile-list-item-content\",\n    });\n\n    if (item.icon) {\n      const icon = content.createEl(\"span\", {\n        cls: \"exocortex-mobile-list-item-icon\",\n        text: item.icon,\n      });\n    }\n\n    const textContainer = content.createEl(\"div\", {\n      cls: \"exocortex-mobile-list-item-text\",\n    });\n\n    textContainer.createEl(\"div\", {\n      cls: \"exocortex-mobile-list-item-title\",\n      text: item.title,\n    });\n\n    if (item.subtitle) {\n      textContainer.createEl(\"div\", {\n        cls: \"exocortex-mobile-list-item-subtitle\",\n        text: item.subtitle,\n      });\n    }\n\n    const rightContainer = content.createEl(\"div\", {\n      cls: \"exocortex-mobile-list-item-right\",\n    });\n\n    if (item.rightText) {\n      rightContainer.createEl(\"span\", {\n        cls: \"exocortex-mobile-list-item-right-text\",\n        text: item.rightText,\n      });\n    }\n\n    if (item.rightIcon) {\n      rightContainer.createEl(\"span\", {\n        cls: \"exocortex-mobile-list-item-right-icon\",\n        text: item.rightIcon,\n      });\n    }\n\n    if (item.showChevron) {\n      rightContainer.createEl(\"span\", {\n        cls: \"exocortex-mobile-list-item-chevron\",\n        text: \"›\",\n      });\n    }\n\n    // Add touch gesture support\n    if (onItemClick) {\n      new TouchGestureRecognizer(listItem, {\n        onTap: () => onItemClick(item, index),\n      });\n    }\n\n    // Add swipe actions if specified\n    if (item.swipeable && item.swipeActions) {\n      this.addSwipeActions(listItem, item.swipeActions);\n    }\n\n    return listItem;\n  }\n\n  private createVirtualizedList(\n    container: HTMLElement,\n    items: MobileListItemConfig[],\n    onItemClick?: (item: MobileListItemConfig, index: number) => void,\n  ): HTMLElement {\n    if (!this.performanceOptimizer) {\n      // Fallback to regular list if no performance optimizer\n      return this.createList(container, items, onItemClick);\n    }\n\n    // Create virtual scroller implementation\n    const virtualScrollContainer = container.createEl(\"div\", {\n      cls: \"exocortex-virtual-scroll-container\",\n    });\n\n    // Simplified virtual scrolling implementation\n    const renderItem = (item: MobileListItemConfig, index: number) => {\n      const itemContainer = document.createElement(\"div\");\n      this.createListItem(itemContainer, item, index, onItemClick);\n      return itemContainer.firstElementChild as HTMLElement;\n    };\n\n    // Create the virtual list\n    const visibleCount = Math.min(items.length, 20); // Show maximum 20 items at once\n    for (let i = 0; i < visibleCount; i++) {\n      const itemElement = renderItem(items[i], i);\n      virtualScrollContainer.appendChild(itemElement);\n    }\n\n    return virtualScrollContainer;\n  }\n\n  private addSwipeActions(\n    listItem: HTMLElement,\n    actions: Array<{\n      text: string;\n      icon?: string;\n      color?: string;\n      action: () => void;\n    }>,\n  ): void {\n    const actionsContainer = listItem.createEl(\"div\", {\n      cls: \"exocortex-mobile-list-item-actions\",\n    });\n\n    actions.forEach((action) => {\n      const actionButton = actionsContainer.createEl(\"button\", {\n        cls: \"exocortex-mobile-list-item-action\",\n        text: action.text,\n      });\n\n      if (action.color) {\n        actionButton.style.backgroundColor = action.color;\n      }\n\n      if (action.icon) {\n        actionButton.innerHTML = `${action.icon} ${action.text}`;\n      }\n\n      new TouchGestureRecognizer(actionButton, {\n        onTap: action.action,\n      });\n    });\n\n    // Add swipe gesture to reveal actions\n    new TouchGestureRecognizer(listItem, {\n      onSwipeLeft: () => {\n        listItem.addClass(\"exocortex-mobile-list-item--swiped\");\n      },\n      onSwipeRight: () => {\n        listItem.removeClass(\"exocortex-mobile-list-item--swiped\");\n      },\n    });\n  }\n\n  private closeModal(modal: HTMLElement): void {\n    // Add exit animation\n    modal.style.opacity = \"0\";\n    const modalContent = modal.querySelector(\n      \".exocortex-mobile-modal\",\n    ) as HTMLElement;\n    if (modalContent) {\n      modalContent.style.transform = \"translateY(100%)\";\n    }\n\n    setTimeout(() => {\n      modal.remove();\n      document.body.style.overflow = \"\";\n    }, 300);\n  }\n}\n"],"version":3}