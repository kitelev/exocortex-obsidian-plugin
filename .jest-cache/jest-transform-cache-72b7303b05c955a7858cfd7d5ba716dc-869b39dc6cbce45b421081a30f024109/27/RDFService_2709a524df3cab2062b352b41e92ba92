c2e432d5414adca45acf7be15a77d0b8
"use strict";

/**
 * RDF Service - Coordinates RDF operations using specialized services
 * Follows Single Responsibility Principle by delegating to specific services
 */
/* istanbul ignore next */
function cov_1nix2jvbjx() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFService.ts";
  var hash = "75c189547a2f226d0d1aa2359f2ba7574a4f37ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFService.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "2": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "3": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "4": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 59
        }
      },
      "5": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 61
        }
      },
      "6": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "7": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "8": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "9": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 56
        }
      },
      "10": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "11": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "12": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "13": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 94
        }
      },
      "14": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 83
        }
      },
      "15": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 71
        }
      },
      "16": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 59
        }
      },
      "17": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 68
        }
      },
      "18": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "19": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "20": {
        start: {
          line: 34,
          column: 41
        },
        end: {
          line: 34,
          column: 86
        }
      },
      "21": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 37,
          column: 17
        }
      },
      "22": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 79
        }
      },
      "23": {
        start: {
          line: 38,
          column: 45
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "24": {
        start: {
          line: 45,
          column: 31
        },
        end: {
          line: 45,
          column: 85
        }
      },
      "25": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 48,
          column: 17
        }
      },
      "26": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "27": {
        start: {
          line: 49,
          column: 39
        },
        end: {
          line: 49,
          column: 56
        }
      },
      "28": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 58,
          column: 17
        }
      },
      "29": {
        start: {
          line: 51,
          column: 37
        },
        end: {
          line: 51,
          column: 104
        }
      },
      "30": {
        start: {
          line: 52,
          column: 37
        },
        end: {
          line: 52,
          column: 108
        }
      },
      "31": {
        start: {
          line: 53,
          column: 39
        },
        end: {
          line: 53,
          column: 107
        }
      },
      "32": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "33": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 77
        }
      },
      "34": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 107
        }
      },
      "35": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "36": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 79
        }
      },
      "37": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "38": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "39": {
        start: {
          line: 73,
          column: 41
        },
        end: {
          line: 73,
          column: 86
        }
      },
      "40": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 76,
          column: 17
        }
      },
      "41": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 79
        }
      },
      "42": {
        start: {
          line: 77,
          column: 37
        },
        end: {
          line: 83,
          column: 17
        }
      },
      "43": {
        start: {
          line: 84,
          column: 36
        },
        end: {
          line: 84,
          column: 76
        }
      },
      "44": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 87,
          column: 17
        }
      },
      "45": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 86,
          column: 102
        }
      },
      "46": {
        start: {
          line: 88,
          column: 33
        },
        end: {
          line: 88,
          column: 55
        }
      },
      "47": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 108,
          column: 17
        }
      },
      "48": {
        start: {
          line: 90,
          column: 46
        },
        end: {
          line: 95,
          column: 21
        }
      },
      "49": {
        start: {
          line: 96,
          column: 44
        },
        end: {
          line: 96,
          column: 107
        }
      },
      "50": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 99,
          column: 21
        }
      },
      "51": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 82
        }
      },
      "52": {
        start: {
          line: 100,
          column: 39
        },
        end: {
          line: 100,
          column: 65
        }
      },
      "53": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 104,
          column: 21
        }
      },
      "54": {
        start: {
          line: 102,
          column: 46
        },
        end: {
          line: 102,
          column: 94
        }
      },
      "55": {
        start: {
          line: 102,
          column: 73
        },
        end: {
          line: 102,
          column: 82
        }
      },
      "56": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 98
        }
      },
      "57": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 107,
          column: 21
        }
      },
      "58": {
        start: {
          line: 106,
          column: 24
        },
        end: {
          line: 106,
          column: 110
        }
      },
      "59": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 116,
          column: 17
        }
      },
      "60": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 48
        }
      },
      "61": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 47
        }
      },
      "62": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 53
        }
      },
      "63": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "64": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 120,
          column: 21
        }
      },
      "65": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 119,
          column: 76
        }
      },
      "66": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 75
        }
      },
      "67": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 79
        }
      },
      "68": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "69": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 146,
          column: 13
        }
      },
      "70": {
        start: {
          line: 135,
          column: 38
        },
        end: {
          line: 135,
          column: 85
        }
      },
      "71": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 138,
          column: 17
        }
      },
      "72": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 76
        }
      },
      "73": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 141,
          column: 17
        }
      },
      "74": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 91
        }
      },
      "75": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 86
        }
      },
      "76": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 98
        }
      },
      "77": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "78": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "79": {
        start: {
          line: 155,
          column: 30
        },
        end: {
          line: 155,
          column: 70
        }
      },
      "80": {
        start: {
          line: 156,
          column: 32
        },
        end: {
          line: 163,
          column: 17
        }
      },
      "81": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 62
        }
      },
      "82": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 93
        }
      },
      "83": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "84": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 64
        }
      },
      "85": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 185,
          column: 11
        }
      },
      "86": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 57
        }
      },
      "87": {
        start: {
          line: 191,
          column: 22
        },
        end: {
          line: 191,
          column: 41
        }
      },
      "88": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "89": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 206,
          column: 13
        }
      },
      "90": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 205,
          column: 17
        }
      },
      "91": {
        start: {
          line: 195,
          column: 36
        },
        end: {
          line: 195,
          column: 76
        }
      },
      "92": {
        start: {
          line: 196,
          column: 38
        },
        end: {
          line: 196,
          column: 80
        }
      },
      "93": {
        start: {
          line: 197,
          column: 35
        },
        end: {
          line: 197,
          column: 74
        }
      },
      "94": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 201,
          column: 21
        }
      },
      "95": {
        start: {
          line: 199,
          column: 39
        },
        end: {
          line: 199,
          column: 86
        }
      },
      "96": {
        start: {
          line: 200,
          column: 24
        },
        end: {
          line: 200,
          column: 42
        }
      },
      "97": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 85
        }
      },
      "98": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 21
        }
      },
      "99": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "100": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "101": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 53
        }
      },
      "102": {
        start: {
          line: 218,
          column: 17
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "103": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 224,
          column: 17
        }
      },
      "104": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 51
        }
      },
      "105": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 223,
          column: 58
        }
      },
      "106": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 54
        }
      },
      "107": {
        start: {
          line: 230,
          column: 13
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "108": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 110
        }
      },
      "109": {
        start: {
          line: 233,
          column: 13
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "110": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 51
        }
      },
      "111": {
        start: {
          line: 236,
          column: 13
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "112": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "113": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 53
        }
      },
      "114": {
        start: {
          line: 240,
          column: 17
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "115": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 59
        }
      },
      "116": {
        start: {
          line: 243,
          column: 17
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "117": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 252,
          column: 17
        }
      },
      "118": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 95
        }
      },
      "119": {
        start: {
          line: 247,
          column: 21
        },
        end: {
          line: 252,
          column: 17
        }
      },
      "120": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 248,
          column: 84
        }
      },
      "121": {
        start: {
          line: 251,
          column: 20
        },
        end: {
          line: 251,
          column: 61
        }
      },
      "122": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 20
        }
      },
      "123": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 37
        }
      },
      "124": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 61
        }
      },
      "125": {
        start: {
          line: 273,
          column: 26
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "126": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 33
        }
      },
      "127": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 282,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 55
          },
          end: {
            line: 32,
            column: 56
          }
        },
        loc: {
          start: {
            line: 32,
            column: 68
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 39
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 69
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 55
          },
          end: {
            line: 71,
            column: 56
          }
        },
        loc: {
          start: {
            line: 71,
            column: 68
          },
          end: {
            line: 127,
            column: 9
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 102,
            column: 68
          },
          end: {
            line: 102,
            column: 69
          }
        },
        loc: {
          start: {
            line: 102,
            column: 73
          },
          end: {
            line: 102,
            column: 82
          }
        },
        line: 102
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 46
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 132
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 133,
            column: 55
          },
          end: {
            line: 133,
            column: 56
          }
        },
        loc: {
          start: {
            line: 133,
            column: 68
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 133
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 70
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 152
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 153,
            column: 55
          },
          end: {
            line: 153,
            column: 56
          }
        },
        loc: {
          start: {
            line: 153,
            column: 68
          },
          end: {
            line: 169,
            column: 9
          }
        },
        line: 153
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        loc: {
          start: {
            line: 174,
            column: 34
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 174
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 175,
            column: 55
          },
          end: {
            line: 175,
            column: 56
          }
        },
        loc: {
          start: {
            line: 175,
            column: 68
          },
          end: {
            line: 177,
            column: 9
          }
        },
        line: 175
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 25
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 182
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 183,
            column: 55
          },
          end: {
            line: 183,
            column: 56
          }
        },
        loc: {
          start: {
            line: 183,
            column: 68
          },
          end: {
            line: 185,
            column: 9
          }
        },
        line: 183
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 40
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 190
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 213
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 26
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 260
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        },
        loc: {
          start: {
            line: 266,
            column: 26
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 266
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 26
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 272
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 21,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 21,
            column: 48
          }
        }, {
          start: {
            line: 21,
            column: 52
          },
          end: {
            line: 21,
            column: 93
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 40,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 96
          },
          end: {
            line: 40,
            column: 98
          }
        }, {
          start: {
            line: 40,
            column: 101
          },
          end: {
            line: 40,
            column: 105
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 40,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 40,
            column: 76
          }
        }, {
          start: {
            line: 40,
            column: 80
          },
          end: {
            line: 40,
            column: 93
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 88
          },
          end: {
            line: 41,
            column: 90
          }
        }, {
          start: {
            line: 41,
            column: 93
          },
          end: {
            line: 41,
            column: 97
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 68
          }
        }, {
          start: {
            line: 41,
            column: 72
          },
          end: {
            line: 41,
            column: 85
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 60
          },
          end: {
            line: 52,
            column: 97
          }
        }, {
          start: {
            line: 52,
            column: 100
          },
          end: {
            line: 52,
            column: 108
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "11": {
        loc: {
          start: {
            line: 81,
            column: 35
          },
          end: {
            line: 81,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 92
          },
          end: {
            line: 81,
            column: 94
          }
        }, {
          start: {
            line: 81,
            column: 97
          },
          end: {
            line: 81,
            column: 101
          }
        }],
        line: 81
      },
      "12": {
        loc: {
          start: {
            line: 81,
            column: 35
          },
          end: {
            line: 81,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 35
          },
          end: {
            line: 81,
            column: 72
          }
        }, {
          start: {
            line: 81,
            column: 76
          },
          end: {
            line: 81,
            column: 89
          }
        }],
        line: 81
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 32
          },
          end: {
            line: 82,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 86
          },
          end: {
            line: 82,
            column: 88
          }
        }, {
          start: {
            line: 82,
            column: 91
          },
          end: {
            line: 82,
            column: 96
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 82,
            column: 32
          },
          end: {
            line: 82,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 32
          },
          end: {
            line: 82,
            column: 66
          }
        }, {
          start: {
            line: 82,
            column: 70
          },
          end: {
            line: 82,
            column: 83
          }
        }],
        line: 82
      },
      "15": {
        loc: {
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 87,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 87,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "16": {
        loc: {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 108,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 108,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "17": {
        loc: {
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 99,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 99,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "18": {
        loc: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 104,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 104,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "19": {
        loc: {
          start: {
            line: 101,
            column: 24
          },
          end: {
            line: 101,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 24
          },
          end: {
            line: 101,
            column: 43
          }
        }, {
          start: {
            line: 101,
            column: 47
          },
          end: {
            line: 101,
            column: 65
          }
        }],
        line: 101
      },
      "20": {
        loc: {
          start: {
            line: 105,
            column: 20
          },
          end: {
            line: 107,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 20
          },
          end: {
            line: 107,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "21": {
        loc: {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 116,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 116,
            column: 17
          }
        }, {
          start: {
            line: 113,
            column: 21
          },
          end: {
            line: 116,
            column: 17
          }
        }],
        line: 110
      },
      "22": {
        loc: {
          start: {
            line: 118,
            column: 20
          },
          end: {
            line: 120,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 20
          },
          end: {
            line: 120,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "23": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 138,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 138,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "24": {
        loc: {
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 141,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "25": {
        loc: {
          start: {
            line: 152,
            column: 50
          },
          end: {
            line: 152,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 152,
            column: 64
          },
          end: {
            line: 152,
            column: 68
          }
        }],
        line: 152
      },
      "26": {
        loc: {
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 158,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 158,
            column: 38
          }
        }, {
          start: {
            line: 158,
            column: 42
          },
          end: {
            line: 158,
            column: 58
          }
        }],
        line: 158
      },
      "27": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "28": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 193,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 193,
            column: 30
          }
        }, {
          start: {
            line: 193,
            column: 34
          },
          end: {
            line: 193,
            column: 50
          }
        }, {
          start: {
            line: 193,
            column: 54
          },
          end: {
            line: 193,
            column: 67
          }
        }],
        line: 193
      },
      "29": {
        loc: {
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 201,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 201,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "30": {
        loc: {
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 198,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 198,
            column: 31
          }
        }, {
          start: {
            line: 198,
            column: 35
          },
          end: {
            line: 198,
            column: 44
          }
        }, {
          start: {
            line: 198,
            column: 48
          },
          end: {
            line: 198,
            column: 54
          }
        }],
        line: 198
      },
      "31": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: 230,
            column: 13
          },
          end: {
            line: 254,
            column: 9
          }
        }],
        line: 214
      },
      "32": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: 218,
            column: 17
          },
          end: {
            line: 228,
            column: 13
          }
        }],
        line: 215
      },
      "33": {
        loc: {
          start: {
            line: 218,
            column: 17
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 17
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: 226,
            column: 17
          },
          end: {
            line: 228,
            column: 13
          }
        }],
        line: 218
      },
      "34": {
        loc: {
          start: {
            line: 218,
            column: 21
          },
          end: {
            line: 218,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 21
          },
          end: {
            line: 218,
            column: 48
          }
        }, {
          start: {
            line: 218,
            column: 52
          },
          end: {
            line: 218,
            column: 80
          }
        }, {
          start: {
            line: 218,
            column: 84
          },
          end: {
            line: 218,
            column: 103
          }
        }],
        line: 218
      },
      "35": {
        loc: {
          start: {
            line: 230,
            column: 13
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 13
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: 233,
            column: 13
          },
          end: {
            line: 254,
            column: 9
          }
        }],
        line: 230
      },
      "36": {
        loc: {
          start: {
            line: 231,
            column: 19
          },
          end: {
            line: 231,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 45
          },
          end: {
            line: 231,
            column: 76
          }
        }, {
          start: {
            line: 231,
            column: 79
          },
          end: {
            line: 231,
            column: 109
          }
        }],
        line: 231
      },
      "37": {
        loc: {
          start: {
            line: 233,
            column: 13
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 13
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: 236,
            column: 13
          },
          end: {
            line: 254,
            column: 9
          }
        }],
        line: 233
      },
      "38": {
        loc: {
          start: {
            line: 236,
            column: 13
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 13
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "39": {
        loc: {
          start: {
            line: 236,
            column: 17
          },
          end: {
            line: 236,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 17
          },
          end: {
            line: 236,
            column: 22
          }
        }, {
          start: {
            line: 236,
            column: 26
          },
          end: {
            line: 236,
            column: 51
          }
        }],
        line: 236
      },
      "40": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: 240,
            column: 17
          },
          end: {
            line: 253,
            column: 13
          }
        }],
        line: 237
      },
      "41": {
        loc: {
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 237,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 237,
            column: 36
          }
        }, {
          start: {
            line: 237,
            column: 40
          },
          end: {
            line: 237,
            column: 60
          }
        }],
        line: 237
      },
      "42": {
        loc: {
          start: {
            line: 240,
            column: 17
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 17
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: 243,
            column: 17
          },
          end: {
            line: 253,
            column: 13
          }
        }],
        line: 240
      },
      "43": {
        loc: {
          start: {
            line: 243,
            column: 17
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 17
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "44": {
        loc: {
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 252,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 252,
            column: 17
          }
        }, {
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 252,
            column: 17
          }
        }],
        line: 244
      },
      "45": {
        loc: {
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 252,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 252,
            column: 17
          }
        }, {
          start: {
            line: 250,
            column: 21
          },
          end: {
            line: 252,
            column: 17
          }
        }],
        line: 247
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/services/RDFService.ts"],
      sourcesContent: ["/**\n * RDF Service - Coordinates RDF operations using specialized services\n * Follows Single Responsibility Principle by delegating to specific services\n */\n\nimport { App, Notice, TFile } from 'obsidian';\nimport { Graph } from '../../domain/semantic/core/Graph';\nimport { Triple, IRI, BlankNode, Literal } from '../../domain/semantic/core/Triple';\nimport { Result } from '../../domain/core/Result';\nimport { RDFSerializer, RDFFormat, SerializationOptions, SerializationResult } from './RDFSerializer';\nimport { RDFParser, ParseOptions, ParseResult } from './RDFParser';\nimport { NamespaceManager } from './NamespaceManager';\nimport { RDFValidator, ValidationOptions } from './RDFValidator';\nimport { RDFFileManager } from './RDFFileManager';\n\nexport interface RDFExportOptions {\n    format: RDFFormat;\n    includeComments?: boolean;\n    prettyPrint?: boolean;\n    baseIRI?: string;\n    fileName?: string;\n    saveToVault?: boolean;\n    targetFolder?: string;\n}\n\nexport interface RDFImportOptions {\n    format?: RDFFormat;\n    mergeMode: 'merge' | 'replace';\n    validateInput?: boolean;\n    strictMode?: boolean;\n    baseIRI?: string;\n}\n\nexport type { ValidationError } from './RDFValidator';\n\nexport class RDFService {\n    private serializer: RDFSerializer;\n    private parser: RDFParser;\n    private validator: RDFValidator;\n    private fileManager: RDFFileManager;\n    private namespaceManager: NamespaceManager;\n    \n    constructor(\n        private app: App,\n        namespaceManager?: NamespaceManager\n    ) {\n        this.namespaceManager = namespaceManager || new NamespaceManager();\n        this.serializer = new RDFSerializer(this.namespaceManager);\n        this.parser = new RDFParser(this.namespaceManager);\n        this.validator = new RDFValidator();\n        this.fileManager = new RDFFileManager(app);\n    }\n    \n    /**\n     * Export graph to RDF format\n     */\n    async exportGraph(graph: Graph, options: RDFExportOptions): Promise<Result<SerializationResult>> {\n        try {\n            const validationResult = this.validator.validateExportOptions(options);\n            if (validationResult.isFailure) {\n                return Result.fail<SerializationResult>(validationResult.errorValue());\n            }\n            \n            const serializationOptions: SerializationOptions = {\n                format: options.format,\n                includeComments: options.includeComments ?? true,\n                prettyPrint: options.prettyPrint ?? true,\n                baseIRI: options.baseIRI,\n                namespaceManager: this.namespaceManager\n            };\n            \n            const result = this.serializer.serialize(graph, serializationOptions);\n            if (result.isFailure) {\n                return result;\n            }\n            \n            const serializedData = result.getValue();\n            \n            if (options.saveToVault) {\n                const fileName = this.fileManager.generateFileName(options.fileName, options.format);\n                const filePath = options.targetFolder ? `${options.targetFolder}/${fileName}` : fileName;\n                \n                const saveResult = await this.fileManager.saveToVault(serializedData.content, filePath);\n                if (saveResult.isFailure) {\n                    return Result.fail(saveResult.errorValue());\n                }\n                \n                new Notice(`Exported ${serializedData.tripleCount} triples to ${filePath}`);\n            }\n            \n            return result;\n        } catch (error) {\n            return Result.fail(`Export failed: ${error.message}`);\n        }\n    }\n    \n    /**\n     * Import RDF data and merge with existing graph\n     */\n    async importRDF(\n        content: string, \n        graph: Graph, \n        options: RDFImportOptions\n    ): Promise<Result<{ graph: Graph; imported: ParseResult }>> {\n        try {\n            const validationResult = this.validator.validateImportOptions(options);\n            if (validationResult.isFailure) {\n                return Result.fail<{ graph: Graph; imported: ParseResult }>(validationResult.errorValue());\n            }\n            \n            const parseOptions: ParseOptions = {\n                format: options.format,\n                baseIRI: options.baseIRI,\n                namespaceManager: this.namespaceManager,\n                validateInput: options.validateInput ?? true,\n                strictMode: options.strictMode ?? false\n            };\n            \n            const parseResult = this.parser.parse(content, parseOptions);\n            if (parseResult.isFailure) {\n                return Result.fail(`Import parsing failed: ${parseResult.errorValue()}`);\n            }\n            \n            const imported = parseResult.getValue();\n            \n            if (options.validateInput) {\n                const validationOptions: ValidationOptions = {\n                    strictMode: options.strictMode,\n                    checkDuplicates: true,\n                    checkNamespaces: true,\n                    checkLiterals: true\n                };\n                \n                const graphValidation = this.validator.validateGraph(imported.graph, validationOptions);\n                if (graphValidation.isFailure) {\n                    return Result.fail(graphValidation.errorValue());\n                }\n                \n                const validation = graphValidation.getValue();\n                if (!validation.isValid && options.strictMode) {\n                    const errorMessages = validation.errors.map(e => e.message).join('; ');\n                    return Result.fail(`Import validation failed: ${errorMessages}`);\n                }\n                \n                if (validation.warnings.length > 0) {\n                    new Notice(`Import completed with ${validation.warnings.length} warnings`);\n                }\n            }\n            \n            let finalGraph: Graph;\n            \n            if (options.mergeMode === 'replace') {\n                finalGraph = imported.graph;\n            } else {\n                finalGraph = graph.clone();\n                finalGraph.merge(imported.graph);\n            }\n            \n            for (const [prefix, namespace] of Object.entries(imported.namespaces)) {\n                if (!this.namespaceManager.hasPrefix(prefix)) {\n                    this.namespaceManager.addBinding(prefix, namespace);\n                }\n            }\n            \n            return Result.ok({ graph: finalGraph, imported });\n            \n        } catch (error) {\n            return Result.fail(`Import failed: ${error.message}`);\n        }\n    }\n    \n    /**\n     * Import RDF from vault file\n     */\n    async importFromVaultFile(file: TFile, graph: Graph, options: RDFImportOptions): Promise<Result<{ graph: Graph; imported: ParseResult }>> {\n        try {\n            const contentResult = await this.fileManager.readFromVault(file.path);\n            if (contentResult.isFailure) {\n                return Result.fail(contentResult.errorValue());\n            }\n            \n            if (!options.format) {\n                options.format = this.fileManager.detectFormatFromExtension(file.name);\n            }\n            \n            return await this.importRDF(contentResult.getValue(), graph, options);\n        } catch (error) {\n            return Result.fail(`Failed to import from vault file: ${error.message}`);\n        }\n    }\n    \n    /**\n     * Export SPARQL query results\n     */\n    async exportQueryResults(\n        results: any[], \n        format: RDFFormat,\n        fileName?: string,\n        saveToVault: boolean = true\n    ): Promise<Result<SerializationResult>> {\n        try {\n            const graph = this.convertQueryResultsToGraph(results);\n            \n            const options: RDFExportOptions = {\n                format,\n                fileName: fileName || 'sparql-results',\n                saveToVault,\n                includeComments: true,\n                prettyPrint: true,\n                targetFolder: 'exports'\n            };\n            \n            return await this.exportGraph(graph, options);\n        } catch (error) {\n            return Result.fail(`Query results export failed: ${error.message}`);\n        }\n    }\n    \n    /**\n     * Validate a graph\n     */\n    async validateGraph(graph: Graph, options?: ValidationOptions): Promise<Result<any>> {\n        return this.validator.validateGraph(graph, options);\n    }\n    \n    /**\n     * List RDF files in vault\n     */\n    async listRDFFiles(folder?: string): Promise<Result<TFile[]>> {\n        return this.fileManager.listRDFFiles(folder);\n    }\n    \n    /**\n     * Convert SPARQL query results to graph\n     */\n    private convertQueryResultsToGraph(results: any[]): Graph {\n        const graph = new Graph();\n        \n        for (const result of results) {\n            if (result.subject && result.predicate && result.object) {\n                try {\n                    const subject = this.createNodeFromValue(result.subject);\n                    const predicate = this.createNodeFromValue(result.predicate) as IRI;\n                    const object = this.createNodeFromValue(result.object);\n                    \n                    if (subject && predicate && object) {\n                        const triple = new Triple(subject as IRI | BlankNode, predicate, object);\n                        graph.add(triple);\n                    }\n                } catch (error) {\n                    console.warn('Failed to convert query result to triple:', error);\n                }\n            }\n        }\n        \n        return graph;\n    }\n    \n    /**\n     * Create RDF node from query result value\n     */\n    private createNodeFromValue(value: any): IRI | BlankNode | Literal | null {\n        if (typeof value === 'string') {\n            if (value.startsWith('_:')) {\n                return new BlankNode(value);\n            } else if (value.startsWith('http://') || value.startsWith('https://') || value.includes(':')) {\n                try {\n                    return new IRI(value);\n                } catch {\n                    return Literal.string(value);\n                }\n            } else {\n                return Literal.string(value);\n            }\n        } else if (typeof value === 'number') {\n            return Number.isInteger(value) ? Literal.integer(value) : Literal.double(value);\n        } else if (typeof value === 'boolean') {\n            return Literal.boolean(value);\n        } else if (value && typeof value === 'object') {\n            if (value.type === 'uri' || value.type === 'iri') {\n                return new IRI(value.value);\n            } else if (value.type === 'bnode') {\n                return new BlankNode(value.value);\n            } else if (value.type === 'literal') {\n                if (value.datatype) {\n                    return new Literal(value.value, new IRI(value.datatype));\n                } else if (value.lang) {\n                    return new Literal(value.value, undefined, value.lang);\n                } else {\n                    return new Literal(value.value);\n                }\n            }\n        }\n        \n        return null;\n    }\n    \n    /**\n     * Get namespace manager instance\n     */\n    getNamespaceManager(): NamespaceManager {\n        return this.namespaceManager;\n    }\n    \n    /**\n     * Get supported export formats\n     */\n    getSupportedFormats(): RDFFormat[] {\n        return ['turtle', 'n-triples', 'json-ld', 'rdf-xml'];\n    }\n    \n    /**\n     * Get format information\n     */\n    getFormatInfo(format: RDFFormat): { extension: string; mimeType: string; name: string } {\n        const formatMap = {\n            'turtle': { extension: '.ttl', mimeType: 'text/turtle', name: 'Turtle' },\n            'n-triples': { extension: '.nt', mimeType: 'application/n-triples', name: 'N-Triples' },\n            'json-ld': { extension: '.jsonld', mimeType: 'application/ld+json', name: 'JSON-LD' },\n            'rdf-xml': { extension: '.rdf', mimeType: 'application/rdf+xml', name: 'RDF/XML' }\n        };\n        \n        return formatMap[format];\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "75c189547a2f226d0d1aa2359f2ba7574a4f37ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nix2jvbjx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nix2jvbjx();
cov_1nix2jvbjx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1nix2jvbjx().s[1]++;
exports.RDFService = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[2]++, require("tslib"));
const obsidian_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[3]++, require("obsidian"));
const Graph_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[4]++, require("../../domain/semantic/core/Graph"));
const Triple_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[5]++, require("../../domain/semantic/core/Triple"));
const Result_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[6]++, require("../../domain/core/Result"));
const RDFSerializer_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[7]++, require("./RDFSerializer"));
const RDFParser_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[8]++, require("./RDFParser"));
const NamespaceManager_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[9]++, require("./NamespaceManager"));
const RDFValidator_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[10]++, require("./RDFValidator"));
const RDFFileManager_1 =
/* istanbul ignore next */
(cov_1nix2jvbjx().s[11]++, require("./RDFFileManager"));
class RDFService {
  constructor(app, namespaceManager) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[0]++;
    cov_1nix2jvbjx().s[12]++;
    this.app = app;
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[13]++;
    this.namespaceManager =
    /* istanbul ignore next */
    (cov_1nix2jvbjx().b[0][0]++, namespaceManager) ||
    /* istanbul ignore next */
    (cov_1nix2jvbjx().b[0][1]++, new NamespaceManager_1.NamespaceManager());
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[14]++;
    this.serializer = new RDFSerializer_1.RDFSerializer(this.namespaceManager);
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[15]++;
    this.parser = new RDFParser_1.RDFParser(this.namespaceManager);
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[16]++;
    this.validator = new RDFValidator_1.RDFValidator();
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[17]++;
    this.fileManager = new RDFFileManager_1.RDFFileManager(app);
  }
  /**
   * Export graph to RDF format
   */
  exportGraph(graph, options) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[1]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[18]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nix2jvbjx().f[2]++;
      cov_1nix2jvbjx().s[19]++;
      try {
        const validationResult =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[20]++, this.validator.validateExportOptions(options));
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[21]++;
        if (validationResult.isFailure) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[1][0]++;
          cov_1nix2jvbjx().s[22]++;
          return Result_1.Result.fail(validationResult.errorValue());
        } else
        /* istanbul ignore next */
        {
          cov_1nix2jvbjx().b[1][1]++;
        }
        const serializationOptions =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[23]++, {
          format: options.format,
          includeComments:
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[3][0]++, (_a = options.includeComments) !== null) &&
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[3][1]++, _a !== void 0) ?
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[2][0]++, _a) :
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[2][1]++, true),
          prettyPrint:
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[5][0]++, (_b = options.prettyPrint) !== null) &&
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[5][1]++, _b !== void 0) ?
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[4][0]++, _b) :
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[4][1]++, true),
          baseIRI: options.baseIRI,
          namespaceManager: this.namespaceManager
        });
        const result =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[24]++, this.serializer.serialize(graph, serializationOptions));
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[25]++;
        if (result.isFailure) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[6][0]++;
          cov_1nix2jvbjx().s[26]++;
          return result;
        } else
        /* istanbul ignore next */
        {
          cov_1nix2jvbjx().b[6][1]++;
        }
        const serializedData =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[27]++, result.getValue());
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[28]++;
        if (options.saveToVault) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[7][0]++;
          const fileName =
          /* istanbul ignore next */
          (cov_1nix2jvbjx().s[29]++, this.fileManager.generateFileName(options.fileName, options.format));
          const filePath =
          /* istanbul ignore next */
          (cov_1nix2jvbjx().s[30]++, options.targetFolder ?
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[8][0]++, `${options.targetFolder}/${fileName}`) :
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[8][1]++, fileName));
          const saveResult =
          /* istanbul ignore next */
          (cov_1nix2jvbjx().s[31]++, yield this.fileManager.saveToVault(serializedData.content, filePath));
          /* istanbul ignore next */
          cov_1nix2jvbjx().s[32]++;
          if (saveResult.isFailure) {
            /* istanbul ignore next */
            cov_1nix2jvbjx().b[9][0]++;
            cov_1nix2jvbjx().s[33]++;
            return Result_1.Result.fail(saveResult.errorValue());
          } else
          /* istanbul ignore next */
          {
            cov_1nix2jvbjx().b[9][1]++;
          }
          cov_1nix2jvbjx().s[34]++;
          new obsidian_1.Notice(`Exported ${serializedData.tripleCount} triples to ${filePath}`);
        } else
        /* istanbul ignore next */
        {
          cov_1nix2jvbjx().b[7][1]++;
        }
        cov_1nix2jvbjx().s[35]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[36]++;
        return Result_1.Result.fail(`Export failed: ${error.message}`);
      }
    });
  }
  /**
   * Import RDF data and merge with existing graph
   */
  importRDF(content, graph, options) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[3]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[37]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nix2jvbjx().f[4]++;
      cov_1nix2jvbjx().s[38]++;
      try {
        const validationResult =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[39]++, this.validator.validateImportOptions(options));
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[40]++;
        if (validationResult.isFailure) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[10][0]++;
          cov_1nix2jvbjx().s[41]++;
          return Result_1.Result.fail(validationResult.errorValue());
        } else
        /* istanbul ignore next */
        {
          cov_1nix2jvbjx().b[10][1]++;
        }
        const parseOptions =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[42]++, {
          format: options.format,
          baseIRI: options.baseIRI,
          namespaceManager: this.namespaceManager,
          validateInput:
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[12][0]++, (_a = options.validateInput) !== null) &&
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[12][1]++, _a !== void 0) ?
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[11][0]++, _a) :
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[11][1]++, true),
          strictMode:
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[14][0]++, (_b = options.strictMode) !== null) &&
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[14][1]++, _b !== void 0) ?
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[13][0]++, _b) :
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[13][1]++, false)
        });
        const parseResult =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[43]++, this.parser.parse(content, parseOptions));
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[44]++;
        if (parseResult.isFailure) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[15][0]++;
          cov_1nix2jvbjx().s[45]++;
          return Result_1.Result.fail(`Import parsing failed: ${parseResult.errorValue()}`);
        } else
        /* istanbul ignore next */
        {
          cov_1nix2jvbjx().b[15][1]++;
        }
        const imported =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[46]++, parseResult.getValue());
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[47]++;
        if (options.validateInput) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[16][0]++;
          const validationOptions =
          /* istanbul ignore next */
          (cov_1nix2jvbjx().s[48]++, {
            strictMode: options.strictMode,
            checkDuplicates: true,
            checkNamespaces: true,
            checkLiterals: true
          });
          const graphValidation =
          /* istanbul ignore next */
          (cov_1nix2jvbjx().s[49]++, this.validator.validateGraph(imported.graph, validationOptions));
          /* istanbul ignore next */
          cov_1nix2jvbjx().s[50]++;
          if (graphValidation.isFailure) {
            /* istanbul ignore next */
            cov_1nix2jvbjx().b[17][0]++;
            cov_1nix2jvbjx().s[51]++;
            return Result_1.Result.fail(graphValidation.errorValue());
          } else
          /* istanbul ignore next */
          {
            cov_1nix2jvbjx().b[17][1]++;
          }
          const validation =
          /* istanbul ignore next */
          (cov_1nix2jvbjx().s[52]++, graphValidation.getValue());
          /* istanbul ignore next */
          cov_1nix2jvbjx().s[53]++;
          if (
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[19][0]++, !validation.isValid) &&
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[19][1]++, options.strictMode)) {
            /* istanbul ignore next */
            cov_1nix2jvbjx().b[18][0]++;
            const errorMessages =
            /* istanbul ignore next */
            (cov_1nix2jvbjx().s[54]++, validation.errors.map(e => {
              /* istanbul ignore next */
              cov_1nix2jvbjx().f[5]++;
              cov_1nix2jvbjx().s[55]++;
              return e.message;
            }).join('; '));
            /* istanbul ignore next */
            cov_1nix2jvbjx().s[56]++;
            return Result_1.Result.fail(`Import validation failed: ${errorMessages}`);
          } else
          /* istanbul ignore next */
          {
            cov_1nix2jvbjx().b[18][1]++;
          }
          cov_1nix2jvbjx().s[57]++;
          if (validation.warnings.length > 0) {
            /* istanbul ignore next */
            cov_1nix2jvbjx().b[20][0]++;
            cov_1nix2jvbjx().s[58]++;
            new obsidian_1.Notice(`Import completed with ${validation.warnings.length} warnings`);
          } else
          /* istanbul ignore next */
          {
            cov_1nix2jvbjx().b[20][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1nix2jvbjx().b[16][1]++;
        }
        let finalGraph;
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[59]++;
        if (options.mergeMode === 'replace') {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[21][0]++;
          cov_1nix2jvbjx().s[60]++;
          finalGraph = imported.graph;
        } else {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[21][1]++;
          cov_1nix2jvbjx().s[61]++;
          finalGraph = graph.clone();
          /* istanbul ignore next */
          cov_1nix2jvbjx().s[62]++;
          finalGraph.merge(imported.graph);
        }
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[63]++;
        for (const [prefix, namespace] of Object.entries(imported.namespaces)) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().s[64]++;
          if (!this.namespaceManager.hasPrefix(prefix)) {
            /* istanbul ignore next */
            cov_1nix2jvbjx().b[22][0]++;
            cov_1nix2jvbjx().s[65]++;
            this.namespaceManager.addBinding(prefix, namespace);
          } else
          /* istanbul ignore next */
          {
            cov_1nix2jvbjx().b[22][1]++;
          }
        }
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[66]++;
        return Result_1.Result.ok({
          graph: finalGraph,
          imported
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[67]++;
        return Result_1.Result.fail(`Import failed: ${error.message}`);
      }
    });
  }
  /**
   * Import RDF from vault file
   */
  importFromVaultFile(file, graph, options) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[6]++;
    cov_1nix2jvbjx().s[68]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nix2jvbjx().f[7]++;
      cov_1nix2jvbjx().s[69]++;
      try {
        const contentResult =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[70]++, yield this.fileManager.readFromVault(file.path));
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[71]++;
        if (contentResult.isFailure) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[23][0]++;
          cov_1nix2jvbjx().s[72]++;
          return Result_1.Result.fail(contentResult.errorValue());
        } else
        /* istanbul ignore next */
        {
          cov_1nix2jvbjx().b[23][1]++;
        }
        cov_1nix2jvbjx().s[73]++;
        if (!options.format) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[24][0]++;
          cov_1nix2jvbjx().s[74]++;
          options.format = this.fileManager.detectFormatFromExtension(file.name);
        } else
        /* istanbul ignore next */
        {
          cov_1nix2jvbjx().b[24][1]++;
        }
        cov_1nix2jvbjx().s[75]++;
        return yield this.importRDF(contentResult.getValue(), graph, options);
      } catch (error) {
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[76]++;
        return Result_1.Result.fail(`Failed to import from vault file: ${error.message}`);
      }
    });
  }
  /**
   * Export SPARQL query results
   */
  exportQueryResults(results, format, fileName, saveToVault =
  /* istanbul ignore next */
  (cov_1nix2jvbjx().b[25][0]++, true)) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[8]++;
    cov_1nix2jvbjx().s[77]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nix2jvbjx().f[9]++;
      cov_1nix2jvbjx().s[78]++;
      try {
        const graph =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[79]++, this.convertQueryResultsToGraph(results));
        const options =
        /* istanbul ignore next */
        (cov_1nix2jvbjx().s[80]++, {
          format,
          fileName:
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[26][0]++, fileName) ||
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[26][1]++, 'sparql-results'),
          saveToVault,
          includeComments: true,
          prettyPrint: true,
          targetFolder: 'exports'
        });
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[81]++;
        return yield this.exportGraph(graph, options);
      } catch (error) {
        /* istanbul ignore next */
        cov_1nix2jvbjx().s[82]++;
        return Result_1.Result.fail(`Query results export failed: ${error.message}`);
      }
    });
  }
  /**
   * Validate a graph
   */
  validateGraph(graph, options) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[10]++;
    cov_1nix2jvbjx().s[83]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nix2jvbjx().f[11]++;
      cov_1nix2jvbjx().s[84]++;
      return this.validator.validateGraph(graph, options);
    });
  }
  /**
   * List RDF files in vault
   */
  listRDFFiles(folder) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[12]++;
    cov_1nix2jvbjx().s[85]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nix2jvbjx().f[13]++;
      cov_1nix2jvbjx().s[86]++;
      return this.fileManager.listRDFFiles(folder);
    });
  }
  /**
   * Convert SPARQL query results to graph
   */
  convertQueryResultsToGraph(results) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[14]++;
    const graph =
    /* istanbul ignore next */
    (cov_1nix2jvbjx().s[87]++, new Graph_1.Graph());
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[88]++;
    for (const result of results) {
      /* istanbul ignore next */
      cov_1nix2jvbjx().s[89]++;
      if (
      /* istanbul ignore next */
      (cov_1nix2jvbjx().b[28][0]++, result.subject) &&
      /* istanbul ignore next */
      (cov_1nix2jvbjx().b[28][1]++, result.predicate) &&
      /* istanbul ignore next */
      (cov_1nix2jvbjx().b[28][2]++, result.object)) {
        /* istanbul ignore next */
        cov_1nix2jvbjx().b[27][0]++;
        cov_1nix2jvbjx().s[90]++;
        try {
          const subject =
          /* istanbul ignore next */
          (cov_1nix2jvbjx().s[91]++, this.createNodeFromValue(result.subject));
          const predicate =
          /* istanbul ignore next */
          (cov_1nix2jvbjx().s[92]++, this.createNodeFromValue(result.predicate));
          const object =
          /* istanbul ignore next */
          (cov_1nix2jvbjx().s[93]++, this.createNodeFromValue(result.object));
          /* istanbul ignore next */
          cov_1nix2jvbjx().s[94]++;
          if (
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[30][0]++, subject) &&
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[30][1]++, predicate) &&
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[30][2]++, object)) {
            /* istanbul ignore next */
            cov_1nix2jvbjx().b[29][0]++;
            const triple =
            /* istanbul ignore next */
            (cov_1nix2jvbjx().s[95]++, new Triple_1.Triple(subject, predicate, object));
            /* istanbul ignore next */
            cov_1nix2jvbjx().s[96]++;
            graph.add(triple);
          } else
          /* istanbul ignore next */
          {
            cov_1nix2jvbjx().b[29][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().s[97]++;
          console.warn('Failed to convert query result to triple:', error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1nix2jvbjx().b[27][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[98]++;
    return graph;
  }
  /**
   * Create RDF node from query result value
   */
  createNodeFromValue(value) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[15]++;
    cov_1nix2jvbjx().s[99]++;
    if (typeof value === 'string') {
      /* istanbul ignore next */
      cov_1nix2jvbjx().b[31][0]++;
      cov_1nix2jvbjx().s[100]++;
      if (value.startsWith('_:')) {
        /* istanbul ignore next */
        cov_1nix2jvbjx().b[32][0]++;
        cov_1nix2jvbjx().s[101]++;
        return new Triple_1.BlankNode(value);
      } else {
        /* istanbul ignore next */
        cov_1nix2jvbjx().b[32][1]++;
        cov_1nix2jvbjx().s[102]++;
        if (
        /* istanbul ignore next */
        (cov_1nix2jvbjx().b[34][0]++, value.startsWith('http://')) ||
        /* istanbul ignore next */
        (cov_1nix2jvbjx().b[34][1]++, value.startsWith('https://')) ||
        /* istanbul ignore next */
        (cov_1nix2jvbjx().b[34][2]++, value.includes(':'))) {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[33][0]++;
          cov_1nix2jvbjx().s[103]++;
          try {
            /* istanbul ignore next */
            cov_1nix2jvbjx().s[104]++;
            return new Triple_1.IRI(value);
          } catch (_a) {
            /* istanbul ignore next */
            cov_1nix2jvbjx().s[105]++;
            return Triple_1.Literal.string(value);
          }
        } else {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[33][1]++;
          cov_1nix2jvbjx().s[106]++;
          return Triple_1.Literal.string(value);
        }
      }
    } else {
      /* istanbul ignore next */
      cov_1nix2jvbjx().b[31][1]++;
      cov_1nix2jvbjx().s[107]++;
      if (typeof value === 'number') {
        /* istanbul ignore next */
        cov_1nix2jvbjx().b[35][0]++;
        cov_1nix2jvbjx().s[108]++;
        return Number.isInteger(value) ?
        /* istanbul ignore next */
        (cov_1nix2jvbjx().b[36][0]++, Triple_1.Literal.integer(value)) :
        /* istanbul ignore next */
        (cov_1nix2jvbjx().b[36][1]++, Triple_1.Literal.double(value));
      } else {
        /* istanbul ignore next */
        cov_1nix2jvbjx().b[35][1]++;
        cov_1nix2jvbjx().s[109]++;
        if (typeof value === 'boolean') {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[37][0]++;
          cov_1nix2jvbjx().s[110]++;
          return Triple_1.Literal.boolean(value);
        } else {
          /* istanbul ignore next */
          cov_1nix2jvbjx().b[37][1]++;
          cov_1nix2jvbjx().s[111]++;
          if (
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[39][0]++, value) &&
          /* istanbul ignore next */
          (cov_1nix2jvbjx().b[39][1]++, typeof value === 'object')) {
            /* istanbul ignore next */
            cov_1nix2jvbjx().b[38][0]++;
            cov_1nix2jvbjx().s[112]++;
            if (
            /* istanbul ignore next */
            (cov_1nix2jvbjx().b[41][0]++, value.type === 'uri') ||
            /* istanbul ignore next */
            (cov_1nix2jvbjx().b[41][1]++, value.type === 'iri')) {
              /* istanbul ignore next */
              cov_1nix2jvbjx().b[40][0]++;
              cov_1nix2jvbjx().s[113]++;
              return new Triple_1.IRI(value.value);
            } else {
              /* istanbul ignore next */
              cov_1nix2jvbjx().b[40][1]++;
              cov_1nix2jvbjx().s[114]++;
              if (value.type === 'bnode') {
                /* istanbul ignore next */
                cov_1nix2jvbjx().b[42][0]++;
                cov_1nix2jvbjx().s[115]++;
                return new Triple_1.BlankNode(value.value);
              } else {
                /* istanbul ignore next */
                cov_1nix2jvbjx().b[42][1]++;
                cov_1nix2jvbjx().s[116]++;
                if (value.type === 'literal') {
                  /* istanbul ignore next */
                  cov_1nix2jvbjx().b[43][0]++;
                  cov_1nix2jvbjx().s[117]++;
                  if (value.datatype) {
                    /* istanbul ignore next */
                    cov_1nix2jvbjx().b[44][0]++;
                    cov_1nix2jvbjx().s[118]++;
                    return new Triple_1.Literal(value.value, new Triple_1.IRI(value.datatype));
                  } else {
                    /* istanbul ignore next */
                    cov_1nix2jvbjx().b[44][1]++;
                    cov_1nix2jvbjx().s[119]++;
                    if (value.lang) {
                      /* istanbul ignore next */
                      cov_1nix2jvbjx().b[45][0]++;
                      cov_1nix2jvbjx().s[120]++;
                      return new Triple_1.Literal(value.value, undefined, value.lang);
                    } else {
                      /* istanbul ignore next */
                      cov_1nix2jvbjx().b[45][1]++;
                      cov_1nix2jvbjx().s[121]++;
                      return new Triple_1.Literal(value.value);
                    }
                  }
                } else
                /* istanbul ignore next */
                {
                  cov_1nix2jvbjx().b[43][1]++;
                }
              }
            }
          } else
          /* istanbul ignore next */
          {
            cov_1nix2jvbjx().b[38][1]++;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[122]++;
    return null;
  }
  /**
   * Get namespace manager instance
   */
  getNamespaceManager() {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[16]++;
    cov_1nix2jvbjx().s[123]++;
    return this.namespaceManager;
  }
  /**
   * Get supported export formats
   */
  getSupportedFormats() {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[17]++;
    cov_1nix2jvbjx().s[124]++;
    return ['turtle', 'n-triples', 'json-ld', 'rdf-xml'];
  }
  /**
   * Get format information
   */
  getFormatInfo(format) {
    /* istanbul ignore next */
    cov_1nix2jvbjx().f[18]++;
    const formatMap =
    /* istanbul ignore next */
    (cov_1nix2jvbjx().s[125]++, {
      'turtle': {
        extension: '.ttl',
        mimeType: 'text/turtle',
        name: 'Turtle'
      },
      'n-triples': {
        extension: '.nt',
        mimeType: 'application/n-triples',
        name: 'N-Triples'
      },
      'json-ld': {
        extension: '.jsonld',
        mimeType: 'application/ld+json',
        name: 'JSON-LD'
      },
      'rdf-xml': {
        extension: '.rdf',
        mimeType: 'application/rdf+xml',
        name: 'RDF/XML'
      }
    });
    /* istanbul ignore next */
    cov_1nix2jvbjx().s[126]++;
    return formatMap[format];
  }
}
/* istanbul ignore next */
cov_1nix2jvbjx().s[127]++;
exports.RDFService = RDFService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,