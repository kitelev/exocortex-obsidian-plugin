aa916fe6ec028db41c955a8a105e9e6d
"use strict";

/* istanbul ignore next */
function cov_1afv5apkyf() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateTaskFromProjectUseCase.ts";
  var hash = "0e0848a9d707fd7b989234d1841d15d2e2fcf516";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateTaskFromProjectUseCase.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 52
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "5": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 63
        }
      },
      "6": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 65
        }
      },
      "7": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 69
        }
      },
      "8": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 61
        }
      },
      "9": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 45
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 27
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 65
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "15": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "16": {
        start: {
          line: 29,
          column: 41
        },
        end: {
          line: 29,
          column: 70
        }
      },
      "17": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "18": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 35,
          column: 22
        }
      },
      "19": {
        start: {
          line: 38,
          column: 41
        },
        end: {
          line: 38,
          column: 74
        }
      },
      "20": {
        start: {
          line: 40,
          column: 39
        },
        end: {
          line: 40,
          column: 89
        }
      },
      "21": {
        start: {
          line: 42,
          column: 35
        },
        end: {
          line: 42,
          column: 90
        }
      },
      "22": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 49,
          column: 17
        }
      },
      "23": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 48,
          column: 22
        }
      },
      "24": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 50,
          column: 50
        }
      },
      "25": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "26": {
        start: {
          line: 54,
          column: 35
        },
        end: {
          line: 54,
          column: 85
        }
      },
      "27": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 58,
          column: 17
        }
      },
      "28": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 84
        }
      },
      "29": {
        start: {
          line: 60,
          column: 35
        },
        end: {
          line: 60,
          column: 82
        }
      },
      "30": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "31": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 83,
          column: 18
        }
      },
      "32": {
        start: {
          line: 91,
          column: 23
        },
        end: {
          line: 91,
          column: 25
        }
      },
      "33": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "34": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 50
        }
      },
      "35": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "36": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 67
        }
      },
      "37": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "38": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "39": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 77
        }
      },
      "40": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "41": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 53
        }
      },
      "42": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "43": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 61
        }
      },
      "44": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "45": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 78
        }
      },
      "46": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "47": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 85
        }
      },
      "48": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "49": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 59
        }
      },
      "50": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 36
        }
      },
      "51": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "52": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "53": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 31
        }
      },
      "54": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "55": {
        start: {
          line: 130,
          column: 35
        },
        end: {
          line: 130,
          column: 79
        }
      },
      "56": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 134,
          column: 17
        }
      },
      "57": {
        start: {
          line: 132,
          column: 20
        },
        end: {
          line: 132,
          column: 77
        }
      },
      "58": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 35
        }
      },
      "59": {
        start: {
          line: 135,
          column: 33
        },
        end: {
          line: 135,
          column: 91
        }
      },
      "60": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "61": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 76
        }
      },
      "62": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 35
        }
      },
      "63": {
        start: {
          line: 141,
          column: 40
        },
        end: {
          line: 141,
          column: 66
        }
      },
      "64": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 145,
          column: 17
        }
      },
      "65": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 144,
          column: 86
        }
      },
      "66": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "67": {
        start: {
          line: 147,
          column: 20
        },
        end: {
          line: 147,
          column: 80
        }
      },
      "68": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 151,
          column: 17
        }
      },
      "69": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 92
        }
      },
      "70": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 157,
          column: 17
        }
      },
      "71": {
        start: {
          line: 153,
          column: 41
        },
        end: {
          line: 153,
          column: 69
        }
      },
      "72": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 156,
          column: 21
        }
      },
      "73": {
        start: {
          line: 155,
          column: 24
        },
        end: {
          line: 155,
          column: 60
        }
      },
      "74": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 164,
          column: 17
        }
      },
      "75": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 119
        }
      },
      "76": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 163,
          column: 21
        }
      },
      "77": {
        start: {
          line: 162,
          column: 24
        },
        end: {
          line: 162,
          column: 135
        }
      },
      "78": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 39
        }
      },
      "79": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 65
        }
      },
      "80": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 31
        }
      },
      "81": {
        start: {
          line: 177,
          column: 21
        },
        end: {
          line: 177,
          column: 25
        }
      },
      "82": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "83": {
        start: {
          line: 179,
          column: 26
        },
        end: {
          line: 179,
          column: 63
        }
      },
      "84": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 50
        }
      },
      "85": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 22
        }
      },
      "86": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "87": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "88": {
        start: {
          line: 192,
          column: 34
        },
        end: {
          line: 192,
          column: 77
        }
      },
      "89": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 198,
          column: 17
        }
      },
      "90": {
        start: {
          line: 194,
          column: 36
        },
        end: {
          line: 194,
          column: 93
        }
      },
      "91": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 197,
          column: 21
        }
      },
      "92": {
        start: {
          line: 196,
          column: 24
        },
        end: {
          line: 196,
          column: 49
        }
      },
      "93": {
        start: {
          line: 201,
          column: 36
        },
        end: {
          line: 208,
          column: 14
        }
      },
      "94": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 100
        }
      },
      "95": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "96": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "97": {
        start: {
          line: 221,
          column: 39
        },
        end: {
          line: 221,
          column: 83
        }
      },
      "98": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 224,
          column: 17
        }
      },
      "99": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 223,
          column: 93
        }
      },
      "100": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 225,
          column: 53
        }
      },
      "101": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 56
        }
      },
      "102": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 241,
          column: 13
        }
      },
      "103": {
        start: {
          line: 233,
          column: 37
        },
        end: {
          line: 233,
          column: 83
        }
      },
      "104": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 236,
          column: 17
        }
      },
      "105": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 89
        }
      },
      "106": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 49
        }
      },
      "107": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 56
        }
      },
      "108": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "109": {
        start: {
          line: 245,
          column: 40
        },
        end: {
          line: 245,
          column: 75
        }
      },
      "110": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 248,
          column: 17
        }
      },
      "111": {
        start: {
          line: 247,
          column: 20
        },
        end: {
          line: 247,
          column: 63
        }
      },
      "112": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "113": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 52
        }
      },
      "114": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 256,
          column: 17
        }
      },
      "115": {
        start: {
          line: 255,
          column: 20
        },
        end: {
          line: 255,
          column: 75
        }
      },
      "116": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 268,
          column: 15
        }
      },
      "117": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "118": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "119": {
        start: {
          line: 279,
          column: 36
        },
        end: {
          line: 292,
          column: 18
        }
      },
      "120": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 295,
          column: 17
        }
      },
      "121": {
        start: {
          line: 294,
          column: 20
        },
        end: {
          line: 294,
          column: 96
        }
      },
      "122": {
        start: {
          line: 296,
          column: 30
        },
        end: {
          line: 296,
          column: 52
        }
      },
      "123": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 55
        }
      },
      "124": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 44
        }
      },
      "125": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 85
        }
      },
      "126": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 364,
          column: 11
        }
      },
      "127": {
        start: {
          line: 310,
          column: 28
        },
        end: {
          line: 310,
          column: 30
        }
      },
      "128": {
        start: {
          line: 311,
          column: 28
        },
        end: {
          line: 311,
          column: 72
        }
      },
      "129": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 363,
          column: 13
        }
      },
      "130": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 73
        }
      },
      "131": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 79
        }
      },
      "132": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 92
        }
      },
      "133": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 96
        }
      },
      "134": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 101
        }
      },
      "135": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 319,
          column: 101
        }
      },
      "136": {
        start: {
          line: 321,
          column: 36
        },
        end: {
          line: 321,
          column: 57
        }
      },
      "137": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 324,
          column: 17
        }
      },
      "138": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 323,
          column: 85
        }
      },
      "139": {
        start: {
          line: 325,
          column: 32
        },
        end: {
          line: 325,
          column: 49
        }
      },
      "140": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 328,
          column: 17
        }
      },
      "141": {
        start: {
          line: 327,
          column: 20
        },
        end: {
          line: 327,
          column: 91
        }
      },
      "142": {
        start: {
          line: 329,
          column: 39
        },
        end: {
          line: 329,
          column: 63
        }
      },
      "143": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 332,
          column: 17
        }
      },
      "144": {
        start: {
          line: 331,
          column: 20
        },
        end: {
          line: 331,
          column: 102
        }
      },
      "145": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 338,
          column: 17
        }
      },
      "146": {
        start: {
          line: 335,
          column: 39
        },
        end: {
          line: 335,
          column: 69
        }
      },
      "147": {
        start: {
          line: 336,
          column: 20
        },
        end: {
          line: 336,
          column: 89
        }
      },
      "148": {
        start: {
          line: 337,
          column: 20
        },
        end: {
          line: 337,
          column: 80
        }
      },
      "149": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 342,
          column: 17
        }
      },
      "150": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 72
        }
      },
      "151": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 357,
          column: 17
        }
      },
      "152": {
        start: {
          line: 345,
          column: 20
        },
        end: {
          line: 356,
          column: 21
        }
      },
      "153": {
        start: {
          line: 347,
          column: 43
        },
        end: {
          line: 347,
          column: 82
        }
      },
      "154": {
        start: {
          line: 348,
          column: 45
        },
        end: {
          line: 348,
          column: 86
        }
      },
      "155": {
        start: {
          line: 349,
          column: 39
        },
        end: {
          line: 351,
          column: 87
        }
      },
      "156": {
        start: {
          line: 352,
          column: 24
        },
        end: {
          line: 352,
          column: 47
        }
      },
      "157": {
        start: {
          line: 355,
          column: 24
        },
        end: {
          line: 355,
          column: 84
        }
      },
      "158": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 31
        }
      },
      "159": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 67
        }
      },
      "160": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 26
        }
      },
      "161": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "162": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 19
        }
      },
      "163": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 377,
          column: 11
        }
      },
      "164": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "165": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 34
        }
      },
      "166": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "167": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 25
        }
      },
      "168": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 30
        }
      },
      "169": {
        start: {
          line: 395,
          column: 0
        },
        end: {
          line: 395,
          column: 68
        }
      },
      "170": {
        start: {
          line: 397,
          column: 20
        },
        end: {
          line: 397,
          column: 67
        }
      },
      "171": {
        start: {
          line: 398,
          column: 25
        },
        end: {
          line: 398,
          column: 77
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 82
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 21
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 55
          },
          end: {
            line: 26,
            column: 56
          }
        },
        loc: {
          start: {
            line: 26,
            column: 68
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 29
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 90
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 27
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 123
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 124,
            column: 55
          },
          end: {
            line: 124,
            column: 56
          }
        },
        loc: {
          start: {
            line: 124,
            column: 68
          },
          end: {
            line: 171,
            column: 9
          }
        },
        line: 124
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 41
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 176
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 35
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 187
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 189,
            column: 55
          },
          end: {
            line: 189,
            column: 56
          }
        },
        loc: {
          start: {
            line: 189,
            column: 68
          },
          end: {
            line: 210,
            column: 9
          }
        },
        line: 189
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 35
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 215
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 217,
            column: 55
          },
          end: {
            line: 217,
            column: 56
          }
        },
        loc: {
          start: {
            line: 217,
            column: 68
          },
          end: {
            line: 269,
            column: 9
          }
        },
        line: 217
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        loc: {
          start: {
            line: 274,
            column: 35
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 274
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 276,
            column: 55
          },
          end: {
            line: 276,
            column: 56
          }
        },
        loc: {
          start: {
            line: 276,
            column: 68
          },
          end: {
            line: 303,
            column: 9
          }
        },
        line: 276
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 36
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 308
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 309,
            column: 55
          },
          end: {
            line: 309,
            column: 56
          }
        },
        loc: {
          start: {
            line: 309,
            column: 68
          },
          end: {
            line: 364,
            column: 9
          }
        },
        line: 309
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        loc: {
          start: {
            line: 369,
            column: 51
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 369
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 382,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        loc: {
          start: {
            line: 382,
            column: 26
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 382
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 36,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 36,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 71,
            column: 35
          },
          end: {
            line: 71,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 90
          },
          end: {
            line: 71,
            column: 96
          }
        }, {
          start: {
            line: 71,
            column: 99
          },
          end: {
            line: 71,
            column: 112
          }
        }],
        line: 71
      },
      "4": {
        loc: {
          start: {
            line: 71,
            column: 35
          },
          end: {
            line: 71,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 35
          },
          end: {
            line: 71,
            column: 70
          }
        }, {
          start: {
            line: 71,
            column: 74
          },
          end: {
            line: 71,
            column: 87
          }
        }],
        line: 71
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 33
          },
          end: {
            line: 72,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 86
          },
          end: {
            line: 72,
            column: 92
          }
        }, {
          start: {
            line: 72,
            column: 95
          },
          end: {
            line: 72,
            column: 125
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 33
          },
          end: {
            line: 72,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 33
          },
          end: {
            line: 72,
            column: 66
          }
        }, {
          start: {
            line: 72,
            column: 70
          },
          end: {
            line: 72,
            column: 83
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 92,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 92,
            column: 26
          }
        }, {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 92,
            column: 63
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "10": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 25
          }
        }, {
          start: {
            line: 95,
            column: 29
          },
          end: {
            line: 95,
            column: 55
          }
        }],
        line: 95
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "13": {
        loc: {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 99,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 99,
            column: 58
          }
        }, {
          start: {
            line: 99,
            column: 62
          },
          end: {
            line: 99,
            column: 88
          }
        }],
        line: 99
      },
      "14": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "15": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "16": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "17": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 109,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 109,
            column: 28
          }
        }, {
          start: {
            line: 109,
            column: 32
          },
          end: {
            line: 109,
            column: 95
          }
        }],
        line: 109
      },
      "18": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "19": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 26
          }
        }, {
          start: {
            line: 112,
            column: 30
          },
          end: {
            line: 112,
            column: 100
          }
        }],
        line: 112
      },
      "20": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "21": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "22": {
        loc: {
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "23": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "24": {
        loc: {
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 145,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 145,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "25": {
        loc: {
          start: {
            line: 143,
            column: 20
          },
          end: {
            line: 143,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 20
          },
          end: {
            line: 143,
            column: 48
          }
        }, {
          start: {
            line: 143,
            column: 52
          },
          end: {
            line: 143,
            column: 87
          }
        }],
        line: 143
      },
      "26": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "27": {
        loc: {
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 146,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 146,
            column: 45
          }
        }, {
          start: {
            line: 146,
            column: 49
          },
          end: {
            line: 146,
            column: 81
          }
        }],
        line: 146
      },
      "28": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "29": {
        loc: {
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 149,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 149,
            column: 51
          }
        }, {
          start: {
            line: 149,
            column: 55
          },
          end: {
            line: 149,
            column: 93
          }
        }],
        line: 149
      },
      "30": {
        loc: {
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "31": {
        loc: {
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 152,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 152,
            column: 41
          }
        }, {
          start: {
            line: 152,
            column: 45
          },
          end: {
            line: 152,
            column: 78
          }
        }],
        line: 152
      },
      "32": {
        loc: {
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 156,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 156,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "33": {
        loc: {
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 36
          }
        }, {
          start: {
            line: 154,
            column: 40
          },
          end: {
            line: 154,
            column: 67
          }
        }],
        line: 154
      },
      "34": {
        loc: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "35": {
        loc: {
          start: {
            line: 161,
            column: 20
          },
          end: {
            line: 163,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 20
          },
          end: {
            line: 163,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "36": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "37": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "38": {
        loc: {
          start: {
            line: 195,
            column: 20
          },
          end: {
            line: 197,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 20
          },
          end: {
            line: 197,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "39": {
        loc: {
          start: {
            line: 202,
            column: 28
          },
          end: {
            line: 202,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 79
          },
          end: {
            line: 202,
            column: 85
          }
        }, {
          start: {
            line: 202,
            column: 88
          },
          end: {
            line: 202,
            column: 101
          }
        }],
        line: 202
      },
      "40": {
        loc: {
          start: {
            line: 202,
            column: 28
          },
          end: {
            line: 202,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 28
          },
          end: {
            line: 202,
            column: 59
          }
        }, {
          start: {
            line: 202,
            column: 63
          },
          end: {
            line: 202,
            column: 76
          }
        }],
        line: 202
      },
      "41": {
        loc: {
          start: {
            line: 209,
            column: 19
          },
          end: {
            line: 209,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 85
          },
          end: {
            line: 209,
            column: 91
          }
        }, {
          start: {
            line: 209,
            column: 94
          },
          end: {
            line: 209,
            column: 99
          }
        }],
        line: 209
      },
      "42": {
        loc: {
          start: {
            line: 209,
            column: 19
          },
          end: {
            line: 209,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 19
          },
          end: {
            line: 209,
            column: 65
          }
        }, {
          start: {
            line: 209,
            column: 69
          },
          end: {
            line: 209,
            column: 82
          }
        }],
        line: 209
      },
      "43": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        }, {
          start: {
            line: 227,
            column: 17
          },
          end: {
            line: 229,
            column: 13
          }
        }],
        line: 220
      },
      "44": {
        loc: {
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 224,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 224,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "45": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 241,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 241,
            column: 13
          }
        }, {
          start: {
            line: 239,
            column: 17
          },
          end: {
            line: 241,
            column: 13
          }
        }],
        line: 232
      },
      "46": {
        loc: {
          start: {
            line: 234,
            column: 16
          },
          end: {
            line: 236,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 16
          },
          end: {
            line: 236,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "47": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "48": {
        loc: {
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 248,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 248,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "49": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "50": {
        loc: {
          start: {
            line: 254,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "51": {
        loc: {
          start: {
            line: 261,
            column: 29
          },
          end: {
            line: 261,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 261,
            column: 84
          },
          end: {
            line: 261,
            column: 90
          }
        }, {
          start: {
            line: 261,
            column: 93
          },
          end: {
            line: 261,
            column: 102
          }
        }],
        line: 261
      },
      "52": {
        loc: {
          start: {
            line: 261,
            column: 29
          },
          end: {
            line: 261,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 29
          },
          end: {
            line: 261,
            column: 64
          }
        }, {
          start: {
            line: 261,
            column: 68
          },
          end: {
            line: 261,
            column: 81
          }
        }],
        line: 261
      },
      "53": {
        loc: {
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 34
          }
        }, {
          start: {
            line: 267,
            column: 38
          },
          end: {
            line: 267,
            column: 40
          }
        }],
        line: 267
      },
      "54": {
        loc: {
          start: {
            line: 287,
            column: 40
          },
          end: {
            line: 287,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 287,
            column: 91
          },
          end: {
            line: 287,
            column: 97
          }
        }, {
          start: {
            line: 287,
            column: 100
          },
          end: {
            line: 287,
            column: 113
          }
        }],
        line: 287
      },
      "55": {
        loc: {
          start: {
            line: 287,
            column: 40
          },
          end: {
            line: 287,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 40
          },
          end: {
            line: 287,
            column: 71
          }
        }, {
          start: {
            line: 287,
            column: 75
          },
          end: {
            line: 287,
            column: 88
          }
        }],
        line: 287
      },
      "56": {
        loc: {
          start: {
            line: 288,
            column: 39
          },
          end: {
            line: 288,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 90
          },
          end: {
            line: 288,
            column: 96
          }
        }, {
          start: {
            line: 288,
            column: 99
          },
          end: {
            line: 288,
            column: 111
          }
        }],
        line: 288
      },
      "57": {
        loc: {
          start: {
            line: 288,
            column: 39
          },
          end: {
            line: 288,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 39
          },
          end: {
            line: 288,
            column: 70
          }
        }, {
          start: {
            line: 288,
            column: 74
          },
          end: {
            line: 288,
            column: 87
          }
        }],
        line: 288
      },
      "58": {
        loc: {
          start: {
            line: 289,
            column: 42
          },
          end: {
            line: 289,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 289,
            column: 93
          },
          end: {
            line: 289,
            column: 99
          }
        }, {
          start: {
            line: 289,
            column: 102
          },
          end: {
            line: 289,
            column: 117
          }
        }],
        line: 289
      },
      "59": {
        loc: {
          start: {
            line: 289,
            column: 42
          },
          end: {
            line: 289,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 42
          },
          end: {
            line: 289,
            column: 73
          }
        }, {
          start: {
            line: 289,
            column: 77
          },
          end: {
            line: 289,
            column: 90
          }
        }],
        line: 289
      },
      "60": {
        loc: {
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 295,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 295,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "61": {
        loc: {
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 324,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 324,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "62": {
        loc: {
          start: {
            line: 326,
            column: 16
          },
          end: {
            line: 328,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 16
          },
          end: {
            line: 328,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "63": {
        loc: {
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 332,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 332,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "64": {
        loc: {
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 338,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 338,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "65": {
        loc: {
          start: {
            line: 349,
            column: 121
          },
          end: {
            line: 351,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 350,
            column: 30
          },
          end: {
            line: 350,
            column: 82
          }
        }, {
          start: {
            line: 351,
            column: 30
          },
          end: {
            line: 351,
            column: 86
          }
        }],
        line: 349
      },
      "66": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "67": {
        loc: {
          start: {
            line: 376,
            column: 20
          },
          end: {
            line: 376,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 376,
            column: 77
          },
          end: {
            line: 376,
            column: 90
          }
        }, {
          start: {
            line: 376,
            column: 93
          },
          end: {
            line: 376,
            column: 99
          }
        }],
        line: 376
      },
      "68": {
        loc: {
          start: {
            line: 376,
            column: 20
          },
          end: {
            line: 376,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 20
          },
          end: {
            line: 376,
            column: 40
          }
        }, {
          start: {
            line: 376,
            column: 44
          },
          end: {
            line: 376,
            column: 74
          }
        }],
        line: 376
      },
      "69": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "70": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateTaskFromProjectUseCase.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/CreateTaskFromProjectUseCase.ts"],
      sourcesContent: ["import { Task } from '../../domain/entities/Task';\nimport { Asset } from '../../domain/entities/Asset';\nimport { TaskId } from '../../domain/value-objects/TaskId';\nimport { AssetId } from '../../domain/value-objects/AssetId';\nimport { Priority } from '../../domain/value-objects/Priority';\nimport { TaskStatus } from '../../domain/value-objects/TaskStatus';\nimport { IAssetRepository } from '../../domain/repositories/IAssetRepository';\nimport { ITaskRepository } from '../../domain/repositories/ITaskRepository';\nimport { IndexedGraph } from '../../domain/semantic/core/IndexedGraph';\nimport { Triple, IRI, Literal } from '../../domain/semantic/core/Triple';\nimport { GetCurrentProjectUseCase } from './GetCurrentProjectUseCase';\nimport { CreateTaskRequest, CreateTaskResponse } from '../dtos/CreateTaskRequest';\nimport { Result } from '../../domain/core/Result';\n\n/**\n * Use case for creating tasks from project context\n * Orchestrates task creation with intelligent project association\n * Following Clean Architecture and TOGAF principles\n */\nexport class CreateTaskFromProjectUseCase {\n  constructor(\n    private readonly taskRepository: ITaskRepository,\n    private readonly assetRepository: IAssetRepository,\n    private readonly graph: IndexedGraph,\n    private readonly getCurrentProjectUseCase: GetCurrentProjectUseCase\n  ) {}\n\n  async execute(request: CreateTaskRequest): Promise<CreateTaskResponse> {\n    try {\n      // Validate request\n      const validationResult = this.validateRequest(request);\n      if (validationResult.isFailure) {\n        return {\n          success: false,\n          message: validationResult.error,\n          errors: { request: [validationResult.error] }\n        };\n      }\n\n      // Apply template if specified\n      const processedRequest = await this.applyTemplate(request);\n\n      // Get project context if not explicitly provided\n      const projectContext = await this.resolveProjectContext(processedRequest);\n\n      // Create the task\n      const taskResult = await this.createTask(processedRequest, projectContext);\n      if (taskResult.isFailure) {\n        return {\n          success: false,\n          message: taskResult.error,\n          errors: { task: [taskResult.error] }\n        };\n      }\n\n      const task = taskResult.getValue();\n\n      // Save task to repository\n      await this.taskRepository.save(task);\n\n      // Also save as asset for compatibility\n      const saveResult = await this.saveTaskAsAsset(task, processedRequest);\n      if (saveResult.isFailure) {\n        console.warn('Failed to save task as asset:', saveResult.error);\n        // Continue - task repository save was successful\n      }\n\n      // Update RDF graph\n      const rdfTriples = await this.updateRDFGraph(task, projectContext);\n\n      // Build successful response\n      return {\n        success: true,\n        taskId: task.getId().toString(),\n        message: `Task \"${task.getTitle()}\" created successfully`,\n        task: {\n          id: task.getId().toString(),\n          title: task.getTitle(),\n          status: task.getStatus().toString(),\n          priority: task.getPriority().toString(),\n          projectId: task.getProjectId()?.toString(),\n          dueDate: task.getDueDate()?.toISOString().split('T')[0],\n          tags: task.getTags()\n        },\n        rdfTriples\n      };\n\n    } catch (error) {\n      return {\n        success: false,\n        message: `Failed to create task: ${error.message}`,\n        errors: { system: [error.message] }\n      };\n    }\n  }\n\n  /**\n   * Validate the task creation request\n   */\n  private validateRequest(request: CreateTaskRequest): Result<void> {\n    const errors: string[] = [];\n\n    if (!request.title || request.title.trim().length === 0) {\n      errors.push('Task title is required');\n    }\n\n    if (request.title && request.title.length > 200) {\n      errors.push('Task title cannot exceed 200 characters');\n    }\n\n    if (request.estimatedHours !== undefined) {\n      if (typeof request.estimatedHours !== 'number' || request.estimatedHours < 0) {\n        errors.push('Estimated hours must be a non-negative number');\n      }\n    }\n\n    if (request.dueDate) {\n      const dueDate = new Date(request.dueDate);\n      if (isNaN(dueDate.getTime())) {\n        errors.push('Due date must be a valid date');\n      }\n    }\n\n    if (request.priority && !['low', 'medium', 'high', 'urgent'].includes(request.priority)) {\n      errors.push('Priority must be one of: low, medium, high, urgent');\n    }\n\n    if (request.status && !['todo', 'in-progress', 'done', 'cancelled'].includes(request.status)) {\n      errors.push('Status must be one of: todo, in-progress, done, cancelled');\n    }\n\n    if (errors.length > 0) {\n      return Result.fail<void>(errors.join('; '));\n    }\n\n    return Result.ok<void>();\n  }\n\n  /**\n   * Apply task template if specified\n   */\n  private async applyTemplate(request: CreateTaskRequest): Promise<CreateTaskRequest> {\n    if (!request.templateId) {\n      return request;\n    }\n\n    try {\n      // Load template from repository\n      const templateId = AssetId.create(request.templateId);\n      if (templateId.isFailure) {\n        console.warn('Invalid template ID:', request.templateId);\n        return request;\n      }\n\n      const template = await this.assetRepository.findById(templateId.getValue());\n      if (!template) {\n        console.warn('Template not found:', request.templateId);\n        return request;\n      }\n\n      // Apply template properties\n      const templateRequest = { ...request };\n\n      // Override with template values if not explicitly set\n      if (!templateRequest.description && template.getProperty('description')) {\n        templateRequest.description = template.getProperty('description');\n      }\n\n      if (!templateRequest.priority && template.getProperty('priority')) {\n        templateRequest.priority = template.getProperty('priority');\n      }\n\n      if (!templateRequest.estimatedHours && template.getProperty('estimatedHours')) {\n        templateRequest.estimatedHours = template.getProperty('estimatedHours');\n      }\n\n      if (!templateRequest.tags || templateRequest.tags.length === 0) {\n        const templateTags = template.getProperty('tags');\n        if (templateTags && Array.isArray(templateTags)) {\n          templateRequest.tags = templateTags;\n        }\n      }\n\n      // Apply template variable substitution\n      if (request.templateVariables) {\n        templateRequest.title = this.substituteVariables(templateRequest.title, request.templateVariables);\n        if (templateRequest.description) {\n          templateRequest.description = this.substituteVariables(templateRequest.description, request.templateVariables);\n        }\n      }\n\n      return templateRequest;\n    } catch (error) {\n      console.warn('Failed to apply template:', error);\n      return request;\n    }\n  }\n\n  /**\n   * Substitute template variables in text\n   */\n  private substituteVariables(text: string, variables: Record<string, string>): string {\n    let result = text;\n    for (const [key, value] of Object.entries(variables)) {\n      const regex = new RegExp(`\\\\{\\\\{${key}\\\\}\\\\}`, 'g');\n      result = result.replace(regex, value);\n    }\n    return result;\n  }\n\n  /**\n   * Resolve project context for task association\n   */\n  private async resolveProjectContext(request: CreateTaskRequest): Promise<string | undefined> {\n    if (request.projectId) {\n      // Validate provided project ID\n      const projectId = AssetId.create(request.projectId);\n      if (projectId.isSuccess) {\n        const project = await this.assetRepository.findById(projectId.getValue());\n        if (project) {\n          return request.projectId;\n        }\n      }\n    }\n\n    // Use context-based project detection\n    const projectResponse = await this.getCurrentProjectUseCase.execute({\n      activeFile: request.context?.activeFile,\n      preferences: {\n        includeCompleted: false,\n        maxResults: 5,\n        selectionStrategy: 'context'\n      }\n    });\n\n    return projectResponse.currentProject?.id;\n  }\n\n  /**\n   * Create the task domain entity\n   */\n  private async createTask(\n    request: CreateTaskRequest,\n    projectId?: string\n  ): Promise<Result<Task>> {\n    // Parse priority\n    let priority: Priority;\n    if (request.priority) {\n      const priorityResult = Priority.create(request.priority);\n      if (priorityResult.isFailure) {\n        return Result.fail<Task>(`Invalid priority: ${priorityResult.error}`);\n      }\n      priority = priorityResult.getValue();\n    } else {\n      priority = Priority.medium();\n    }\n\n    // Parse status\n    let status: TaskStatus;\n    if (request.status) {\n      const statusResult = TaskStatus.create(request.status);\n      if (statusResult.isFailure) {\n        return Result.fail<Task>(`Invalid status: ${statusResult.error}`);\n      }\n      status = statusResult.getValue();\n    } else {\n      status = TaskStatus.todo();\n    }\n\n    // Parse project ID\n    let taskProjectId: AssetId | undefined;\n    if (projectId) {\n      const projectIdResult = AssetId.create(projectId);\n      if (projectIdResult.isSuccess) {\n        taskProjectId = projectIdResult.getValue();\n      }\n    }\n\n    // Parse due date\n    let dueDate: Date | undefined;\n    if (request.dueDate) {\n      dueDate = new Date(request.dueDate);\n      if (isNaN(dueDate.getTime())) {\n        return Result.fail<Task>('Invalid due date format');\n      }\n    }\n\n    // Create task\n    return Task.create({\n      title: request.title.trim(),\n      description: request.description?.trim(),\n      priority: priority,\n      status: status,\n      projectId: taskProjectId,\n      dueDate,\n      estimatedHours: request.estimatedHours,\n      tags: request.tags || []\n    });\n  }\n\n  /**\n   * Save task as an asset in the repository\n   */\n  private async saveTaskAsAsset(task: Task, request: CreateTaskRequest): Promise<Result<void>> {\n    try {\n      // Create asset from task\n      const assetResult = Asset.create({\n        id: AssetId.create(task.getId().toString()).getValue(),\n        label: task.getTitle(),\n        className: ClassName.create('ems__Task').getValue(),\n        ontology: OntologyPrefix.create('ems').getValue(),\n        properties: {\n          ...task.toFrontmatter(),\n          // Add context information\n          creationContext: {\n            activeFile: request.context?.activeFile,\n            selection: request.context?.selection,\n            focusContext: request.context?.focusContext,\n            timestamp: new Date().toISOString()\n          }\n        }\n      });\n\n      if (assetResult.isFailure) {\n        return Result.fail<void>(`Failed to create asset: ${assetResult.error}`);\n      }\n\n      const asset = assetResult.getValue();\n      await this.assetRepository.save(asset);\n\n      return Result.ok<void>();\n    } catch (error) {\n      return Result.fail<void>(`Failed to save task: ${error.message}`);\n    }\n  }\n\n  /**\n   * Update RDF graph with task relationships and metadata\n   */\n  private async updateRDFGraph(\n    task: Task,\n    projectId?: string\n  ): Promise<CreateTaskResponse['rdfTriples']> {\n    const triples: CreateTaskResponse['rdfTriples'] = [];\n    const taskIRI = this.ensureValidIRI(task.getId().toString());\n\n    try {\n      // Add basic task triples\n      this.addTriple(triples, taskIRI, 'rdf:type', 'ems:Task');\n      this.addTriple(triples, taskIRI, 'ems:title', task.getTitle());\n      this.addTriple(triples, taskIRI, 'ems:status', task.getStatus().toString());\n      this.addTriple(triples, taskIRI, 'ems:priority', task.getPriority().toString());\n      this.addTriple(triples, taskIRI, 'ems:createdAt', task.getCreatedAt().toISOString());\n      this.addTriple(triples, taskIRI, 'ems:updatedAt', task.getUpdatedAt().toISOString());\n\n      // Add optional properties\n      const description = task.getDescription();\n      if (description) {\n        this.addTriple(triples, taskIRI, 'ems:description', description);\n      }\n\n      const dueDate = task.getDueDate();\n      if (dueDate) {\n        this.addTriple(triples, taskIRI, 'ems:dueDate', dueDate.toISOString());\n      }\n\n      const estimatedHours = task.getEstimatedHours();\n      if (estimatedHours !== undefined) {\n        this.addTriple(triples, taskIRI, 'ems:estimatedHours', estimatedHours.toString());\n      }\n\n      // Add project relationship\n      if (projectId) {\n        const projectIRI = this.ensureValidIRI(projectId);\n        this.addTriple(triples, taskIRI, 'ems:belongsToProject', projectIRI);\n        this.addTriple(triples, projectIRI, 'ems:hasTask', taskIRI);\n      }\n\n      // Add tags\n      for (const tag of task.getTags()) {\n        this.addTriple(triples, taskIRI, 'ems:hasTag', tag);\n      }\n\n      // Add all triples to graph\n      for (const tripleData of triples) {\n        try {\n          // Ensure valid IRI format for subjects and predicates\n          const subjectIRI = this.ensureValidIRI(tripleData.subject);\n          const predicateIRI = this.ensureValidIRI(tripleData.predicate);\n          \n          const triple = new Triple(\n            new IRI(subjectIRI),\n            new IRI(predicateIRI),\n            tripleData.object.startsWith('\"') \n              ? new Literal(tripleData.object.slice(1, -1))\n              : new IRI(this.ensureValidIRI(tripleData.object))\n          );\n          this.graph.add(triple);\n        } catch (error) {\n          console.warn('Failed to create triple:', tripleData, error);\n        }\n      }\n\n      return triples;\n    } catch (error) {\n      console.warn('Failed to update RDF graph:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Helper method to add triple data\n   */\n  private addTriple(\n    triples: CreateTaskResponse['rdfTriples'],\n    subject: string,\n    predicate: string,\n    object: string\n  ): void {\n    if (!triples) {\n      return;\n    }\n    triples.push({\n      subject,\n      predicate,\n      object: object.includes(' ') || object.includes(':') === false ? `\"${object}\"` : object\n    });\n  }\n\n  /**\n   * Ensure a string is formatted as a valid IRI\n   */\n  private ensureValidIRI(value: string): string {\n    // If it looks like a UUID, wrap it in a namespace\n    if (/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(value)) {\n      return `ems:${value}`;\n    }\n    \n    // If it already has a scheme or namespace, return as-is\n    if (value.includes(':')) {\n      return value;\n    }\n    \n    // Otherwise, add default namespace\n    return `ems:${value}`;\n  }\n}\n\n// Import required classes that might be missing\nimport { ClassName } from '../../domain/value-objects/ClassName';\nimport { OntologyPrefix } from '../../domain/value-objects/OntologyPrefix';"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e0848a9d707fd7b989234d1841d15d2e2fcf516"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1afv5apkyf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1afv5apkyf();
cov_1afv5apkyf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1afv5apkyf().s[1]++;
exports.CreateTaskFromProjectUseCase = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[2]++, require("tslib"));
const Task_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[3]++, require("../../domain/entities/Task"));
const Asset_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[4]++, require("../../domain/entities/Asset"));
const AssetId_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[5]++, require("../../domain/value-objects/AssetId"));
const Priority_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[6]++, require("../../domain/value-objects/Priority"));
const TaskStatus_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[7]++, require("../../domain/value-objects/TaskStatus"));
const Triple_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[8]++, require("../../domain/semantic/core/Triple"));
const Result_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[9]++, require("../../domain/core/Result"));
/**
 * Use case for creating tasks from project context
 * Orchestrates task creation with intelligent project association
 * Following Clean Architecture and TOGAF principles
 */
class CreateTaskFromProjectUseCase {
  constructor(taskRepository, assetRepository, graph, getCurrentProjectUseCase) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[0]++;
    cov_1afv5apkyf().s[10]++;
    this.taskRepository = taskRepository;
    /* istanbul ignore next */
    cov_1afv5apkyf().s[11]++;
    this.assetRepository = assetRepository;
    /* istanbul ignore next */
    cov_1afv5apkyf().s[12]++;
    this.graph = graph;
    /* istanbul ignore next */
    cov_1afv5apkyf().s[13]++;
    this.getCurrentProjectUseCase = getCurrentProjectUseCase;
  }
  execute(request) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[1]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1afv5apkyf().s[14]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1afv5apkyf().f[2]++;
      cov_1afv5apkyf().s[15]++;
      try {
        // Validate request
        const validationResult =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[16]++, this.validateRequest(request));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[17]++;
        if (validationResult.isFailure) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[0][0]++;
          cov_1afv5apkyf().s[18]++;
          return {
            success: false,
            message: validationResult.error,
            errors: {
              request: [validationResult.error]
            }
          };
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[0][1]++;
        }
        // Apply template if specified
        const processedRequest =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[19]++, yield this.applyTemplate(request));
        // Get project context if not explicitly provided
        const projectContext =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[20]++, yield this.resolveProjectContext(processedRequest));
        // Create the task
        const taskResult =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[21]++, yield this.createTask(processedRequest, projectContext));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[22]++;
        if (taskResult.isFailure) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[1][0]++;
          cov_1afv5apkyf().s[23]++;
          return {
            success: false,
            message: taskResult.error,
            errors: {
              task: [taskResult.error]
            }
          };
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[1][1]++;
        }
        const task =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[24]++, taskResult.getValue());
        // Save task to repository
        /* istanbul ignore next */
        cov_1afv5apkyf().s[25]++;
        yield this.taskRepository.save(task);
        // Also save as asset for compatibility
        const saveResult =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[26]++, yield this.saveTaskAsAsset(task, processedRequest));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[27]++;
        if (saveResult.isFailure) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[2][0]++;
          cov_1afv5apkyf().s[28]++;
          console.warn('Failed to save task as asset:', saveResult.error);
          // Continue - task repository save was successful
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[2][1]++;
        }
        // Update RDF graph
        const rdfTriples =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[29]++, yield this.updateRDFGraph(task, projectContext));
        // Build successful response
        /* istanbul ignore next */
        cov_1afv5apkyf().s[30]++;
        return {
          success: true,
          taskId: task.getId().toString(),
          message: `Task "${task.getTitle()}" created successfully`,
          task: {
            id: task.getId().toString(),
            title: task.getTitle(),
            status: task.getStatus().toString(),
            priority: task.getPriority().toString(),
            projectId:
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[4][0]++, (_a = task.getProjectId()) === null) ||
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[4][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[3][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[3][1]++, _a.toString()),
            dueDate:
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[6][0]++, (_b = task.getDueDate()) === null) ||
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[6][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[5][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[5][1]++, _b.toISOString().split('T')[0]),
            tags: task.getTags()
          },
          rdfTriples
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1afv5apkyf().s[31]++;
        return {
          success: false,
          message: `Failed to create task: ${error.message}`,
          errors: {
            system: [error.message]
          }
        };
      }
    });
  }
  /**
   * Validate the task creation request
   */
  validateRequest(request) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[3]++;
    const errors =
    /* istanbul ignore next */
    (cov_1afv5apkyf().s[32]++, []);
    /* istanbul ignore next */
    cov_1afv5apkyf().s[33]++;
    if (
    /* istanbul ignore next */
    (cov_1afv5apkyf().b[8][0]++, !request.title) ||
    /* istanbul ignore next */
    (cov_1afv5apkyf().b[8][1]++, request.title.trim().length === 0)) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[7][0]++;
      cov_1afv5apkyf().s[34]++;
      errors.push('Task title is required');
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[7][1]++;
    }
    cov_1afv5apkyf().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_1afv5apkyf().b[10][0]++, request.title) &&
    /* istanbul ignore next */
    (cov_1afv5apkyf().b[10][1]++, request.title.length > 200)) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[9][0]++;
      cov_1afv5apkyf().s[36]++;
      errors.push('Task title cannot exceed 200 characters');
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[9][1]++;
    }
    cov_1afv5apkyf().s[37]++;
    if (request.estimatedHours !== undefined) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[11][0]++;
      cov_1afv5apkyf().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_1afv5apkyf().b[13][0]++, typeof request.estimatedHours !== 'number') ||
      /* istanbul ignore next */
      (cov_1afv5apkyf().b[13][1]++, request.estimatedHours < 0)) {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[12][0]++;
        cov_1afv5apkyf().s[39]++;
        errors.push('Estimated hours must be a non-negative number');
      } else
      /* istanbul ignore next */
      {
        cov_1afv5apkyf().b[12][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[11][1]++;
    }
    cov_1afv5apkyf().s[40]++;
    if (request.dueDate) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[14][0]++;
      const dueDate =
      /* istanbul ignore next */
      (cov_1afv5apkyf().s[41]++, new Date(request.dueDate));
      /* istanbul ignore next */
      cov_1afv5apkyf().s[42]++;
      if (isNaN(dueDate.getTime())) {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[15][0]++;
        cov_1afv5apkyf().s[43]++;
        errors.push('Due date must be a valid date');
      } else
      /* istanbul ignore next */
      {
        cov_1afv5apkyf().b[15][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[14][1]++;
    }
    cov_1afv5apkyf().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_1afv5apkyf().b[17][0]++, request.priority) &&
    /* istanbul ignore next */
    (cov_1afv5apkyf().b[17][1]++, !['low', 'medium', 'high', 'urgent'].includes(request.priority))) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[16][0]++;
      cov_1afv5apkyf().s[45]++;
      errors.push('Priority must be one of: low, medium, high, urgent');
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[16][1]++;
    }
    cov_1afv5apkyf().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_1afv5apkyf().b[19][0]++, request.status) &&
    /* istanbul ignore next */
    (cov_1afv5apkyf().b[19][1]++, !['todo', 'in-progress', 'done', 'cancelled'].includes(request.status))) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[18][0]++;
      cov_1afv5apkyf().s[47]++;
      errors.push('Status must be one of: todo, in-progress, done, cancelled');
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[18][1]++;
    }
    cov_1afv5apkyf().s[48]++;
    if (errors.length > 0) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[20][0]++;
      cov_1afv5apkyf().s[49]++;
      return Result_1.Result.fail(errors.join('; '));
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[20][1]++;
    }
    cov_1afv5apkyf().s[50]++;
    return Result_1.Result.ok();
  }
  /**
   * Apply task template if specified
   */
  applyTemplate(request) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[4]++;
    cov_1afv5apkyf().s[51]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1afv5apkyf().f[5]++;
      cov_1afv5apkyf().s[52]++;
      if (!request.templateId) {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[21][0]++;
        cov_1afv5apkyf().s[53]++;
        return request;
      } else
      /* istanbul ignore next */
      {
        cov_1afv5apkyf().b[21][1]++;
      }
      cov_1afv5apkyf().s[54]++;
      try {
        // Load template from repository
        const templateId =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[55]++, AssetId_1.AssetId.create(request.templateId));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[56]++;
        if (templateId.isFailure) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[22][0]++;
          cov_1afv5apkyf().s[57]++;
          console.warn('Invalid template ID:', request.templateId);
          /* istanbul ignore next */
          cov_1afv5apkyf().s[58]++;
          return request;
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[22][1]++;
        }
        const template =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[59]++, yield this.assetRepository.findById(templateId.getValue()));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[60]++;
        if (!template) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[23][0]++;
          cov_1afv5apkyf().s[61]++;
          console.warn('Template not found:', request.templateId);
          /* istanbul ignore next */
          cov_1afv5apkyf().s[62]++;
          return request;
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[23][1]++;
        }
        // Apply template properties
        const templateRequest =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[63]++, Object.assign({}, request));
        // Override with template values if not explicitly set
        /* istanbul ignore next */
        cov_1afv5apkyf().s[64]++;
        if (
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[25][0]++, !templateRequest.description) &&
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[25][1]++, template.getProperty('description'))) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[24][0]++;
          cov_1afv5apkyf().s[65]++;
          templateRequest.description = template.getProperty('description');
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[24][1]++;
        }
        cov_1afv5apkyf().s[66]++;
        if (
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[27][0]++, !templateRequest.priority) &&
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[27][1]++, template.getProperty('priority'))) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[26][0]++;
          cov_1afv5apkyf().s[67]++;
          templateRequest.priority = template.getProperty('priority');
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[26][1]++;
        }
        cov_1afv5apkyf().s[68]++;
        if (
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[29][0]++, !templateRequest.estimatedHours) &&
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[29][1]++, template.getProperty('estimatedHours'))) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[28][0]++;
          cov_1afv5apkyf().s[69]++;
          templateRequest.estimatedHours = template.getProperty('estimatedHours');
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[28][1]++;
        }
        cov_1afv5apkyf().s[70]++;
        if (
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[31][0]++, !templateRequest.tags) ||
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[31][1]++, templateRequest.tags.length === 0)) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[30][0]++;
          const templateTags =
          /* istanbul ignore next */
          (cov_1afv5apkyf().s[71]++, template.getProperty('tags'));
          /* istanbul ignore next */
          cov_1afv5apkyf().s[72]++;
          if (
          /* istanbul ignore next */
          (cov_1afv5apkyf().b[33][0]++, templateTags) &&
          /* istanbul ignore next */
          (cov_1afv5apkyf().b[33][1]++, Array.isArray(templateTags))) {
            /* istanbul ignore next */
            cov_1afv5apkyf().b[32][0]++;
            cov_1afv5apkyf().s[73]++;
            templateRequest.tags = templateTags;
          } else
          /* istanbul ignore next */
          {
            cov_1afv5apkyf().b[32][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[30][1]++;
        }
        // Apply template variable substitution
        cov_1afv5apkyf().s[74]++;
        if (request.templateVariables) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[34][0]++;
          cov_1afv5apkyf().s[75]++;
          templateRequest.title = this.substituteVariables(templateRequest.title, request.templateVariables);
          /* istanbul ignore next */
          cov_1afv5apkyf().s[76]++;
          if (templateRequest.description) {
            /* istanbul ignore next */
            cov_1afv5apkyf().b[35][0]++;
            cov_1afv5apkyf().s[77]++;
            templateRequest.description = this.substituteVariables(templateRequest.description, request.templateVariables);
          } else
          /* istanbul ignore next */
          {
            cov_1afv5apkyf().b[35][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[34][1]++;
        }
        cov_1afv5apkyf().s[78]++;
        return templateRequest;
      } catch (error) {
        /* istanbul ignore next */
        cov_1afv5apkyf().s[79]++;
        console.warn('Failed to apply template:', error);
        /* istanbul ignore next */
        cov_1afv5apkyf().s[80]++;
        return request;
      }
    });
  }
  /**
   * Substitute template variables in text
   */
  substituteVariables(text, variables) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[6]++;
    let result =
    /* istanbul ignore next */
    (cov_1afv5apkyf().s[81]++, text);
    /* istanbul ignore next */
    cov_1afv5apkyf().s[82]++;
    for (const [key, value] of Object.entries(variables)) {
      const regex =
      /* istanbul ignore next */
      (cov_1afv5apkyf().s[83]++, new RegExp(`\\{\\{${key}\\}\\}`, 'g'));
      /* istanbul ignore next */
      cov_1afv5apkyf().s[84]++;
      result = result.replace(regex, value);
    }
    /* istanbul ignore next */
    cov_1afv5apkyf().s[85]++;
    return result;
  }
  /**
   * Resolve project context for task association
   */
  resolveProjectContext(request) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[7]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1afv5apkyf().s[86]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1afv5apkyf().f[8]++;
      cov_1afv5apkyf().s[87]++;
      if (request.projectId) {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[36][0]++;
        // Validate provided project ID
        const projectId =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[88]++, AssetId_1.AssetId.create(request.projectId));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[89]++;
        if (projectId.isSuccess) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[37][0]++;
          const project =
          /* istanbul ignore next */
          (cov_1afv5apkyf().s[90]++, yield this.assetRepository.findById(projectId.getValue()));
          /* istanbul ignore next */
          cov_1afv5apkyf().s[91]++;
          if (project) {
            /* istanbul ignore next */
            cov_1afv5apkyf().b[38][0]++;
            cov_1afv5apkyf().s[92]++;
            return request.projectId;
          } else
          /* istanbul ignore next */
          {
            cov_1afv5apkyf().b[38][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[37][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1afv5apkyf().b[36][1]++;
      }
      // Use context-based project detection
      const projectResponse =
      /* istanbul ignore next */
      (cov_1afv5apkyf().s[93]++, yield this.getCurrentProjectUseCase.execute({
        activeFile:
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[40][0]++, (_a = request.context) === null) ||
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[40][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[39][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[39][1]++, _a.activeFile),
        preferences: {
          includeCompleted: false,
          maxResults: 5,
          selectionStrategy: 'context'
        }
      }));
      /* istanbul ignore next */
      cov_1afv5apkyf().s[94]++;
      return /* istanbul ignore next */(cov_1afv5apkyf().b[42][0]++, (_b = projectResponse.currentProject) === null) ||
      /* istanbul ignore next */
      (cov_1afv5apkyf().b[42][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_1afv5apkyf().b[41][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1afv5apkyf().b[41][1]++, _b.id);
    });
  }
  /**
   * Create the task domain entity
   */
  createTask(request, projectId) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[9]++;
    var _a;
    /* istanbul ignore next */
    cov_1afv5apkyf().s[95]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1afv5apkyf().f[10]++;
      // Parse priority
      let priority;
      /* istanbul ignore next */
      cov_1afv5apkyf().s[96]++;
      if (request.priority) {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[43][0]++;
        const priorityResult =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[97]++, Priority_1.Priority.create(request.priority));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[98]++;
        if (priorityResult.isFailure) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[44][0]++;
          cov_1afv5apkyf().s[99]++;
          return Result_1.Result.fail(`Invalid priority: ${priorityResult.error}`);
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[44][1]++;
        }
        cov_1afv5apkyf().s[100]++;
        priority = priorityResult.getValue();
      } else {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[43][1]++;
        cov_1afv5apkyf().s[101]++;
        priority = Priority_1.Priority.medium();
      }
      // Parse status
      let status;
      /* istanbul ignore next */
      cov_1afv5apkyf().s[102]++;
      if (request.status) {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[45][0]++;
        const statusResult =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[103]++, TaskStatus_1.TaskStatus.create(request.status));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[104]++;
        if (statusResult.isFailure) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[46][0]++;
          cov_1afv5apkyf().s[105]++;
          return Result_1.Result.fail(`Invalid status: ${statusResult.error}`);
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[46][1]++;
        }
        cov_1afv5apkyf().s[106]++;
        status = statusResult.getValue();
      } else {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[45][1]++;
        cov_1afv5apkyf().s[107]++;
        status = TaskStatus_1.TaskStatus.todo();
      }
      // Parse project ID
      let taskProjectId;
      /* istanbul ignore next */
      cov_1afv5apkyf().s[108]++;
      if (projectId) {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[47][0]++;
        const projectIdResult =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[109]++, AssetId_1.AssetId.create(projectId));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[110]++;
        if (projectIdResult.isSuccess) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[48][0]++;
          cov_1afv5apkyf().s[111]++;
          taskProjectId = projectIdResult.getValue();
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[48][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1afv5apkyf().b[47][1]++;
      }
      // Parse due date
      let dueDate;
      /* istanbul ignore next */
      cov_1afv5apkyf().s[112]++;
      if (request.dueDate) {
        /* istanbul ignore next */
        cov_1afv5apkyf().b[49][0]++;
        cov_1afv5apkyf().s[113]++;
        dueDate = new Date(request.dueDate);
        /* istanbul ignore next */
        cov_1afv5apkyf().s[114]++;
        if (isNaN(dueDate.getTime())) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[50][0]++;
          cov_1afv5apkyf().s[115]++;
          return Result_1.Result.fail('Invalid due date format');
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[50][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1afv5apkyf().b[49][1]++;
      }
      // Create task
      cov_1afv5apkyf().s[116]++;
      return Task_1.Task.create({
        title: request.title.trim(),
        description:
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[52][0]++, (_a = request.description) === null) ||
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[52][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[51][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[51][1]++, _a.trim()),
        priority: priority,
        status: status,
        projectId: taskProjectId,
        dueDate,
        estimatedHours: request.estimatedHours,
        tags:
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[53][0]++, request.tags) ||
        /* istanbul ignore next */
        (cov_1afv5apkyf().b[53][1]++, [])
      });
    });
  }
  /**
   * Save task as an asset in the repository
   */
  saveTaskAsAsset(task, request) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[11]++;
    var _a, _b, _c;
    /* istanbul ignore next */
    cov_1afv5apkyf().s[117]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1afv5apkyf().f[12]++;
      cov_1afv5apkyf().s[118]++;
      try {
        // Create asset from task
        const assetResult =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[119]++, Asset_1.Asset.create({
          id: AssetId_1.AssetId.create(task.getId().toString()).getValue(),
          label: task.getTitle(),
          className: ClassName_1.ClassName.create('ems__Task').getValue(),
          ontology: OntologyPrefix_1.OntologyPrefix.create('ems').getValue(),
          properties: Object.assign(Object.assign({}, task.toFrontmatter()), {
            // Add context information
            creationContext: {
              activeFile:
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[55][0]++, (_a = request.context) === null) ||
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[55][1]++, _a === void 0) ?
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[54][0]++, void 0) :
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[54][1]++, _a.activeFile),
              selection:
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[57][0]++, (_b = request.context) === null) ||
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[57][1]++, _b === void 0) ?
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[56][0]++, void 0) :
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[56][1]++, _b.selection),
              focusContext:
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[59][0]++, (_c = request.context) === null) ||
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[59][1]++, _c === void 0) ?
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[58][0]++, void 0) :
              /* istanbul ignore next */
              (cov_1afv5apkyf().b[58][1]++, _c.focusContext),
              timestamp: new Date().toISOString()
            }
          })
        }));
        /* istanbul ignore next */
        cov_1afv5apkyf().s[120]++;
        if (assetResult.isFailure) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[60][0]++;
          cov_1afv5apkyf().s[121]++;
          return Result_1.Result.fail(`Failed to create asset: ${assetResult.error}`);
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[60][1]++;
        }
        const asset =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[122]++, assetResult.getValue());
        /* istanbul ignore next */
        cov_1afv5apkyf().s[123]++;
        yield this.assetRepository.save(asset);
        /* istanbul ignore next */
        cov_1afv5apkyf().s[124]++;
        return Result_1.Result.ok();
      } catch (error) {
        /* istanbul ignore next */
        cov_1afv5apkyf().s[125]++;
        return Result_1.Result.fail(`Failed to save task: ${error.message}`);
      }
    });
  }
  /**
   * Update RDF graph with task relationships and metadata
   */
  updateRDFGraph(task, projectId) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[13]++;
    cov_1afv5apkyf().s[126]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1afv5apkyf().f[14]++;
      const triples =
      /* istanbul ignore next */
      (cov_1afv5apkyf().s[127]++, []);
      const taskIRI =
      /* istanbul ignore next */
      (cov_1afv5apkyf().s[128]++, this.ensureValidIRI(task.getId().toString()));
      /* istanbul ignore next */
      cov_1afv5apkyf().s[129]++;
      try {
        /* istanbul ignore next */
        cov_1afv5apkyf().s[130]++;
        // Add basic task triples
        this.addTriple(triples, taskIRI, 'rdf:type', 'ems:Task');
        /* istanbul ignore next */
        cov_1afv5apkyf().s[131]++;
        this.addTriple(triples, taskIRI, 'ems:title', task.getTitle());
        /* istanbul ignore next */
        cov_1afv5apkyf().s[132]++;
        this.addTriple(triples, taskIRI, 'ems:status', task.getStatus().toString());
        /* istanbul ignore next */
        cov_1afv5apkyf().s[133]++;
        this.addTriple(triples, taskIRI, 'ems:priority', task.getPriority().toString());
        /* istanbul ignore next */
        cov_1afv5apkyf().s[134]++;
        this.addTriple(triples, taskIRI, 'ems:createdAt', task.getCreatedAt().toISOString());
        /* istanbul ignore next */
        cov_1afv5apkyf().s[135]++;
        this.addTriple(triples, taskIRI, 'ems:updatedAt', task.getUpdatedAt().toISOString());
        // Add optional properties
        const description =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[136]++, task.getDescription());
        /* istanbul ignore next */
        cov_1afv5apkyf().s[137]++;
        if (description) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[61][0]++;
          cov_1afv5apkyf().s[138]++;
          this.addTriple(triples, taskIRI, 'ems:description', description);
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[61][1]++;
        }
        const dueDate =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[139]++, task.getDueDate());
        /* istanbul ignore next */
        cov_1afv5apkyf().s[140]++;
        if (dueDate) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[62][0]++;
          cov_1afv5apkyf().s[141]++;
          this.addTriple(triples, taskIRI, 'ems:dueDate', dueDate.toISOString());
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[62][1]++;
        }
        const estimatedHours =
        /* istanbul ignore next */
        (cov_1afv5apkyf().s[142]++, task.getEstimatedHours());
        /* istanbul ignore next */
        cov_1afv5apkyf().s[143]++;
        if (estimatedHours !== undefined) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[63][0]++;
          cov_1afv5apkyf().s[144]++;
          this.addTriple(triples, taskIRI, 'ems:estimatedHours', estimatedHours.toString());
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[63][1]++;
        }
        // Add project relationship
        cov_1afv5apkyf().s[145]++;
        if (projectId) {
          /* istanbul ignore next */
          cov_1afv5apkyf().b[64][0]++;
          const projectIRI =
          /* istanbul ignore next */
          (cov_1afv5apkyf().s[146]++, this.ensureValidIRI(projectId));
          /* istanbul ignore next */
          cov_1afv5apkyf().s[147]++;
          this.addTriple(triples, taskIRI, 'ems:belongsToProject', projectIRI);
          /* istanbul ignore next */
          cov_1afv5apkyf().s[148]++;
          this.addTriple(triples, projectIRI, 'ems:hasTask', taskIRI);
        } else
        /* istanbul ignore next */
        {
          cov_1afv5apkyf().b[64][1]++;
        }
        // Add tags
        cov_1afv5apkyf().s[149]++;
        for (const tag of task.getTags()) {
          /* istanbul ignore next */
          cov_1afv5apkyf().s[150]++;
          this.addTriple(triples, taskIRI, 'ems:hasTag', tag);
        }
        // Add all triples to graph
        /* istanbul ignore next */
        cov_1afv5apkyf().s[151]++;
        for (const tripleData of triples) {
          /* istanbul ignore next */
          cov_1afv5apkyf().s[152]++;
          try {
            // Ensure valid IRI format for subjects and predicates
            const subjectIRI =
            /* istanbul ignore next */
            (cov_1afv5apkyf().s[153]++, this.ensureValidIRI(tripleData.subject));
            const predicateIRI =
            /* istanbul ignore next */
            (cov_1afv5apkyf().s[154]++, this.ensureValidIRI(tripleData.predicate));
            const triple =
            /* istanbul ignore next */
            (cov_1afv5apkyf().s[155]++, new Triple_1.Triple(new Triple_1.IRI(subjectIRI), new Triple_1.IRI(predicateIRI), tripleData.object.startsWith('"') ?
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[65][0]++, new Triple_1.Literal(tripleData.object.slice(1, -1))) :
            /* istanbul ignore next */
            (cov_1afv5apkyf().b[65][1]++, new Triple_1.IRI(this.ensureValidIRI(tripleData.object)))));
            /* istanbul ignore next */
            cov_1afv5apkyf().s[156]++;
            this.graph.add(triple);
          } catch (error) {
            /* istanbul ignore next */
            cov_1afv5apkyf().s[157]++;
            console.warn('Failed to create triple:', tripleData, error);
          }
        }
        /* istanbul ignore next */
        cov_1afv5apkyf().s[158]++;
        return triples;
      } catch (error) {
        /* istanbul ignore next */
        cov_1afv5apkyf().s[159]++;
        console.warn('Failed to update RDF graph:', error);
        /* istanbul ignore next */
        cov_1afv5apkyf().s[160]++;
        return [];
      }
    });
  }
  /**
   * Helper method to add triple data
   */
  addTriple(triples, subject, predicate, object) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[15]++;
    cov_1afv5apkyf().s[161]++;
    if (!triples) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[66][0]++;
      cov_1afv5apkyf().s[162]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[66][1]++;
    }
    cov_1afv5apkyf().s[163]++;
    triples.push({
      subject,
      predicate,
      object:
      /* istanbul ignore next */
      (cov_1afv5apkyf().b[68][0]++, object.includes(' ')) ||
      /* istanbul ignore next */
      (cov_1afv5apkyf().b[68][1]++, object.includes(':') === false) ?
      /* istanbul ignore next */
      (cov_1afv5apkyf().b[67][0]++, `"${object}"`) :
      /* istanbul ignore next */
      (cov_1afv5apkyf().b[67][1]++, object)
    });
  }
  /**
   * Ensure a string is formatted as a valid IRI
   */
  ensureValidIRI(value) {
    /* istanbul ignore next */
    cov_1afv5apkyf().f[16]++;
    cov_1afv5apkyf().s[164]++;
    // If it looks like a UUID, wrap it in a namespace
    if (/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(value)) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[69][0]++;
      cov_1afv5apkyf().s[165]++;
      return `ems:${value}`;
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[69][1]++;
    }
    // If it already has a scheme or namespace, return as-is
    cov_1afv5apkyf().s[166]++;
    if (value.includes(':')) {
      /* istanbul ignore next */
      cov_1afv5apkyf().b[70][0]++;
      cov_1afv5apkyf().s[167]++;
      return value;
    } else
    /* istanbul ignore next */
    {
      cov_1afv5apkyf().b[70][1]++;
    }
    // Otherwise, add default namespace
    cov_1afv5apkyf().s[168]++;
    return `ems:${value}`;
  }
}
/* istanbul ignore next */
cov_1afv5apkyf().s[169]++;
exports.CreateTaskFromProjectUseCase = CreateTaskFromProjectUseCase;
// Import required classes that might be missing
const ClassName_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[170]++, require("../../domain/value-objects/ClassName"));
const OntologyPrefix_1 =
/* istanbul ignore next */
(cov_1afv5apkyf().s[171]++, require("../../domain/value-objects/OntologyPrefix"));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,