ba455c0d7f014a451bb676e0339cbd3b
"use strict";

/* istanbul ignore next */
function cov_1nfja7to6d() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/GetLayoutForClassUseCase.ts";
  var hash = "25c1315655c00b602add403741358b5e60404c15";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/GetLayoutForClassUseCase.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 42
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 20
        },
        end: {
          line: 5,
          column: 67
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 52
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 49
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "7": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "8": {
        start: {
          line: 15,
          column: 40
        },
        end: {
          line: 15,
          column: 87
        }
      },
      "9": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 18,
          column: 17
        }
      },
      "10": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 96
        }
      },
      "11": {
        start: {
          line: 19,
          column: 34
        },
        end: {
          line: 19,
          column: 60
        }
      },
      "12": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 23,
          column: 79
        }
      },
      "13": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 30,
          column: 17
        }
      },
      "14": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "15": {
        start: {
          line: 32,
          column: 37
        },
        end: {
          line: 32,
          column: 80
        }
      },
      "16": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 38,
          column: 17
        }
      },
      "17": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 37,
          column: 23
        }
      },
      "18": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 43,
          column: 19
        }
      },
      "19": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 88
        }
      },
      "20": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "21": {
        start: {
          line: 53,
          column: 34
        },
        end: {
          line: 53,
          column: 72
        }
      },
      "22": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "23": {
        start: {
          line: 55,
          column: 40
        },
        end: {
          line: 55,
          column: 81
        }
      },
      "24": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 57,
          column: 29
        }
      },
      "25": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 29
        }
      },
      "26": {
        start: {
          line: 58,
          column: 32
        },
        end: {
          line: 58,
          column: 106
        }
      },
      "27": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 61,
          column: 17
        }
      },
      "28": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 38
        }
      },
      "29": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 24
        }
      },
      "30": {
        start: {
          line: 68,
          column: 26
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "31": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 54
        }
      },
      "32": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 78,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 34
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 21
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 55
          },
          end: {
            line: 12,
            column: 56
          }
        },
        loc: {
          start: {
            line: 12,
            column: 68
          },
          end: {
            line: 48,
            column: 9
          }
        },
        line: 12
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 51,
            column: 55
          },
          end: {
            line: 51,
            column: 56
          }
        },
        loc: {
          start: {
            line: 51,
            column: 68
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 51
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 66
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 23,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 72
          }
        }, {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 23,
            column: 79
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 30,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 30,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 57,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 57,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 15
          },
          end: {
            line: 75,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 15
          },
          end: {
            line: 75,
            column: 35
          }
        }, {
          start: {
            line: 75,
            column: 39
          },
          end: {
            line: 75,
            column: 53
          }
        }],
        line: 75
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/GetLayoutForClassUseCase.ts",
      mappings: ";;;;AAEA,oEAAiE;AACjE,qDAAkD;AAYlD,MAAa,wBAAwB;IACjC,YACY,gBAAwC;QAAxC,qBAAgB,GAAhB,gBAAgB,CAAwB;IACjD,CAAC;IAEE,OAAO,CAAC,OAAiC;;YAC3C,IAAI;gBACA,sBAAsB;gBACtB,MAAM,eAAe,GAAG,qBAAS,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBAC5D,IAAI,eAAe,CAAC,SAAS,EAAE;oBAC3B,OAAO,eAAM,CAAC,IAAI,CACd,uBAAuB,eAAe,CAAC,KAAK,EAAE,CACjD,CAAC;iBACL;gBAED,MAAM,SAAS,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;gBAE7C,8BAA8B;gBAC9B,MAAM,OAAO,GAAG,OAAO,CAAC,eAAe;oBACnC,CAAC,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS,CAAC;oBACpD,CAAC,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;gBAEhE,0CAA0C;gBAC1C,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpB,OAAO,eAAM,CAAC,EAAE,CAA4B;wBACxC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;wBAClB,YAAY,EAAE,KAAK;qBACtB,CAAC,CAAC;iBACN;gBAED,uDAAuD;gBACvD,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;gBACjE,IAAI,YAAY,EAAE;oBACd,OAAO,eAAM,CAAC,EAAE,CAA4B;wBACxC,MAAM,EAAE,YAAY;wBACpB,YAAY,EAAE,IAAI;qBACrB,CAAC,CAAC;iBACN;gBAED,qCAAqC;gBACrC,OAAO,eAAM,CAAC,EAAE,CAA4B;oBACxC,MAAM,EAAE,IAAI;oBACZ,YAAY,EAAE,IAAI;iBACrB,CAAC,CAAC;aAEN;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,eAAM,CAAC,IAAI,CACd,mCAAmC,KAAK,EAAE,CAC7C,CAAC;aACL;QACL,CAAC;KAAA;IAEa,qBAAqB,CAAC,SAAoB;;YACpD,8BAA8B;YAC9B,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAE7D,KAAK,MAAM,WAAW,IAAI,aAAa,EAAE;gBACrC,MAAM,eAAe,GAAG,qBAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBACtD,IAAI,eAAe,CAAC,SAAS;oBAAE,SAAS;gBAExC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAC1D,eAAe,CAAC,QAAQ,EAAE,CAC7B,CAAC;gBAEF,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;iBACrB;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAEO,gBAAgB,CAAC,SAAiB;QACtC,+BAA+B;QAC/B,MAAM,SAAS,GAA6B;YACxC,cAAc,EAAE,CAAC,aAAa,EAAE,YAAY,CAAC;YAC7C,WAAW,EAAE,CAAC,aAAa,EAAE,YAAY,CAAC;YAC1C,WAAW,EAAE,CAAC,YAAY,CAAC;YAC3B,WAAW,EAAE,CAAC,YAAY,CAAC;YAC3B,aAAa,EAAE,CAAC,YAAY,CAAC;SAChC,CAAC;QAEF,OAAO,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClD,CAAC;CACJ;AApFD,4DAoFC",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/application/use-cases/GetLayoutForClassUseCase.ts"],
      sourcesContent: ["import { IClassLayoutRepository } from '../../domain/repositories/IClassLayoutRepository';\nimport { ClassLayout } from '../../domain/entities/ClassLayout';\nimport { ClassName } from '../../domain/value-objects/ClassName';\nimport { Result } from '../../domain/core/Result';\n\nexport interface GetLayoutForClassRequest {\n    className: string;\n    includeDisabled?: boolean;\n}\n\nexport interface GetLayoutForClassResponse {\n    layout: ClassLayout | null;\n    fallbackUsed: boolean;\n}\n\nexport class GetLayoutForClassUseCase {\n    constructor(\n        private layoutRepository: IClassLayoutRepository\n    ) {}\n\n    async execute(request: GetLayoutForClassRequest): Promise<Result<GetLayoutForClassResponse>> {\n        try {\n            // Validate class name\n            const classNameResult = ClassName.create(request.className);\n            if (classNameResult.isFailure) {\n                return Result.fail<GetLayoutForClassResponse>(\n                    `Invalid class name: ${classNameResult.error}`\n                );\n            }\n\n            const className = classNameResult.getValue();\n\n            // Find layouts for this class\n            const layouts = request.includeDisabled \n                ? await this.layoutRepository.findByClass(className)\n                : await this.layoutRepository.findEnabledByClass(className);\n\n            // Return highest priority layout if found\n            if (layouts.length > 0) {\n                return Result.ok<GetLayoutForClassResponse>({\n                    layout: layouts[0], // Already sorted by priority\n                    fallbackUsed: false\n                });\n            }\n\n            // Try to find parent class layouts (inheritance chain)\n            const parentLayout = await this.findParentClassLayout(className);\n            if (parentLayout) {\n                return Result.ok<GetLayoutForClassResponse>({\n                    layout: parentLayout,\n                    fallbackUsed: true\n                });\n            }\n\n            // No layout found - will use default\n            return Result.ok<GetLayoutForClassResponse>({\n                layout: null,\n                fallbackUsed: true\n            });\n\n        } catch (error) {\n            return Result.fail<GetLayoutForClassResponse>(\n                `Failed to get layout for class: ${error}`\n            );\n        }\n    }\n\n    private async findParentClassLayout(className: ClassName): Promise<ClassLayout | null> {\n        // Check common parent classes\n        const parentClasses = this.getParentClasses(className.value);\n        \n        for (const parentClass of parentClasses) {\n            const parentClassName = ClassName.create(parentClass);\n            if (parentClassName.isFailure) continue;\n            \n            const layouts = await this.layoutRepository.findEnabledByClass(\n                parentClassName.getValue()\n            );\n            \n            if (layouts.length > 0) {\n                return layouts[0];\n            }\n        }\n        \n        return null;\n    }\n\n    private getParentClasses(className: string): string[] {\n        // Define inheritance hierarchy\n        const hierarchy: Record<string, string[]> = {\n            'ems__Project': ['ems__Effort', 'exo__Asset'],\n            'ems__Task': ['ems__Effort', 'exo__Asset'],\n            'ems__Area': ['exo__Asset'],\n            'ems__Goal': ['exo__Asset'],\n            'ems__Effort': ['exo__Asset']\n        };\n\n        return hierarchy[className] || ['exo__Asset'];\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "25c1315655c00b602add403741358b5e60404c15"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nfja7to6d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nfja7to6d();
cov_1nfja7to6d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1nfja7to6d().s[1]++;
exports.GetLayoutForClassUseCase = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1nfja7to6d().s[2]++, require("tslib"));
const ClassName_1 =
/* istanbul ignore next */
(cov_1nfja7to6d().s[3]++, require("../../domain/value-objects/ClassName"));
const Result_1 =
/* istanbul ignore next */
(cov_1nfja7to6d().s[4]++, require("../../domain/core/Result"));
class GetLayoutForClassUseCase {
  constructor(layoutRepository) {
    /* istanbul ignore next */
    cov_1nfja7to6d().f[0]++;
    cov_1nfja7to6d().s[5]++;
    this.layoutRepository = layoutRepository;
  }
  execute(request) {
    /* istanbul ignore next */
    cov_1nfja7to6d().f[1]++;
    cov_1nfja7to6d().s[6]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nfja7to6d().f[2]++;
      cov_1nfja7to6d().s[7]++;
      try {
        // Validate class name
        const classNameResult =
        /* istanbul ignore next */
        (cov_1nfja7to6d().s[8]++, ClassName_1.ClassName.create(request.className));
        /* istanbul ignore next */
        cov_1nfja7to6d().s[9]++;
        if (classNameResult.isFailure) {
          /* istanbul ignore next */
          cov_1nfja7to6d().b[0][0]++;
          cov_1nfja7to6d().s[10]++;
          return Result_1.Result.fail(`Invalid class name: ${classNameResult.error}`);
        } else
        /* istanbul ignore next */
        {
          cov_1nfja7to6d().b[0][1]++;
        }
        const className =
        /* istanbul ignore next */
        (cov_1nfja7to6d().s[11]++, classNameResult.getValue());
        // Find layouts for this class
        const layouts =
        /* istanbul ignore next */
        (cov_1nfja7to6d().s[12]++, request.includeDisabled ?
        /* istanbul ignore next */
        (cov_1nfja7to6d().b[1][0]++, yield this.layoutRepository.findByClass(className)) :
        /* istanbul ignore next */
        (cov_1nfja7to6d().b[1][1]++, yield this.layoutRepository.findEnabledByClass(className)));
        // Return highest priority layout if found
        /* istanbul ignore next */
        cov_1nfja7to6d().s[13]++;
        if (layouts.length > 0) {
          /* istanbul ignore next */
          cov_1nfja7to6d().b[2][0]++;
          cov_1nfja7to6d().s[14]++;
          return Result_1.Result.ok({
            layout: layouts[0],
            fallbackUsed: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_1nfja7to6d().b[2][1]++;
        }
        // Try to find parent class layouts (inheritance chain)
        const parentLayout =
        /* istanbul ignore next */
        (cov_1nfja7to6d().s[15]++, yield this.findParentClassLayout(className));
        /* istanbul ignore next */
        cov_1nfja7to6d().s[16]++;
        if (parentLayout) {
          /* istanbul ignore next */
          cov_1nfja7to6d().b[3][0]++;
          cov_1nfja7to6d().s[17]++;
          return Result_1.Result.ok({
            layout: parentLayout,
            fallbackUsed: true
          });
        } else
        /* istanbul ignore next */
        {
          cov_1nfja7to6d().b[3][1]++;
        }
        // No layout found - will use default
        cov_1nfja7to6d().s[18]++;
        return Result_1.Result.ok({
          layout: null,
          fallbackUsed: true
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1nfja7to6d().s[19]++;
        return Result_1.Result.fail(`Failed to get layout for class: ${error}`);
      }
    });
  }
  findParentClassLayout(className) {
    /* istanbul ignore next */
    cov_1nfja7to6d().f[3]++;
    cov_1nfja7to6d().s[20]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1nfja7to6d().f[4]++;
      // Check common parent classes
      const parentClasses =
      /* istanbul ignore next */
      (cov_1nfja7to6d().s[21]++, this.getParentClasses(className.value));
      /* istanbul ignore next */
      cov_1nfja7to6d().s[22]++;
      for (const parentClass of parentClasses) {
        const parentClassName =
        /* istanbul ignore next */
        (cov_1nfja7to6d().s[23]++, ClassName_1.ClassName.create(parentClass));
        /* istanbul ignore next */
        cov_1nfja7to6d().s[24]++;
        if (parentClassName.isFailure) {
          /* istanbul ignore next */
          cov_1nfja7to6d().b[4][0]++;
          cov_1nfja7to6d().s[25]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1nfja7to6d().b[4][1]++;
        }
        const layouts =
        /* istanbul ignore next */
        (cov_1nfja7to6d().s[26]++, yield this.layoutRepository.findEnabledByClass(parentClassName.getValue()));
        /* istanbul ignore next */
        cov_1nfja7to6d().s[27]++;
        if (layouts.length > 0) {
          /* istanbul ignore next */
          cov_1nfja7to6d().b[5][0]++;
          cov_1nfja7to6d().s[28]++;
          return layouts[0];
        } else
        /* istanbul ignore next */
        {
          cov_1nfja7to6d().b[5][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1nfja7to6d().s[29]++;
      return null;
    });
  }
  getParentClasses(className) {
    /* istanbul ignore next */
    cov_1nfja7to6d().f[5]++;
    // Define inheritance hierarchy
    const hierarchy =
    /* istanbul ignore next */
    (cov_1nfja7to6d().s[30]++, {
      'ems__Project': ['ems__Effort', 'exo__Asset'],
      'ems__Task': ['ems__Effort', 'exo__Asset'],
      'ems__Area': ['exo__Asset'],
      'ems__Goal': ['exo__Asset'],
      'ems__Effort': ['exo__Asset']
    });
    /* istanbul ignore next */
    cov_1nfja7to6d().s[31]++;
    return /* istanbul ignore next */(cov_1nfja7to6d().b[6][0]++, hierarchy[className]) ||
    /* istanbul ignore next */
    (cov_1nfja7to6d().b[6][1]++, ['exo__Asset']);
  }
}
/* istanbul ignore next */
cov_1nfja7to6d().s[32]++;
exports.GetLayoutForClassUseCase = GetLayoutForClassUseCase;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,