{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/services/ObsidianCommandExecutor.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/services/ObsidianCommandExecutor.ts"],"sourcesContent":["import { App, Notice, TFile, TFolder, Modal } from \"obsidian\";\nimport {\n  ICommandExecutor,\n  CommandExecutionRequest,\n  CommandExecutionResult,\n} from \"../../application/services/ICommandExecutor\";\nimport { Result } from \"../../domain/core/Result\";\nimport { CommandType } from \"../../domain/entities/ButtonCommand\";\nimport { IAssetRepository } from \"../../domain/repositories/IAssetRepository\";\nimport { Asset } from \"../../domain/entities/Asset\";\nimport { AssetId } from \"../../domain/value-objects/AssetId\";\nimport { ClassName } from \"../../domain/value-objects/ClassName\";\nimport { OntologyPrefix } from \"../../domain/value-objects/OntologyPrefix\";\nimport { CreateChildTaskUseCase } from \"../../application/use-cases/CreateChildTaskUseCase\";\nimport { CreateChildAreaUseCase } from \"../../application/use-cases/CreateChildAreaUseCase\";\n\n/**\n * Obsidian implementation of command executor\n * Handles actual command execution in the Obsidian environment\n */\nexport class ObsidianCommandExecutor implements ICommandExecutor {\n  private handlers: Map<\n    CommandType,\n    (request: CommandExecutionRequest) => Promise<Result<any>>\n  >;\n\n  constructor(\n    private app: App,\n    private assetRepository: IAssetRepository,\n    private createChildTaskUseCase?: CreateChildTaskUseCase,\n    private createChildAreaUseCase?: CreateChildAreaUseCase,\n  ) {\n    this.handlers = new Map();\n    this.registerDefaultHandlers();\n  }\n\n  async execute(\n    request: CommandExecutionRequest,\n  ): Promise<Result<CommandExecutionResult>> {\n    const startTime = Date.now();\n\n    try {\n      // Validate request\n      const validationResult = this.validate(request);\n      if (validationResult.isFailure) {\n        return Result.fail<CommandExecutionResult>(validationResult.error);\n      }\n\n      // Get handler for command type\n      const handler = this.handlers.get(request.command.type);\n      if (!handler) {\n        return Result.fail<CommandExecutionResult>(\n          `No handler registered for command type: ${request.command.type}`,\n        );\n      }\n\n      // Execute command\n      const executionResult = await handler(request);\n\n      const executionTime = Date.now() - startTime;\n\n      if (executionResult.isFailure) {\n        return Result.ok<CommandExecutionResult>({\n          commandId: request.context.commandId,\n          status: \"failure\",\n          error: executionResult.error,\n          executionTime,\n        });\n      }\n\n      return Result.ok<CommandExecutionResult>({\n        commandId: request.context.commandId,\n        status: \"success\",\n        output: executionResult.getValue(),\n        executionTime,\n      });\n    } catch (error) {\n      const executionTime = Date.now() - startTime;\n      return Result.ok<CommandExecutionResult>({\n        commandId: request.context.commandId,\n        status: \"failure\",\n        error: `Unexpected error: ${error.message}`,\n        executionTime,\n      });\n    }\n  }\n\n  registerHandler(\n    type: CommandType,\n    handler: (request: CommandExecutionRequest) => Promise<Result<any>>,\n  ): void {\n    this.handlers.set(type, handler);\n  }\n\n  isSupported(type: CommandType): boolean {\n    return this.handlers.has(type);\n  }\n\n  validate(request: CommandExecutionRequest): Result<void> {\n    if (!request.command) {\n      return Result.fail<void>(\"Command is required\");\n    }\n\n    if (!request.context) {\n      return Result.fail<void>(\"Execution context is required\");\n    }\n\n    // Validate command-specific requirements\n    const command = request.command;\n\n    if (\n      command.requiresInput &&\n      (!request.context.parameters ||\n        Object.keys(request.context.parameters).length === 0)\n    ) {\n      return Result.fail<void>(\"Command requires input parameters\");\n    }\n\n    return Result.ok<void>();\n  }\n\n  private registerDefaultHandlers(): void {\n    // CREATE_ASSET handler\n    this.registerHandler(CommandType.CREATE_ASSET, async (request) => {\n      const params = request.context.parameters;\n\n      // Extract parameters\n      const title = params.title || \"Untitled\";\n      const className =\n        params.className || request.context.targetClass || \"exo__Asset\";\n      const ontology = params.ontology || \"exo\";\n      const properties = params.properties || {};\n\n      // Create asset ID\n      const idResult = AssetId.create(this.sanitizeFileName(title));\n      if (idResult.isFailure) {\n        return Result.fail<any>(idResult.error);\n      }\n\n      // Create class name\n      const classNameResult = ClassName.create(className);\n      if (classNameResult.isFailure) {\n        return Result.fail<any>(classNameResult.error);\n      }\n\n      // Create ontology prefix\n      const ontologyResult = OntologyPrefix.create(ontology);\n      if (ontologyResult.isFailure) {\n        return Result.fail<any>(ontologyResult.error);\n      }\n\n      // Create asset\n      const assetResult = Asset.create({\n        id: idResult.getValue(),\n        className: classNameResult.getValue(),\n        ontology: ontologyResult.getValue(),\n        label: title,\n        description: params.description || \"\",\n        properties: properties,\n      });\n\n      if (assetResult.isFailure) {\n        return Result.fail<any>(assetResult.error);\n      }\n\n      // Save asset\n      await this.assetRepository.save(assetResult.getValue());\n\n      // Open the new asset\n      const file = this.app.vault.getAbstractFileByPath(`${title}.md`);\n      if (file instanceof TFile) {\n        await this.app.workspace.getLeaf().openFile(file);\n      }\n\n      new Notice(`Asset \"${title}\" created successfully`);\n      return Result.ok<any>({ assetId: idResult.getValue().toString() });\n    });\n\n    // OPEN_ASSET handler\n    this.registerHandler(CommandType.OPEN_ASSET, async (request) => {\n      const assetId =\n        request.context.assetId || request.context.parameters.assetId;\n\n      if (!assetId) {\n        return Result.fail<any>(\"Asset ID is required for OPEN_ASSET command\");\n      }\n\n      const file = this.app.vault.getAbstractFileByPath(`${assetId}.md`);\n      if (!(file instanceof TFile)) {\n        return Result.fail<any>(`Asset not found: ${assetId}`);\n      }\n\n      await this.app.workspace.getLeaf(true).openFile(file);\n      return Result.ok<any>({ opened: assetId });\n    });\n\n    // DELETE_ASSET handler\n    this.registerHandler(CommandType.DELETE_ASSET, async (request) => {\n      const assetId =\n        request.context.assetId || request.context.parameters.assetId;\n\n      if (!assetId) {\n        return Result.fail<any>(\n          \"Asset ID is required for DELETE_ASSET command\",\n        );\n      }\n\n      const file = this.app.vault.getAbstractFileByPath(`${assetId}.md`);\n      if (!(file instanceof TFile)) {\n        return Result.fail<any>(`Asset not found: ${assetId}`);\n      }\n\n      // Confirm deletion\n      const confirmDelete = await this.confirmAction(\n        `Delete Asset`,\n        `Are you sure you want to delete \"${assetId}\"? This cannot be undone.`,\n      );\n\n      if (!confirmDelete) {\n        return Result.ok<any>({ cancelled: true });\n      }\n\n      await this.app.vault.delete(file);\n      new Notice(`Asset \"${assetId}\" deleted`);\n      return Result.ok<any>({ deleted: assetId });\n    });\n\n    // RUN_TEMPLATE handler\n    this.registerHandler(CommandType.RUN_TEMPLATE, async (request) => {\n      const templateName =\n        request.context.template || request.context.parameters.template_name;\n      const targetAssetId = request.context.assetId;\n\n      if (!templateName) {\n        return Result.fail<any>(\"Template name is required\");\n      }\n\n      if (!targetAssetId) {\n        return Result.fail<any>(\n          \"Target asset is required for template application\",\n        );\n      }\n\n      // Find template file\n      const templateFile = this.app.vault.getAbstractFileByPath(\n        `templates/${templateName}.md`,\n      );\n      if (!(templateFile instanceof TFile)) {\n        return Result.fail<any>(`Template not found: ${templateName}`);\n      }\n\n      // Read template content\n      const templateContent = await this.app.vault.read(templateFile);\n\n      // Find target asset\n      const targetFile = this.app.vault.getAbstractFileByPath(\n        `${targetAssetId}.md`,\n      );\n      if (!(targetFile instanceof TFile)) {\n        return Result.fail<any>(`Target asset not found: ${targetAssetId}`);\n      }\n\n      // Apply template (append to existing content)\n      const currentContent = await this.app.vault.read(targetFile);\n      const newContent =\n        currentContent +\n        \"\\n\\n\" +\n        this.processTemplate(templateContent, request.context.parameters);\n\n      await this.app.vault.modify(targetFile, newContent);\n\n      new Notice(`Template \"${templateName}\" applied successfully`);\n      return Result.ok<any>({ template: templateName, target: targetAssetId });\n    });\n\n    // EXECUTE_SEARCH handler\n    this.registerHandler(CommandType.EXECUTE_SEARCH, async (request) => {\n      const query = request.context.parameters.query;\n\n      if (!query) {\n        return Result.fail<any>(\"Search query is required\");\n      }\n\n      // Open search with query\n      // Using Obsidian internal API for search\n      (this.app as any).internalPlugins\n        .getPluginById(\"global-search\")\n        .instance.openGlobalSearch(query);\n\n      return Result.ok<any>({ query });\n    });\n\n    // TRIGGER_WORKFLOW handler\n    this.registerHandler(CommandType.TRIGGER_WORKFLOW, async (request) => {\n      const workflowName = request.context.parameters.workflow;\n\n      if (!workflowName) {\n        return Result.fail<any>(\"Workflow name is required\");\n      }\n\n      // This would integrate with a workflow system\n      // For now, just log the workflow trigger\n      console.log(\n        `Triggering workflow: ${workflowName}`,\n        request.context.parameters,\n      );\n\n      new Notice(`Workflow \"${workflowName}\" triggered`);\n      return Result.ok<any>({ workflow: workflowName });\n    });\n\n    // CUSTOM handler\n    this.registerHandler(CommandType.CUSTOM, async (request) => {\n      const script = request.context.script;\n\n      if (!script) {\n        return Result.fail<any>(\"Script is required for custom commands\");\n      }\n\n      // Script execution is disabled for security reasons\n      // Dynamic code execution (eval, new Function) poses significant security risks:\n      // - Arbitrary code execution\n      // - Access to sensitive APIs\n      // - Potential data exfiltration\n      // Please use predefined commands or safe templating instead\n      return Result.fail<any>(\n        \"Script execution is disabled for security. Use predefined commands instead.\",\n      );\n    });\n\n    // CREATE_CHILD_TASK handler\n    this.registerHandler(CommandType.CREATE_CHILD_TASK, async (request) => {\n      const projectAssetId = request.context.assetId;\n\n      if (!projectAssetId) {\n        return Result.fail<any>(\n          \"Project asset ID is required for CREATE_CHILD_TASK command\",\n        );\n      }\n\n      if (!this.createChildTaskUseCase) {\n        return Result.fail<any>(\"CreateChildTaskUseCase not initialized\");\n      }\n\n      const result = await this.createChildTaskUseCase.execute({\n        projectAssetId,\n        context: {\n          activeFile: request.context.currentView,\n          selection: request.context.selection?.join(\"\\n\"),\n        },\n      });\n\n      if (!result.success) {\n        return Result.fail<any>(result.message);\n      }\n\n      // Open the new task file\n      if (result.taskFilePath) {\n        const file = this.app.vault.getAbstractFileByPath(result.taskFilePath);\n        if (file instanceof TFile) {\n          await this.app.workspace.getLeaf(true).openFile(file);\n        }\n      }\n\n      new Notice(result.message);\n      return Result.ok<any>({\n        taskId: result.taskId,\n        taskFilePath: result.taskFilePath,\n      });\n    });\n\n    // CREATE_CHILD_AREA handler\n    this.registerHandler(CommandType.CREATE_CHILD_AREA, async (request) => {\n      const parentAreaId = request.context.assetId;\n\n      if (!parentAreaId) {\n        return Result.fail<any>(\n          \"Parent area ID is required for CREATE_CHILD_AREA command\",\n        );\n      }\n\n      if (!this.createChildAreaUseCase) {\n        return Result.fail<any>(\"CreateChildAreaUseCase not initialized\");\n      }\n\n      const result = await this.createChildAreaUseCase.execute({\n        parentAreaId,\n        context: {\n          activeFile: request.context.currentView,\n          selection: request.context.selection?.join(\"\\n\"),\n        },\n      });\n\n      if (!result.success) {\n        return Result.fail<any>(result.message);\n      }\n\n      // Open the new area file\n      if (result.areaFilePath) {\n        const file = this.app.vault.getAbstractFileByPath(result.areaFilePath);\n        if (file instanceof TFile) {\n          await this.app.workspace.getLeaf(true).openFile(file);\n        }\n      }\n\n      new Notice(result.message);\n      return Result.ok<any>({\n        areaId: result.areaId,\n        areaFilePath: result.areaFilePath,\n      });\n    });\n  }\n\n  private sanitizeFileName(name: string): string {\n    // Remove characters that are invalid in file names\n    return name.replace(/[\\\\/:*?\"<>|]/g, \"-\").trim();\n  }\n\n  private processTemplate(\n    template: string,\n    parameters: Record<string, any>,\n  ): string {\n    // Replace template variables\n    let processed = template;\n\n    for (const [key, value] of Object.entries(parameters)) {\n      const regex = new RegExp(`{{\\\\s*${key}\\\\s*}}`, \"g\");\n      processed = processed.replace(regex, String(value));\n    }\n\n    // Replace date variables\n    const now = new Date();\n    processed = processed.replace(/{{date}}/g, now.toISOString().split(\"T\")[0]);\n    processed = processed.replace(\n      /{{time}}/g,\n      now.toTimeString().split(\" \")[0],\n    );\n    processed = processed.replace(/{{datetime}}/g, now.toISOString());\n\n    return processed;\n  }\n\n  private async confirmAction(\n    title: string,\n    message: string,\n  ): Promise<boolean> {\n    return new Promise((resolve) => {\n      // Create a simple confirmation modal\n      const modal = new ConfirmationModal(this.app, title, message, resolve);\n      modal.open();\n    });\n  }\n}\n\n/**\n * Simple confirmation modal\n */\nclass ConfirmationModal extends Modal {\n  constructor(\n    app: App,\n    private title: string,\n    private message: string,\n    private onConfirm: (confirmed: boolean) => void,\n  ) {\n    super(app);\n  }\n\n  onOpen(): void {\n    const { contentEl } = this;\n\n    contentEl.createEl(\"h2\", { text: this.title });\n    contentEl.createEl(\"p\", { text: this.message });\n\n    const buttonContainer = contentEl.createDiv({\n      cls: \"modal-button-container\",\n    });\n\n    const cancelBtn = buttonContainer.createEl(\"button\", { text: \"Cancel\" });\n    cancelBtn.addEventListener(\"click\", () => {\n      this.onConfirm(false);\n      this.close();\n    });\n\n    const confirmBtn = buttonContainer.createEl(\"button\", {\n      text: \"Confirm\",\n      cls: \"mod-warning\",\n    });\n    confirmBtn.addEventListener(\"click\", () => {\n      this.onConfirm(true);\n      this.close();\n    });\n  }\n\n  onClose(): void {\n    const { contentEl } = this;\n    contentEl.empty();\n  }\n}\n"],"version":3}