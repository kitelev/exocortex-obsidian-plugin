{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/tests/integration/RefactoredLayoutRenderer.test.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/tests/integration/RefactoredLayoutRenderer.test.ts"],"sourcesContent":["import { RefactoredLayoutRenderer } from \"../../src/presentation/renderers/RefactoredLayoutRenderer\";\nimport { FakeLayoutCoordinator } from \"../__fakes__/FakeLayoutCoordinator\";\nimport {\n  LayoutMother,\n  RenderContextMother,\n} from \"../__builders__/LayoutMother\";\nimport { Result } from \"../../src/domain/core/Result\";\n\ndescribe(\"RefactoredLayoutRenderer Integration Tests\", () => {\n  let renderer: RefactoredLayoutRenderer;\n  let fakeCoordinator: FakeLayoutCoordinator;\n\n  beforeEach(() => {\n    fakeCoordinator = new FakeLayoutCoordinator();\n    renderer = new RefactoredLayoutRenderer(fakeCoordinator);\n  });\n\n  afterEach(() => {\n    fakeCoordinator.clear();\n  });\n\n  describe(\"renderLayout\", () => {\n    it(\"should delegate to layout coordinator and return success result\", async () => {\n      // Arrange\n      const layout = LayoutMother.simple();\n      const context = RenderContextMother.simple();\n\n      // Act\n      const result = await renderer.renderLayout(layout, context);\n\n      // Assert\n      expect(result.isSuccess).toBe(true);\n      expect(fakeCoordinator.wasLayoutRendered(layout.id.toString())).toBe(\n        true,\n      );\n\n      const renderResult = result.getValue();\n      expect(renderResult.layoutId).toBe(layout.id.toString());\n      expect(renderResult.fallbackUsed).toBe(false);\n    });\n\n    it(\"should handle layout coordinator failures gracefully\", async () => {\n      // Arrange\n      const layout = LayoutMother.simple();\n      const context = RenderContextMother.simple();\n      fakeCoordinator.setLayoutRenderingFailure(true);\n\n      // Act\n      const result = await renderer.renderLayout(layout, context);\n\n      // Assert\n      expect(result.isFailure).toBe(true);\n      expect(result.error).toContain(\"Fake layout rendering failure\");\n    });\n\n    it(\"should validate null layout input\", async () => {\n      // Arrange\n      const context = RenderContextMother.simple();\n\n      // Act\n      const result = await renderer.renderLayout(null as any, context);\n\n      // Assert\n      expect(result.isFailure).toBe(true);\n      expect(result.error).toContain(\"Layout cannot be null or undefined\");\n    });\n\n    it(\"should validate render context\", async () => {\n      // Arrange\n      const layout = LayoutMother.simple();\n\n      // Act\n      const result = await renderer.renderLayout(layout, null as any);\n\n      // Assert\n      expect(result.isFailure).toBe(true);\n      expect(result.error).toContain(\n        \"Valid render context with containerId is required\",\n      );\n    });\n\n    it(\"should handle complex layouts with multiple blocks\", async () => {\n      // Arrange\n      const layout = LayoutMother.complex();\n      const context = RenderContextMother.withFrontmatter({\n        exo__Instance_class: \"ComplexClass\",\n      });\n\n      // Act\n      const result = await renderer.renderLayout(layout, context);\n\n      // Assert\n      expect(result.isSuccess).toBe(true);\n      expect(fakeCoordinator.wasLayoutRendered(layout.id.toString())).toBe(\n        true,\n      );\n\n      const renderResult = result.getValue();\n      expect(renderResult.blocksRendered.length).toBeGreaterThan(0);\n      expect(renderResult.totalRenderTime).toBeGreaterThan(0);\n    });\n  });\n\n  describe(\"renderDefaultLayout\", () => {\n    it(\"should delegate to coordinator for default layout\", async () => {\n      // Arrange\n      const context = RenderContextMother.forAsset(\"/test/asset.md\");\n\n      // Act\n      const result = await renderer.renderDefaultLayout(context);\n\n      // Assert\n      expect(result.isSuccess).toBe(true);\n      expect(fakeCoordinator.wasDefaultLayoutRendered()).toBe(true);\n\n      const renderResult = result.getValue();\n      expect(renderResult.layoutId).toBe(\"default\");\n      expect(renderResult.fallbackUsed).toBe(true);\n    });\n\n    it(\"should handle coordinator failure for default layout\", async () => {\n      // Arrange\n      const context = RenderContextMother.simple();\n      fakeCoordinator.setDefaultRenderingFailure(true);\n\n      // Act\n      const result = await renderer.renderDefaultLayout(context);\n\n      // Assert\n      expect(result.isFailure).toBe(true);\n      expect(result.error).toContain(\"Fake default layout rendering failure\");\n    });\n\n    it(\"should validate context for default layout\", async () => {\n      // Act\n      const result = await renderer.renderDefaultLayout({} as any);\n\n      // Assert\n      expect(result.isFailure).toBe(true);\n      expect(result.error).toContain(\n        \"Valid render context with containerId is required\",\n      );\n    });\n  });\n\n  describe(\"SOLID Principles Compliance\", () => {\n    it(\"should demonstrate Single Responsibility Principle\", () => {\n      // Renderer only coordinates, doesn't handle rendering details\n      expect(renderer).toBeInstanceOf(RefactoredLayoutRenderer);\n      expect(typeof renderer.renderLayout).toBe(\"function\");\n      expect(typeof renderer.renderDefaultLayout).toBe(\"function\");\n\n      // No direct DOM manipulation or block rendering logic\n      expect(\"renderBlock\" in renderer).toBe(false);\n      expect(\"createElement\" in renderer).toBe(false);\n    });\n\n    it(\"should demonstrate Dependency Inversion Principle\", () => {\n      // Depends on abstraction (ILayoutCoordinator), not concrete implementation\n      const customCoordinator = new FakeLayoutCoordinator();\n      const customRenderer = new RefactoredLayoutRenderer(customCoordinator);\n\n      expect(customRenderer).toBeInstanceOf(RefactoredLayoutRenderer);\n    });\n\n    it(\"should demonstrate Interface Segregation Principle\", () => {\n      // Uses segregated interface (ILayoutRenderer) instead of fat interface\n      const layout = LayoutMother.simple();\n      const context = RenderContextMother.simple();\n\n      // Should only expose rendering methods, not block-level operations\n      expect(\"renderBlock\" in renderer).toBe(false);\n      expect(\"createElement\" in renderer).toBe(false);\n    });\n  });\n\n  describe(\"Error Handling Robustness\", () => {\n    it(\"should handle unexpected coordinator exceptions\", async () => {\n      // Arrange\n      const layout = LayoutMother.simple();\n      const context = RenderContextMother.simple();\n\n      // Mock an exception in coordinator\n      jest\n        .spyOn(fakeCoordinator, \"coordinateLayout\")\n        .mockRejectedValue(new Error(\"Unexpected coordinator error\"));\n\n      // Act\n      const result = await renderer.renderLayout(layout, context);\n\n      // Assert\n      expect(result.isFailure).toBe(true);\n      expect(result.error).toContain(\"Layout rendering failed\");\n    });\n\n    it(\"should preserve context information in error cases\", async () => {\n      // Arrange\n      const layout = LayoutMother.simple();\n      const context = RenderContextMother.create()\n        .withContainerId(\"specific-container\")\n        .withAssetPath(\"/specific/path.md\")\n        .build();\n\n      fakeCoordinator.setLayoutRenderingFailure(true);\n\n      // Act\n      const result = await renderer.renderLayout(layout, context);\n\n      // Assert\n      expect(result.isFailure).toBe(true);\n\n      // Verify context was passed correctly before failure\n      const lastContext = fakeCoordinator.getLastRenderContext();\n      expect(lastContext?.containerId).toBe(\"specific-container\");\n      expect(lastContext?.assetPath).toBe(\"/specific/path.md\");\n    });\n  });\n});\n"],"version":3}