fcc50b6ad691cc9744e14bc2a52f1cb9
"use strict";

/* istanbul ignore next */
function cov_c1elnnkjd() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianQueryTemplateRepository.ts";
  var hash = "3f7e2bec113d926b3937c6219359cf6d444ab62d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianQueryTemplateRepository.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 49
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 24
        },
        end: {
          line: 5,
          column: 68
        }
      },
      "4": {
        start: {
          line: 6,
          column: 32
        },
        end: {
          line: 6,
          column: 66
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 23
        }
      },
      "6": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "7": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 35
        }
      },
      "8": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 33
        }
      },
      "9": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 43
        }
      },
      "10": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 43
        }
      },
      "11": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "12": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 43
        }
      },
      "13": {
        start: {
          line: 19,
          column: 30
        },
        end: {
          line: 19,
          column: 69
        }
      },
      "14": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 29,
          column: 15
        }
      },
      "15": {
        start: {
          line: 23,
          column: 31
        },
        end: {
          line: 23,
          column: 125
        }
      },
      "16": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 24,
          column: 125
        }
      },
      "17": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 27,
          column: 17
        }
      },
      "18": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 43
        }
      },
      "19": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 80
        }
      },
      "20": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 60,
          column: 11
        }
      },
      "21": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "22": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 67
        }
      },
      "23": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "24": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 98
        }
      },
      "25": {
        start: {
          line: 37,
          column: 50
        },
        end: {
          line: 37,
          column: 96
        }
      },
      "26": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "27": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 102
        }
      },
      "28": {
        start: {
          line: 40,
          column: 50
        },
        end: {
          line: 40,
          column: 100
        }
      },
      "29": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "30": {
        start: {
          line: 43,
          column: 35
        },
        end: {
          line: 43,
          column: 70
        }
      },
      "31": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 45,
          column: 84
        }
      },
      "32": {
        start: {
          line: 44,
          column: 50
        },
        end: {
          line: 45,
          column: 82
        }
      },
      "33": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "34": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "35": {
        start: {
          line: 49,
          column: 41
        },
        end: {
          line: 49,
          column: 61
        }
      },
      "36": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 81
        }
      },
      "37": {
        start: {
          line: 50,
          column: 53
        },
        end: {
          line: 50,
          column: 79
        }
      },
      "38": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "39": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 101
        }
      },
      "40": {
        start: {
          line: 54,
          column: 50
        },
        end: {
          line: 54,
          column: 99
        }
      },
      "41": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "42": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 101
        }
      },
      "43": {
        start: {
          line: 57,
          column: 50
        },
        end: {
          line: 57,
          column: 99
        }
      },
      "44": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 29
        }
      },
      "45": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "46": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 43
        }
      },
      "47": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "48": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "49": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 53
        }
      },
      "50": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "51": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 49
        }
      },
      "52": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "53": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "54": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 68
        }
      },
      "55": {
        start: {
          line: 83,
          column: 27
        },
        end: {
          line: 83,
          column: 62
        }
      },
      "56": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "57": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 45
        }
      },
      "58": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 45
        }
      },
      "59": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "60": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "61": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 87
        }
      },
      "62": {
        start: {
          line: 97,
          column: 27
        },
        end: {
          line: 97,
          column: 62
        }
      },
      "63": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "64": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 87
        }
      },
      "65": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 56
        }
      },
      "66": {
        start: {
          line: 102,
          column: 29
        },
        end: {
          line: 102,
          column: 109
        }
      },
      "67": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 103,
          column: 64
        }
      },
      "68": {
        start: {
          line: 104,
          column: 25
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "69": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 81
        }
      },
      "70": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 63
        }
      },
      "71": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 28
        }
      },
      "72": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "73": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "74": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 68
        }
      },
      "75": {
        start: {
          line: 122,
          column: 27
        },
        end: {
          line: 122,
          column: 62
        }
      },
      "76": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "77": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 82
        }
      },
      "78": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 56
        }
      },
      "79": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 127,
          column: 74
        }
      },
      "80": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "81": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 86
        }
      },
      "82": {
        start: {
          line: 131,
          column: 29
        },
        end: {
          line: 131,
          column: 64
        }
      },
      "83": {
        start: {
          line: 132,
          column: 25
        },
        end: {
          line: 132,
          column: 71
        }
      },
      "84": {
        start: {
          line: 133,
          column: 25
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "85": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 77
        }
      },
      "86": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 63
        }
      },
      "87": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 28
        }
      },
      "88": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "89": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 148,
          column: 52
        }
      },
      "90": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "91": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 29
        }
      },
      "92": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "93": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 68
        }
      },
      "94": {
        start: {
          line: 155,
          column: 29
        },
        end: {
          line: 155,
          column: 60
        }
      },
      "95": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "96": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 29
        }
      },
      "97": {
        start: {
          line: 159,
          column: 29
        },
        end: {
          line: 159,
          column: 64
        }
      },
      "98": {
        start: {
          line: 160,
          column: 25
        },
        end: {
          line: 160,
          column: 71
        }
      },
      "99": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "100": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 50
        }
      },
      "101": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 46
        }
      },
      "102": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 42
        }
      },
      "103": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 43
        }
      },
      "104": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 28
        }
      },
      "105": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 25
        }
      },
      "106": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "107": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 43
        }
      },
      "108": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 46
        }
      },
      "109": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "110": {
        start: {
          line: 179,
          column: 29
        },
        end: {
          line: 179,
          column: 31
        }
      },
      "111": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "112": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 194,
          column: 17
        }
      },
      "113": {
        start: {
          line: 182,
          column: 33
        },
        end: {
          line: 182,
          column: 45
        }
      },
      "114": {
        start: {
          line: 184,
          column: 37
        },
        end: {
          line: 184,
          column: 68
        }
      },
      "115": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 187,
          column: 21
        }
      },
      "116": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 33
        }
      },
      "117": {
        start: {
          line: 188,
          column: 37
        },
        end: {
          line: 188,
          column: 70
        }
      },
      "118": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 189,
          column: 46
        }
      },
      "119": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 44
        }
      },
      "120": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 70
        }
      },
      "121": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 28
        }
      },
      "122": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 212,
          column: 11
        }
      },
      "123": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 43
        }
      },
      "124": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "125": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 206,
          column: 50
        }
      },
      "126": {
        start: {
          line: 205,
          column: 31
        },
        end: {
          line: 205,
          column: 57
        }
      },
      "127": {
        start: {
          line: 206,
          column: 33
        },
        end: {
          line: 206,
          column: 48
        }
      },
      "128": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 68
        }
      },
      "129": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 64
        }
      },
      "130": {
        start: {
          line: 211,
          column: 45
        },
        end: {
          line: 211,
          column: 62
        }
      },
      "131": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "132": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 87
        }
      },
      "133": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "134": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 87
        }
      },
      "135": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "136": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 43
        }
      },
      "137": {
        start: {
          line: 227,
          column: 34
        },
        end: {
          line: 229,
          column: 32
        }
      },
      "138": {
        start: {
          line: 228,
          column: 32
        },
        end: {
          line: 228,
          column: 81
        }
      },
      "139": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 232,
          column: 46
        }
      },
      "140": {
        start: {
          line: 231,
          column: 31
        },
        end: {
          line: 231,
          column: 57
        }
      },
      "141": {
        start: {
          line: 232,
          column: 29
        },
        end: {
          line: 232,
          column: 44
        }
      },
      "142": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 252,
          column: 11
        }
      },
      "143": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 43
        }
      },
      "144": {
        start: {
          line: 238,
          column: 29
        },
        end: {
          line: 238,
          column: 59
        }
      },
      "145": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 250,
          column: 13
        }
      },
      "146": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 38
        }
      },
      "147": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 47
        }
      },
      "148": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 249,
          column: 19
        }
      },
      "149": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 39
        }
      },
      "150": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "151": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 43
        }
      },
      "152": {
        start: {
          line: 257,
          column: 26
        },
        end: {
          line: 257,
          column: 56
        }
      },
      "153": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 260,
          column: 13
        }
      },
      "154": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 41
        }
      },
      "155": {
        start: {
          line: 261,
          column: 44
        },
        end: {
          line: 263,
          column: 27
        }
      },
      "156": {
        start: {
          line: 262,
          column: 64
        },
        end: {
          line: 262,
          column: 75
        }
      },
      "157": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 268,
          column: 14
        }
      },
      "158": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 280,
          column: 11
        }
      },
      "159": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 39
        }
      },
      "160": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 35
        }
      },
      "161": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 37
        }
      },
      "162": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 46
        }
      },
      "163": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 45
        }
      },
      "164": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 39
        }
      },
      "165": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 36
        }
      },
      "166": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 287,
          column: 11
        }
      },
      "167": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 286,
          column: 13
        }
      },
      "168": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 285,
          column: 37
        }
      },
      "169": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 295,
          column: 11
        }
      },
      "170": {
        start: {
          line: 291,
          column: 33
        },
        end: {
          line: 291,
          column: 89
        }
      },
      "171": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 294,
          column: 13
        }
      },
      "172": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 70
        }
      },
      "173": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "174": {
        start: {
          line: 299,
          column: 37
        },
        end: {
          line: 299,
          column: 91
        }
      },
      "175": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 302,
          column: 15
        }
      },
      "176": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 67
        }
      },
      "177": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 324,
          column: 11
        }
      },
      "178": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 56
        }
      },
      "179": {
        start: {
          line: 308,
          column: 33
        },
        end: {
          line: 308,
          column: 89
        }
      },
      "180": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "181": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 23
        }
      },
      "182": {
        start: {
          line: 312,
          column: 26
        },
        end: {
          line: 312,
          column: 122
        }
      },
      "183": {
        start: {
          line: 312,
          column: 65
        },
        end: {
          line: 312,
          column: 121
        }
      },
      "184": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "185": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 322,
          column: 17
        }
      },
      "186": {
        start: {
          line: 315,
          column: 36
        },
        end: {
          line: 315,
          column: 67
        }
      },
      "187": {
        start: {
          line: 316,
          column: 33
        },
        end: {
          line: 316,
          column: 52
        }
      },
      "188": {
        start: {
          line: 317,
          column: 37
        },
        end: {
          line: 317,
          column: 70
        }
      },
      "189": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 318,
          column: 71
        }
      },
      "190": {
        start: {
          line: 321,
          column: 20
        },
        end: {
          line: 321,
          column: 86
        }
      },
      "191": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 344,
          column: 11
        }
      },
      "192": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 343,
          column: 13
        }
      },
      "193": {
        start: {
          line: 329,
          column: 29
        },
        end: {
          line: 329,
          column: 85
        }
      },
      "194": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 338,
          column: 17
        }
      },
      "195": {
        start: {
          line: 331,
          column: 36
        },
        end: {
          line: 331,
          column: 67
        }
      },
      "196": {
        start: {
          line: 332,
          column: 33
        },
        end: {
          line: 332,
          column: 52
        }
      },
      "197": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 43
        }
      },
      "198": {
        start: {
          line: 334,
          column: 20
        },
        end: {
          line: 337,
          column: 23
        }
      },
      "199": {
        start: {
          line: 335,
          column: 24
        },
        end: {
          line: 335,
          column: 66
        }
      },
      "200": {
        start: {
          line: 336,
          column: 24
        },
        end: {
          line: 336,
          column: 68
        }
      },
      "201": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 39
        }
      },
      "202": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 357,
          column: 11
        }
      },
      "203": {
        start: {
          line: 348,
          column: 25
        },
        end: {
          line: 348,
          column: 60
        }
      },
      "204": {
        start: {
          line: 349,
          column: 28
        },
        end: {
          line: 349,
          column: 57
        }
      },
      "205": {
        start: {
          line: 350,
          column: 25
        },
        end: {
          line: 350,
          column: 81
        }
      },
      "206": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 356,
          column: 13
        }
      },
      "207": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 59
        }
      },
      "208": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 73
        }
      },
      "209": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 368,
          column: 11
        }
      },
      "210": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 56
        }
      },
      "211": {
        start: {
          line: 362,
          column: 33
        },
        end: {
          line: 362,
          column: 89
        }
      },
      "212": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 365,
          column: 13
        }
      },
      "213": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 28
        }
      },
      "214": {
        start: {
          line: 366,
          column: 26
        },
        end: {
          line: 366,
          column: 125
        }
      },
      "215": {
        start: {
          line: 366,
          column: 65
        },
        end: {
          line: 366,
          column: 124
        }
      },
      "216": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 59
        }
      },
      "217": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 378,
          column: 11
        }
      },
      "218": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 385,
          column: 30
        }
      },
      "219": {
        start: {
          line: 388,
          column: 0
        },
        end: {
          line: 388,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 111
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 14
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 55
          },
          end: {
            line: 17,
            column: 56
          }
        },
        loc: {
          start: {
            line: 17,
            column: 68
          },
          end: {
            line: 30,
            column: 9
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 21,
            column: 35
          }
        },
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 29,
            column: 13
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 55
          },
          end: {
            line: 33,
            column: 56
          }
        },
        loc: {
          start: {
            line: 33,
            column: 68
          },
          end: {
            line: 60,
            column: 9
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 37,
            column: 45
          },
          end: {
            line: 37,
            column: 46
          }
        },
        loc: {
          start: {
            line: 37,
            column: 50
          },
          end: {
            line: 37,
            column: 96
          }
        },
        line: 37
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 40,
            column: 45
          },
          end: {
            line: 40,
            column: 46
          }
        },
        loc: {
          start: {
            line: 40,
            column: 50
          },
          end: {
            line: 40,
            column: 100
          }
        },
        line: 40
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 44,
            column: 45
          },
          end: {
            line: 44,
            column: 46
          }
        },
        loc: {
          start: {
            line: 44,
            column: 50
          },
          end: {
            line: 45,
            column: 82
          }
        },
        line: 44
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 48,
            column: 46
          }
        },
        loc: {
          start: {
            line: 48,
            column: 50
          },
          end: {
            line: 51,
            column: 17
          }
        },
        line: 48
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 50,
            column: 46
          },
          end: {
            line: 50,
            column: 47
          }
        },
        loc: {
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 50,
            column: 79
          }
        },
        line: 50
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 54,
            column: 45
          },
          end: {
            line: 54,
            column: 46
          }
        },
        loc: {
          start: {
            line: 54,
            column: 50
          },
          end: {
            line: 54,
            column: 99
          }
        },
        line: 54
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 57,
            column: 45
          },
          end: {
            line: 57,
            column: 46
          }
        },
        loc: {
          start: {
            line: 57,
            column: 50
          },
          end: {
            line: 57,
            column: 99
          }
        },
        line: 57
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 62
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 63,
            column: 55
          },
          end: {
            line: 63,
            column: 56
          }
        },
        loc: {
          start: {
            line: 63,
            column: 68
          },
          end: {
            line: 66,
            column: 9
          }
        },
        line: 63
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 68
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 69,
            column: 55
          },
          end: {
            line: 69,
            column: 56
          }
        },
        loc: {
          start: {
            line: 69,
            column: 68
          },
          end: {
            line: 71,
            column: 9
          }
        },
        line: 69
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 73
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 74,
            column: 55
          },
          end: {
            line: 74,
            column: 56
          }
        },
        loc: {
          start: {
            line: 74,
            column: 68
          },
          end: {
            line: 76,
            column: 9
          }
        },
        line: 74
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 19
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 78
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 79,
            column: 55
          },
          end: {
            line: 79,
            column: 56
          }
        },
        loc: {
          start: {
            line: 79,
            column: 68
          },
          end: {
            line: 90,
            column: 9
          }
        },
        line: 79
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 21
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 92
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 93,
            column: 55
          },
          end: {
            line: 93,
            column: 56
          }
        },
        loc: {
          start: {
            line: 93,
            column: 68
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 93
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 21
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 117
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 118,
            column: 55
          },
          end: {
            line: 118,
            column: 56
          }
        },
        loc: {
          start: {
            line: 118,
            column: 68
          },
          end: {
            line: 144,
            column: 9
          }
        },
        line: 118
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 146
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 147,
            column: 55
          },
          end: {
            line: 147,
            column: 56
          }
        },
        loc: {
          start: {
            line: 147,
            column: 68
          },
          end: {
            line: 169,
            column: 9
          }
        },
        line: 147
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 15
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 171
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 172,
            column: 55
          },
          end: {
            line: 172,
            column: 56
          }
        },
        loc: {
          start: {
            line: 172,
            column: 68
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 172
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 35
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 177
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 178,
            column: 55
          },
          end: {
            line: 178,
            column: 56
          }
        },
        loc: {
          start: {
            line: 178,
            column: 68
          },
          end: {
            line: 197,
            column: 9
          }
        },
        line: 178
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 33
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 199
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 200,
            column: 55
          },
          end: {
            line: 200,
            column: 56
          }
        },
        loc: {
          start: {
            line: 200,
            column: 68
          },
          end: {
            line: 212,
            column: 9
          }
        },
        line: 200
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 205,
            column: 25
          },
          end: {
            line: 205,
            column: 26
          }
        },
        loc: {
          start: {
            line: 205,
            column: 31
          },
          end: {
            line: 205,
            column: 57
          }
        },
        line: 205
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 206,
            column: 28
          },
          end: {
            line: 206,
            column: 29
          }
        },
        loc: {
          start: {
            line: 206,
            column: 33
          },
          end: {
            line: 206,
            column: 48
          }
        },
        line: 206
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 211,
            column: 33
          },
          end: {
            line: 211,
            column: 34
          }
        },
        loc: {
          start: {
            line: 211,
            column: 45
          },
          end: {
            line: 211,
            column: 62
          }
        },
        line: 211
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 26
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 214
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 215,
            column: 55
          },
          end: {
            line: 215,
            column: 56
          }
        },
        loc: {
          start: {
            line: 215,
            column: 68
          },
          end: {
            line: 217,
            column: 9
          }
        },
        line: 215
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 25
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 219
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 220,
            column: 55
          },
          end: {
            line: 220,
            column: 56
          }
        },
        loc: {
          start: {
            line: 220,
            column: 68
          },
          end: {
            line: 222,
            column: 9
          }
        },
        line: 220
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 32
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 224
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 225,
            column: 55
          },
          end: {
            line: 225,
            column: 56
          }
        },
        loc: {
          start: {
            line: 225,
            column: 68
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 225
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 228,
            column: 22
          },
          end: {
            line: 228,
            column: 23
          }
        },
        loc: {
          start: {
            line: 228,
            column: 32
          },
          end: {
            line: 228,
            column: 81
          }
        },
        line: 228
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 231,
            column: 21
          },
          end: {
            line: 231,
            column: 22
          }
        },
        loc: {
          start: {
            line: 231,
            column: 31
          },
          end: {
            line: 231,
            column: 57
          }
        },
        line: 231
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 232,
            column: 24
          },
          end: {
            line: 232,
            column: 25
          }
        },
        loc: {
          start: {
            line: 232,
            column: 29
          },
          end: {
            line: 232,
            column: 44
          }
        },
        line: 232
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 28
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 235
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 236,
            column: 55
          },
          end: {
            line: 236,
            column: 56
          }
        },
        loc: {
          start: {
            line: 236,
            column: 68
          },
          end: {
            line: 252,
            column: 9
          }
        },
        line: 236
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        loc: {
          start: {
            line: 254,
            column: 30
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 254
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 255,
            column: 55
          },
          end: {
            line: 255,
            column: 56
          }
        },
        loc: {
          start: {
            line: 255,
            column: 68
          },
          end: {
            line: 269,
            column: 9
          }
        },
        line: 255
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 262,
            column: 48
          },
          end: {
            line: 262,
            column: 49
          }
        },
        loc: {
          start: {
            line: 262,
            column: 64
          },
          end: {
            line: 262,
            column: 75
          }
        },
        line: 262
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 14
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 271
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 272,
            column: 55
          },
          end: {
            line: 272,
            column: 56
          }
        },
        loc: {
          start: {
            line: 272,
            column: 68
          },
          end: {
            line: 280,
            column: 9
          }
        },
        line: 272
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 24
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 282
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 283,
            column: 55
          },
          end: {
            line: 283,
            column: 56
          }
        },
        loc: {
          start: {
            line: 283,
            column: 68
          },
          end: {
            line: 287,
            column: 9
          }
        },
        line: 283
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        loc: {
          start: {
            line: 289,
            column: 37
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 289
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 290,
            column: 55
          },
          end: {
            line: 290,
            column: 56
          }
        },
        loc: {
          start: {
            line: 290,
            column: 68
          },
          end: {
            line: 295,
            column: 9
          }
        },
        line: 290
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 27
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 297
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 298,
            column: 55
          },
          end: {
            line: 298,
            column: 56
          }
        },
        loc: {
          start: {
            line: 298,
            column: 68
          },
          end: {
            line: 303,
            column: 9
          }
        },
        line: 298
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 300,
            column: 37
          },
          end: {
            line: 300,
            column: 38
          }
        },
        loc: {
          start: {
            line: 300,
            column: 49
          },
          end: {
            line: 302,
            column: 13
          }
        },
        line: 300
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        },
        loc: {
          start: {
            line: 305,
            column: 26
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 305
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 306,
            column: 55
          },
          end: {
            line: 306,
            column: 56
          }
        },
        loc: {
          start: {
            line: 306,
            column: 68
          },
          end: {
            line: 324,
            column: 9
          }
        },
        line: 306
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 312,
            column: 55
          },
          end: {
            line: 312,
            column: 56
          }
        },
        loc: {
          start: {
            line: 312,
            column: 65
          },
          end: {
            line: 312,
            column: 121
          }
        },
        line: 312
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 20
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 326
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 327,
            column: 55
          },
          end: {
            line: 327,
            column: 56
          }
        },
        loc: {
          start: {
            line: 327,
            column: 68
          },
          end: {
            line: 344,
            column: 9
          }
        },
        line: 327
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 334,
            column: 33
          },
          end: {
            line: 334,
            column: 34
          }
        },
        loc: {
          start: {
            line: 334,
            column: 42
          },
          end: {
            line: 337,
            column: 21
          }
        },
        line: 334
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        loc: {
          start: {
            line: 346,
            column: 20
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 346
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 347,
            column: 55
          },
          end: {
            line: 347,
            column: 56
          }
        },
        loc: {
          start: {
            line: 347,
            column: 68
          },
          end: {
            line: 357,
            column: 9
          }
        },
        line: 347
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 33
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 359
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 360,
            column: 55
          },
          end: {
            line: 360,
            column: 56
          }
        },
        loc: {
          start: {
            line: 360,
            column: 68
          },
          end: {
            line: 368,
            column: 9
          }
        },
        line: 360
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 366,
            column: 55
          },
          end: {
            line: 366,
            column: 56
          }
        },
        loc: {
          start: {
            line: 366,
            column: 65
          },
          end: {
            line: 366,
            column: 124
          }
        },
        line: 366
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 370,
            column: 33
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 370
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        loc: {
          start: {
            line: 380,
            column: 27
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 380
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 21
          },
          end: {
            line: 8,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 37
          },
          end: {
            line: 8,
            column: 59
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 61
          },
          end: {
            line: 8,
            column: 109
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 77
          },
          end: {
            line: 8,
            column: 109
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 119
          }
        }, {
          start: {
            line: 23,
            column: 124
          },
          end: {
            line: 23,
            column: 125
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 97
          },
          end: {
            line: 23,
            column: 103
          }
        }, {
          start: {
            line: 23,
            column: 106
          },
          end: {
            line: 23,
            column: 119
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 77
          }
        }, {
          start: {
            line: 23,
            column: 81
          },
          end: {
            line: 23,
            column: 94
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 24,
            column: 119
          }
        }, {
          start: {
            line: 24,
            column: 124
          },
          end: {
            line: 24,
            column: 125
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 24,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 97
          },
          end: {
            line: 24,
            column: 103
          }
        }, {
          start: {
            line: 24,
            column: 106
          },
          end: {
            line: 24,
            column: 119
          }
        }],
        line: 24
      },
      "7": {
        loc: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 24,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 24,
            column: 77
          }
        }, {
          start: {
            line: 24,
            column: 81
          },
          end: {
            line: 24,
            column: 94
          }
        }],
        line: 24
      },
      "8": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 27,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 27,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 50
          },
          end: {
            line: 45,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 50
          },
          end: {
            line: 44,
            column: 105
          }
        }, {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 82
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "14": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 57
          }
        }],
        line: 47
      },
      "15": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "16": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "17": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "18": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: 87,
            column: 17
          },
          end: {
            line: 89,
            column: 13
          }
        }],
        line: 84
      },
      "19": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "20": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "21": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "22": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "23": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "24": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "25": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "26": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "27": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "28": {
        loc: {
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "29": {
        loc: {
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 32
          }
        }, {
          start: {
            line: 185,
            column: 36
          },
          end: {
            line: 185,
            column: 64
          }
        }],
        line: 185
      },
      "30": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: 208,
            column: 17
          },
          end: {
            line: 210,
            column: 13
          }
        }],
        line: 203
      },
      "31": {
        loc: {
          start: {
            line: 224,
            column: 20
          },
          end: {
            line: 224,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 224,
            column: 28
          },
          end: {
            line: 224,
            column: 30
          }
        }],
        line: 224
      },
      "32": {
        loc: {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        }, {
          start: {
            line: 243,
            column: 17
          },
          end: {
            line: 250,
            column: 13
          }
        }],
        line: 239
      },
      "33": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "34": {
        loc: {
          start: {
            line: 261,
            column: 44
          },
          end: {
            line: 263,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 18
          },
          end: {
            line: 262,
            column: 111
          }
        }, {
          start: {
            line: 263,
            column: 18
          },
          end: {
            line: 263,
            column: 27
          }
        }],
        line: 261
      },
      "35": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 286,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 286,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "36": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "37": {
        loc: {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "38": {
        loc: {
          start: {
            line: 309,
            column: 16
          },
          end: {
            line: 309,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 16
          },
          end: {
            line: 309,
            column: 29
          }
        }, {
          start: {
            line: 309,
            column: 33
          },
          end: {
            line: 309,
            column: 55
          }
        }],
        line: 309
      },
      "39": {
        loc: {
          start: {
            line: 312,
            column: 65
          },
          end: {
            line: 312,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 312,
            column: 65
          },
          end: {
            line: 312,
            column: 90
          }
        }, {
          start: {
            line: 312,
            column: 94
          },
          end: {
            line: 312,
            column: 121
          }
        }],
        line: 312
      },
      "40": {
        loc: {
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 338,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 338,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "41": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 356,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 356,
            column: 13
          }
        }, {
          start: {
            line: 354,
            column: 17
          },
          end: {
            line: 356,
            column: 13
          }
        }],
        line: 351
      },
      "42": {
        loc: {
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 365,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 365,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "43": {
        loc: {
          start: {
            line: 363,
            column: 16
          },
          end: {
            line: 363,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 16
          },
          end: {
            line: 363,
            column: 29
          }
        }, {
          start: {
            line: 363,
            column: 33
          },
          end: {
            line: 363,
            column: 55
          }
        }],
        line: 363
      },
      "44": {
        loc: {
          start: {
            line: 366,
            column: 65
          },
          end: {
            line: 366,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 366,
            column: 65
          },
          end: {
            line: 366,
            column: 90
          }
        }, {
          start: {
            line: 366,
            column: 94
          },
          end: {
            line: 366,
            column: 124
          }
        }],
        line: 366
      },
      "45": {
        loc: {
          start: {
            line: 367,
            column: 19
          },
          end: {
            line: 367,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 367,
            column: 38
          },
          end: {
            line: 367,
            column: 51
          }
        }, {
          start: {
            line: 367,
            column: 54
          },
          end: {
            line: 367,
            column: 58
          }
        }],
        line: 367
      },
      "46": {
        loc: {
          start: {
            line: 376,
            column: 28
          },
          end: {
            line: 376,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 28
          },
          end: {
            line: 376,
            column: 47
          }
        }, {
          start: {
            line: 376,
            column: 51
          },
          end: {
            line: 376,
            column: 80
          }
        }],
        line: 376
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianQueryTemplateRepository.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/infrastructure/repositories/ObsidianQueryTemplateRepository.ts"],
      sourcesContent: ["import { App, TFile, Vault } from 'obsidian';\nimport { IQueryTemplateRepository, TemplateSearchCriteria } from '../../domain/repositories/IQueryTemplateRepository';\nimport { QueryTemplate, TemplateCategory, TemplateMetadata, TemplateLayout, TemplateParameter } from '../../domain/visual/QueryTemplate';\nimport { BuiltInQueryTemplates } from './BuiltInQueryTemplates';\n\ninterface StoredTemplateData {\n    id: string;\n    metadata: TemplateMetadata;\n    layout: TemplateLayout;\n    parameters: TemplateParameter[];\n    sparqlTemplate: string;\n    isBuiltIn: boolean;\n    usageCount?: number;\n    lastUsed?: string;\n}\n\ninterface TemplateUsageData {\n    templateId: string;\n    usageCount: number;\n    lastUsed: Date;\n    parametersFilled: number[];\n}\n\nexport class ObsidianQueryTemplateRepository implements IQueryTemplateRepository {\n    private readonly templatesPath: string;\n    private readonly usageDataPath: string;\n    private templateCache: Map<string, QueryTemplate> = new Map();\n    private usageData: Map<string, TemplateUsageData> = new Map();\n    private cacheLoaded: boolean = false;\n\n    constructor(\n        private readonly app: App,\n        templatesPath: string = '.exocortex/templates',\n        usageDataPath: string = '.exocortex/template-usage.json'\n    ) {\n        this.templatesPath = templatesPath;\n        this.usageDataPath = usageDataPath;\n    }\n\n    async findAll(): Promise<QueryTemplate[]> {\n        await this.ensureCacheLoaded();\n        const templates = Array.from(this.templateCache.values());\n        \n        // Sort by usage frequency and then by name\n        return templates.sort((a, b) => {\n            const usageA = this.usageData.get(a.getId())?.usageCount || 0;\n            const usageB = this.usageData.get(b.getId())?.usageCount || 0;\n            \n            if (usageA !== usageB) {\n                return usageB - usageA;\n            }\n            \n            return a.getMetadata().name.localeCompare(b.getMetadata().name);\n        });\n    }\n\n    async findByCriteria(criteria: TemplateSearchCriteria): Promise<QueryTemplate[]> {\n        await this.ensureCacheLoaded();\n        let templates = Array.from(this.templateCache.values());\n\n        if (criteria.category) {\n            templates = templates.filter(t => t.getMetadata().category === criteria.category);\n        }\n\n        if (criteria.difficulty) {\n            templates = templates.filter(t => t.getMetadata().difficulty === criteria.difficulty);\n        }\n\n        if (criteria.nameContains) {\n            const searchTerm = criteria.nameContains.toLowerCase();\n            templates = templates.filter(t => \n                t.getMetadata().name.toLowerCase().includes(searchTerm) ||\n                t.getMetadata().description.toLowerCase().includes(searchTerm)\n            );\n        }\n\n        if (criteria.tags && criteria.tags.length > 0) {\n            templates = templates.filter(t => {\n                const templateTags = t.getMetadata().tags;\n                return criteria.tags!.some(tag => templateTags.includes(tag));\n            });\n        }\n\n        if (criteria.includeBuiltIn !== undefined) {\n            templates = templates.filter(t => t.isBuiltInTemplate() === criteria.includeBuiltIn);\n        }\n\n        if (criteria.includeCustom !== undefined) {\n            templates = templates.filter(t => !t.isBuiltInTemplate() === criteria.includeCustom);\n        }\n\n        return templates;\n    }\n\n    async findById(id: string): Promise<QueryTemplate | undefined> {\n        await this.ensureCacheLoaded();\n        return this.templateCache.get(id);\n    }\n\n    async findByCategory(category: TemplateCategory): Promise<QueryTemplate[]> {\n        return this.findByCriteria({ category });\n    }\n\n    async findByTags(tags: string[]): Promise<QueryTemplate[]> {\n        return this.findByCriteria({ tags });\n    }\n\n    async save(template: QueryTemplate): Promise<QueryTemplate> {\n        if (template.isBuiltInTemplate()) {\n            throw new Error('Cannot modify built-in templates');\n        }\n\n        const exists = await this.exists(template.getId());\n        if (exists) {\n            return this.update(template);\n        } else {\n            return this.create(template);\n        }\n    }\n\n    async create(template: QueryTemplate): Promise<QueryTemplate> {\n        if (template.isBuiltInTemplate()) {\n            throw new Error('Cannot create built-in templates through repository');\n        }\n\n        const exists = await this.exists(template.getId());\n        if (exists) {\n            throw new Error(`Template with ID ${template.getId()} already exists`);\n        }\n\n        await this.ensureTemplatesDirectoryExists();\n        \n        const fileName = `${this.sanitizeFileName(template.getMetadata().name)}-${template.getId()}.json`;\n        const filePath = `${this.templatesPath}/${fileName}`;\n        \n        const data: StoredTemplateData = {\n            id: template.getId(),\n            metadata: template.getMetadata(),\n            layout: template.getLayout(),\n            parameters: template.getParameters(),\n            sparqlTemplate: template.getSparqlTemplate(),\n            isBuiltIn: template.isBuiltInTemplate()\n        };\n\n        await this.app.vault.create(filePath, JSON.stringify(data, null, 2));\n        this.templateCache.set(template.getId(), template);\n        \n        return template;\n    }\n\n    async update(template: QueryTemplate): Promise<QueryTemplate> {\n        if (template.isBuiltInTemplate()) {\n            throw new Error('Cannot modify built-in templates');\n        }\n\n        const exists = await this.exists(template.getId());\n        if (!exists) {\n            throw new Error(`Template with ID ${template.getId()} not found`);\n        }\n\n        await this.ensureTemplatesDirectoryExists();\n        \n        const fileName = await this.findTemplateFile(template.getId());\n        if (!fileName) {\n            throw new Error(`Template file not found for ID ${template.getId()}`);\n        }\n\n        const filePath = `${this.templatesPath}/${fileName}`;\n        const file = this.app.vault.getAbstractFileByPath(filePath) as TFile;\n        \n        const data: StoredTemplateData = {\n            id: template.getId(),\n            metadata: template.getMetadata(),\n            layout: template.getLayout(),\n            parameters: template.getParameters(),\n            sparqlTemplate: template.getSparqlTemplate(),\n            isBuiltIn: template.isBuiltInTemplate()\n        };\n\n        await this.app.vault.modify(file, JSON.stringify(data, null, 2));\n        this.templateCache.set(template.getId(), template);\n        \n        return template;\n    }\n\n    async delete(id: string): Promise<boolean> {\n        const template = await this.findById(id);\n        if (!template) {\n            return false;\n        }\n\n        if (template.isBuiltInTemplate()) {\n            throw new Error('Cannot delete built-in templates');\n        }\n\n        const fileName = await this.findTemplateFile(id);\n        if (!fileName) {\n            return false;\n        }\n\n        const filePath = `${this.templatesPath}/${fileName}`;\n        const file = this.app.vault.getAbstractFileByPath(filePath) as TFile;\n        \n        if (file) {\n            await this.app.vault.delete(file);\n            this.templateCache.delete(id);\n            this.usageData.delete(id);\n            await this.saveUsageData();\n            return true;\n        }\n        \n        return false;\n    }\n\n    async exists(id: string): Promise<boolean> {\n        await this.ensureCacheLoaded();\n        return this.templateCache.has(id);\n    }\n\n    async importTemplates(templatesData: object[]): Promise<QueryTemplate[]> {\n        const imported: QueryTemplate[] = [];\n\n        for (const templateData of templatesData) {\n            try {\n                const data = templateData as StoredTemplateData;\n                \n                // Don't import if already exists and is built-in\n                const existing = this.templateCache.get(data.id);\n                if (existing && existing.isBuiltInTemplate()) {\n                    continue;\n                }\n\n                const template = this.createTemplateFromData(data);\n                await this.save(template);\n                imported.push(template);\n            } catch (error) {\n                console.warn('Failed to import template:', error);\n            }\n        }\n\n        return imported;\n    }\n\n    async exportTemplates(templateIds?: string[]): Promise<object[]> {\n        await this.ensureCacheLoaded();\n        \n        let templates: QueryTemplate[];\n        if (templateIds) {\n            templates = templateIds\n                .map(id => this.templateCache.get(id))\n                .filter(t => t !== undefined) as QueryTemplate[];\n        } else {\n            templates = Array.from(this.templateCache.values());\n        }\n\n        return templates.map(template => template.toJSON());\n    }\n\n    async getBuiltInTemplates(): Promise<QueryTemplate[]> {\n        return this.findByCriteria({ includeBuiltIn: true, includeCustom: false });\n    }\n\n    async getCustomTemplates(): Promise<QueryTemplate[]> {\n        return this.findByCriteria({ includeBuiltIn: false, includeCustom: true });\n    }\n\n    async getRecentlyUsed(limit: number = 10): Promise<QueryTemplate[]> {\n        await this.ensureCacheLoaded();\n        \n        const templateUsage = Array.from(this.usageData.entries())\n            .sort((a, b) => b[1].lastUsed.getTime() - a[1].lastUsed.getTime())\n            .slice(0, limit);\n\n        return templateUsage\n            .map(([id]) => this.templateCache.get(id))\n            .filter(t => t !== undefined) as QueryTemplate[];\n    }\n\n    async recordUsage(templateId: string): Promise<void> {\n        await this.ensureCacheLoaded();\n        \n        const existing = this.usageData.get(templateId);\n        if (existing) {\n            existing.usageCount++;\n            existing.lastUsed = new Date();\n        } else {\n            this.usageData.set(templateId, {\n                templateId,\n                usageCount: 1,\n                lastUsed: new Date(),\n                parametersFilled: []\n            });\n        }\n\n        await this.saveUsageData();\n    }\n\n    async getUsageStats(templateId: string): Promise<{\n        usageCount: number;\n        lastUsed?: Date;\n        averageParametersFilled?: number;\n    }> {\n        await this.ensureCacheLoaded();\n        \n        const usage = this.usageData.get(templateId);\n        if (!usage) {\n            return { usageCount: 0 };\n        }\n\n        const averageParametersFilled = usage.parametersFilled.length > 0\n            ? usage.parametersFilled.reduce((sum, count) => sum + count, 0) / usage.parametersFilled.length\n            : undefined;\n\n        return {\n            usageCount: usage.usageCount,\n            lastUsed: usage.lastUsed,\n            averageParametersFilled\n        };\n    }\n\n    async refresh(): Promise<void> {\n        this.templateCache.clear();\n        this.usageData.clear();\n        this.cacheLoaded = false;\n        await this.loadBuiltInTemplates();\n        await this.loadCustomTemplates();\n        await this.loadUsageData();\n        this.cacheLoaded = true;\n    }\n\n    private async ensureCacheLoaded(): Promise<void> {\n        if (!this.cacheLoaded) {\n            await this.refresh();\n        }\n    }\n\n    private async ensureTemplatesDirectoryExists(): Promise<void> {\n        const templatesDir = this.app.vault.getAbstractFileByPath(this.templatesPath);\n        if (!templatesDir) {\n            await this.app.vault.createFolder(this.templatesPath);\n        }\n    }\n\n    private async loadBuiltInTemplates(): Promise<void> {\n        const builtInTemplates = BuiltInQueryTemplates.getAll();\n        builtInTemplates.forEach(template => {\n            this.templateCache.set(template.getId(), template);\n        });\n    }\n\n    private async loadCustomTemplates(): Promise<void> {\n        await this.ensureTemplatesDirectoryExists();\n        \n        const templatesDir = this.app.vault.getAbstractFileByPath(this.templatesPath);\n        if (!templatesDir || !(templatesDir as any).children) {\n            return;\n        }\n\n        const files = (templatesDir as any).children.filter((file: any) => \n            file.extension === 'json' && file.name.endsWith('.json')\n        );\n\n        for (const file of files) {\n            try {\n                const content = await this.app.vault.read(file);\n                const data = JSON.parse(content) as StoredTemplateData;\n                \n                const template = this.createTemplateFromData(data);\n                this.templateCache.set(template.getId(), template);\n            } catch (error) {\n                console.warn(`Failed to load template from ${file.path}:`, error);\n            }\n        }\n    }\n\n    private async loadUsageData(): Promise<void> {\n        try {\n            const file = this.app.vault.getAbstractFileByPath(this.usageDataPath) as TFile;\n            if (file) {\n                const content = await this.app.vault.read(file);\n                const data = JSON.parse(content) as TemplateUsageData[];\n                \n                this.usageData.clear();\n                data.forEach(usage => {\n                    usage.lastUsed = new Date(usage.lastUsed);\n                    this.usageData.set(usage.templateId, usage);\n                });\n            }\n        } catch (error) {\n            // Usage data file doesn't exist or is corrupted - start fresh\n            this.usageData.clear();\n        }\n    }\n\n    private async saveUsageData(): Promise<void> {\n        const data = Array.from(this.usageData.values());\n        const content = JSON.stringify(data, null, 2);\n        \n        const file = this.app.vault.getAbstractFileByPath(this.usageDataPath) as TFile;\n        if (file) {\n            await this.app.vault.modify(file, content);\n        } else {\n            await this.app.vault.create(this.usageDataPath, content);\n        }\n    }\n\n    private async findTemplateFile(templateId: string): Promise<string | null> {\n        await this.ensureTemplatesDirectoryExists();\n        \n        const templatesDir = this.app.vault.getAbstractFileByPath(this.templatesPath);\n        if (!templatesDir || !(templatesDir as any).children) {\n            return null;\n        }\n\n        const files = (templatesDir as any).children.filter((file: any) => \n            file.extension === 'json' && file.name.includes(templateId)\n        );\n\n        return files.length > 0 ? files[0].name : null;\n    }\n\n    private createTemplateFromData(data: StoredTemplateData): QueryTemplate {\n        return new QueryTemplate({\n            id: data.id,\n            metadata: data.metadata,\n            layout: data.layout,\n            parameters: data.parameters,\n            sparqlTemplate: data.sparqlTemplate || 'SELECT * WHERE { ?s ?p ?o }',\n            isBuiltIn: data.isBuiltIn\n        });\n    }\n\n    private sanitizeFileName(name: string): string {\n        return name\n            .toLowerCase()\n            .replace(/[^\\w\\s-]/g, '')\n            .replace(/\\s+/g, '-')\n            .substring(0, 50);\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3f7e2bec113d926b3937c6219359cf6d444ab62d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_c1elnnkjd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_c1elnnkjd();
cov_c1elnnkjd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_c1elnnkjd().s[1]++;
exports.ObsidianQueryTemplateRepository = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_c1elnnkjd().s[2]++, require("tslib"));
const QueryTemplate_1 =
/* istanbul ignore next */
(cov_c1elnnkjd().s[3]++, require("../../domain/visual/QueryTemplate"));
const BuiltInQueryTemplates_1 =
/* istanbul ignore next */
(cov_c1elnnkjd().s[4]++, require("./BuiltInQueryTemplates"));
class ObsidianQueryTemplateRepository {
  constructor(app, templatesPath =
  /* istanbul ignore next */
  (cov_c1elnnkjd().b[0][0]++, '.exocortex/templates'), usageDataPath =
  /* istanbul ignore next */
  (cov_c1elnnkjd().b[1][0]++, '.exocortex/template-usage.json')) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[0]++;
    cov_c1elnnkjd().s[5]++;
    this.app = app;
    /* istanbul ignore next */
    cov_c1elnnkjd().s[6]++;
    this.templateCache = new Map();
    /* istanbul ignore next */
    cov_c1elnnkjd().s[7]++;
    this.usageData = new Map();
    /* istanbul ignore next */
    cov_c1elnnkjd().s[8]++;
    this.cacheLoaded = false;
    /* istanbul ignore next */
    cov_c1elnnkjd().s[9]++;
    this.templatesPath = templatesPath;
    /* istanbul ignore next */
    cov_c1elnnkjd().s[10]++;
    this.usageDataPath = usageDataPath;
  }
  findAll() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[1]++;
    cov_c1elnnkjd().s[11]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[2]++;
      cov_c1elnnkjd().s[12]++;
      yield this.ensureCacheLoaded();
      const templates =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[13]++, Array.from(this.templateCache.values()));
      // Sort by usage frequency and then by name
      /* istanbul ignore next */
      cov_c1elnnkjd().s[14]++;
      return templates.sort((a, b) => {
        /* istanbul ignore next */
        cov_c1elnnkjd().f[3]++;
        var _a, _b;
        const usageA =
        /* istanbul ignore next */
        (cov_c1elnnkjd().s[15]++,
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[2][0]++,
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[4][0]++, (_a = this.usageData.get(a.getId())) === null) ||
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[4][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[3][0]++, void 0) :
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[3][1]++, _a.usageCount)) ||
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[2][1]++, 0));
        const usageB =
        /* istanbul ignore next */
        (cov_c1elnnkjd().s[16]++,
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[5][0]++,
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[7][0]++, (_b = this.usageData.get(b.getId())) === null) ||
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[7][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[6][0]++, void 0) :
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[6][1]++, _b.usageCount)) ||
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[5][1]++, 0));
        /* istanbul ignore next */
        cov_c1elnnkjd().s[17]++;
        if (usageA !== usageB) {
          /* istanbul ignore next */
          cov_c1elnnkjd().b[8][0]++;
          cov_c1elnnkjd().s[18]++;
          return usageB - usageA;
        } else
        /* istanbul ignore next */
        {
          cov_c1elnnkjd().b[8][1]++;
        }
        cov_c1elnnkjd().s[19]++;
        return a.getMetadata().name.localeCompare(b.getMetadata().name);
      });
    });
  }
  findByCriteria(criteria) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[4]++;
    cov_c1elnnkjd().s[20]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[5]++;
      cov_c1elnnkjd().s[21]++;
      yield this.ensureCacheLoaded();
      let templates =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[22]++, Array.from(this.templateCache.values()));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[23]++;
      if (criteria.category) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[9][0]++;
        cov_c1elnnkjd().s[24]++;
        templates = templates.filter(t => {
          /* istanbul ignore next */
          cov_c1elnnkjd().f[6]++;
          cov_c1elnnkjd().s[25]++;
          return t.getMetadata().category === criteria.category;
        });
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[9][1]++;
      }
      cov_c1elnnkjd().s[26]++;
      if (criteria.difficulty) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[10][0]++;
        cov_c1elnnkjd().s[27]++;
        templates = templates.filter(t => {
          /* istanbul ignore next */
          cov_c1elnnkjd().f[7]++;
          cov_c1elnnkjd().s[28]++;
          return t.getMetadata().difficulty === criteria.difficulty;
        });
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[10][1]++;
      }
      cov_c1elnnkjd().s[29]++;
      if (criteria.nameContains) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[11][0]++;
        const searchTerm =
        /* istanbul ignore next */
        (cov_c1elnnkjd().s[30]++, criteria.nameContains.toLowerCase());
        /* istanbul ignore next */
        cov_c1elnnkjd().s[31]++;
        templates = templates.filter(t => {
          /* istanbul ignore next */
          cov_c1elnnkjd().f[8]++;
          cov_c1elnnkjd().s[32]++;
          return /* istanbul ignore next */(cov_c1elnnkjd().b[12][0]++, t.getMetadata().name.toLowerCase().includes(searchTerm)) ||
          /* istanbul ignore next */
          (cov_c1elnnkjd().b[12][1]++, t.getMetadata().description.toLowerCase().includes(searchTerm));
        });
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[11][1]++;
      }
      cov_c1elnnkjd().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[14][0]++, criteria.tags) &&
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[14][1]++, criteria.tags.length > 0)) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[13][0]++;
        cov_c1elnnkjd().s[34]++;
        templates = templates.filter(t => {
          /* istanbul ignore next */
          cov_c1elnnkjd().f[9]++;
          const templateTags =
          /* istanbul ignore next */
          (cov_c1elnnkjd().s[35]++, t.getMetadata().tags);
          /* istanbul ignore next */
          cov_c1elnnkjd().s[36]++;
          return criteria.tags.some(tag => {
            /* istanbul ignore next */
            cov_c1elnnkjd().f[10]++;
            cov_c1elnnkjd().s[37]++;
            return templateTags.includes(tag);
          });
        });
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[13][1]++;
      }
      cov_c1elnnkjd().s[38]++;
      if (criteria.includeBuiltIn !== undefined) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[15][0]++;
        cov_c1elnnkjd().s[39]++;
        templates = templates.filter(t => {
          /* istanbul ignore next */
          cov_c1elnnkjd().f[11]++;
          cov_c1elnnkjd().s[40]++;
          return t.isBuiltInTemplate() === criteria.includeBuiltIn;
        });
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[15][1]++;
      }
      cov_c1elnnkjd().s[41]++;
      if (criteria.includeCustom !== undefined) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[16][0]++;
        cov_c1elnnkjd().s[42]++;
        templates = templates.filter(t => {
          /* istanbul ignore next */
          cov_c1elnnkjd().f[12]++;
          cov_c1elnnkjd().s[43]++;
          return !t.isBuiltInTemplate() === criteria.includeCustom;
        });
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[16][1]++;
      }
      cov_c1elnnkjd().s[44]++;
      return templates;
    });
  }
  findById(id) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[13]++;
    cov_c1elnnkjd().s[45]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[14]++;
      cov_c1elnnkjd().s[46]++;
      yield this.ensureCacheLoaded();
      /* istanbul ignore next */
      cov_c1elnnkjd().s[47]++;
      return this.templateCache.get(id);
    });
  }
  findByCategory(category) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[15]++;
    cov_c1elnnkjd().s[48]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[16]++;
      cov_c1elnnkjd().s[49]++;
      return this.findByCriteria({
        category
      });
    });
  }
  findByTags(tags) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[17]++;
    cov_c1elnnkjd().s[50]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[18]++;
      cov_c1elnnkjd().s[51]++;
      return this.findByCriteria({
        tags
      });
    });
  }
  save(template) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[19]++;
    cov_c1elnnkjd().s[52]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[20]++;
      cov_c1elnnkjd().s[53]++;
      if (template.isBuiltInTemplate()) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[17][0]++;
        cov_c1elnnkjd().s[54]++;
        throw new Error('Cannot modify built-in templates');
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[17][1]++;
      }
      const exists =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[55]++, yield this.exists(template.getId()));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[56]++;
      if (exists) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[18][0]++;
        cov_c1elnnkjd().s[57]++;
        return this.update(template);
      } else {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[18][1]++;
        cov_c1elnnkjd().s[58]++;
        return this.create(template);
      }
    });
  }
  create(template) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[21]++;
    cov_c1elnnkjd().s[59]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[22]++;
      cov_c1elnnkjd().s[60]++;
      if (template.isBuiltInTemplate()) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[19][0]++;
        cov_c1elnnkjd().s[61]++;
        throw new Error('Cannot create built-in templates through repository');
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[19][1]++;
      }
      const exists =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[62]++, yield this.exists(template.getId()));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[63]++;
      if (exists) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[20][0]++;
        cov_c1elnnkjd().s[64]++;
        throw new Error(`Template with ID ${template.getId()} already exists`);
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[20][1]++;
      }
      cov_c1elnnkjd().s[65]++;
      yield this.ensureTemplatesDirectoryExists();
      const fileName =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[66]++, `${this.sanitizeFileName(template.getMetadata().name)}-${template.getId()}.json`);
      const filePath =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[67]++, `${this.templatesPath}/${fileName}`);
      const data =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[68]++, {
        id: template.getId(),
        metadata: template.getMetadata(),
        layout: template.getLayout(),
        parameters: template.getParameters(),
        sparqlTemplate: template.getSparqlTemplate(),
        isBuiltIn: template.isBuiltInTemplate()
      });
      /* istanbul ignore next */
      cov_c1elnnkjd().s[69]++;
      yield this.app.vault.create(filePath, JSON.stringify(data, null, 2));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[70]++;
      this.templateCache.set(template.getId(), template);
      /* istanbul ignore next */
      cov_c1elnnkjd().s[71]++;
      return template;
    });
  }
  update(template) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[23]++;
    cov_c1elnnkjd().s[72]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[24]++;
      cov_c1elnnkjd().s[73]++;
      if (template.isBuiltInTemplate()) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[21][0]++;
        cov_c1elnnkjd().s[74]++;
        throw new Error('Cannot modify built-in templates');
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[21][1]++;
      }
      const exists =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[75]++, yield this.exists(template.getId()));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[76]++;
      if (!exists) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[22][0]++;
        cov_c1elnnkjd().s[77]++;
        throw new Error(`Template with ID ${template.getId()} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[22][1]++;
      }
      cov_c1elnnkjd().s[78]++;
      yield this.ensureTemplatesDirectoryExists();
      const fileName =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[79]++, yield this.findTemplateFile(template.getId()));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[80]++;
      if (!fileName) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[23][0]++;
        cov_c1elnnkjd().s[81]++;
        throw new Error(`Template file not found for ID ${template.getId()}`);
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[23][1]++;
      }
      const filePath =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[82]++, `${this.templatesPath}/${fileName}`);
      const file =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[83]++, this.app.vault.getAbstractFileByPath(filePath));
      const data =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[84]++, {
        id: template.getId(),
        metadata: template.getMetadata(),
        layout: template.getLayout(),
        parameters: template.getParameters(),
        sparqlTemplate: template.getSparqlTemplate(),
        isBuiltIn: template.isBuiltInTemplate()
      });
      /* istanbul ignore next */
      cov_c1elnnkjd().s[85]++;
      yield this.app.vault.modify(file, JSON.stringify(data, null, 2));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[86]++;
      this.templateCache.set(template.getId(), template);
      /* istanbul ignore next */
      cov_c1elnnkjd().s[87]++;
      return template;
    });
  }
  delete(id) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[25]++;
    cov_c1elnnkjd().s[88]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[26]++;
      const template =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[89]++, yield this.findById(id));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[90]++;
      if (!template) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[24][0]++;
        cov_c1elnnkjd().s[91]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[24][1]++;
      }
      cov_c1elnnkjd().s[92]++;
      if (template.isBuiltInTemplate()) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[25][0]++;
        cov_c1elnnkjd().s[93]++;
        throw new Error('Cannot delete built-in templates');
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[25][1]++;
      }
      const fileName =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[94]++, yield this.findTemplateFile(id));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[95]++;
      if (!fileName) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[26][0]++;
        cov_c1elnnkjd().s[96]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[26][1]++;
      }
      const filePath =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[97]++, `${this.templatesPath}/${fileName}`);
      const file =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[98]++, this.app.vault.getAbstractFileByPath(filePath));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[99]++;
      if (file) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[27][0]++;
        cov_c1elnnkjd().s[100]++;
        yield this.app.vault.delete(file);
        /* istanbul ignore next */
        cov_c1elnnkjd().s[101]++;
        this.templateCache.delete(id);
        /* istanbul ignore next */
        cov_c1elnnkjd().s[102]++;
        this.usageData.delete(id);
        /* istanbul ignore next */
        cov_c1elnnkjd().s[103]++;
        yield this.saveUsageData();
        /* istanbul ignore next */
        cov_c1elnnkjd().s[104]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[27][1]++;
      }
      cov_c1elnnkjd().s[105]++;
      return false;
    });
  }
  exists(id) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[27]++;
    cov_c1elnnkjd().s[106]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[28]++;
      cov_c1elnnkjd().s[107]++;
      yield this.ensureCacheLoaded();
      /* istanbul ignore next */
      cov_c1elnnkjd().s[108]++;
      return this.templateCache.has(id);
    });
  }
  importTemplates(templatesData) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[29]++;
    cov_c1elnnkjd().s[109]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[30]++;
      const imported =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[110]++, []);
      /* istanbul ignore next */
      cov_c1elnnkjd().s[111]++;
      for (const templateData of templatesData) {
        /* istanbul ignore next */
        cov_c1elnnkjd().s[112]++;
        try {
          const data =
          /* istanbul ignore next */
          (cov_c1elnnkjd().s[113]++, templateData);
          // Don't import if already exists and is built-in
          const existing =
          /* istanbul ignore next */
          (cov_c1elnnkjd().s[114]++, this.templateCache.get(data.id));
          /* istanbul ignore next */
          cov_c1elnnkjd().s[115]++;
          if (
          /* istanbul ignore next */
          (cov_c1elnnkjd().b[29][0]++, existing) &&
          /* istanbul ignore next */
          (cov_c1elnnkjd().b[29][1]++, existing.isBuiltInTemplate())) {
            /* istanbul ignore next */
            cov_c1elnnkjd().b[28][0]++;
            cov_c1elnnkjd().s[116]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_c1elnnkjd().b[28][1]++;
          }
          const template =
          /* istanbul ignore next */
          (cov_c1elnnkjd().s[117]++, this.createTemplateFromData(data));
          /* istanbul ignore next */
          cov_c1elnnkjd().s[118]++;
          yield this.save(template);
          /* istanbul ignore next */
          cov_c1elnnkjd().s[119]++;
          imported.push(template);
        } catch (error) {
          /* istanbul ignore next */
          cov_c1elnnkjd().s[120]++;
          console.warn('Failed to import template:', error);
        }
      }
      /* istanbul ignore next */
      cov_c1elnnkjd().s[121]++;
      return imported;
    });
  }
  exportTemplates(templateIds) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[31]++;
    cov_c1elnnkjd().s[122]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[32]++;
      cov_c1elnnkjd().s[123]++;
      yield this.ensureCacheLoaded();
      let templates;
      /* istanbul ignore next */
      cov_c1elnnkjd().s[124]++;
      if (templateIds) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[30][0]++;
        cov_c1elnnkjd().s[125]++;
        templates = templateIds.map(id => {
          /* istanbul ignore next */
          cov_c1elnnkjd().f[33]++;
          cov_c1elnnkjd().s[126]++;
          return this.templateCache.get(id);
        }).filter(t => {
          /* istanbul ignore next */
          cov_c1elnnkjd().f[34]++;
          cov_c1elnnkjd().s[127]++;
          return t !== undefined;
        });
      } else {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[30][1]++;
        cov_c1elnnkjd().s[128]++;
        templates = Array.from(this.templateCache.values());
      }
      /* istanbul ignore next */
      cov_c1elnnkjd().s[129]++;
      return templates.map(template => {
        /* istanbul ignore next */
        cov_c1elnnkjd().f[35]++;
        cov_c1elnnkjd().s[130]++;
        return template.toJSON();
      });
    });
  }
  getBuiltInTemplates() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[36]++;
    cov_c1elnnkjd().s[131]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[37]++;
      cov_c1elnnkjd().s[132]++;
      return this.findByCriteria({
        includeBuiltIn: true,
        includeCustom: false
      });
    });
  }
  getCustomTemplates() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[38]++;
    cov_c1elnnkjd().s[133]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[39]++;
      cov_c1elnnkjd().s[134]++;
      return this.findByCriteria({
        includeBuiltIn: false,
        includeCustom: true
      });
    });
  }
  getRecentlyUsed(limit =
  /* istanbul ignore next */
  (cov_c1elnnkjd().b[31][0]++, 10)) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[40]++;
    cov_c1elnnkjd().s[135]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[41]++;
      cov_c1elnnkjd().s[136]++;
      yield this.ensureCacheLoaded();
      const templateUsage =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[137]++, Array.from(this.usageData.entries()).sort((a, b) => {
        /* istanbul ignore next */
        cov_c1elnnkjd().f[42]++;
        cov_c1elnnkjd().s[138]++;
        return b[1].lastUsed.getTime() - a[1].lastUsed.getTime();
      }).slice(0, limit));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[139]++;
      return templateUsage.map(([id]) => {
        /* istanbul ignore next */
        cov_c1elnnkjd().f[43]++;
        cov_c1elnnkjd().s[140]++;
        return this.templateCache.get(id);
      }).filter(t => {
        /* istanbul ignore next */
        cov_c1elnnkjd().f[44]++;
        cov_c1elnnkjd().s[141]++;
        return t !== undefined;
      });
    });
  }
  recordUsage(templateId) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[45]++;
    cov_c1elnnkjd().s[142]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[46]++;
      cov_c1elnnkjd().s[143]++;
      yield this.ensureCacheLoaded();
      const existing =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[144]++, this.usageData.get(templateId));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[145]++;
      if (existing) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[32][0]++;
        cov_c1elnnkjd().s[146]++;
        existing.usageCount++;
        /* istanbul ignore next */
        cov_c1elnnkjd().s[147]++;
        existing.lastUsed = new Date();
      } else {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[32][1]++;
        cov_c1elnnkjd().s[148]++;
        this.usageData.set(templateId, {
          templateId,
          usageCount: 1,
          lastUsed: new Date(),
          parametersFilled: []
        });
      }
      /* istanbul ignore next */
      cov_c1elnnkjd().s[149]++;
      yield this.saveUsageData();
    });
  }
  getUsageStats(templateId) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[47]++;
    cov_c1elnnkjd().s[150]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[48]++;
      cov_c1elnnkjd().s[151]++;
      yield this.ensureCacheLoaded();
      const usage =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[152]++, this.usageData.get(templateId));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[153]++;
      if (!usage) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[33][0]++;
        cov_c1elnnkjd().s[154]++;
        return {
          usageCount: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[33][1]++;
      }
      const averageParametersFilled =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[155]++, usage.parametersFilled.length > 0 ?
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[34][0]++, usage.parametersFilled.reduce((sum, count) => {
        /* istanbul ignore next */
        cov_c1elnnkjd().f[49]++;
        cov_c1elnnkjd().s[156]++;
        return sum + count;
      }, 0) / usage.parametersFilled.length) :
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[34][1]++, undefined));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[157]++;
      return {
        usageCount: usage.usageCount,
        lastUsed: usage.lastUsed,
        averageParametersFilled
      };
    });
  }
  refresh() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[50]++;
    cov_c1elnnkjd().s[158]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[51]++;
      cov_c1elnnkjd().s[159]++;
      this.templateCache.clear();
      /* istanbul ignore next */
      cov_c1elnnkjd().s[160]++;
      this.usageData.clear();
      /* istanbul ignore next */
      cov_c1elnnkjd().s[161]++;
      this.cacheLoaded = false;
      /* istanbul ignore next */
      cov_c1elnnkjd().s[162]++;
      yield this.loadBuiltInTemplates();
      /* istanbul ignore next */
      cov_c1elnnkjd().s[163]++;
      yield this.loadCustomTemplates();
      /* istanbul ignore next */
      cov_c1elnnkjd().s[164]++;
      yield this.loadUsageData();
      /* istanbul ignore next */
      cov_c1elnnkjd().s[165]++;
      this.cacheLoaded = true;
    });
  }
  ensureCacheLoaded() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[52]++;
    cov_c1elnnkjd().s[166]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[53]++;
      cov_c1elnnkjd().s[167]++;
      if (!this.cacheLoaded) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[35][0]++;
        cov_c1elnnkjd().s[168]++;
        yield this.refresh();
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[35][1]++;
      }
    });
  }
  ensureTemplatesDirectoryExists() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[54]++;
    cov_c1elnnkjd().s[169]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[55]++;
      const templatesDir =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[170]++, this.app.vault.getAbstractFileByPath(this.templatesPath));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[171]++;
      if (!templatesDir) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[36][0]++;
        cov_c1elnnkjd().s[172]++;
        yield this.app.vault.createFolder(this.templatesPath);
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[36][1]++;
      }
    });
  }
  loadBuiltInTemplates() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[56]++;
    cov_c1elnnkjd().s[173]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[57]++;
      const builtInTemplates =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[174]++, BuiltInQueryTemplates_1.BuiltInQueryTemplates.getAll());
      /* istanbul ignore next */
      cov_c1elnnkjd().s[175]++;
      builtInTemplates.forEach(template => {
        /* istanbul ignore next */
        cov_c1elnnkjd().f[58]++;
        cov_c1elnnkjd().s[176]++;
        this.templateCache.set(template.getId(), template);
      });
    });
  }
  loadCustomTemplates() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[59]++;
    cov_c1elnnkjd().s[177]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[60]++;
      cov_c1elnnkjd().s[178]++;
      yield this.ensureTemplatesDirectoryExists();
      const templatesDir =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[179]++, this.app.vault.getAbstractFileByPath(this.templatesPath));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[180]++;
      if (
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[38][0]++, !templatesDir) ||
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[38][1]++, !templatesDir.children)) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[37][0]++;
        cov_c1elnnkjd().s[181]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[37][1]++;
      }
      const files =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[182]++, templatesDir.children.filter(file => {
        /* istanbul ignore next */
        cov_c1elnnkjd().f[61]++;
        cov_c1elnnkjd().s[183]++;
        return /* istanbul ignore next */(cov_c1elnnkjd().b[39][0]++, file.extension === 'json') &&
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[39][1]++, file.name.endsWith('.json'));
      }));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[184]++;
      for (const file of files) {
        /* istanbul ignore next */
        cov_c1elnnkjd().s[185]++;
        try {
          const content =
          /* istanbul ignore next */
          (cov_c1elnnkjd().s[186]++, yield this.app.vault.read(file));
          const data =
          /* istanbul ignore next */
          (cov_c1elnnkjd().s[187]++, JSON.parse(content));
          const template =
          /* istanbul ignore next */
          (cov_c1elnnkjd().s[188]++, this.createTemplateFromData(data));
          /* istanbul ignore next */
          cov_c1elnnkjd().s[189]++;
          this.templateCache.set(template.getId(), template);
        } catch (error) {
          /* istanbul ignore next */
          cov_c1elnnkjd().s[190]++;
          console.warn(`Failed to load template from ${file.path}:`, error);
        }
      }
    });
  }
  loadUsageData() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[62]++;
    cov_c1elnnkjd().s[191]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[63]++;
      cov_c1elnnkjd().s[192]++;
      try {
        const file =
        /* istanbul ignore next */
        (cov_c1elnnkjd().s[193]++, this.app.vault.getAbstractFileByPath(this.usageDataPath));
        /* istanbul ignore next */
        cov_c1elnnkjd().s[194]++;
        if (file) {
          /* istanbul ignore next */
          cov_c1elnnkjd().b[40][0]++;
          const content =
          /* istanbul ignore next */
          (cov_c1elnnkjd().s[195]++, yield this.app.vault.read(file));
          const data =
          /* istanbul ignore next */
          (cov_c1elnnkjd().s[196]++, JSON.parse(content));
          /* istanbul ignore next */
          cov_c1elnnkjd().s[197]++;
          this.usageData.clear();
          /* istanbul ignore next */
          cov_c1elnnkjd().s[198]++;
          data.forEach(usage => {
            /* istanbul ignore next */
            cov_c1elnnkjd().f[64]++;
            cov_c1elnnkjd().s[199]++;
            usage.lastUsed = new Date(usage.lastUsed);
            /* istanbul ignore next */
            cov_c1elnnkjd().s[200]++;
            this.usageData.set(usage.templateId, usage);
          });
        } else
        /* istanbul ignore next */
        {
          cov_c1elnnkjd().b[40][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_c1elnnkjd().s[201]++;
        // Usage data file doesn't exist or is corrupted - start fresh
        this.usageData.clear();
      }
    });
  }
  saveUsageData() {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[65]++;
    cov_c1elnnkjd().s[202]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[66]++;
      const data =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[203]++, Array.from(this.usageData.values()));
      const content =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[204]++, JSON.stringify(data, null, 2));
      const file =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[205]++, this.app.vault.getAbstractFileByPath(this.usageDataPath));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[206]++;
      if (file) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[41][0]++;
        cov_c1elnnkjd().s[207]++;
        yield this.app.vault.modify(file, content);
      } else {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[41][1]++;
        cov_c1elnnkjd().s[208]++;
        yield this.app.vault.create(this.usageDataPath, content);
      }
    });
  }
  findTemplateFile(templateId) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[67]++;
    cov_c1elnnkjd().s[209]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_c1elnnkjd().f[68]++;
      cov_c1elnnkjd().s[210]++;
      yield this.ensureTemplatesDirectoryExists();
      const templatesDir =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[211]++, this.app.vault.getAbstractFileByPath(this.templatesPath));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[212]++;
      if (
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[43][0]++, !templatesDir) ||
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[43][1]++, !templatesDir.children)) {
        /* istanbul ignore next */
        cov_c1elnnkjd().b[42][0]++;
        cov_c1elnnkjd().s[213]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_c1elnnkjd().b[42][1]++;
      }
      const files =
      /* istanbul ignore next */
      (cov_c1elnnkjd().s[214]++, templatesDir.children.filter(file => {
        /* istanbul ignore next */
        cov_c1elnnkjd().f[69]++;
        cov_c1elnnkjd().s[215]++;
        return /* istanbul ignore next */(cov_c1elnnkjd().b[44][0]++, file.extension === 'json') &&
        /* istanbul ignore next */
        (cov_c1elnnkjd().b[44][1]++, file.name.includes(templateId));
      }));
      /* istanbul ignore next */
      cov_c1elnnkjd().s[216]++;
      return files.length > 0 ?
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[45][0]++, files[0].name) :
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[45][1]++, null);
    });
  }
  createTemplateFromData(data) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[70]++;
    cov_c1elnnkjd().s[217]++;
    return new QueryTemplate_1.QueryTemplate({
      id: data.id,
      metadata: data.metadata,
      layout: data.layout,
      parameters: data.parameters,
      sparqlTemplate:
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[46][0]++, data.sparqlTemplate) ||
      /* istanbul ignore next */
      (cov_c1elnnkjd().b[46][1]++, 'SELECT * WHERE { ?s ?p ?o }'),
      isBuiltIn: data.isBuiltIn
    });
  }
  sanitizeFileName(name) {
    /* istanbul ignore next */
    cov_c1elnnkjd().f[71]++;
    cov_c1elnnkjd().s[218]++;
    return name.toLowerCase().replace(/[^\w\s-]/g, '').replace(/\s+/g, '-').substring(0, 50);
  }
}
/* istanbul ignore next */
cov_c1elnnkjd().s[219]++;
exports.ObsidianQueryTemplateRepository = ObsidianQueryTemplateRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,