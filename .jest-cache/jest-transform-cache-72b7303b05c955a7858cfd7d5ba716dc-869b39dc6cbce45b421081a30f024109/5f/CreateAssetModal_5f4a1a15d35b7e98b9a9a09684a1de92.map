{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/CreateAssetModal.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/CreateAssetModal.ts"],"sourcesContent":["import { App, Modal, Setting, Notice, TFile } from \"obsidian\";\nimport { CreateAssetUseCase } from \"../../application/use-cases/CreateAssetUseCase\";\nimport { DIContainer } from \"../../infrastructure/container/DIContainer\";\nimport { IOntologyRepository } from \"../../domain/repositories/IOntologyRepository\";\nimport { IClassViewRepository } from \"../../domain/repositories/IClassViewRepository\";\nimport { PropertyCacheService } from \"../../domain/services/PropertyCacheService\";\nimport { CircuitBreakerService } from \"../../infrastructure/resilience/CircuitBreakerService\";\nimport { Result } from \"../../domain/core/Result\";\nimport { CreateAssetResponse } from \"../../application/use-cases/CreateAssetUseCase\";\n\n/**\n * Modal for creating new ExoAssets\n * Presentation layer component that delegates to use cases\n */\nexport class CreateAssetModal extends Modal {\n  private assetTitle: string = \"\";\n  private assetClass: string = \"exo__Asset\";\n  private assetOntology: string = \"\";\n  private propertyValues: Map<string, any> = new Map();\n  private propertiesContainer: HTMLElement | null = null;\n  private properties: any[] = []; // Store current properties for testing\n\n  private createAssetUseCase: CreateAssetUseCase;\n  private container: DIContainer;\n  private ontologyRepository: IOntologyRepository;\n  private classViewRepository: IClassViewRepository;\n  private propertyCache: PropertyCacheService;\n  private circuitBreaker: CircuitBreakerService;\n\n  constructor(app: App) {\n    super(app);\n    this.container = DIContainer.getInstance();\n    this.createAssetUseCase = this.container.getCreateAssetUseCase();\n    this.ontologyRepository = this.container.resolve<IOntologyRepository>(\n      \"IOntologyRepository\",\n    );\n    this.classViewRepository = this.container.resolve<IClassViewRepository>(\n      \"IClassViewRepository\",\n    );\n    this.propertyCache = this.container.resolve<PropertyCacheService>(\n      \"PropertyCacheService\",\n    );\n    this.circuitBreaker = this.container.resolve<CircuitBreakerService>(\n      \"CircuitBreakerService\",\n    );\n  }\n\n  async onOpen() {\n    const { contentEl } = this;\n    contentEl.createEl(\"h2\", { text: \"Create ExoAsset\" });\n\n    await this.setupTitleField(contentEl);\n    await this.setupClassField(contentEl);\n    await this.setupOntologyField(contentEl);\n    await this.setupPropertiesSection(contentEl);\n    this.setupActionButtons(contentEl);\n  }\n\n  private async setupTitleField(containerEl: HTMLElement): Promise<void> {\n    new Setting(containerEl)\n      .setName(\"Title\")\n      .setDesc(\"Asset title\")\n      .addText((text) =>\n        text\n          .setPlaceholder(\"Enter asset title\")\n          .setValue(this.assetTitle)\n          .onChange((value) => (this.assetTitle = value)),\n      );\n  }\n\n  private async setupClassField(containerEl: HTMLElement): Promise<void> {\n    // Get all class files from the vault\n    const files = this.app.vault.getMarkdownFiles();\n    const classes: { className: string; displayName: string }[] = [];\n\n    // Find all class definitions (files with exo__Class frontmatter)\n    for (const file of files) {\n      const cache = this.app.metadataCache.getFileCache(file);\n      if (cache?.frontmatter) {\n        const instanceClass = cache.frontmatter[\"exo__Instance_class\"];\n        if (\n          instanceClass === \"[[exo__Class]]\" ||\n          instanceClass === \"exo__Class\"\n        ) {\n          const className = file.basename;\n          const displayName = cache.frontmatter[\"rdfs__label\"] || className;\n          classes.push({ className, displayName });\n        }\n      }\n    }\n\n    // Add default classes if none found\n    if (classes.length === 0) {\n      classes.push(\n        { className: \"exo__Asset\", displayName: \"Asset\" },\n        { className: \"exo__Class\", displayName: \"Class\" },\n        { className: \"exo__Property\", displayName: \"Property\" },\n      );\n    }\n\n    new Setting(containerEl)\n      .setName(\"Class\")\n      .setDesc(\"Select the type of asset\")\n      .addDropdown((dropdown) => {\n        for (const classInfo of classes) {\n          dropdown.addOption(classInfo.className, classInfo.displayName);\n        }\n\n        dropdown.setValue(this.assetClass);\n        dropdown.onChange(async (value) => {\n          this.assetClass = value;\n          await this.updatePropertiesForClass(value);\n        });\n      });\n  }\n\n  private async setupOntologyField(containerEl: HTMLElement): Promise<void> {\n    // Get all ontology files from the vault\n    const files = this.app.vault.getMarkdownFiles();\n    const ontologies: { prefix: string; displayName: string }[] = [];\n\n    // Find all ontology definitions (files starting with ! or having exo__Ontology_prefix)\n    for (const file of files) {\n      if (file.name.startsWith(\"!\")) {\n        const cache = this.app.metadataCache.getFileCache(file);\n        if (cache?.frontmatter) {\n          const prefix =\n            cache.frontmatter[\"exo__Ontology_prefix\"] ||\n            file.basename.substring(1);\n          const displayName = cache.frontmatter[\"rdfs__label\"] || prefix;\n          ontologies.push({ prefix, displayName });\n        }\n      }\n    }\n\n    // Add default ontologies if none found\n    if (ontologies.length === 0) {\n      ontologies.push(\n        { prefix: \"exo\", displayName: \"Exocortex Core\" },\n        { prefix: \"ui\", displayName: \"User Interface\" },\n        { prefix: \"rdfs\", displayName: \"RDF Schema\" },\n      );\n    }\n\n    const defaultOntology = \"exo\";\n\n    // Set default ontology when no ontologies found in vault\n    if (ontologies.length > 0 && !this.assetOntology) {\n      this.assetOntology = defaultOntology;\n    }\n\n    new Setting(containerEl)\n      .setName(\"Ontology\")\n      .setDesc(\"Select which knowledge graph this asset belongs to\")\n      .addDropdown((dropdown) => {\n        for (const ontology of ontologies) {\n          dropdown.addOption(ontology.prefix, ontology.displayName);\n        }\n\n        // Set default ontology\n        if (\n          defaultOntology &&\n          ontologies.some((o: any) => o.prefix === defaultOntology)\n        ) {\n          this.assetOntology = defaultOntology;\n          dropdown.setValue(defaultOntology);\n        } else if (ontologies.length > 0) {\n          this.assetOntology = ontologies[0].prefix;\n          dropdown.setValue(ontologies[0].prefix);\n        }\n\n        dropdown.onChange((value) => {\n          this.assetOntology = value;\n        });\n      });\n  }\n\n  private async setupPropertiesSection(\n    containerEl: HTMLElement,\n  ): Promise<void> {\n    containerEl.createEl(\"h3\", {\n      text: \"Properties\",\n      cls: \"exocortex-properties-header\",\n    });\n\n    this.propertiesContainer = containerEl.createDiv({\n      cls: \"exocortex-properties-container\",\n    });\n\n    await this.updatePropertiesForClass(this.assetClass);\n  }\n\n  private async updatePropertiesForClass(className: string): Promise<void> {\n    if (!this.propertiesContainer) return;\n\n    console.log(`Updating properties for class: ${className}`);\n\n    // Clear the container - try Obsidian method first, fallback to DOM\n    if (\n      \"empty\" in this.propertiesContainer &&\n      typeof (this.propertiesContainer as any).empty === \"function\"\n    ) {\n      (this.propertiesContainer as any).empty();\n    } else {\n      // Fallback to standard DOM method - use innerHTML for complete cleanup\n      this.propertiesContainer.innerHTML = \"\";\n    }\n    this.propertyValues.clear();\n\n    // Get properties for this class\n    this.properties = [];\n    const files = this.app.vault.getMarkdownFiles();\n\n    console.log(`Scanning ${files.length} files for properties...`);\n\n    // Find all property definitions related to this class\n    for (const file of files) {\n      const cache = this.app.metadataCache.getFileCache(file);\n      if (cache?.frontmatter) {\n        const instanceClass = cache.frontmatter[\"exo__Instance_class\"];\n        if (\n          instanceClass === \"[[exo__Property]]\" ||\n          instanceClass === \"exo__Property\"\n        ) {\n          const domain = cache.frontmatter[\"rdfs__domain\"];\n          // Check if this property belongs to the current class\n          if (\n            domain === `[[${className}]]` ||\n            domain === className ||\n            (Array.isArray(domain) &&\n              (domain.includes(className) ||\n                domain.includes(`[[${className}]]`)))\n          ) {\n            const propertyName = file.basename;\n            const label = cache.frontmatter[\"rdfs__label\"] || propertyName;\n            const description = cache.frontmatter[\"rdfs__comment\"] || \"\";\n            const range = cache.frontmatter[\"rdfs__range\"] || \"string\";\n            const isRequired =\n              cache.frontmatter[\"exo__Property_isRequired\"] || false;\n            const options = cache.frontmatter[\"exo__Property_options\"] || null;\n\n            console.log(\n              `Found property ${propertyName} for class ${className}`,\n            );\n\n            // Determine property type based on range and options\n            let type = this.mapRangeToType(range);\n            if (options && Array.isArray(options)) {\n              type = \"enum\";\n            } else if (range === \"select\" && options) {\n              type = \"enum\";\n            }\n\n            this.properties.push({\n              name: propertyName,\n              label: label,\n              description: description,\n              type: type,\n              isRequired: isRequired,\n              range: range,\n              options: options,\n            });\n          }\n        }\n      }\n    }\n\n    console.log(\n      `Found ${this.properties.length} properties for class ${className}`,\n    );\n\n    // Add some default properties for common classes\n    if (this.properties.length === 0 && className === \"exo__Asset\") {\n      this.properties.push(\n        {\n          name: \"description\",\n          label: \"Description\",\n          description: \"A brief description of the asset\",\n          type: \"text\",\n          isRequired: false,\n        },\n        {\n          name: \"tags\",\n          label: \"Tags\",\n          description: \"Tags for categorization\",\n          type: \"array\",\n          isRequired: false,\n        },\n      );\n    }\n\n    if (this.properties.length === 0) {\n      this.propertiesContainer.createEl(\"p\", {\n        text: \"No specific properties for this class\",\n        cls: \"exocortex-no-properties\",\n      });\n      return;\n    }\n\n    // Create fields for all properties (including defaults)\n    for (const prop of this.properties) {\n      this.createPropertyField(prop);\n    }\n  }\n\n  private mapRangeToType(range: string): string {\n    // Map RDF/OWL ranges to input types\n    if (range === \"select\") return \"enum\";\n    if (range.includes(\"boolean\")) return \"boolean\";\n    if (range.includes(\"date\") || range.includes(\"Date\")) return \"date\";\n    if (\n      range.includes(\"integer\") ||\n      range.includes(\"decimal\") ||\n      range.includes(\"float\")\n    )\n      return \"number\";\n    if (range.includes(\"string\") && range.includes(\"[]\")) return \"array\";\n    if (range.includes(\"text\") || range.includes(\"Text\")) return \"text\";\n    return \"string\"; // default\n  }\n\n  private createPropertyField(property: any): void {\n    if (!this.propertiesContainer) return;\n\n    const setting = new Setting(this.propertiesContainer)\n      .setName(property.label + (property.isRequired ? \" *\" : \"\"))\n      .setDesc(property.description);\n\n    // Create appropriate input based on property type\n    switch (property.type) {\n      case \"enum\":\n        this.createEnumField(setting, property);\n        break;\n      case \"boolean\":\n        this.createBooleanField(setting, property);\n        break;\n      case \"date\":\n        this.createDateField(setting, property);\n        break;\n      case \"number\":\n        this.createNumberField(setting, property);\n        break;\n      case \"text\":\n        this.createTextAreaField(setting, property);\n        break;\n      case \"array\":\n        this.createArrayField(setting, property);\n        break;\n      default:\n        this.createTextField(setting, property);\n    }\n  }\n\n  private createEnumField(setting: Setting, property: any): void {\n    setting.addDropdown((dropdown) => {\n      dropdown.addOption(\"\", \"-- Select --\");\n      for (const option of property.options) {\n        dropdown.addOption(option, option);\n      }\n      dropdown.onChange((value) => {\n        if (value) {\n          this.propertyValues.set(property.name, value);\n        } else {\n          this.propertyValues.delete(property.name);\n        }\n      });\n    });\n  }\n\n  private createBooleanField(setting: Setting, property: any): void {\n    setting.addToggle((toggle) => {\n      toggle.onChange((value) => {\n        this.propertyValues.set(property.name, value);\n      });\n    });\n  }\n\n  private createDateField(setting: Setting, property: any): void {\n    setting.addText((text) => {\n      text.setPlaceholder(\"YYYY-MM-DD\").onChange((value) => {\n        if (value) {\n          this.propertyValues.set(property.name, value);\n        } else {\n          this.propertyValues.delete(property.name);\n        }\n      });\n      // Set the input type to date\n      text.inputEl.type = \"date\";\n    });\n  }\n\n  private createNumberField(setting: Setting, property: any): void {\n    setting.addText((text) => {\n      text.setPlaceholder(\"Enter number\").onChange((value) => {\n        if (value) {\n          const num = parseFloat(value);\n          if (!isNaN(num)) {\n            this.propertyValues.set(property.name, num);\n          }\n        } else {\n          this.propertyValues.delete(property.name);\n        }\n      });\n    });\n  }\n\n  private createTextAreaField(setting: Setting, property: any): void {\n    setting.addTextArea((text) => {\n      text\n        .setPlaceholder(\"Enter \" + property.label.toLowerCase())\n        .onChange((value) => {\n          if (value) {\n            this.propertyValues.set(property.name, value);\n          } else {\n            this.propertyValues.delete(property.name);\n          }\n        });\n    });\n  }\n\n  private createArrayField(setting: Setting, property: any): void {\n    setting.addText((text) => {\n      text\n        .setPlaceholder(\"Comma-separated values or [[links]]\")\n        .onChange((value) => {\n          if (value) {\n            if (value.includes(\"[[\")) {\n              const links = value.match(/\\[\\[([^\\]]+)\\]\\]/g) || [];\n              this.propertyValues.set(property.name, links);\n            } else {\n              const items = value\n                .split(\",\")\n                .map((s) => s.trim())\n                .filter((s) => s);\n              this.propertyValues.set(property.name, items);\n            }\n          } else {\n            this.propertyValues.delete(property.name);\n          }\n        });\n    });\n  }\n\n  private createTextField(setting: Setting, property: any): void {\n    setting.addText((text) => {\n      text\n        .setPlaceholder(\"Enter \" + property.label.toLowerCase())\n        .onChange((value) => {\n          if (value) {\n            this.propertyValues.set(property.name, value);\n          } else {\n            this.propertyValues.delete(property.name);\n          }\n        });\n    });\n  }\n\n  private setupActionButtons(containerEl: HTMLElement): void {\n    new Setting(containerEl).addButton((btn) =>\n      btn\n        .setButtonText(\"Create\")\n        .setCta()\n        .onClick(async () => {\n          await this.createAsset();\n        }),\n    );\n  }\n\n  private async createAsset(): Promise<void> {\n    // Use circuit breaker for resilient asset creation\n    const result = await this.circuitBreaker.execute<CreateAssetResponse>(\n      \"asset-creation\",\n      async (): Promise<Result<CreateAssetResponse>> => {\n        // Convert property values to plain object\n        const properties: Record<string, any> = {};\n        for (const [key, value] of this.propertyValues) {\n          properties[key] = value;\n        }\n\n        // Execute use case\n        const response = await this.createAssetUseCase.execute({\n          title: this.assetTitle,\n          className: this.assetClass,\n          ontologyPrefix: this.assetOntology,\n          properties,\n        });\n\n        if (response.success) {\n          return Result.ok(response);\n        } else {\n          return Result.fail(response.error || \"Asset creation failed\");\n        }\n      },\n      {\n        failureThreshold: 3,\n        resetTimeout: 30000, // 30 seconds\n        halfOpenMaxCalls: 2,\n      },\n    );\n\n    if (result.isSuccess) {\n      const response = result.getValue()!;\n      new Notice(response.message);\n      this.close();\n    } else {\n      const error = result.getError();\n      console.error(\"Asset creation failed:\", error);\n      \n      // Provide user-friendly error messages\n      if (error.includes(\"Circuit\")) {\n        new Notice(\"Asset creation is temporarily unavailable. Please try again in a moment.\", 5000);\n      } else if (error.includes(\"ontology\")) {\n        new Notice(`Ontology issue: ${error}`, 8000);\n      } else if (error.includes(\"validation\") || error.includes(\"Invalid\")) {\n        new Notice(`Validation error: ${error}`, 6000);\n      } else {\n        new Notice(`Error: ${error}`, 5000);\n      }\n    }\n  }\n\n  onClose() {\n    // Clear content - try Obsidian method first, fallback to DOM\n    if (\n      \"empty\" in this.contentEl &&\n      typeof (this.contentEl as any).empty === \"function\"\n    ) {\n      (this.contentEl as any).empty();\n    } else {\n      // Fallback to standard DOM method - use innerHTML for complete cleanup\n      // Try both methods to ensure compatibility\n      this.contentEl.innerHTML = \"\";\n      // Also try removing children manually as additional fallback\n      while (this.contentEl.firstChild) {\n        this.contentEl.removeChild(this.contentEl.firstChild);\n      }\n    }\n  }\n}\n"],"version":3}