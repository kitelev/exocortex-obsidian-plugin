ed154adc67b1d455c924227a0d318e57
"use strict";

/* istanbul ignore next */
function cov_2oxu8qglpe() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/renderers/QueryBlockRenderer.ts";
  var hash = "6dfeef7bd3e57a6607619c59ae1afdbaeb708814";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/renderers/QueryBlockRenderer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 35
        },
        end: {
          line: 5,
          column: 98
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 23
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 96
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "7": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "8": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 20,
          column: 17
        }
      },
      "9": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 18,
          column: 23
        }
      },
      "10": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "11": {
        start: {
          line: 21,
          column: 36
        },
        end: {
          line: 21,
          column: 42
        }
      },
      "12": {
        start: {
          line: 23,
          column: 31
        },
        end: {
          line: 27,
          column: 18
        }
      },
      "13": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 34,
          column: 17
        }
      },
      "14": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 32,
          column: 23
        }
      },
      "15": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 27
        }
      },
      "16": {
        start: {
          line: 35,
          column: 63
        },
        end: {
          line: 35,
          column: 80
        }
      },
      "17": {
        start: {
          line: 37,
          column: 29
        },
        end: {
          line: 37,
          column: 81
        }
      },
      "18": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 41,
          column: 19
        }
      },
      "19": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 48,
          column: 17
        }
      },
      "20": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 46,
          column: 23
        }
      },
      "21": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 27
        }
      },
      "22": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 61,
          column: 17
        }
      },
      "23": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 52,
          column: 65
        }
      },
      "24": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "25": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 61
        }
      },
      "26": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 30
        }
      },
      "27": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 60
        }
      },
      "28": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 30
        }
      },
      "29": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "30": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 66
        }
      },
      "31": {
        start: {
          line: 73,
          column: 21
        },
        end: {
          line: 73,
          column: 78
        }
      },
      "32": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "33": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 75,
          column: 70
        }
      },
      "34": {
        start: {
          line: 76,
          column: 32
        },
        end: {
          line: 76,
          column: 112
        }
      },
      "35": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 77,
          column: 44
        }
      },
      "36": {
        start: {
          line: 78,
          column: 25
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "37": {
        start: {
          line: 84,
          column: 27
        },
        end: {
          line: 84,
          column: 60
        }
      },
      "38": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "39": {
        start: {
          line: 86,
          column: 35
        },
        end: {
          line: 89,
          column: 18
        }
      },
      "40": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 95,
          column: 34
        }
      },
      "41": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "42": {
        start: {
          line: 97,
          column: 29
        },
        end: {
          line: 97,
          column: 70
        }
      },
      "43": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "44": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 103,
          column: 19
        }
      },
      "45": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 102,
          column: 21
        }
      },
      "46": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 42
        }
      },
      "47": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 109,
          column: 24
        }
      },
      "48": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 108,
          column: 56
        }
      },
      "49": {
        start: {
          line: 111,
          column: 22
        },
        end: {
          line: 111,
          column: 83
        }
      },
      "50": {
        start: {
          line: 113,
          column: 22
        },
        end: {
          line: 113,
          column: 45
        }
      },
      "51": {
        start: {
          line: 114,
          column: 26
        },
        end: {
          line: 114,
          column: 46
        }
      },
      "52": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 51
        }
      },
      "53": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "54": {
        start: {
          line: 117,
          column: 32
        },
        end: {
          line: 117,
          column: 77
        }
      },
      "55": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 60
        }
      },
      "56": {
        start: {
          line: 121,
          column: 22
        },
        end: {
          line: 121,
          column: 45
        }
      },
      "57": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "58": {
        start: {
          line: 123,
          column: 29
        },
        end: {
          line: 123,
          column: 70
        }
      },
      "59": {
        start: {
          line: 124,
          column: 32
        },
        end: {
          line: 124,
          column: 112
        }
      },
      "60": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 125,
          column: 44
        }
      },
      "61": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 127,
          column: 47
        }
      },
      "62": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "63": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 140,
          column: 15
        }
      },
      "64": {
        start: {
          line: 135,
          column: 29
        },
        end: {
          line: 135,
          column: 47
        }
      },
      "65": {
        start: {
          line: 136,
          column: 30
        },
        end: {
          line: 136,
          column: 47
        }
      },
      "66": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "67": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 58
        }
      },
      "68": {
        start: {
          line: 144,
          column: 31
        },
        end: {
          line: 144,
          column: 84
        }
      },
      "69": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 174,
          column: 11
        }
      },
      "70": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 70
        }
      },
      "71": {
        start: {
          line: 147,
          column: 32
        },
        end: {
          line: 147,
          column: 112
        }
      },
      "72": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 148,
          column: 76
        }
      },
      "73": {
        start: {
          line: 150,
          column: 27
        },
        end: {
          line: 150,
          column: 75
        }
      },
      "74": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "75": {
        start: {
          line: 157,
          column: 25
        },
        end: {
          line: 157,
          column: 71
        }
      },
      "76": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 60
        }
      },
      "77": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "78": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 164,
          column: 19
        }
      },
      "79": {
        start: {
          line: 167,
          column: 32
        },
        end: {
          line: 167,
          column: 69
        }
      },
      "80": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "81": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 172,
          column: 19
        }
      },
      "82": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 178,
          column: 22
        }
      },
      "83": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 22
        }
      },
      "84": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 59
        }
      },
      "85": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 106
        }
      },
      "86": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "87": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 65
        }
      },
      "88": {
        start: {
          line: 184,
          column: 34
        },
        end: {
          line: 184,
          column: 52
        }
      },
      "89": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 38
        }
      },
      "90": {
        start: {
          line: 189,
          column: 0
        },
        end: {
          line: 189,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 21
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 53
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 55
          },
          end: {
            line: 12,
            column: 56
          }
        },
        loc: {
          start: {
            line: 12,
            column: 68
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 12
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 33
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 72
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 74,
            column: 22
          },
          end: {
            line: 74,
            column: 23
          }
        },
        loc: {
          start: {
            line: 74,
            column: 30
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 74
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 38
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 93
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 22
          },
          end: {
            line: 96,
            column: 23
          }
        },
        loc: {
          start: {
            line: 96,
            column: 30
          },
          end: {
            line: 105,
            column: 9
          }
        },
        line: 96
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 99,
            column: 58
          },
          end: {
            line: 99,
            column: 59
          }
        },
        loc: {
          start: {
            line: 99,
            column: 65
          },
          end: {
            line: 103,
            column: 17
          }
        },
        line: 99
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 108,
            column: 21
          }
        },
        loc: {
          start: {
            line: 108,
            column: 25
          },
          end: {
            line: 108,
            column: 56
          }
        },
        line: 108
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 116,
            column: 31
          }
        },
        loc: {
          start: {
            line: 116,
            column: 38
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 116
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 122,
            column: 22
          },
          end: {
            line: 122,
            column: 23
          }
        },
        loc: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 122
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 134,
            column: 34
          },
          end: {
            line: 134,
            column: 35
          }
        },
        loc: {
          start: {
            line: 134,
            column: 42
          },
          end: {
            line: 140,
            column: 13
          }
        },
        line: 134
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 34
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 143
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 145,
            column: 22
          },
          end: {
            line: 145,
            column: 23
          }
        },
        loc: {
          start: {
            line: 145,
            column: 30
          },
          end: {
            line: 174,
            column: 9
          }
        },
        line: 145
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 176
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 23
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 182
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 184,
            column: 29
          },
          end: {
            line: 184,
            column: 30
          }
        },
        loc: {
          start: {
            line: 184,
            column: 34
          },
          end: {
            line: 184,
            column: 52
          }
        },
        line: 184
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 16
          },
          end: {
            line: 20,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 16
          },
          end: {
            line: 20,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 34,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 34,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 54
          },
          end: {
            line: 39,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 84
          },
          end: {
            line: 39,
            column: 113
          }
        }, {
          start: {
            line: 39,
            column: 116
          },
          end: {
            line: 39,
            column: 118
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 53,
            column: 30
          }
        }, {
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 56,
            column: 30
          }
        }, {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 57,
            column: 32
          }
        }, {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 60,
            column: 30
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 76,
            column: 32
          },
          end: {
            line: 76,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 105
          }
        }, {
          start: {
            line: 76,
            column: 110
          },
          end: {
            line: 76,
            column: 112
          }
        }],
        line: 76
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 76
          },
          end: {
            line: 76,
            column: 82
          }
        }, {
          start: {
            line: 76,
            column: 85
          },
          end: {
            line: 76,
            column: 105
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 76,
            column: 50
          }
        }, {
          start: {
            line: 76,
            column: 54
          },
          end: {
            line: 76,
            column: 73
          }
        }],
        line: 76
      },
      "8": {
        loc: {
          start: {
            line: 79,
            column: 22
          },
          end: {
            line: 79,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 22
          },
          end: {
            line: 79,
            column: 53
          }
        }, {
          start: {
            line: 79,
            column: 57
          },
          end: {
            line: 79,
            column: 70
          }
        }],
        line: 79
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 59
          },
          end: {
            line: 98,
            column: 65
          }
        }, {
          start: {
            line: 98,
            column: 68
          },
          end: {
            line: 98,
            column: 88
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 33
          }
        }, {
          start: {
            line: 98,
            column: 37
          },
          end: {
            line: 98,
            column: 56
          }
        }],
        line: 98
      },
      "13": {
        loc: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 102,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 102,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "14": {
        loc: {
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 124,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 33
          },
          end: {
            line: 124,
            column: 105
          }
        }, {
          start: {
            line: 124,
            column: 110
          },
          end: {
            line: 124,
            column: 112
          }
        }],
        line: 124
      },
      "15": {
        loc: {
          start: {
            line: 124,
            column: 33
          },
          end: {
            line: 124,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 76
          },
          end: {
            line: 124,
            column: 82
          }
        }, {
          start: {
            line: 124,
            column: 85
          },
          end: {
            line: 124,
            column: 105
          }
        }],
        line: 124
      },
      "16": {
        loc: {
          start: {
            line: 124,
            column: 33
          },
          end: {
            line: 124,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 33
          },
          end: {
            line: 124,
            column: 50
          }
        }, {
          start: {
            line: 124,
            column: 54
          },
          end: {
            line: 124,
            column: 73
          }
        }],
        line: 124
      },
      "17": {
        loc: {
          start: {
            line: 129,
            column: 22
          },
          end: {
            line: 129,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 22
          },
          end: {
            line: 129,
            column: 53
          }
        }, {
          start: {
            line: 129,
            column: 57
          },
          end: {
            line: 129,
            column: 70
          }
        }],
        line: 129
      },
      "18": {
        loc: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "19": {
        loc: {
          start: {
            line: 147,
            column: 32
          },
          end: {
            line: 147,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 33
          },
          end: {
            line: 147,
            column: 105
          }
        }, {
          start: {
            line: 147,
            column: 110
          },
          end: {
            line: 147,
            column: 112
          }
        }],
        line: 147
      },
      "20": {
        loc: {
          start: {
            line: 147,
            column: 33
          },
          end: {
            line: 147,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 76
          },
          end: {
            line: 147,
            column: 82
          }
        }, {
          start: {
            line: 147,
            column: 85
          },
          end: {
            line: 147,
            column: 105
          }
        }],
        line: 147
      },
      "21": {
        loc: {
          start: {
            line: 147,
            column: 33
          },
          end: {
            line: 147,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 33
          },
          end: {
            line: 147,
            column: 50
          }
        }, {
          start: {
            line: 147,
            column: 54
          },
          end: {
            line: 147,
            column: 73
          }
        }],
        line: 147
      },
      "22": {
        loc: {
          start: {
            line: 152,
            column: 22
          },
          end: {
            line: 152,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 22
          },
          end: {
            line: 152,
            column: 53
          }
        }, {
          start: {
            line: 152,
            column: 57
          },
          end: {
            line: 152,
            column: 70
          }
        }],
        line: 152
      },
      "23": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "24": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "25": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 178,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 178,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "26": {
        loc: {
          start: {
            line: 179,
            column: 20
          },
          end: {
            line: 179,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 43
          },
          end: {
            line: 179,
            column: 51
          }
        }, {
          start: {
            line: 179,
            column: 54
          },
          end: {
            line: 179,
            column: 59
          }
        }],
        line: 179
      },
      "27": {
        loc: {
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 180,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 180,
            column: 98
          }
        }, {
          start: {
            line: 180,
            column: 103
          },
          end: {
            line: 180,
            column: 105
          }
        }],
        line: 180
      },
      "28": {
        loc: {
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 180,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 49
          },
          end: {
            line: 180,
            column: 55
          }
        }, {
          start: {
            line: 180,
            column: 58
          },
          end: {
            line: 180,
            column: 98
          }
        }],
        line: 180
      },
      "29": {
        loc: {
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 180,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 180,
            column: 28
          }
        }, {
          start: {
            line: 180,
            column: 32
          },
          end: {
            line: 180,
            column: 46
          }
        }],
        line: 180
      },
      "30": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/renderers/QueryBlockRenderer.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/renderers/QueryBlockRenderer.ts"],
      sourcesContent: ["import { App, TFile } from 'obsidian';\nimport { ExecuteQueryBlockUseCase } from '../../application/use-cases/ExecuteQueryBlockUseCase';\nimport { QueryBlockConfig } from '../../domain/entities/LayoutBlock';\n\nexport class QueryBlockRenderer {\n    private executeQueryUseCase: ExecuteQueryBlockUseCase;\n\n    constructor(private app: App) {\n        this.executeQueryUseCase = new ExecuteQueryBlockUseCase(app);\n    }\n\n    async render(\n        container: HTMLElement,\n        config: any,\n        file: TFile,\n        frontmatter: any,\n        dv: any\n    ): Promise<void> {\n        try {\n            if (!config) {\n                container.createEl('p', { \n                    text: 'Query configuration is missing',\n                    cls: 'exocortex-error'\n                });\n                return;\n            }\n\n            const queryConfig = config as QueryBlockConfig;\n            \n            // Execute query\n            const result = await this.executeQueryUseCase.execute({\n                blockConfig: queryConfig,\n                currentAssetPath: file.path,\n                currentAssetFrontmatter: frontmatter\n            });\n\n        if (result.isFailure) {\n            container.createEl('p', { \n                text: `Query failed: ${result.error}`,\n                cls: 'exocortex-error'\n            });\n            return;\n        }\n\n        const { results, totalCount, executionTime } = result.getValue();\n\n        // Show result count and execution time\n        const info = container.createDiv({ cls: 'exocortex-query-info' });\n        info.createEl('span', { \n            text: `Found ${totalCount} items${results.length < totalCount ? `, showing ${results.length}` : ''} (${executionTime}ms)`,\n            cls: 'exocortex-query-count'\n        });\n\n        if (results.length === 0) {\n            container.createEl('p', { \n                text: 'No items found',\n                cls: 'exocortex-empty'\n            });\n            return;\n        }\n\n        // Render based on display type\n        switch (queryConfig.displayAs) {\n            case 'table':\n                this.renderTable(container, results, dv);\n                break;\n                \n            case 'cards':\n                this.renderCards(container, results);\n                break;\n                \n            case 'list':\n            default:\n                this.renderList(container, results);\n                break;\n        }\n        } catch (error) {\n            container.createEl('p', { \n                text: `Error rendering query block: ${error}`,\n                cls: 'exocortex-error'\n            });\n            console.error('Query block render error:', error);\n        }\n    }\n\n    private renderList(container: HTMLElement, files: TFile[]): void {\n        const list = container.createEl('ul', { cls: 'exocortex-query-list' });\n        \n        files.forEach(file => {\n            const metadata = this.app.metadataCache.getFileCache(file);\n            const frontmatter = metadata?.frontmatter || {};\n            \n            const item = list.createEl('li');\n            const link = item.createEl('a', {\n                text: frontmatter['exo__Asset_label'] || file.basename,\n                href: file.path,\n                cls: 'internal-link'\n            });\n            \n            // Add status or other info if available\n            const status = frontmatter['ems__Effort_status'];\n            if (status) {\n                const statusSpan = item.createEl('span', {\n                    text: ` - ${this.cleanValue(status)}`,\n                    cls: 'exocortex-status'\n                });\n            }\n        });\n    }\n\n    private renderTable(container: HTMLElement, files: TFile[], dv: any): void {\n        // Collect all unique properties\n        const allProps = new Set<string>();\n        files.forEach(file => {\n            const metadata = this.app.metadataCache.getFileCache(file);\n            if (metadata?.frontmatter) {\n                Object.keys(metadata.frontmatter).forEach(key => {\n                    if (!key.startsWith('exo__Instance')) {\n                        allProps.add(key);\n                    }\n                });\n            }\n        });\n\n        // Select most relevant properties (max 5)\n        const relevantProps = Array.from(allProps)\n            .filter(p => !p.startsWith('exo__Asset_uid'))\n            .slice(0, 5);\n\n        // Create table\n        const table = container.createEl('table', { cls: 'exocortex-query-table' });\n        \n        // Header\n        const thead = table.createEl('thead');\n        const headerRow = thead.createEl('tr');\n        headerRow.createEl('th', { text: 'Name' });\n        relevantProps.forEach(prop => {\n            const displayName = prop.replace(/_/g, ' ').replace(/^\\w+__/, '');\n            headerRow.createEl('th', { text: displayName });\n        });\n\n        // Body\n        const tbody = table.createEl('tbody');\n        files.forEach(file => {\n            const metadata = this.app.metadataCache.getFileCache(file);\n            const frontmatter = metadata?.frontmatter || {};\n            \n            const row = tbody.createEl('tr');\n            \n            // Name cell with link\n            const nameCell = row.createEl('td');\n            nameCell.createEl('a', {\n                text: frontmatter['exo__Asset_label'] || file.basename,\n                href: file.path,\n                cls: 'internal-link'\n            });\n            \n            // Property cells\n            relevantProps.forEach(prop => {\n                const cell = row.createEl('td');\n                const value = frontmatter[prop];\n                if (value) {\n                    cell.setText(this.formatValue(value));\n                }\n            });\n        });\n    }\n\n    private renderCards(container: HTMLElement, files: TFile[]): void {\n        const cardsContainer = container.createDiv({ cls: 'exocortex-query-cards' });\n        \n        files.forEach(file => {\n            const metadata = this.app.metadataCache.getFileCache(file);\n            const frontmatter = metadata?.frontmatter || {};\n            \n            const card = cardsContainer.createDiv({ cls: 'exocortex-card' });\n            \n            // Card header\n            const header = card.createDiv({ cls: 'exocortex-card-header' });\n            header.createEl('a', {\n                text: frontmatter['exo__Asset_label'] || file.basename,\n                href: file.path,\n                cls: 'internal-link'\n            });\n            \n            // Card body with key properties\n            const body = card.createDiv({ cls: 'exocortex-card-body' });\n            \n            // Show status if available\n            const status = frontmatter['ems__Effort_status'];\n            if (status) {\n                body.createEl('div', {\n                    text: `Status: ${this.cleanValue(status)}`,\n                    cls: 'exocortex-card-status'\n                });\n            }\n            \n            // Show description if available\n            const description = frontmatter['exo__Asset_description'];\n            if (description) {\n                body.createEl('div', {\n                    text: description,\n                    cls: 'exocortex-card-description'\n                });\n            }\n        });\n    }\n\n    private cleanValue(value: any): string {\n        if (!value) return '';\n        const str = Array.isArray(value) ? value[0] : value;\n        return str?.toString().replace(/\\[\\[|\\]\\]/g, '') || '';\n    }\n\n    private formatValue(value: any): string {\n        if (Array.isArray(value)) {\n            return value.map(v => this.cleanValue(v)).join(', ');\n        }\n        return this.cleanValue(value);\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6dfeef7bd3e57a6607619c59ae1afdbaeb708814"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2oxu8qglpe = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2oxu8qglpe();
cov_2oxu8qglpe().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2oxu8qglpe().s[1]++;
exports.QueryBlockRenderer = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2oxu8qglpe().s[2]++, require("tslib"));
const ExecuteQueryBlockUseCase_1 =
/* istanbul ignore next */
(cov_2oxu8qglpe().s[3]++, require("../../application/use-cases/ExecuteQueryBlockUseCase"));
class QueryBlockRenderer {
  constructor(app) {
    /* istanbul ignore next */
    cov_2oxu8qglpe().f[0]++;
    cov_2oxu8qglpe().s[4]++;
    this.app = app;
    /* istanbul ignore next */
    cov_2oxu8qglpe().s[5]++;
    this.executeQueryUseCase = new ExecuteQueryBlockUseCase_1.ExecuteQueryBlockUseCase(app);
  }
  render(container, config, file, frontmatter, dv) {
    /* istanbul ignore next */
    cov_2oxu8qglpe().f[1]++;
    cov_2oxu8qglpe().s[6]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2oxu8qglpe().f[2]++;
      cov_2oxu8qglpe().s[7]++;
      try {
        /* istanbul ignore next */
        cov_2oxu8qglpe().s[8]++;
        if (!config) {
          /* istanbul ignore next */
          cov_2oxu8qglpe().b[0][0]++;
          cov_2oxu8qglpe().s[9]++;
          container.createEl('p', {
            text: 'Query configuration is missing',
            cls: 'exocortex-error'
          });
          /* istanbul ignore next */
          cov_2oxu8qglpe().s[10]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2oxu8qglpe().b[0][1]++;
        }
        const queryConfig =
        /* istanbul ignore next */
        (cov_2oxu8qglpe().s[11]++, config);
        // Execute query
        const result =
        /* istanbul ignore next */
        (cov_2oxu8qglpe().s[12]++, yield this.executeQueryUseCase.execute({
          blockConfig: queryConfig,
          currentAssetPath: file.path,
          currentAssetFrontmatter: frontmatter
        }));
        /* istanbul ignore next */
        cov_2oxu8qglpe().s[13]++;
        if (result.isFailure) {
          /* istanbul ignore next */
          cov_2oxu8qglpe().b[1][0]++;
          cov_2oxu8qglpe().s[14]++;
          container.createEl('p', {
            text: `Query failed: ${result.error}`,
            cls: 'exocortex-error'
          });
          /* istanbul ignore next */
          cov_2oxu8qglpe().s[15]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2oxu8qglpe().b[1][1]++;
        }
        const {
          results,
          totalCount,
          executionTime
        } =
        /* istanbul ignore next */
        (cov_2oxu8qglpe().s[16]++, result.getValue());
        // Show result count and execution time
        const info =
        /* istanbul ignore next */
        (cov_2oxu8qglpe().s[17]++, container.createDiv({
          cls: 'exocortex-query-info'
        }));
        /* istanbul ignore next */
        cov_2oxu8qglpe().s[18]++;
        info.createEl('span', {
          text: `Found ${totalCount} items${results.length < totalCount ?
          /* istanbul ignore next */
          (cov_2oxu8qglpe().b[2][0]++, `, showing ${results.length}`) :
          /* istanbul ignore next */
          (cov_2oxu8qglpe().b[2][1]++, '')} (${executionTime}ms)`,
          cls: 'exocortex-query-count'
        });
        /* istanbul ignore next */
        cov_2oxu8qglpe().s[19]++;
        if (results.length === 0) {
          /* istanbul ignore next */
          cov_2oxu8qglpe().b[3][0]++;
          cov_2oxu8qglpe().s[20]++;
          container.createEl('p', {
            text: 'No items found',
            cls: 'exocortex-empty'
          });
          /* istanbul ignore next */
          cov_2oxu8qglpe().s[21]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_2oxu8qglpe().b[3][1]++;
        }
        // Render based on display type
        cov_2oxu8qglpe().s[22]++;
        switch (queryConfig.displayAs) {
          case 'table':
            /* istanbul ignore next */
            cov_2oxu8qglpe().b[4][0]++;
            cov_2oxu8qglpe().s[23]++;
            this.renderTable(container, results, dv);
            /* istanbul ignore next */
            cov_2oxu8qglpe().s[24]++;
            break;
          case 'cards':
            /* istanbul ignore next */
            cov_2oxu8qglpe().b[4][1]++;
            cov_2oxu8qglpe().s[25]++;
            this.renderCards(container, results);
            /* istanbul ignore next */
            cov_2oxu8qglpe().s[26]++;
            break;
          case 'list':
            /* istanbul ignore next */
            cov_2oxu8qglpe().b[4][2]++;
          default:
            /* istanbul ignore next */
            cov_2oxu8qglpe().b[4][3]++;
            cov_2oxu8qglpe().s[27]++;
            this.renderList(container, results);
            /* istanbul ignore next */
            cov_2oxu8qglpe().s[28]++;
            break;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2oxu8qglpe().s[29]++;
        container.createEl('p', {
          text: `Error rendering query block: ${error}`,
          cls: 'exocortex-error'
        });
        /* istanbul ignore next */
        cov_2oxu8qglpe().s[30]++;
        console.error('Query block render error:', error);
      }
    });
  }
  renderList(container, files) {
    /* istanbul ignore next */
    cov_2oxu8qglpe().f[3]++;
    const list =
    /* istanbul ignore next */
    (cov_2oxu8qglpe().s[31]++, container.createEl('ul', {
      cls: 'exocortex-query-list'
    }));
    /* istanbul ignore next */
    cov_2oxu8qglpe().s[32]++;
    files.forEach(file => {
      /* istanbul ignore next */
      cov_2oxu8qglpe().f[4]++;
      const metadata =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[33]++, this.app.metadataCache.getFileCache(file));
      const frontmatter =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[34]++,
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[5][0]++,
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[7][0]++, metadata === null) ||
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[7][1]++, metadata === void 0) ?
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[6][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[6][1]++, metadata.frontmatter)) ||
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[5][1]++, {}));
      const item =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[35]++, list.createEl('li'));
      const link =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[36]++, item.createEl('a', {
        text:
        /* istanbul ignore next */
        (cov_2oxu8qglpe().b[8][0]++, frontmatter['exo__Asset_label']) ||
        /* istanbul ignore next */
        (cov_2oxu8qglpe().b[8][1]++, file.basename),
        href: file.path,
        cls: 'internal-link'
      }));
      // Add status or other info if available
      const status =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[37]++, frontmatter['ems__Effort_status']);
      /* istanbul ignore next */
      cov_2oxu8qglpe().s[38]++;
      if (status) {
        /* istanbul ignore next */
        cov_2oxu8qglpe().b[9][0]++;
        const statusSpan =
        /* istanbul ignore next */
        (cov_2oxu8qglpe().s[39]++, item.createEl('span', {
          text: ` - ${this.cleanValue(status)}`,
          cls: 'exocortex-status'
        }));
      } else
      /* istanbul ignore next */
      {
        cov_2oxu8qglpe().b[9][1]++;
      }
    });
  }
  renderTable(container, files, dv) {
    /* istanbul ignore next */
    cov_2oxu8qglpe().f[5]++;
    // Collect all unique properties
    const allProps =
    /* istanbul ignore next */
    (cov_2oxu8qglpe().s[40]++, new Set());
    /* istanbul ignore next */
    cov_2oxu8qglpe().s[41]++;
    files.forEach(file => {
      /* istanbul ignore next */
      cov_2oxu8qglpe().f[6]++;
      const metadata =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[42]++, this.app.metadataCache.getFileCache(file));
      /* istanbul ignore next */
      cov_2oxu8qglpe().s[43]++;
      if (
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[12][0]++, metadata === null) ||
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[12][1]++, metadata === void 0) ?
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[11][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[11][1]++, metadata.frontmatter)) {
        /* istanbul ignore next */
        cov_2oxu8qglpe().b[10][0]++;
        cov_2oxu8qglpe().s[44]++;
        Object.keys(metadata.frontmatter).forEach(key => {
          /* istanbul ignore next */
          cov_2oxu8qglpe().f[7]++;
          cov_2oxu8qglpe().s[45]++;
          if (!key.startsWith('exo__Instance')) {
            /* istanbul ignore next */
            cov_2oxu8qglpe().b[13][0]++;
            cov_2oxu8qglpe().s[46]++;
            allProps.add(key);
          } else
          /* istanbul ignore next */
          {
            cov_2oxu8qglpe().b[13][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_2oxu8qglpe().b[10][1]++;
      }
    });
    // Select most relevant properties (max 5)
    const relevantProps =
    /* istanbul ignore next */
    (cov_2oxu8qglpe().s[47]++, Array.from(allProps).filter(p => {
      /* istanbul ignore next */
      cov_2oxu8qglpe().f[8]++;
      cov_2oxu8qglpe().s[48]++;
      return !p.startsWith('exo__Asset_uid');
    }).slice(0, 5));
    // Create table
    const table =
    /* istanbul ignore next */
    (cov_2oxu8qglpe().s[49]++, container.createEl('table', {
      cls: 'exocortex-query-table'
    }));
    // Header
    const thead =
    /* istanbul ignore next */
    (cov_2oxu8qglpe().s[50]++, table.createEl('thead'));
    const headerRow =
    /* istanbul ignore next */
    (cov_2oxu8qglpe().s[51]++, thead.createEl('tr'));
    /* istanbul ignore next */
    cov_2oxu8qglpe().s[52]++;
    headerRow.createEl('th', {
      text: 'Name'
    });
    /* istanbul ignore next */
    cov_2oxu8qglpe().s[53]++;
    relevantProps.forEach(prop => {
      /* istanbul ignore next */
      cov_2oxu8qglpe().f[9]++;
      const displayName =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[54]++, prop.replace(/_/g, ' ').replace(/^\w+__/, ''));
      /* istanbul ignore next */
      cov_2oxu8qglpe().s[55]++;
      headerRow.createEl('th', {
        text: displayName
      });
    });
    // Body
    const tbody =
    /* istanbul ignore next */
    (cov_2oxu8qglpe().s[56]++, table.createEl('tbody'));
    /* istanbul ignore next */
    cov_2oxu8qglpe().s[57]++;
    files.forEach(file => {
      /* istanbul ignore next */
      cov_2oxu8qglpe().f[10]++;
      const metadata =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[58]++, this.app.metadataCache.getFileCache(file));
      const frontmatter =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[59]++,
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[14][0]++,
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[16][0]++, metadata === null) ||
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[16][1]++, metadata === void 0) ?
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[15][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[15][1]++, metadata.frontmatter)) ||
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[14][1]++, {}));
      const row =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[60]++, tbody.createEl('tr'));
      // Name cell with link
      const nameCell =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[61]++, row.createEl('td'));
      /* istanbul ignore next */
      cov_2oxu8qglpe().s[62]++;
      nameCell.createEl('a', {
        text:
        /* istanbul ignore next */
        (cov_2oxu8qglpe().b[17][0]++, frontmatter['exo__Asset_label']) ||
        /* istanbul ignore next */
        (cov_2oxu8qglpe().b[17][1]++, file.basename),
        href: file.path,
        cls: 'internal-link'
      });
      // Property cells
      /* istanbul ignore next */
      cov_2oxu8qglpe().s[63]++;
      relevantProps.forEach(prop => {
        /* istanbul ignore next */
        cov_2oxu8qglpe().f[11]++;
        const cell =
        /* istanbul ignore next */
        (cov_2oxu8qglpe().s[64]++, row.createEl('td'));
        const value =
        /* istanbul ignore next */
        (cov_2oxu8qglpe().s[65]++, frontmatter[prop]);
        /* istanbul ignore next */
        cov_2oxu8qglpe().s[66]++;
        if (value) {
          /* istanbul ignore next */
          cov_2oxu8qglpe().b[18][0]++;
          cov_2oxu8qglpe().s[67]++;
          cell.setText(this.formatValue(value));
        } else
        /* istanbul ignore next */
        {
          cov_2oxu8qglpe().b[18][1]++;
        }
      });
    });
  }
  renderCards(container, files) {
    /* istanbul ignore next */
    cov_2oxu8qglpe().f[12]++;
    const cardsContainer =
    /* istanbul ignore next */
    (cov_2oxu8qglpe().s[68]++, container.createDiv({
      cls: 'exocortex-query-cards'
    }));
    /* istanbul ignore next */
    cov_2oxu8qglpe().s[69]++;
    files.forEach(file => {
      /* istanbul ignore next */
      cov_2oxu8qglpe().f[13]++;
      const metadata =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[70]++, this.app.metadataCache.getFileCache(file));
      const frontmatter =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[71]++,
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[19][0]++,
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[21][0]++, metadata === null) ||
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[21][1]++, metadata === void 0) ?
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[20][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[20][1]++, metadata.frontmatter)) ||
      /* istanbul ignore next */
      (cov_2oxu8qglpe().b[19][1]++, {}));
      const card =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[72]++, cardsContainer.createDiv({
        cls: 'exocortex-card'
      }));
      // Card header
      const header =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[73]++, card.createDiv({
        cls: 'exocortex-card-header'
      }));
      /* istanbul ignore next */
      cov_2oxu8qglpe().s[74]++;
      header.createEl('a', {
        text:
        /* istanbul ignore next */
        (cov_2oxu8qglpe().b[22][0]++, frontmatter['exo__Asset_label']) ||
        /* istanbul ignore next */
        (cov_2oxu8qglpe().b[22][1]++, file.basename),
        href: file.path,
        cls: 'internal-link'
      });
      // Card body with key properties
      const body =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[75]++, card.createDiv({
        cls: 'exocortex-card-body'
      }));
      // Show status if available
      const status =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[76]++, frontmatter['ems__Effort_status']);
      /* istanbul ignore next */
      cov_2oxu8qglpe().s[77]++;
      if (status) {
        /* istanbul ignore next */
        cov_2oxu8qglpe().b[23][0]++;
        cov_2oxu8qglpe().s[78]++;
        body.createEl('div', {
          text: `Status: ${this.cleanValue(status)}`,
          cls: 'exocortex-card-status'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2oxu8qglpe().b[23][1]++;
      }
      // Show description if available
      const description =
      /* istanbul ignore next */
      (cov_2oxu8qglpe().s[79]++, frontmatter['exo__Asset_description']);
      /* istanbul ignore next */
      cov_2oxu8qglpe().s[80]++;
      if (description) {
        /* istanbul ignore next */
        cov_2oxu8qglpe().b[24][0]++;
        cov_2oxu8qglpe().s[81]++;
        body.createEl('div', {
          text: description,
          cls: 'exocortex-card-description'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2oxu8qglpe().b[24][1]++;
      }
    });
  }
  cleanValue(value) {
    /* istanbul ignore next */
    cov_2oxu8qglpe().f[14]++;
    cov_2oxu8qglpe().s[82]++;
    if (!value) {
      /* istanbul ignore next */
      cov_2oxu8qglpe().b[25][0]++;
      cov_2oxu8qglpe().s[83]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_2oxu8qglpe().b[25][1]++;
    }
    const str =
    /* istanbul ignore next */
    (cov_2oxu8qglpe().s[84]++, Array.isArray(value) ?
    /* istanbul ignore next */
    (cov_2oxu8qglpe().b[26][0]++, value[0]) :
    /* istanbul ignore next */
    (cov_2oxu8qglpe().b[26][1]++, value));
    /* istanbul ignore next */
    cov_2oxu8qglpe().s[85]++;
    return /* istanbul ignore next */(cov_2oxu8qglpe().b[27][0]++,
    /* istanbul ignore next */
    (cov_2oxu8qglpe().b[29][0]++, str === null) ||
    /* istanbul ignore next */
    (cov_2oxu8qglpe().b[29][1]++, str === void 0) ?
    /* istanbul ignore next */
    (cov_2oxu8qglpe().b[28][0]++, void 0) :
    /* istanbul ignore next */
    (cov_2oxu8qglpe().b[28][1]++, str.toString().replace(/\[\[|\]\]/g, ''))) ||
    /* istanbul ignore next */
    (cov_2oxu8qglpe().b[27][1]++, '');
  }
  formatValue(value) {
    /* istanbul ignore next */
    cov_2oxu8qglpe().f[15]++;
    cov_2oxu8qglpe().s[86]++;
    if (Array.isArray(value)) {
      /* istanbul ignore next */
      cov_2oxu8qglpe().b[30][0]++;
      cov_2oxu8qglpe().s[87]++;
      return value.map(v => {
        /* istanbul ignore next */
        cov_2oxu8qglpe().f[16]++;
        cov_2oxu8qglpe().s[88]++;
        return this.cleanValue(v);
      }).join(', ');
    } else
    /* istanbul ignore next */
    {
      cov_2oxu8qglpe().b[30][1]++;
    }
    cov_2oxu8qglpe().s[89]++;
    return this.cleanValue(value);
  }
}
/* istanbul ignore next */
cov_2oxu8qglpe().s[90]++;
exports.QueryBlockRenderer = QueryBlockRenderer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,