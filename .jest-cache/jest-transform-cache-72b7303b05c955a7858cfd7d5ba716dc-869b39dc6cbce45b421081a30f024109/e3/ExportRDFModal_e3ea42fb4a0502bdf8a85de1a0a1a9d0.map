{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/ExportRDFModal.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/presentation/modals/ExportRDFModal.ts"],"sourcesContent":["/**\n * Modal for RDF Export functionality\n * Allows users to export knowledge graph or SPARQL results to various RDF formats\n */\n\nimport { App, Modal, Setting, Notice, TFile } from \"obsidian\";\nimport { Graph } from \"../../domain/semantic/core/Graph\";\nimport {\n  RDFSerializer,\n  RDFFormat,\n  SerializationOptions,\n} from \"../../application/services/RDFSerializer\";\nimport { NamespaceManager } from \"../../application/services/NamespaceManager\";\n\nexport interface ExportOptions {\n  format: RDFFormat;\n  includeComments: boolean;\n  prettyPrint: boolean;\n  saveToVault: boolean;\n  fileName?: string;\n  baseIRI?: string;\n}\n\nexport class ExportRDFModal extends Modal {\n  private graph: Graph;\n  private options: ExportOptions = {\n    format: \"turtle\",\n    includeComments: true,\n    prettyPrint: true,\n    saveToVault: true,\n    fileName: \"knowledge-graph\",\n  };\n  private serializer: RDFSerializer;\n  private namespaceManager: NamespaceManager;\n  private onExport?: (result: {\n    content: string;\n    fileName: string;\n    format: RDFFormat;\n  }) => void;\n\n  constructor(\n    app: App,\n    graph: Graph,\n    namespaceManager?: NamespaceManager,\n    onExport?: (result: {\n      content: string;\n      fileName: string;\n      format: RDFFormat;\n    }) => void,\n  ) {\n    super(app);\n    this.graph = graph;\n    this.namespaceManager = namespaceManager || new NamespaceManager();\n    this.serializer = new RDFSerializer(this.namespaceManager);\n    this.onExport = onExport;\n  }\n\n  onOpen() {\n    const { contentEl } = this;\n    contentEl.empty();\n\n    // Title\n    contentEl.createEl(\"h2\", { text: \"Export Knowledge Graph\" });\n\n    // Statistics\n    const statsEl = contentEl.createDiv(\"export-stats\");\n    statsEl.innerHTML = `\n            <div class=\"stat-item\">\n                <span class=\"stat-label\">Triples:</span>\n                <span class=\"stat-value\">${this.graph.size()}</span>\n            </div>\n            <div class=\"stat-item\">\n                <span class=\"stat-label\">Subjects:</span>\n                <span class=\"stat-value\">${this.graph.subjects().size}</span>\n            </div>\n            <div class=\"stat-item\">\n                <span class=\"stat-label\">Predicates:</span>\n                <span class=\"stat-value\">${this.graph.predicates().size}</span>\n            </div>\n        `;\n\n    // Format selection\n    new Setting(contentEl)\n      .setName(\"Export format\")\n      .setDesc(\"Choose the RDF serialization format\")\n      .addDropdown((dropdown) => {\n        dropdown\n          .addOption(\"turtle\", \"Turtle (.ttl)\")\n          .addOption(\"ntriples\", \"N-Triples (.nt)\")\n          .addOption(\"jsonld\", \"JSON-LD (.jsonld)\")\n          .addOption(\"rdfxml\", \"RDF/XML (.rdf)\")\n          .setValue(this.options.format)\n          .onChange((value) => {\n            this.options.format = value as RDFFormat;\n            this.updateFileName();\n            this.updatePreview();\n          });\n      });\n\n    // File name setting\n    new Setting(contentEl)\n      .setName(\"File name\")\n      .setDesc(\"Name for the exported file (without extension)\")\n      .addText((text) => {\n        text\n          .setPlaceholder(\"knowledge-graph\")\n          .setValue(this.options.fileName || \"\")\n          .onChange((value) => {\n            this.options.fileName = value || \"knowledge-graph\";\n          });\n      });\n\n    // Base IRI setting\n    new Setting(contentEl)\n      .setName(\"Base IRI\")\n      .setDesc(\"Optional base IRI for relative URIs\")\n      .addText((text) => {\n        text\n          .setPlaceholder(\"https://example.org/data/\")\n          .setValue(this.options.baseIRI || \"\")\n          .onChange((value) => {\n            this.options.baseIRI = value || undefined;\n            this.updatePreview();\n          });\n      });\n\n    // Options\n    new Setting(contentEl)\n      .setName(\"Include comments\")\n      .setDesc(\"Add comments with metadata and statistics\")\n      .addToggle((toggle) => {\n        toggle.setValue(this.options.includeComments).onChange((value) => {\n          this.options.includeComments = value;\n          this.updatePreview();\n        });\n      });\n\n    new Setting(contentEl)\n      .setName(\"Pretty print\")\n      .setDesc(\"Format output for readability (larger file size)\")\n      .addToggle((toggle) => {\n        toggle.setValue(this.options.prettyPrint).onChange((value) => {\n          this.options.prettyPrint = value;\n          this.updatePreview();\n        });\n      });\n\n    new Setting(contentEl)\n      .setName(\"Save to vault\")\n      .setDesc(\"Save file to vault, or download to computer\")\n      .addToggle((toggle) => {\n        toggle.setValue(this.options.saveToVault).onChange((value) => {\n          this.options.saveToVault = value;\n        });\n      });\n\n    // Preview section\n    const previewContainer = contentEl.createDiv(\"export-preview\");\n    previewContainer.createEl(\"h3\", { text: \"Preview\" });\n\n    const previewEl = previewContainer.createEl(\"pre\");\n    previewEl.addClass(\"export-preview-content\");\n\n    // Buttons\n    const buttonContainer = contentEl.createDiv(\"export-buttons\");\n    buttonContainer.addClass(\"modal-button-container\");\n\n    // Export button\n    const exportButton = buttonContainer.createEl(\"button\", {\n      text: \"Export\",\n      cls: \"mod-cta\",\n    });\n    exportButton.onclick = () => this.handleExport();\n\n    // Cancel button\n    const cancelButton = buttonContainer.createEl(\"button\", { text: \"Cancel\" });\n    cancelButton.onclick = () => this.close();\n\n    // Initial preview\n    this.updatePreview();\n\n    // Add styles\n    this.addStyles();\n  }\n\n  /**\n   * Update file name based on format\n   */\n  private updateFileName(): void {\n    if (this.options.fileName && !this.options.fileName.includes(\".\")) {\n      // File name will get extension added during export\n    }\n  }\n\n  /**\n   * Update preview content\n   */\n  private updatePreview(): void {\n    const previewEl = this.contentEl.querySelector(\n      \".export-preview-content\",\n    ) as HTMLElement;\n    if (!previewEl) return;\n\n    try {\n      // Create a small sample for preview\n      const sampleGraph = this.createSampleGraph();\n\n      const serializationOptions: SerializationOptions = {\n        format: this.options.format,\n        includeComments: this.options.includeComments,\n        prettyPrint: this.options.prettyPrint,\n        baseIRI: this.options.baseIRI,\n        namespaceManager: this.namespaceManager,\n      };\n\n      const result = this.serializer.serialize(\n        sampleGraph,\n        serializationOptions,\n      );\n\n      if (result.isSuccess) {\n        const content = result.getValue().content;\n        const lines = content.split(\"\\n\");\n        const preview = lines.slice(0, 10).join(\"\\n\");\n\n        previewEl.textContent =\n          preview + (lines.length > 10 ? \"\\n... (truncated)\" : \"\");\n      } else {\n        previewEl.textContent = `Preview error: ${result.errorValue()}`;\n      }\n    } catch (error) {\n      previewEl.textContent = `Preview error: ${error.message}`;\n    }\n  }\n\n  /**\n   * Create a small sample graph for preview\n   */\n  private createSampleGraph(): Graph {\n    const sampleTriples = this.graph.toArray().slice(0, 5);\n    return new Graph(sampleTriples);\n  }\n\n  /**\n   * Handle export action\n   */\n  private async handleExport(): Promise<void> {\n    try {\n      const serializationOptions: SerializationOptions = {\n        format: this.options.format,\n        includeComments: this.options.includeComments,\n        prettyPrint: this.options.prettyPrint,\n        baseIRI: this.options.baseIRI,\n        namespaceManager: this.namespaceManager,\n      };\n\n      const result = this.serializer.serialize(\n        this.graph,\n        serializationOptions,\n      );\n\n      if (result.isFailure) {\n        new Notice(`Export failed: ${result.errorValue()}`);\n        return;\n      }\n\n      const serializedData = result.getValue();\n      const extension = RDFSerializer.getFileExtension(this.options.format);\n      const fileName = `${this.options.fileName || \"knowledge-graph\"}${extension}`;\n\n      if (this.options.saveToVault) {\n        // Save to vault\n        await this.saveToVault(serializedData.content, fileName);\n      } else {\n        // Download to computer\n        this.downloadFile(serializedData.content, fileName);\n      }\n\n      // Call onExport callback if provided\n      if (this.onExport) {\n        this.onExport({\n          content: serializedData.content,\n          fileName,\n          format: this.options.format,\n        });\n      }\n\n      const message = this.options.saveToVault\n        ? `Exported ${serializedData.tripleCount} triples to ${fileName}`\n        : `Downloaded ${serializedData.tripleCount} triples as ${fileName}`;\n\n      new Notice(message);\n\n      if (serializedData.metadata?.warnings?.length) {\n        new Notice(\n          `Warnings: ${serializedData.metadata.warnings.join(\"; \")}`,\n          5000,\n        );\n      }\n\n      this.close();\n    } catch (error) {\n      new Notice(`Export error: ${error.message}`);\n    }\n  }\n\n  /**\n   * Save content to vault\n   */\n  private async saveToVault(content: string, fileName: string): Promise<void> {\n    const filePath = `exports/${fileName}`;\n\n    try {\n      // Ensure exports folder exists\n      const folder = this.app.vault.getAbstractFileByPath(\"exports\");\n      if (!folder) {\n        await this.app.vault.createFolder(\"exports\");\n      }\n\n      // Create or update file\n      const existingFile = this.app.vault.getAbstractFileByPath(filePath);\n      if (existingFile instanceof TFile) {\n        await this.app.vault.modify(existingFile, content);\n      } else {\n        await this.app.vault.create(filePath, content);\n      }\n    } catch (error) {\n      throw new Error(`Failed to save to vault: ${error.message}`);\n    }\n  }\n\n  /**\n   * Download file to computer\n   */\n  private downloadFile(content: string, fileName: string): void {\n    const blob = new Blob([content], {\n      type: RDFSerializer.getMimeType(this.options.format),\n    });\n\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = fileName;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Add custom styles\n   */\n  private addStyles(): void {\n    const style = document.createElement(\"style\");\n    style.textContent = `\n            .export-stats {\n                display: flex;\n                gap: 20px;\n                margin-bottom: 20px;\n                padding: 10px;\n                background: var(--background-secondary);\n                border-radius: 6px;\n            }\n            \n            .stat-item {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n            }\n            \n            .stat-label {\n                font-size: 12px;\n                color: var(--text-muted);\n                margin-bottom: 2px;\n            }\n            \n            .stat-value {\n                font-size: 18px;\n                font-weight: 600;\n                color: var(--text-normal);\n            }\n            \n            .export-preview {\n                margin: 20px 0;\n            }\n            \n            .export-preview-content {\n                max-height: 200px;\n                overflow-y: auto;\n                background: var(--background-secondary);\n                padding: 10px;\n                border-radius: 4px;\n                font-family: var(--font-monospace);\n                font-size: 12px;\n                white-space: pre-wrap;\n                margin: 0;\n            }\n            \n            .export-buttons {\n                display: flex;\n                gap: 10px;\n                justify-content: flex-end;\n                margin-top: 20px;\n                padding-top: 20px;\n                border-top: 1px solid var(--background-modifier-border);\n            }\n            \n            .modal-button-container button {\n                padding: 8px 16px;\n                border-radius: 4px;\n                border: 1px solid var(--background-modifier-border);\n                background: var(--background-primary);\n                color: var(--text-normal);\n                cursor: pointer;\n            }\n            \n            .modal-button-container button:hover {\n                background: var(--background-secondary);\n            }\n            \n            .modal-button-container button.mod-cta {\n                background: var(--interactive-accent);\n                color: var(--text-on-accent);\n                border-color: var(--interactive-accent);\n            }\n            \n            .modal-button-container button.mod-cta:hover {\n                background: var(--interactive-accent-hover);\n                border-color: var(--interactive-accent-hover);\n            }\n        `;\n\n    document.head.appendChild(style);\n  }\n\n  onClose() {\n    const { contentEl } = this;\n    contentEl.empty();\n  }\n}\n"],"version":3}