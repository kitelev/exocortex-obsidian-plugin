{"file":"/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/entities/Task.ts","mappings":"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","names":[],"sources":["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/entities/Task.ts"],"sourcesContent":["import { TaskId } from \"../value-objects/TaskId\";\nimport { Priority } from \"../value-objects/Priority\";\nimport { TaskStatus } from \"../value-objects/TaskStatus\";\nimport { AssetId } from \"../value-objects/AssetId\";\nimport { Entity } from \"../core/Entity\";\nimport { Result } from \"../core/Result\";\n\ninterface TaskProps {\n  id: TaskId;\n  title: string;\n  description?: string;\n  priority: Priority;\n  status: TaskStatus;\n  projectId?: AssetId;\n  dueDate?: Date;\n  estimatedHours?: number;\n  tags: string[];\n  createdAt: Date;\n  updatedAt: Date;\n  completedAt?: Date;\n}\n\n/**\n * Domain entity representing a Task in the Exocortex system\n * Follows domain-driven design principles with business rules\n */\nexport class Task extends Entity<TaskProps> {\n  private constructor(props: TaskProps) {\n    super(props, props.id.toString());\n  }\n\n  protected generateId(): string {\n    return this.props.id.toString();\n  }\n\n  protected validate(): void {\n    if (!this.props.id) {\n      throw new Error(\"Task must have a valid ID\");\n    }\n\n    if (!this.props.title || this.props.title.trim().length === 0) {\n      throw new Error(\"Task must have a non-empty title\");\n    }\n\n    if (!this.props.priority) {\n      throw new Error(\"Task must have a valid priority\");\n    }\n\n    if (!this.props.status) {\n      throw new Error(\"Task must have a valid status\");\n    }\n  }\n\n  static create(params: {\n    title: string;\n    description?: string;\n    priority?: Priority;\n    status?: TaskStatus;\n    projectId?: AssetId;\n    dueDate?: Date;\n    estimatedHours?: number;\n    tags?: string[];\n  }): Result<Task> {\n    // Validate required fields\n    if (!params.title || params.title.trim().length === 0) {\n      return Result.fail<Task>(\"Task title cannot be empty\");\n    }\n\n    if (params.title.length > 200) {\n      return Result.fail<Task>(\"Task title cannot exceed 200 characters\");\n    }\n\n    if (params.estimatedHours !== undefined && params.estimatedHours < 0) {\n      return Result.fail<Task>(\"Estimated hours cannot be negative\");\n    }\n\n    if (params.dueDate && params.dueDate < new Date()) {\n      // Only warn for past due dates, don't fail creation\n      console.warn(\"Task created with past due date:\", params.dueDate);\n    }\n\n    const props: TaskProps = {\n      id: TaskId.generate(),\n      title: params.title.trim(),\n      description: params.description?.trim(),\n      priority: params.priority || Priority.medium(),\n      status: params.status || TaskStatus.todo(),\n      projectId: params.projectId,\n      dueDate: params.dueDate,\n      estimatedHours: params.estimatedHours,\n      tags: params.tags || [],\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    return Result.ok<Task>(new Task(props));\n  }\n\n  // Getters\n  getId(): TaskId {\n    return this.props.id;\n  }\n\n  getTitle(): string {\n    return this.props.title;\n  }\n\n  getDescription(): string | undefined {\n    return this.props.description;\n  }\n\n  getPriority(): Priority {\n    return this.props.priority;\n  }\n\n  getStatus(): TaskStatus {\n    return this.props.status;\n  }\n\n  getProjectId(): AssetId | undefined {\n    return this.props.projectId;\n  }\n\n  getDueDate(): Date | undefined {\n    return this.props.dueDate;\n  }\n\n  getEstimatedHours(): number | undefined {\n    return this.props.estimatedHours;\n  }\n\n  getTags(): string[] {\n    return [...this.props.tags];\n  }\n\n  getCreatedAt(): Date {\n    return this.props.createdAt;\n  }\n\n  getUpdatedAt(): Date {\n    return this.props.updatedAt;\n  }\n\n  getCompletedAt(): Date | undefined {\n    return this.props.completedAt;\n  }\n\n  // Override equals to use TaskId comparison\n  public equals(object?: Entity<TaskProps>): boolean {\n    if (object === null || object === undefined) {\n      return false;\n    }\n\n    if (this === object) {\n      return true;\n    }\n\n    if (!(object instanceof Task)) {\n      return false;\n    }\n\n    return this.props.id.equals(object.props.id);\n  }\n\n  // Business methods\n  updateTitle(title: string): Result<void> {\n    if (!title || title.trim().length === 0) {\n      return Result.fail<void>(\"Task title cannot be empty\");\n    }\n\n    if (title.length > 200) {\n      return Result.fail<void>(\"Task title cannot exceed 200 characters\");\n    }\n\n    this.props.title = title.trim();\n    this.props.updatedAt = new Date();\n    return Result.ok<void>();\n  }\n\n  updateDescription(description?: string): void {\n    this.props.description = description?.trim();\n    this.props.updatedAt = new Date();\n  }\n\n  updatePriority(priority: Priority): void {\n    this.props.priority = priority;\n    this.props.updatedAt = new Date();\n  }\n\n  updateStatus(status: TaskStatus): Result<void> {\n    if (!this.props.status.canTransitionTo(status)) {\n      return Result.fail<void>(\n        `Cannot transition from ${this.props.status.toString()} to ${status.toString()}`,\n      );\n    }\n\n    this.props.status = status;\n    this.props.updatedAt = new Date();\n\n    // Set completion date when task is completed\n    if (status.isCompleted()) {\n      this.props.completedAt = new Date();\n    } else if (this.props.completedAt) {\n      // Clear completion date if task is reopened\n      this.props.completedAt = undefined;\n    }\n\n    return Result.ok<void>();\n  }\n\n  assignToProject(projectId: AssetId): void {\n    this.props.projectId = projectId;\n    this.props.updatedAt = new Date();\n  }\n\n  removeFromProject(): void {\n    this.props.projectId = undefined;\n    this.props.updatedAt = new Date();\n  }\n\n  setDueDate(dueDate: Date): void {\n    this.props.dueDate = dueDate;\n    this.props.updatedAt = new Date();\n  }\n\n  removeDueDate(): void {\n    this.props.dueDate = undefined;\n    this.props.updatedAt = new Date();\n  }\n\n  setEstimatedHours(hours: number): Result<void> {\n    if (hours < 0) {\n      return Result.fail<void>(\"Estimated hours cannot be negative\");\n    }\n\n    this.props.estimatedHours = hours;\n    this.props.updatedAt = new Date();\n    return Result.ok<void>();\n  }\n\n  addTag(tag: string): void {\n    const normalizedTag = tag.trim().toLowerCase();\n    if (normalizedTag && !this.props.tags.includes(normalizedTag)) {\n      this.props.tags.push(normalizedTag);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  removeTag(tag: string): void {\n    const normalizedTag = tag.trim().toLowerCase();\n    const index = this.props.tags.indexOf(normalizedTag);\n    if (index > -1) {\n      this.props.tags.splice(index, 1);\n      this.props.updatedAt = new Date();\n    }\n  }\n\n  hasTag(tag: string): boolean {\n    return this.props.tags.includes(tag.trim().toLowerCase());\n  }\n\n  // Query methods\n  isOverdue(): boolean {\n    return (\n      this.props.dueDate !== undefined &&\n      this.props.dueDate < new Date() &&\n      this.props.status.isActive()\n    );\n  }\n\n  isDueToday(): boolean {\n    if (!this.props.dueDate) return false;\n\n    const today = new Date();\n    const due = this.props.dueDate;\n\n    return (\n      today.getFullYear() === due.getFullYear() &&\n      today.getMonth() === due.getMonth() &&\n      today.getDate() === due.getDate()\n    );\n  }\n\n  isHighPriority(): boolean {\n    return this.props.priority.isHigherThan(Priority.medium());\n  }\n\n  // Serialization methods\n  toFrontmatter(): Record<string, any> {\n    const frontmatter: Record<string, any> = {\n      exo__Task_uid: this.props.id.toString(),\n      exo__Task_title: this.props.title,\n      exo__Task_priority: this.props.priority.toString(),\n      exo__Task_status: this.props.status.toString(),\n      exo__Task_createdAt: this.props.createdAt.toISOString(),\n      exo__Task_updatedAt: this.props.updatedAt.toISOString(),\n    };\n\n    if (this.props.description) {\n      frontmatter[\"exo__Task_description\"] = this.props.description;\n    }\n\n    if (this.props.projectId) {\n      frontmatter[\"exo__Effort_parent\"] =\n        `[[${this.props.projectId.toString()}]]`;\n    }\n\n    if (this.props.dueDate) {\n      frontmatter[\"exo__Task_dueDate\"] = this.props.dueDate\n        .toISOString()\n        .split(\"T\")[0];\n    }\n\n    if (this.props.estimatedHours !== undefined) {\n      frontmatter[\"exo__Task_estimatedHours\"] = this.props.estimatedHours;\n    }\n\n    if (this.props.tags.length > 0) {\n      frontmatter[\"exo__Task_tags\"] = this.props.tags;\n    }\n\n    if (this.props.completedAt) {\n      frontmatter[\"exo__Task_completedAt\"] =\n        this.props.completedAt.toISOString();\n    }\n\n    return frontmatter;\n  }\n\n  static fromFrontmatter(\n    frontmatter: Record<string, any>,\n    fileName: string,\n  ): Task | null {\n    try {\n      const idResult = TaskId.create(\n        frontmatter[\"exo__Task_uid\"] || TaskId.generate().toString(),\n      );\n      const id = idResult.isSuccess ? idResult.getValue() : TaskId.generate();\n\n      const title =\n        frontmatter[\"exo__Task_title\"] || fileName.replace(\".md\", \"\");\n      const description = frontmatter[\"exo__Task_description\"];\n\n      const priorityResult = Priority.create(\n        frontmatter[\"exo__Task_priority\"] || \"medium\",\n      );\n      const priority = priorityResult.isSuccess\n        ? priorityResult.getValue()\n        : Priority.medium();\n\n      const statusResult = TaskStatus.create(\n        frontmatter[\"exo__Task_status\"] || \"todo\",\n      );\n      const status = statusResult.isSuccess\n        ? statusResult.getValue()\n        : TaskStatus.todo();\n\n      let projectId: AssetId | undefined;\n      const parentValue = frontmatter[\"exo__Effort_parent\"];\n      if (parentValue) {\n        const cleanParent = parentValue.toString().replace(/\\[\\[|\\]\\]/g, \"\");\n        const projectIdResult = AssetId.create(cleanParent);\n        if (projectIdResult.isSuccess) {\n          projectId = projectIdResult.getValue();\n        }\n      }\n\n      const dueDate = frontmatter[\"exo__Task_dueDate\"]\n        ? new Date(frontmatter[\"exo__Task_dueDate\"])\n        : undefined;\n      const estimatedHours = frontmatter[\"exo__Task_estimatedHours\"];\n      const tags = Array.isArray(frontmatter[\"exo__Task_tags\"])\n        ? frontmatter[\"exo__Task_tags\"]\n        : [];\n\n      const createdAt = frontmatter[\"exo__Task_createdAt\"]\n        ? new Date(frontmatter[\"exo__Task_createdAt\"])\n        : new Date();\n\n      const result = Task.create({\n        title,\n        description,\n        priority,\n        status,\n        projectId,\n        dueDate,\n        estimatedHours,\n        tags,\n      });\n\n      if (result.isSuccess) {\n        const task = result.getValue()!;\n        // Update timestamps and completion date\n        (task as any).props.id = id;\n        (task as any).props.createdAt = createdAt;\n\n        if (frontmatter[\"exo__Task_completedAt\"]) {\n          (task as any).props.completedAt = new Date(\n            frontmatter[\"exo__Task_completedAt\"],\n          );\n        }\n\n        return task;\n      } else {\n        console.warn(\"Failed to create task from frontmatter:\", result.error);\n      }\n\n      return null;\n    } catch (error) {\n      console.warn(\"Failed to create task from frontmatter:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Generates markdown content for the task\n   */\n  toMarkdown(): string {\n    let content = `# ${this.props.title}\\n\\n`;\n\n    if (this.props.description) {\n      content += `${this.props.description}\\n\\n`;\n    }\n\n    content += `## Task Details\\n\\n`;\n    content += `${this.props.status.toMarkdownCheckbox()} **Status**: ${this.props.status.toString()}\\n`;\n    content += `- **Priority**: ${this.props.priority.toString()}\\n`;\n\n    if (this.props.dueDate) {\n      content += `- **Due Date**: ${this.props.dueDate.toISOString().split(\"T\")[0]}\\n`;\n    }\n\n    if (this.props.estimatedHours) {\n      content += `- **Estimated Hours**: ${this.props.estimatedHours}\\n`;\n    }\n\n    if (this.props.projectId) {\n      content += `- **Project**: [[${this.props.projectId.toString()}]]\\n`;\n    }\n\n    if (this.props.tags.length > 0) {\n      content += `- **Tags**: ${this.props.tags.map((tag) => `#${tag}`).join(\" \")}\\n`;\n    }\n\n    content += `\\n---\\n\\n`;\n    content += `*Created: ${this.props.createdAt.toISOString()}*\\n`;\n    content += `*Updated: ${this.props.updatedAt.toISOString()}*\\n`;\n\n    if (this.props.completedAt) {\n      content += `*Completed: ${this.props.completedAt.toISOString()}*\\n`;\n    }\n\n    return content;\n  }\n}\n"],"version":3}