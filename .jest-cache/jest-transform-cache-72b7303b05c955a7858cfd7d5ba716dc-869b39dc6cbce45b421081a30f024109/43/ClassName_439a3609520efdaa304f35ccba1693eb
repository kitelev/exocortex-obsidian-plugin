aa770f92472c4ff273208f43a0b05a96
"use strict";

/* istanbul ignore next */
function cov_1t7uedwb6i() {
  var path = "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/ClassName.ts";
  var hash = "8eafe945d1095a87cb71dda28080fe7324e1c181";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/ClassName.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 27
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 27
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "5": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 69
        }
      },
      "6": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 55
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "8": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 79
        }
      },
      "9": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 35
        }
      },
      "12": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "14": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 54
        }
      },
      "16": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "17": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 14
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 18
          }
        }, {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 47
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 34
          },
          end: {
            line: 32,
            column: 42
          }
        }, {
          start: {
            line: 32,
            column: 45
          },
          end: {
            line: 32,
            column: 47
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 42
          }
        }, {
          start: {
            line: 36,
            column: 45
          },
          end: {
            line: 36,
            column: 53
          }
        }],
        line: 36
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/ClassName.ts",
      mappings: ";;;AAAA,2CAAwC;AAExC;;;GAGG;AACH,MAAa,SAAS;IAGpB,YAAoB,KAAa;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,KAAa;QACzB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;YACvC,OAAO,eAAM,CAAC,IAAI,CAAY,2BAA2B,CAAC,CAAC;SAC5D;QAED,uCAAuC;QACvC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAEhD,IAAI,CAAC,sDAAsD,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACzE,OAAO,eAAM,CAAC,IAAI,CAAY,8BAA8B,KAAK,EAAE,CAAC,CAAC;SACtE;QAED,OAAO,eAAM,CAAC,EAAE,CAAY,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,UAAU;QACR,OAAO,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC;IAC7B,CAAC;IAED,SAAS;QACP,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC1C,CAAC;IAED,OAAO;QACL,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,MAAM,CAAC,KAAgB;QACrB,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC;IACpC,CAAC;CACF;AA3CD,8BA2CC",
      names: [],
      sources: ["/Users/kitelev/Documents/exocortex-obsidian-plugin/src/domain/value-objects/ClassName.ts"],
      sourcesContent: ["import { Result } from '../core/Result';\n\n/**\n * Value object representing an asset class name\n * Ensures valid class naming conventions\n */\nexport class ClassName {\n  public readonly value: string;\n\n  private constructor(value: string) {\n    this.value = value;\n  }\n\n  static create(value: string): Result<ClassName> {\n    if (!value || value.trim().length === 0) {\n      return Result.fail<ClassName>('ClassName cannot be empty');\n    }\n    \n    // Remove wiki link brackets if present\n    const cleaned = value.replace(/\\[\\[|\\]\\]/g, '');\n    \n    if (!/^[a-zA-Z_][a-zA-Z0-9_]*(?:__[a-zA-Z][a-zA-Z0-9_]*)?$/.test(cleaned)) {\n      return Result.fail<ClassName>(`Invalid class name format: ${value}`);\n    }\n    \n    return Result.ok<ClassName>(new ClassName(cleaned));\n  }\n\n  toString(): string {\n    return this.value;\n  }\n\n  toWikiLink(): string {\n    return `[[${this.value}]]`;\n  }\n\n  getPrefix(): string {\n    const parts = this.value.split('__');\n    return parts.length > 1 ? parts[0] : '';\n  }\n\n  getName(): string {\n    const parts = this.value.split('__');\n    return parts.length > 1 ? parts[1] : parts[0];\n  }\n\n  equals(other: ClassName): boolean {\n    return this.value === other.value;\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8eafe945d1095a87cb71dda28080fe7324e1c181"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1t7uedwb6i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1t7uedwb6i();
cov_1t7uedwb6i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1t7uedwb6i().s[1]++;
exports.ClassName = void 0;
const Result_1 =
/* istanbul ignore next */
(cov_1t7uedwb6i().s[2]++, require("../core/Result"));
/**
 * Value object representing an asset class name
 * Ensures valid class naming conventions
 */
class ClassName {
  constructor(value) {
    /* istanbul ignore next */
    cov_1t7uedwb6i().f[0]++;
    cov_1t7uedwb6i().s[3]++;
    this.value = value;
  }
  static create(value) {
    /* istanbul ignore next */
    cov_1t7uedwb6i().f[1]++;
    cov_1t7uedwb6i().s[4]++;
    if (
    /* istanbul ignore next */
    (cov_1t7uedwb6i().b[1][0]++, !value) ||
    /* istanbul ignore next */
    (cov_1t7uedwb6i().b[1][1]++, value.trim().length === 0)) {
      /* istanbul ignore next */
      cov_1t7uedwb6i().b[0][0]++;
      cov_1t7uedwb6i().s[5]++;
      return Result_1.Result.fail('ClassName cannot be empty');
    } else
    /* istanbul ignore next */
    {
      cov_1t7uedwb6i().b[0][1]++;
    }
    // Remove wiki link brackets if present
    const cleaned =
    /* istanbul ignore next */
    (cov_1t7uedwb6i().s[6]++, value.replace(/\[\[|\]\]/g, ''));
    /* istanbul ignore next */
    cov_1t7uedwb6i().s[7]++;
    if (!/^[a-zA-Z_][a-zA-Z0-9_]*(?:__[a-zA-Z][a-zA-Z0-9_]*)?$/.test(cleaned)) {
      /* istanbul ignore next */
      cov_1t7uedwb6i().b[2][0]++;
      cov_1t7uedwb6i().s[8]++;
      return Result_1.Result.fail(`Invalid class name format: ${value}`);
    } else
    /* istanbul ignore next */
    {
      cov_1t7uedwb6i().b[2][1]++;
    }
    cov_1t7uedwb6i().s[9]++;
    return Result_1.Result.ok(new ClassName(cleaned));
  }
  toString() {
    /* istanbul ignore next */
    cov_1t7uedwb6i().f[2]++;
    cov_1t7uedwb6i().s[10]++;
    return this.value;
  }
  toWikiLink() {
    /* istanbul ignore next */
    cov_1t7uedwb6i().f[3]++;
    cov_1t7uedwb6i().s[11]++;
    return `[[${this.value}]]`;
  }
  getPrefix() {
    /* istanbul ignore next */
    cov_1t7uedwb6i().f[4]++;
    const parts =
    /* istanbul ignore next */
    (cov_1t7uedwb6i().s[12]++, this.value.split('__'));
    /* istanbul ignore next */
    cov_1t7uedwb6i().s[13]++;
    return parts.length > 1 ?
    /* istanbul ignore next */
    (cov_1t7uedwb6i().b[3][0]++, parts[0]) :
    /* istanbul ignore next */
    (cov_1t7uedwb6i().b[3][1]++, '');
  }
  getName() {
    /* istanbul ignore next */
    cov_1t7uedwb6i().f[5]++;
    const parts =
    /* istanbul ignore next */
    (cov_1t7uedwb6i().s[14]++, this.value.split('__'));
    /* istanbul ignore next */
    cov_1t7uedwb6i().s[15]++;
    return parts.length > 1 ?
    /* istanbul ignore next */
    (cov_1t7uedwb6i().b[4][0]++, parts[1]) :
    /* istanbul ignore next */
    (cov_1t7uedwb6i().b[4][1]++, parts[0]);
  }
  equals(other) {
    /* istanbul ignore next */
    cov_1t7uedwb6i().f[6]++;
    cov_1t7uedwb6i().s[16]++;
    return this.value === other.value;
  }
}
/* istanbul ignore next */
cov_1t7uedwb6i().s[17]++;
exports.ClassName = ClassName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXQ3dWVkd2I2aSIsImFjdHVhbENvdmVyYWdlIiwicyIsIlJlc3VsdF8xIiwicmVxdWlyZSIsIkNsYXNzTmFtZSIsImNvbnN0cnVjdG9yIiwidmFsdWUiLCJmIiwiY3JlYXRlIiwiYiIsInRyaW0iLCJsZW5ndGgiLCJSZXN1bHQiLCJmYWlsIiwiY2xlYW5lZCIsInJlcGxhY2UiLCJ0ZXN0Iiwib2siLCJ0b1N0cmluZyIsInRvV2lraUxpbmsiLCJnZXRQcmVmaXgiLCJwYXJ0cyIsInNwbGl0IiwiZ2V0TmFtZSIsImVxdWFscyIsIm90aGVyIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9raXRlbGV2L0RvY3VtZW50cy9leG9jb3J0ZXgtb2JzaWRpYW4tcGx1Z2luL3NyYy9kb21haW4vdmFsdWUtb2JqZWN0cy9DbGFzc05hbWUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzdWx0IH0gZnJvbSAnLi4vY29yZS9SZXN1bHQnO1xuXG4vKipcbiAqIFZhbHVlIG9iamVjdCByZXByZXNlbnRpbmcgYW4gYXNzZXQgY2xhc3MgbmFtZVxuICogRW5zdXJlcyB2YWxpZCBjbGFzcyBuYW1pbmcgY29udmVudGlvbnNcbiAqL1xuZXhwb3J0IGNsYXNzIENsYXNzTmFtZSB7XG4gIHB1YmxpYyByZWFkb25seSB2YWx1ZTogc3RyaW5nO1xuXG4gIHByaXZhdGUgY29uc3RydWN0b3IodmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgfVxuXG4gIHN0YXRpYyBjcmVhdGUodmFsdWU6IHN0cmluZyk6IFJlc3VsdDxDbGFzc05hbWU+IHtcbiAgICBpZiAoIXZhbHVlIHx8IHZhbHVlLnRyaW0oKS5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBSZXN1bHQuZmFpbDxDbGFzc05hbWU+KCdDbGFzc05hbWUgY2Fubm90IGJlIGVtcHR5Jyk7XG4gICAgfVxuICAgIFxuICAgIC8vIFJlbW92ZSB3aWtpIGxpbmsgYnJhY2tldHMgaWYgcHJlc2VudFxuICAgIGNvbnN0IGNsZWFuZWQgPSB2YWx1ZS5yZXBsYWNlKC9cXFtcXFt8XFxdXFxdL2csICcnKTtcbiAgICBcbiAgICBpZiAoIS9eW2EtekEtWl9dW2EtekEtWjAtOV9dKig/Ol9fW2EtekEtWl1bYS16QS1aMC05X10qKT8kLy50ZXN0KGNsZWFuZWQpKSB7XG4gICAgICByZXR1cm4gUmVzdWx0LmZhaWw8Q2xhc3NOYW1lPihgSW52YWxpZCBjbGFzcyBuYW1lIGZvcm1hdDogJHt2YWx1ZX1gKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIFJlc3VsdC5vazxDbGFzc05hbWU+KG5ldyBDbGFzc05hbWUoY2xlYW5lZCkpO1xuICB9XG5cbiAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgfVxuXG4gIHRvV2lraUxpbmsoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYFtbJHt0aGlzLnZhbHVlfV1dYDtcbiAgfVxuXG4gIGdldFByZWZpeCgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHBhcnRzID0gdGhpcy52YWx1ZS5zcGxpdCgnX18nKTtcbiAgICByZXR1cm4gcGFydHMubGVuZ3RoID4gMSA/IHBhcnRzWzBdIDogJyc7XG4gIH1cblxuICBnZXROYW1lKCk6IHN0cmluZyB7XG4gICAgY29uc3QgcGFydHMgPSB0aGlzLnZhbHVlLnNwbGl0KCdfXycpO1xuICAgIHJldHVybiBwYXJ0cy5sZW5ndGggPiAxID8gcGFydHNbMV0gOiBwYXJ0c1swXTtcbiAgfVxuXG4gIGVxdWFscyhvdGhlcjogQ2xhc3NOYW1lKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWUgPT09IG90aGVyLnZhbHVlO1xuICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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