3d5d3707f806ce53756c9582c226c60a
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClassName = void 0;
const Result_1 = require("../core/Result");
/**
 * Value object representing an asset class name
 * Ensures valid class naming conventions
 */
class ClassName {
    constructor(value) {
        this.value = value;
    }
    static create(value) {
        if (!value || value.trim().length === 0) {
            return Result_1.Result.fail('ClassName cannot be empty');
        }
        // Remove wiki link brackets if present
        const cleaned = value.replace(/\[\[|\]\]/g, '');
        if (!/^[a-zA-Z_][a-zA-Z0-9_]*(?:__[a-zA-Z][a-zA-Z0-9_]*)?$/.test(cleaned)) {
            return Result_1.Result.fail(`Invalid class name format: ${value}`);
        }
        return Result_1.Result.ok(new ClassName(cleaned));
    }
    toString() {
        return this.value;
    }
    toWikiLink() {
        return `[[${this.value}]]`;
    }
    getPrefix() {
        const parts = this.value.split('__');
        return parts.length > 1 ? parts[0] : '';
    }
    getName() {
        const parts = this.value.split('__');
        return parts.length > 1 ? parts[1] : parts[0];
    }
    equals(other) {
        return this.value === other.value;
    }
}
exports.ClassName = ClassName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2tpdGVsZXYvRG9jdW1lbnRzL2V4b2NvcnRleC1vYnNpZGlhbi1wbHVnaW4vc3JjL2RvbWFpbi92YWx1ZS1vYmplY3RzL0NsYXNzTmFtZS50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBd0M7QUFFeEM7OztHQUdHO0FBQ0gsTUFBYSxTQUFTO0lBR3BCLFlBQW9CLEtBQWE7UUFDL0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQztJQUVELE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBYTtRQUN6QixJQUFJLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3ZDLE9BQU8sZUFBTSxDQUFDLElBQUksQ0FBWSwyQkFBMkIsQ0FBQyxDQUFDO1NBQzVEO1FBRUQsdUNBQXVDO1FBQ3ZDLE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRWhELElBQUksQ0FBQyxzREFBc0QsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDekUsT0FBTyxlQUFNLENBQUMsSUFBSSxDQUFZLDhCQUE4QixLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ3RFO1FBRUQsT0FBTyxlQUFNLENBQUMsRUFBRSxDQUFZLElBQUksU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVELFFBQVE7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVELFVBQVU7UUFDUixPQUFPLEtBQUssSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDO0lBQzdCLENBQUM7SUFFRCxTQUFTO1FBQ1AsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsT0FBTyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVELE9BQU87UUFDTCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxPQUFPLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQWdCO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQ3BDLENBQUM7Q0FDRjtBQTNDRCw4QkEyQ0MiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2tpdGVsZXYvRG9jdW1lbnRzL2V4b2NvcnRleC1vYnNpZGlhbi1wbHVnaW4vc3JjL2RvbWFpbi92YWx1ZS1vYmplY3RzL0NsYXNzTmFtZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXN1bHQgfSBmcm9tICcuLi9jb3JlL1Jlc3VsdCc7XG5cbi8qKlxuICogVmFsdWUgb2JqZWN0IHJlcHJlc2VudGluZyBhbiBhc3NldCBjbGFzcyBuYW1lXG4gKiBFbnN1cmVzIHZhbGlkIGNsYXNzIG5hbWluZyBjb252ZW50aW9uc1xuICovXG5leHBvcnQgY2xhc3MgQ2xhc3NOYW1lIHtcbiAgcHVibGljIHJlYWRvbmx5IHZhbHVlOiBzdHJpbmc7XG5cbiAgcHJpdmF0ZSBjb25zdHJ1Y3Rvcih2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICB9XG5cbiAgc3RhdGljIGNyZWF0ZSh2YWx1ZTogc3RyaW5nKTogUmVzdWx0PENsYXNzTmFtZT4ge1xuICAgIGlmICghdmFsdWUgfHwgdmFsdWUudHJpbSgpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIFJlc3VsdC5mYWlsPENsYXNzTmFtZT4oJ0NsYXNzTmFtZSBjYW5ub3QgYmUgZW1wdHknKTtcbiAgICB9XG4gICAgXG4gICAgLy8gUmVtb3ZlIHdpa2kgbGluayBicmFja2V0cyBpZiBwcmVzZW50XG4gICAgY29uc3QgY2xlYW5lZCA9IHZhbHVlLnJlcGxhY2UoL1xcW1xcW3xcXF1cXF0vZywgJycpO1xuICAgIFxuICAgIGlmICghL15bYS16QS1aX11bYS16QS1aMC05X10qKD86X19bYS16QS1aXVthLXpBLVowLTlfXSopPyQvLnRlc3QoY2xlYW5lZCkpIHtcbiAgICAgIHJldHVybiBSZXN1bHQuZmFpbDxDbGFzc05hbWU+KGBJbnZhbGlkIGNsYXNzIG5hbWUgZm9ybWF0OiAke3ZhbHVlfWApO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gUmVzdWx0Lm9rPENsYXNzTmFtZT4obmV3IENsYXNzTmFtZShjbGVhbmVkKSk7XG4gIH1cblxuICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICB9XG5cbiAgdG9XaWtpTGluaygpOiBzdHJpbmcge1xuICAgIHJldHVybiBgW1ske3RoaXMudmFsdWV9XV1gO1xuICB9XG5cbiAgZ2V0UHJlZml4KCk6IHN0cmluZyB7XG4gICAgY29uc3QgcGFydHMgPSB0aGlzLnZhbHVlLnNwbGl0KCdfXycpO1xuICAgIHJldHVybiBwYXJ0cy5sZW5ndGggPiAxID8gcGFydHNbMF0gOiAnJztcbiAgfVxuXG4gIGdldE5hbWUoKTogc3RyaW5nIHtcbiAgICBjb25zdCBwYXJ0cyA9IHRoaXMudmFsdWUuc3BsaXQoJ19fJyk7XG4gICAgcmV0dXJuIHBhcnRzLmxlbmd0aCA+IDEgPyBwYXJ0c1sxXSA6IHBhcnRzWzBdO1xuICB9XG5cbiAgZXF1YWxzKG90aGVyOiBDbGFzc05hbWUpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZSA9PT0gb3RoZXIudmFsdWU7XG4gIH1cbn0iXSwidmVyc2lvbiI6M30=