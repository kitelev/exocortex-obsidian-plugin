export class EffortSortingHelpers {
    static sortByPriority(a, b) {
        if (a.isTrashed !== b.isTrashed) {
            return a.isTrashed ? 1 : -1;
        }
        if (a.isDone !== b.isDone) {
            return a.isDone ? 1 : -1;
        }
        const aVotes = typeof a.metadata.ems__Effort_votes === "number"
            ? a.metadata.ems__Effort_votes
            : 0;
        const bVotes = typeof b.metadata.ems__Effort_votes === "number"
            ? b.metadata.ems__Effort_votes
            : 0;
        if (aVotes !== bVotes) {
            return bVotes - aVotes;
        }
        if (a.startTime && b.startTime) {
            return a.startTime.localeCompare(b.startTime);
        }
        if (a.startTime)
            return -1;
        if (b.startTime)
            return 1;
        return 0;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWZmb3J0U29ydGluZ0hlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJFZmZvcnRTb3J0aW5nSGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxNQUFNLE9BQU8sb0JBQW9CO0lBQy9CLE1BQU0sQ0FBQyxjQUFjLENBQXVCLENBQUksRUFBRSxDQUFJO1FBQ3BELElBQUksQ0FBQyxDQUFDLFNBQVMsS0FBSyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDaEMsT0FBTyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlCLENBQUM7UUFFRCxJQUFJLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQzFCLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzQixDQUFDO1FBRUQsTUFBTSxNQUFNLEdBQ1YsT0FBTyxDQUFDLENBQUMsUUFBUSxDQUFDLGlCQUFpQixLQUFLLFFBQVE7WUFDOUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsaUJBQWlCO1lBQzlCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDUixNQUFNLE1BQU0sR0FDVixPQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLEtBQUssUUFBUTtZQUM5QyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUI7WUFDOUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVSLElBQUksTUFBTSxLQUFLLE1BQU0sRUFBRSxDQUFDO1lBQ3RCLE9BQU8sTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUN6QixDQUFDO1FBRUQsSUFBSSxDQUFDLENBQUMsU0FBUyxJQUFJLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUMvQixPQUFPLENBQUMsQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNoRCxDQUFDO1FBRUQsSUFBSSxDQUFDLENBQUMsU0FBUztZQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLENBQUMsU0FBUztZQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRTFCLE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIEVmZm9ydEl0ZW0ge1xuICBpc1RyYXNoZWQ6IGJvb2xlYW47XG4gIGlzRG9uZTogYm9vbGVhbjtcbiAgbWV0YWRhdGE6IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIHN0YXJ0VGltZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIEVmZm9ydFNvcnRpbmdIZWxwZXJzIHtcbiAgc3RhdGljIHNvcnRCeVByaW9yaXR5PFQgZXh0ZW5kcyBFZmZvcnRJdGVtPihhOiBULCBiOiBUKTogbnVtYmVyIHtcbiAgICBpZiAoYS5pc1RyYXNoZWQgIT09IGIuaXNUcmFzaGVkKSB7XG4gICAgICByZXR1cm4gYS5pc1RyYXNoZWQgPyAxIDogLTE7XG4gICAgfVxuXG4gICAgaWYgKGEuaXNEb25lICE9PSBiLmlzRG9uZSkge1xuICAgICAgcmV0dXJuIGEuaXNEb25lID8gMSA6IC0xO1xuICAgIH1cblxuICAgIGNvbnN0IGFWb3RlcyA9XG4gICAgICB0eXBlb2YgYS5tZXRhZGF0YS5lbXNfX0VmZm9ydF92b3RlcyA9PT0gXCJudW1iZXJcIlxuICAgICAgICA/IGEubWV0YWRhdGEuZW1zX19FZmZvcnRfdm90ZXNcbiAgICAgICAgOiAwO1xuICAgIGNvbnN0IGJWb3RlcyA9XG4gICAgICB0eXBlb2YgYi5tZXRhZGF0YS5lbXNfX0VmZm9ydF92b3RlcyA9PT0gXCJudW1iZXJcIlxuICAgICAgICA/IGIubWV0YWRhdGEuZW1zX19FZmZvcnRfdm90ZXNcbiAgICAgICAgOiAwO1xuXG4gICAgaWYgKGFWb3RlcyAhPT0gYlZvdGVzKSB7XG4gICAgICByZXR1cm4gYlZvdGVzIC0gYVZvdGVzO1xuICAgIH1cblxuICAgIGlmIChhLnN0YXJ0VGltZSAmJiBiLnN0YXJ0VGltZSkge1xuICAgICAgcmV0dXJuIGEuc3RhcnRUaW1lLmxvY2FsZUNvbXBhcmUoYi5zdGFydFRpbWUpO1xuICAgIH1cblxuICAgIGlmIChhLnN0YXJ0VGltZSkgcmV0dXJuIC0xO1xuICAgIGlmIChiLnN0YXJ0VGltZSkgcmV0dXJuIDE7XG5cbiAgICByZXR1cm4gMDtcbiAgfVxufVxuIl19