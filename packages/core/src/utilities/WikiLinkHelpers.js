export class WikiLinkHelpers {
    static normalize(value) {
        if (!value)
            return "";
        return value.replace(this.WIKI_LINK_PATTERN, "").trim();
    }
    static normalizeArray(values) {
        if (!values)
            return [];
        const arr = Array.isArray(values) ? values : [values];
        return arr.map((v) => this.normalize(v)).filter((v) => v.length > 0);
    }
    static equals(a, b) {
        return this.normalize(a) === this.normalize(b);
    }
    static includes(array, value) {
        const normalized = this.normalizeArray(array);
        const target = this.normalize(value);
        return normalized.includes(target);
    }
}
WikiLinkHelpers.WIKI_LINK_PATTERN = /\[\[|\]\]/g;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2lraUxpbmtIZWxwZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiV2lraUxpbmtIZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxlQUFlO0lBRzFCLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBZ0M7UUFDL0MsSUFBSSxDQUFDLEtBQUs7WUFBRSxPQUFPLEVBQUUsQ0FBQztRQUN0QixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzFELENBQUM7SUFFRCxNQUFNLENBQUMsY0FBYyxDQUFDLE1BQTRDO1FBQ2hFLElBQUksQ0FBQyxNQUFNO1lBQUUsT0FBTyxFQUFFLENBQUM7UUFDdkIsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3RELE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUE0QixFQUFFLENBQTRCO1FBQ3RFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRCxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQTJDLEVBQUUsS0FBYTtRQUN4RSxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckMsT0FBTyxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7O0FBckJ1QixpQ0FBaUIsR0FBRyxZQUFZLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgV2lraUxpbmtIZWxwZXJzIHtcbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgV0lLSV9MSU5LX1BBVFRFUk4gPSAvXFxbXFxbfFxcXVxcXS9nO1xuXG4gIHN0YXRpYyBub3JtYWxpemUodmFsdWU6IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpOiBzdHJpbmcge1xuICAgIGlmICghdmFsdWUpIHJldHVybiBcIlwiO1xuICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKHRoaXMuV0lLSV9MSU5LX1BBVFRFUk4sIFwiXCIpLnRyaW0oKTtcbiAgfVxuXG4gIHN0YXRpYyBub3JtYWxpemVBcnJheSh2YWx1ZXM6IHN0cmluZ1tdIHwgc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCk6IHN0cmluZ1tdIHtcbiAgICBpZiAoIXZhbHVlcykgcmV0dXJuIFtdO1xuICAgIGNvbnN0IGFyciA9IEFycmF5LmlzQXJyYXkodmFsdWVzKSA/IHZhbHVlcyA6IFt2YWx1ZXNdO1xuICAgIHJldHVybiBhcnIubWFwKCh2KSA9PiB0aGlzLm5vcm1hbGl6ZSh2KSkuZmlsdGVyKCh2KSA9PiB2Lmxlbmd0aCA+IDApO1xuICB9XG5cbiAgc3RhdGljIGVxdWFscyhhOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkLCBiOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMubm9ybWFsaXplKGEpID09PSB0aGlzLm5vcm1hbGl6ZShiKTtcbiAgfVxuXG4gIHN0YXRpYyBpbmNsdWRlcyhhcnJheTogc3RyaW5nW10gfCBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkLCB2YWx1ZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgY29uc3Qgbm9ybWFsaXplZCA9IHRoaXMubm9ybWFsaXplQXJyYXkoYXJyYXkpO1xuICAgIGNvbnN0IHRhcmdldCA9IHRoaXMubm9ybWFsaXplKHZhbHVlKTtcbiAgICByZXR1cm4gbm9ybWFsaXplZC5pbmNsdWRlcyh0YXJnZXQpO1xuICB9XG59XG4iXX0=