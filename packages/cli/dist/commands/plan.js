import { Command } from 'commander';
import chalk from 'chalk';
import ora from 'ora';
import * as path from 'path';
import { PlanningService } from '@exocortex/core';
import { NodeFsAdapter } from '../adapters/NodeFsAdapter.js';
export function planCommand() {
    const cmd = new Command('today');
    cmd
        .description('Plan task for today')
        .requiredOption('-t, --task <path>', 'Path to task file')
        .option('-r, --root <path>', 'Root directory of vault', process.cwd())
        .action(async (options) => {
        const spinner = ora('Planning task for today...').start();
        try {
            const adapter = new NodeFsAdapter(options.root);
            const service = new PlanningService(adapter);
            const taskPath = path.relative(options.root, options.task);
            await service.planOnToday(taskPath);
            spinner.succeed(chalk.green(`Task planned for today: ${taskPath}`));
        }
        catch (error) {
            spinner.fail(chalk.red(`Failed to plan task: ${error.message}`));
            process.exit(1);
        }
    });
    return cmd;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9wbGFuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDcEMsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQzFCLE9BQU8sR0FBRyxNQUFNLEtBQUssQ0FBQztBQUN0QixPQUFPLEtBQUssSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUM3QixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRTdELE1BQU0sVUFBVSxXQUFXO0lBQ3pCLE1BQU0sR0FBRyxHQUFHLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRWpDLEdBQUc7U0FDQSxXQUFXLENBQUMscUJBQXFCLENBQUM7U0FDbEMsY0FBYyxDQUFDLG1CQUFtQixFQUFFLG1CQUFtQixDQUFDO1NBQ3hELE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSx5QkFBeUIsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDckUsTUFBTSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsRUFBRTtRQUN4QixNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUUxRCxJQUFJLENBQUM7WUFDSCxNQUFNLE9BQU8sR0FBRyxJQUFJLGFBQWEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDaEQsTUFBTSxPQUFPLEdBQUcsSUFBSSxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFN0MsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMzRCxNQUFNLE9BQU8sQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7WUFFcEMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLDJCQUEyQixRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdEUsQ0FBQztRQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7WUFDZixPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsd0JBQXlCLEtBQWUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDNUUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsQixDQUFDO0lBQ0gsQ0FBQyxDQUFDLENBQUM7SUFFTCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tYW5kIH0gZnJvbSAnY29tbWFuZGVyJztcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsayc7XG5pbXBvcnQgb3JhIGZyb20gJ29yYSc7XG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgUGxhbm5pbmdTZXJ2aWNlIH0gZnJvbSAnQGV4b2NvcnRleC9jb3JlJztcbmltcG9ydCB7IE5vZGVGc0FkYXB0ZXIgfSBmcm9tICcuLi9hZGFwdGVycy9Ob2RlRnNBZGFwdGVyLmpzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHBsYW5Db21tYW5kKCk6IENvbW1hbmQge1xuICBjb25zdCBjbWQgPSBuZXcgQ29tbWFuZCgndG9kYXknKTtcblxuICBjbWRcbiAgICAuZGVzY3JpcHRpb24oJ1BsYW4gdGFzayBmb3IgdG9kYXknKVxuICAgIC5yZXF1aXJlZE9wdGlvbignLXQsIC0tdGFzayA8cGF0aD4nLCAnUGF0aCB0byB0YXNrIGZpbGUnKVxuICAgIC5vcHRpb24oJy1yLCAtLXJvb3QgPHBhdGg+JywgJ1Jvb3QgZGlyZWN0b3J5IG9mIHZhdWx0JywgcHJvY2Vzcy5jd2QoKSlcbiAgICAuYWN0aW9uKGFzeW5jIChvcHRpb25zKSA9PiB7XG4gICAgICBjb25zdCBzcGlubmVyID0gb3JhKCdQbGFubmluZyB0YXNrIGZvciB0b2RheS4uLicpLnN0YXJ0KCk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGFkYXB0ZXIgPSBuZXcgTm9kZUZzQWRhcHRlcihvcHRpb25zLnJvb3QpO1xuICAgICAgICBjb25zdCBzZXJ2aWNlID0gbmV3IFBsYW5uaW5nU2VydmljZShhZGFwdGVyKTtcblxuICAgICAgICBjb25zdCB0YXNrUGF0aCA9IHBhdGgucmVsYXRpdmUob3B0aW9ucy5yb290LCBvcHRpb25zLnRhc2spO1xuICAgICAgICBhd2FpdCBzZXJ2aWNlLnBsYW5PblRvZGF5KHRhc2tQYXRoKTtcblxuICAgICAgICBzcGlubmVyLnN1Y2NlZWQoY2hhbGsuZ3JlZW4oYFRhc2sgcGxhbm5lZCBmb3IgdG9kYXk6ICR7dGFza1BhdGh9YCkpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgc3Bpbm5lci5mYWlsKGNoYWxrLnJlZChgRmFpbGVkIHRvIHBsYW4gdGFzazogJHsoZXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2V9YCkpO1xuICAgICAgICBwcm9jZXNzLmV4aXQoMSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgcmV0dXJuIGNtZDtcbn1cbiJdfQ==