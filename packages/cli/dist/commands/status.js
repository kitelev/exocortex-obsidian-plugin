import { Command } from 'commander';
import chalk from 'chalk';
import ora from 'ora';
import * as path from 'path';
import { TaskStatusService } from '@exocortex/core';
import { NodeFsAdapter } from '../adapters/NodeFsAdapter.js';
export function statusCommand() {
    const cmd = new Command('todo');
    cmd
        .description('Move task to ToDo status')
        .requiredOption('-t, --task <path>', 'Path to task file')
        .option('-r, --root <path>', 'Root directory of vault', process.cwd())
        .action(async (options) => {
        const spinner = ora('Updating task status to ToDo...').start();
        try {
            const adapter = new NodeFsAdapter(options.root);
            const service = new TaskStatusService(adapter);
            const taskPath = path.relative(options.root, options.task);
            await service.moveToToDo(taskPath);
            spinner.succeed(chalk.green(`Task status updated to ToDo: ${taskPath}`));
        }
        catch (error) {
            spinner.fail(chalk.red(`Failed to update status: ${error.message}`));
            process.exit(1);
        }
    });
    return cmd;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdHVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbW1hbmRzL3N0YXR1cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3BDLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMxQixPQUFPLEdBQUcsTUFBTSxLQUFLLENBQUM7QUFDdEIsT0FBTyxLQUFLLElBQUksTUFBTSxNQUFNLENBQUM7QUFDN0IsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRTdELE1BQU0sVUFBVSxhQUFhO0lBQzNCLE1BQU0sR0FBRyxHQUFHLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWhDLEdBQUc7U0FDQSxXQUFXLENBQUMsMEJBQTBCLENBQUM7U0FDdkMsY0FBYyxDQUFDLG1CQUFtQixFQUFFLG1CQUFtQixDQUFDO1NBQ3hELE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSx5QkFBeUIsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDckUsTUFBTSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsRUFBRTtRQUN4QixNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsaUNBQWlDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUUvRCxJQUFJLENBQUM7WUFDSCxNQUFNLE9BQU8sR0FBRyxJQUFJLGFBQWEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDaEQsTUFBTSxPQUFPLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUUvQyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzNELE1BQU0sT0FBTyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUVuQyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsZ0NBQWdDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMzRSxDQUFDO1FBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztZQUNmLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyw0QkFBNkIsS0FBZSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNoRixPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xCLENBQUM7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUVMLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1hbmQgfSBmcm9tICdjb21tYW5kZXInO1xuaW1wb3J0IGNoYWxrIGZyb20gJ2NoYWxrJztcbmltcG9ydCBvcmEgZnJvbSAnb3JhJztcbmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBUYXNrU3RhdHVzU2VydmljZSB9IGZyb20gJ0BleG9jb3J0ZXgvY29yZSc7XG5pbXBvcnQgeyBOb2RlRnNBZGFwdGVyIH0gZnJvbSAnLi4vYWRhcHRlcnMvTm9kZUZzQWRhcHRlci5qcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGF0dXNDb21tYW5kKCk6IENvbW1hbmQge1xuICBjb25zdCBjbWQgPSBuZXcgQ29tbWFuZCgndG9kbycpO1xuXG4gIGNtZFxuICAgIC5kZXNjcmlwdGlvbignTW92ZSB0YXNrIHRvIFRvRG8gc3RhdHVzJylcbiAgICAucmVxdWlyZWRPcHRpb24oJy10LCAtLXRhc2sgPHBhdGg+JywgJ1BhdGggdG8gdGFzayBmaWxlJylcbiAgICAub3B0aW9uKCctciwgLS1yb290IDxwYXRoPicsICdSb290IGRpcmVjdG9yeSBvZiB2YXVsdCcsIHByb2Nlc3MuY3dkKCkpXG4gICAgLmFjdGlvbihhc3luYyAob3B0aW9ucykgPT4ge1xuICAgICAgY29uc3Qgc3Bpbm5lciA9IG9yYSgnVXBkYXRpbmcgdGFzayBzdGF0dXMgdG8gVG9Eby4uLicpLnN0YXJ0KCk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGFkYXB0ZXIgPSBuZXcgTm9kZUZzQWRhcHRlcihvcHRpb25zLnJvb3QpO1xuICAgICAgICBjb25zdCBzZXJ2aWNlID0gbmV3IFRhc2tTdGF0dXNTZXJ2aWNlKGFkYXB0ZXIpO1xuXG4gICAgICAgIGNvbnN0IHRhc2tQYXRoID0gcGF0aC5yZWxhdGl2ZShvcHRpb25zLnJvb3QsIG9wdGlvbnMudGFzayk7XG4gICAgICAgIGF3YWl0IHNlcnZpY2UubW92ZVRvVG9Ebyh0YXNrUGF0aCk7XG5cbiAgICAgICAgc3Bpbm5lci5zdWNjZWVkKGNoYWxrLmdyZWVuKGBUYXNrIHN0YXR1cyB1cGRhdGVkIHRvIFRvRG86ICR7dGFza1BhdGh9YCkpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgc3Bpbm5lci5mYWlsKGNoYWxrLnJlZChgRmFpbGVkIHRvIHVwZGF0ZSBzdGF0dXM6ICR7KGVycm9yIGFzIEVycm9yKS5tZXNzYWdlfWApKTtcbiAgICAgICAgcHJvY2Vzcy5leGl0KDEpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gIHJldHVybiBjbWQ7XG59XG4iXX0=