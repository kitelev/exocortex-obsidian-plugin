{"version":3,"file":"AreaHierarchyTree-BOB_2hBZ.js","sources":["../../../src/presentation/components/AreaHierarchyTree.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport interface AreaNode {\n  path: string;\n  title: string;\n  label?: string;\n  isArchived: boolean;\n  depth: number;\n  parentPath?: string;\n  children: AreaNode[];\n}\n\nexport interface AreaHierarchyTreeProps {\n  tree: AreaNode;\n  currentAreaPath: string;\n  onAreaClick?: (path: string, event: React.MouseEvent) => void;\n  getAssetLabel?: (path: string) => string | null;\n}\n\ninterface AreaTreeNodeProps {\n  node: AreaNode;\n  currentAreaPath: string;\n  depth: number;\n  onAreaClick?: (path: string, event: React.MouseEvent) => void;\n  getAssetLabel?: (path: string) => string | null;\n}\n\nconst AreaTreeNode: React.FC<AreaTreeNodeProps> = ({\n  node,\n  currentAreaPath,\n  depth,\n  onAreaClick,\n  getAssetLabel,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  const customLabel = getAssetLabel?.(node.path);\n  const displayLabel = customLabel ?? node.label ?? node.title;\n  const isCurrent = node.path === currentAreaPath;\n  const hasChildren = node.children.length > 0;\n\n  const handleToggle = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    onAreaClick?.(node.path, e);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    switch (e.key) {\n      case \"ArrowRight\":\n        if (hasChildren && !isExpanded) {\n          setIsExpanded(true);\n        }\n        break;\n      case \"ArrowLeft\":\n        if (hasChildren && isExpanded) {\n          setIsExpanded(false);\n        }\n        break;\n      case \"Enter\":\n      case \" \":\n        e.preventDefault();\n        onAreaClick?.(node.path, e as any);\n        break;\n    }\n  };\n\n  return (\n    <>\n      <tr\n        key={node.path}\n        data-area-path={node.path}\n        role=\"treeitem\"\n        aria-level={depth + 1}\n        aria-expanded={hasChildren ? isExpanded : undefined}\n        aria-selected={isCurrent}\n      >\n        <td>\n          <div\n            className={`area-tree-item ${isCurrent ? \"is-current\" : \"\"} ${node.isArchived ? \"is-archived\" : \"\"}`}\n            data-depth={depth}\n            style={{\n              paddingLeft: `${8 + depth * 20}px`\n            }}\n            onKeyDown={handleKeyDown}\n          >\n            <span className=\"area-tree-toggle-container\">\n              {hasChildren ? (\n                <button\n                  className=\"area-tree-toggle\"\n                  onClick={handleToggle}\n                  aria-expanded={isExpanded}\n                  aria-label={`${isExpanded ? \"Collapse\" : \"Expand\"} ${displayLabel}`}\n                  tabIndex={-1}\n                >\n                  {isExpanded ? \"▼\" : \"▶\"}\n                </button>\n              ) : (\n                <span className=\"area-tree-toggle-spacer\" aria-hidden=\"true\" />\n              )}\n            </span>\n            <a\n              data-href={node.path}\n              className=\"area-tree-link internal-link\"\n              onClick={handleClick}\n              tabIndex={0}\n              aria-current={isCurrent ? \"page\" : undefined}\n            >\n              {displayLabel}\n            </a>\n          </div>\n        </td>\n        <td>\n          <a className=\"internal-link\">ems__Area</a>\n        </td>\n      </tr>\n      {isExpanded && hasChildren && node.children.map((child) => (\n        <AreaTreeNode\n          key={child.path}\n          node={child}\n          currentAreaPath={currentAreaPath}\n          depth={depth + 1}\n          onAreaClick={onAreaClick}\n          getAssetLabel={getAssetLabel}\n        />\n      ))}\n    </>\n  );\n};\n\nexport const AreaHierarchyTree: React.FC<AreaHierarchyTreeProps> = ({\n  tree,\n  currentAreaPath,\n  onAreaClick,\n  getAssetLabel,\n}) => {\n  if (!tree.children || tree.children.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"exocortex-area-tree\">\n      <h3>Area Hierarchy</h3>\n      <table\n        className=\"exocortex-relation-table\"\n        role=\"tree\"\n        aria-label=\"Area hierarchy tree\"\n      >\n        <thead>\n          <tr>\n            <th>Area</th>\n            <th>Class</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tree.children.map((child) => (\n            <AreaTreeNode\n              key={child.path}\n              node={child}\n              currentAreaPath={currentAreaPath}\n              depth={0}\n              onAreaClick={onAreaClick}\n              getAssetLabel={getAssetLabel}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n"],"names":["useState","jsxs","Fragment","jsx"],"mappings":"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"}