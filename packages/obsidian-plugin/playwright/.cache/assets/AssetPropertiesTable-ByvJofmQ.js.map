{"version":3,"file":"AssetPropertiesTable-ByvJofmQ.js","sources":["../../../src/presentation/components/AssetPropertiesTable.tsx"],"sourcesContent":["import React from \"react\";\n\nexport interface AssetPropertiesTableProps {\n  metadata: Record<string, any>;\n  onLinkClick?: (path: string, event: React.MouseEvent) => void;\n  getAssetLabel?: (path: string) => string | null;\n}\n\nexport const AssetPropertiesTable: React.FC<AssetPropertiesTableProps> = ({\n  metadata,\n  onLinkClick,\n  getAssetLabel,\n}) => {\n  const isWikiLink = (value: any): boolean => {\n    return typeof value === \"string\" && /\\[\\[.*?\\]\\]/.test(value);\n  };\n\n  interface WikiLink {\n    target: string;\n    alias?: string;\n  }\n\n  const parseWikiLink = (value: string): WikiLink => {\n    // Remove [[ and ]]\n    const content = value.replace(/^\\[\\[|\\]\\]$/g, \"\");\n\n    // Check if there's an alias (format: target|alias)\n    const pipeIndex = content.indexOf(\"|\");\n\n    if (pipeIndex !== -1) {\n      return {\n        target: content.substring(0, pipeIndex).trim(),\n        alias: content.substring(pipeIndex + 1).trim()\n      };\n    }\n\n    return {\n      target: content.trim()\n    };\n  };\n\n  const renderValue = (value: any): React.ReactNode => {\n    if (value === null || value === undefined) {\n      return \"-\";\n    }\n\n    if (typeof value === \"boolean\" || typeof value === \"number\") {\n      return String(value);\n    }\n\n    if (typeof value === \"string\") {\n      if (isWikiLink(value)) {\n        const parsed = parseWikiLink(value);\n        const label = getAssetLabel?.(parsed.target);\n        const displayText = parsed.alias || label || parsed.target;\n        return (\n          <a\n            data-href={parsed.target}\n            className=\"internal-link\"\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              onLinkClick?.(parsed.target, e);\n            }}\n            style={{ cursor: 'pointer' }}\n          >\n            {displayText}\n          </a>\n        );\n      }\n      return value;\n    }\n\n    if (Array.isArray(value)) {\n      return (\n        <>\n          {value.map((item, index) => (\n            <React.Fragment key={index}>\n              {renderValue(item)}\n              {index < value.length - 1 ? \", \" : \"\"}\n            </React.Fragment>\n          ))}\n        </>\n      );\n    }\n\n    if (typeof value === \"object\") {\n      return JSON.stringify(value);\n    }\n\n    return String(value);\n  };\n\n  const metadataEntries = Object.entries(metadata || {});\n\n  if (metadataEntries.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"exocortex-asset-properties\">\n      <h3>Properties</h3>\n      <table className=\"exocortex-properties-table\">\n        <thead>\n          <tr>\n            <th>Property</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {metadataEntries.map(([key, value]) => (\n            <tr key={key}>\n              <td className=\"property-key\">{key}</td>\n              <td className=\"property-value\">{renderValue(value)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n"],"names":["jsx","Fragment","jsxs"],"mappings":"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"}