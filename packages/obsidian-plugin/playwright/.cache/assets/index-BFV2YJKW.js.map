{"version":3,"file":"index-BFV2YJKW.js","sources":["../../../../core/src/domain/constants/AssetClass.ts","../../../../core/src/domain/constants/EffortStatus.ts","../../../../core/src/utilities/WikiLinkHelpers.ts","../../../../core/src/domain/commands/CommandVisibility.ts","../../../../../node_modules/uuid/dist/esm-browser/max.js","../../../../../node_modules/uuid/dist/esm-browser/nil.js","../../../../../node_modules/uuid/dist/esm-browser/regex.js","../../../../../node_modules/uuid/dist/esm-browser/validate.js","../../../../../node_modules/uuid/dist/esm-browser/parse.js","../../../../../node_modules/uuid/dist/esm-browser/stringify.js","../../../../../node_modules/uuid/dist/esm-browser/rng.js","../../../../../node_modules/uuid/dist/esm-browser/v1.js","../../../../../node_modules/uuid/dist/esm-browser/v1ToV6.js","../../../../../node_modules/uuid/dist/esm-browser/md5.js","../../../../../node_modules/uuid/dist/esm-browser/v35.js","../../../../../node_modules/uuid/dist/esm-browser/v3.js","../../../../../node_modules/uuid/dist/esm-browser/native.js","../../../../../node_modules/uuid/dist/esm-browser/v4.js","../../../../../node_modules/uuid/dist/esm-browser/sha1.js","../../../../../node_modules/uuid/dist/esm-browser/v5.js","../../../../../node_modules/uuid/dist/esm-browser/v6.js","../../../../../node_modules/uuid/dist/esm-browser/v6ToV1.js","../../../../../node_modules/uuid/dist/esm-browser/v7.js","../../../../../node_modules/uuid/dist/esm-browser/version.js","../../../../core/src/utilities/MetadataHelpers.ts","../../../../core/src/utilities/DateFormatter.ts","../../../../core/src/utilities/MetadataExtractor.ts","../../../../core/src/services/TaskFrontmatterGenerator.ts","../../../../core/src/services/AlgorithmExtractor.ts","../../../../core/src/services/TaskCreationService.ts","../../../../core/src/services/ProjectCreationService.ts","../../../../core/src/services/FrontmatterService.ts","../../../../core/src/services/EffortStatusWorkflow.ts","../../../../core/src/services/StatusTimestampService.ts","../../../../core/src/services/TaskStatusService.ts","../../../../core/src/services/AreaCreationService.ts","../../../tests/__mocks__/obsidian.ts","../../../../core/src/services/AreaHierarchyBuilder.ts","../../../../core/src/services/ConceptCreationService.ts","../../../../core/src/services/EffortVotingService.ts","../../../../core/src/services/FolderRepairService.ts","../../../../core/src/services/LabelToAliasService.ts","../../../../core/src/services/LoggingService.ts","../../../../core/src/services/PropertyCleanupService.ts","../../../../core/src/services/RenameToUidService.ts","../../../../core/src/services/SupervisionCreationService.ts","../../../../core/src/utilities/FrontmatterService.ts","../../../../core/src/utilities/EffortSortingHelpers.ts","../../../../core/src/interfaces/IFileSystemAdapter.ts"],"sourcesContent":["export enum AssetClass {\n  AREA = \"ems__Area\",\n  TASK = \"ems__Task\",\n  PROJECT = \"ems__Project\",\n  MEETING = \"ems__Meeting\",\n  INITIATIVE = \"ems__Initiative\",\n  TASK_PROTOTYPE = \"ems__TaskPrototype\",\n  MEETING_PROTOTYPE = \"ems__MeetingPrototype\",\n  DAILY_NOTE = \"pn__DailyNote\",\n  CONCEPT = \"ims__Concept\",\n}\n","export enum EffortStatus {\n  DRAFT = \"ems__EffortStatusDraft\",\n  BACKLOG = \"ems__EffortStatusBacklog\",\n  ANALYSIS = \"ems__EffortStatusAnalysis\",\n  TODO = \"ems__EffortStatusToDo\",\n  DOING = \"ems__EffortStatusDoing\",\n  DONE = \"ems__EffortStatusDone\",\n  TRASHED = \"ems__EffortStatusTrashed\",\n}\n","export class WikiLinkHelpers {\n  private static readonly WIKI_LINK_PATTERN = /\\[\\[|\\]\\]/g;\n\n  static normalize(value: string | null | undefined): string {\n    if (!value) return \"\";\n    return value.replace(this.WIKI_LINK_PATTERN, \"\").trim();\n  }\n\n  static normalizeArray(values: string[] | string | null | undefined): string[] {\n    if (!values) return [];\n    const arr = Array.isArray(values) ? values : [values];\n    return arr.map((v) => this.normalize(v)).filter((v) => v.length > 0);\n  }\n\n  static equals(a: string | null | undefined, b: string | null | undefined): boolean {\n    return this.normalize(a) === this.normalize(b);\n  }\n\n  static includes(array: string[] | string | null | undefined, value: string): boolean {\n    const normalized = this.normalizeArray(array);\n    const target = this.normalize(value);\n    return normalized.includes(target);\n  }\n}\n","import { WikiLinkHelpers } from \"../../utilities/WikiLinkHelpers\";\nimport { AssetClass, EffortStatus } from \"../constants\";\n\n/**\n * Command Visibility Utilities\n * Contains pure functions for determining command availability based on asset context\n * Used by both CommandManager (for Command Palette) and React components (for buttons)\n *\n * Pattern: Strategy pattern for visibility conditions\n * Benefits: DRY, testable, consistent between UI and commands\n */\n\nexport interface CommandVisibilityContext {\n  instanceClass: string | string[] | null;\n  currentStatus: string | string[] | null;\n  metadata: Record<string, any>;\n  isArchived: boolean;\n  currentFolder: string;\n  expectedFolder: string | null;\n}\n\n/**\n * Check if instanceClass contains specific class\n */\nfunction hasClass(\n  instanceClass: string | string[] | null,\n  targetClass: string,\n): boolean {\n  if (!instanceClass) return false;\n\n  const classes = Array.isArray(instanceClass)\n    ? instanceClass\n    : [instanceClass];\n\n  return classes.some((cls) => WikiLinkHelpers.normalize(cls) === targetClass);\n}\n\n/**\n * Check if instanceClass is ems__Area or ems__Project\n */\nfunction isAreaOrProject(instanceClass: string | string[] | null): boolean {\n  return hasClass(instanceClass, AssetClass.AREA) || hasClass(instanceClass, AssetClass.PROJECT);\n}\n\n/**\n * Check if instanceClass is ems__Task, ems__Project, or ems__Meeting\n */\nfunction isEffort(instanceClass: string | string[] | null): boolean {\n  return hasClass(instanceClass, AssetClass.TASK) ||\n         hasClass(instanceClass, AssetClass.PROJECT) ||\n         hasClass(instanceClass, AssetClass.MEETING);\n}\n\n/**\n * Check if current status is Done\n */\nfunction hasStatus(\n  currentStatus: string | string[] | null,\n  targetStatus: string,\n): boolean {\n  if (!currentStatus) return false;\n\n  const statusValue = Array.isArray(currentStatus)\n    ? currentStatus[0]\n    : currentStatus;\n\n  if (!statusValue) return false;\n\n  const cleanStatus = WikiLinkHelpers.normalize(statusValue);\n  return cleanStatus === targetStatus;\n}\n\n/**\n * Check if asset is archived\n * Supports multiple formats: true, \"true\", \"yes\", 1\n */\nfunction isAssetArchived(isArchived: any): boolean {\n  if (isArchived === true || isArchived === 1) return true;\n  if (typeof isArchived === \"string\") {\n    const lowerValue = isArchived.toLowerCase();\n    return lowerValue === \"true\" || lowerValue === \"yes\";\n  }\n  return false;\n}\n\n/**\n * Check if metadata has empty properties\n */\nfunction hasEmptyProperties(metadata: Record<string, any>): boolean {\n  if (!metadata || Object.keys(metadata).length === 0) return false;\n\n  return Object.values(metadata).some((value) => {\n    if (value === null || value === undefined) return true;\n    if (typeof value === \"string\" && value.trim() === \"\") return true;\n    if (Array.isArray(value) && value.length === 0) return true;\n    if (\n      typeof value === \"object\" &&\n      !Array.isArray(value) &&\n      Object.keys(value).length === 0\n    )\n      return true;\n    return false;\n  });\n}\n\n/**\n * Check if folder needs repair\n */\nfunction needsFolderRepair(\n  currentFolder: string,\n  expectedFolder: string | null,\n): boolean {\n  if (!expectedFolder) return false;\n\n  // Normalize paths for comparison (remove trailing slashes)\n  const normalizedCurrent = currentFolder.replace(/\\/$/, \"\");\n  const normalizedExpected = expectedFolder.replace(/\\/$/, \"\");\n\n  return normalizedCurrent !== normalizedExpected;\n}\n\n// ============================================================================\n// Public API: Command Visibility Functions\n// ============================================================================\n\n/**\n * Can execute \"Create Task\" command\n * Available for: ems__Area and ems__Project assets\n */\nexport function canCreateTask(context: CommandVisibilityContext): boolean {\n  return isAreaOrProject(context.instanceClass);\n}\n\n/**\n * Can execute \"Create Project\" command\n * Available for: ems__Area, ems__Initiative, and ems__Project assets\n */\nexport function canCreateProject(context: CommandVisibilityContext): boolean {\n  return hasClass(context.instanceClass, AssetClass.AREA) ||\n         hasClass(context.instanceClass, AssetClass.INITIATIVE) ||\n         hasClass(context.instanceClass, AssetClass.PROJECT);\n}\n\n/**\n * Can execute \"Create Child Area\" command\n * Available for: ems__Area assets only\n */\nexport function canCreateChildArea(context: CommandVisibilityContext): boolean {\n  return hasClass(context.instanceClass, AssetClass.AREA);\n}\n\n/**\n * Can execute \"Create Instance\" command\n * Available for: ems__TaskPrototype and ems__MeetingPrototype assets\n */\nexport function canCreateInstance(context: CommandVisibilityContext): boolean {\n  return hasClass(context.instanceClass, AssetClass.TASK_PROTOTYPE) ||\n         hasClass(context.instanceClass, AssetClass.MEETING_PROTOTYPE);\n}\n\n/**\n * Get today's date in YYYY-MM-DD format\n */\nfunction getTodayDateString(): string {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = String(now.getMonth() + 1).padStart(2, \"0\");\n  const day = String(now.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n}\n\n/**\n * Check if ems__Effort_day is set to today's date\n * Handles formats: \"[[YYYY-MM-DD]]\" or [[YYYY-MM-DD]]\n */\nfunction isPlannedForToday(metadata: Record<string, any>): boolean {\n  const effortDay = metadata.ems__Effort_day;\n  if (!effortDay) return false;\n\n  const todayString = getTodayDateString();\n\n  // Handle string value\n  if (typeof effortDay === \"string\") {\n    // Remove quotes and brackets\n    const cleanValue = effortDay.replace(/[\"'[\\]]/g, \"\").trim();\n    return cleanValue === todayString;\n  }\n\n  // Handle array value (take first element)\n  if (Array.isArray(effortDay) && effortDay.length > 0) {\n    const cleanValue = String(effortDay[0]).replace(/[\"'[\\]]/g, \"\").trim();\n    return cleanValue === todayString;\n  }\n\n  return false;\n}\n\n/**\n * Can execute \"Plan on today\" command\n * Available for: Task and Project (any effort) that are NOT already planned for today\n */\nexport function canPlanOnToday(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n\n  // Hide button if already planned for today\n  if (isPlannedForToday(context.metadata)) return false;\n\n  return true;\n}\n\n/**\n * Can execute \"Plan for Evening\" command\n * Available for: Task or Meeting with Backlog status\n */\nexport function canPlanForEvening(context: CommandVisibilityContext): boolean {\n  if (!hasClass(context.instanceClass, AssetClass.TASK) && !hasClass(context.instanceClass, AssetClass.MEETING)) return false;\n\n  // Show only for Backlog status\n  return hasStatus(context.currentStatus, EffortStatus.BACKLOG);\n}\n\n/**\n * Check if ems__Effort_day property exists\n */\nfunction hasEffortDay(metadata: Record<string, any>): boolean {\n  const effortDay = metadata.ems__Effort_day;\n  if (!effortDay) return false;\n\n  if (typeof effortDay === \"string\") {\n    const cleanValue = effortDay.replace(/[\"'[\\]]/g, \"\").trim();\n    return cleanValue.length > 0;\n  }\n\n  if (Array.isArray(effortDay) && effortDay.length > 0) {\n    const cleanValue = String(effortDay[0]).replace(/[\"'[\\]]/g, \"\").trim();\n    return cleanValue.length > 0;\n  }\n\n  return false;\n}\n\n/**\n * Can execute \"Shift Day Backward\" command\n * Available for: Task and Project with ems__Effort_day property\n */\nexport function canShiftDayBackward(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n  return hasEffortDay(context.metadata);\n}\n\n/**\n * Can execute \"Shift Day Forward\" command\n * Available for: Task and Project with ems__Effort_day property\n */\nexport function canShiftDayForward(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n  return hasEffortDay(context.metadata);\n}\n\n/**\n * Can execute \"Set Draft Status\" command\n * Available for: Task/Project without any status\n */\nexport function canSetDraftStatus(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n\n  // Show only when status is not set\n  return !context.currentStatus;\n}\n\n/**\n * Can execute \"Move to Backlog\" command\n * Available for: Task/Project with Draft status\n */\nexport function canMoveToBacklog(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n\n  // Show only for Draft status\n  return hasStatus(context.currentStatus, EffortStatus.DRAFT);\n}\n\n/**\n * Can execute \"Move to Analysis\" command\n * Available for: Project with Backlog status\n */\nexport function canMoveToAnalysis(context: CommandVisibilityContext): boolean {\n  if (!hasClass(context.instanceClass, AssetClass.PROJECT)) return false;\n\n  // Show only for Backlog status\n  return hasStatus(context.currentStatus, EffortStatus.BACKLOG);\n}\n\n/**\n * Can execute \"Move to ToDo\" command\n * Available for: Project with Analysis status\n */\nexport function canMoveToToDo(context: CommandVisibilityContext): boolean {\n  if (!hasClass(context.instanceClass, AssetClass.PROJECT)) return false;\n\n  // Show only for Analysis status\n  return hasStatus(context.currentStatus, EffortStatus.ANALYSIS);\n}\n\n/**\n * Can execute \"Start Effort\" command\n * Available for: Task or Meeting with Backlog status OR Project with ToDo status\n */\nexport function canStartEffort(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n\n  // Task and Meeting: Backlog → Doing\n  if (hasClass(context.instanceClass, AssetClass.TASK) || hasClass(context.instanceClass, AssetClass.MEETING)) {\n    return hasStatus(context.currentStatus, EffortStatus.BACKLOG);\n  }\n\n  // Project: ToDo → Doing\n  if (hasClass(context.instanceClass, AssetClass.PROJECT)) {\n    return hasStatus(context.currentStatus, EffortStatus.TODO);\n  }\n\n  return false;\n}\n\n/**\n * Can execute \"Mark as Done\" command\n * Available for: Task/Project with Doing status\n */\nexport function canMarkDone(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n\n  // Show only for Doing status\n  return hasStatus(context.currentStatus, EffortStatus.DOING);\n}\n\n/**\n * Can execute \"Trash\" command\n * Available for: Task/Project without Trashed or Done status\n */\nexport function canTrashEffort(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n\n  // Show for efforts without status\n  if (!context.currentStatus) return true;\n\n  // Hide if status is Trashed or Done\n  const statuses = Array.isArray(context.currentStatus)\n    ? context.currentStatus\n    : [context.currentStatus];\n\n  const hasTrashedOrDone = statuses.some((status) => {\n    const cleanStatus = WikiLinkHelpers.normalize(status);\n    return (\n      cleanStatus === EffortStatus.TRASHED ||\n      cleanStatus === EffortStatus.DONE\n    );\n  });\n\n  return !hasTrashedOrDone;\n}\n\n/**\n * Can execute \"Archive Task\" command\n * Available for: Any asset that is not already archived\n */\nexport function canArchiveTask(context: CommandVisibilityContext): boolean {\n  return !isAssetArchived(context.isArchived);\n}\n\n/**\n * Can execute \"Clean Empty Properties\" command\n * Available for: Any asset with empty properties\n */\nexport function canCleanProperties(\n  context: CommandVisibilityContext,\n): boolean {\n  return hasEmptyProperties(context.metadata);\n}\n\n/**\n * Can execute \"Repair Folder\" command\n * Available for: Any asset in wrong folder (based on exo__Asset_isDefinedBy)\n */\nexport function canRepairFolder(context: CommandVisibilityContext): boolean {\n  return needsFolderRepair(context.currentFolder, context.expectedFolder);\n}\n\n/**\n * Can execute \"Rename to UID\" command\n * Available for: Any asset where filename doesn't match exo__Asset_uid\n * Excluded: ims__Concept assets (concepts should keep their semantic names)\n */\nexport function canRenameToUid(\n  context: CommandVisibilityContext,\n  currentFilename: string,\n): boolean {\n  const uid = context.metadata.exo__Asset_uid;\n  if (!uid) return false;\n\n  if (hasClass(context.instanceClass, AssetClass.CONCEPT)) return false;\n\n  return currentFilename !== uid;\n}\n\n/**\n * Can execute \"Vote on Effort\" command\n * Available for: Task and Project efforts (not archived)\n */\nexport function canVoteOnEffort(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n\n  if (isAssetArchived(context.isArchived)) return false;\n\n  return true;\n}\n\n/**\n * Can execute \"Rollback Status\" command\n * Available for: Efforts with non-null, non-Trashed status (workflow-based rollback)\n */\nexport function canRollbackStatus(context: CommandVisibilityContext): boolean {\n  if (!isEffort(context.instanceClass)) return false;\n\n  if (isAssetArchived(context.isArchived)) return false;\n\n  if (!context.currentStatus) return false;\n\n  const statusValue = Array.isArray(context.currentStatus)\n    ? context.currentStatus[0]\n    : context.currentStatus;\n\n  if (!statusValue) return false;\n\n  const cleanStatus = WikiLinkHelpers.normalize(statusValue);\n\n  if (cleanStatus === EffortStatus.TRASHED) return false;\n\n  return true;\n}\n\n/**\n * Can execute \"Create Related Task\" command\n * Available for: ems__Task assets (not archived)\n */\nexport function canCreateRelatedTask(context: CommandVisibilityContext): boolean {\n  if (!hasClass(context.instanceClass, AssetClass.TASK)) return false;\n\n  // Don't show button if archived\n  if (isAssetArchived(context.isArchived)) return false;\n\n  return true;\n}\n\n/**\n * Can execute \"Set Active Focus\" command\n * Available for: ems__Area assets only\n */\nexport function canSetActiveFocus(context: CommandVisibilityContext): boolean {\n  return hasClass(context.instanceClass, AssetClass.AREA);\n}\n\n/**\n * Can execute \"Copy Label to Aliases\" command\n * Available for: Assets with exo__Asset_label that don't have this label in aliases yet\n */\nexport function canCopyLabelToAliases(context: CommandVisibilityContext): boolean {\n  const label = context.metadata.exo__Asset_label;\n  if (!label || typeof label !== \"string\" || label.trim() === \"\") return false;\n\n  const trimmedLabel = label.trim();\n  const aliases = context.metadata.aliases;\n\n  if (!aliases) return true;\n\n  if (!Array.isArray(aliases)) return true;\n\n  if (aliases.length === 0) return true;\n\n  return !aliases.some((alias) => {\n    if (typeof alias !== \"string\") return false;\n    return alias.trim() === trimmedLabel;\n  });\n}\n\n/**\n * Can execute \"Create Narrower Concept\" command\n * Available for: ims__Concept assets\n */\nexport function canCreateNarrowerConcept(context: CommandVisibilityContext): boolean {\n  return hasClass(context.instanceClass, AssetClass.CONCEPT);\n}\n","export default 'ffffffff-ffff-ffff-ffff-ffffffffffff';\n","export default '00000000-0000-0000-0000-000000000000';\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n","import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n","import validate from './validate.js';\nfunction parse(uuid) {\n    if (!validate(uuid)) {\n        throw TypeError('Invalid UUID');\n    }\n    let v;\n    return Uint8Array.of((v = parseInt(uuid.slice(0, 8), 16)) >>> 24, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff, (v = parseInt(uuid.slice(9, 13), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(14, 18), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(19, 23), 16)) >>> 8, v & 0xff, ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff, (v / 0x100000000) & 0xff, (v >>> 24) & 0xff, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff);\n}\nexport default parse;\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nconst _state = {};\nfunction v1(options, buf, offset) {\n    let bytes;\n    const isV6 = options?._v6 ?? false;\n    if (options) {\n        const optionsKeys = Object.keys(options);\n        if (optionsKeys.length === 1 && optionsKeys[0] === '_v6') {\n            options = undefined;\n        }\n    }\n    if (options) {\n        bytes = v1Bytes(options.random ?? options.rng?.() ?? rng(), options.msecs, options.nsecs, options.clockseq, options.node, buf, offset);\n    }\n    else {\n        const now = Date.now();\n        const rnds = rng();\n        updateV1State(_state, now, rnds);\n        bytes = v1Bytes(rnds, _state.msecs, _state.nsecs, isV6 ? undefined : _state.clockseq, isV6 ? undefined : _state.node, buf, offset);\n    }\n    return buf ?? unsafeStringify(bytes);\n}\nexport function updateV1State(state, now, rnds) {\n    state.msecs ??= -Infinity;\n    state.nsecs ??= 0;\n    if (now === state.msecs) {\n        state.nsecs++;\n        if (state.nsecs >= 10000) {\n            state.node = undefined;\n            state.nsecs = 0;\n        }\n    }\n    else if (now > state.msecs) {\n        state.nsecs = 0;\n    }\n    else if (now < state.msecs) {\n        state.node = undefined;\n    }\n    if (!state.node) {\n        state.node = rnds.slice(10, 16);\n        state.node[0] |= 0x01;\n        state.clockseq = ((rnds[8] << 8) | rnds[9]) & 0x3fff;\n    }\n    state.msecs = now;\n    return state;\n}\nfunction v1Bytes(rnds, msecs, nsecs, clockseq, node, buf, offset = 0) {\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    if (!buf) {\n        buf = new Uint8Array(16);\n        offset = 0;\n    }\n    else {\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n    }\n    msecs ??= Date.now();\n    nsecs ??= 0;\n    clockseq ??= ((rnds[8] << 8) | rnds[9]) & 0x3fff;\n    node ??= rnds.slice(10, 16);\n    msecs += 12219292800000;\n    const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    buf[offset++] = (tl >>> 24) & 0xff;\n    buf[offset++] = (tl >>> 16) & 0xff;\n    buf[offset++] = (tl >>> 8) & 0xff;\n    buf[offset++] = tl & 0xff;\n    const tmh = ((msecs / 0x100000000) * 10000) & 0xfffffff;\n    buf[offset++] = (tmh >>> 8) & 0xff;\n    buf[offset++] = tmh & 0xff;\n    buf[offset++] = ((tmh >>> 24) & 0xf) | 0x10;\n    buf[offset++] = (tmh >>> 16) & 0xff;\n    buf[offset++] = (clockseq >>> 8) | 0x80;\n    buf[offset++] = clockseq & 0xff;\n    for (let n = 0; n < 6; ++n) {\n        buf[offset++] = node[n];\n    }\n    return buf;\n}\nexport default v1;\n","import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\nexport default function v1ToV6(uuid) {\n    const v1Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;\n    const v6Bytes = _v1ToV6(v1Bytes);\n    return typeof uuid === 'string' ? unsafeStringify(v6Bytes) : v6Bytes;\n}\nfunction _v1ToV6(v1Bytes) {\n    return Uint8Array.of(((v1Bytes[6] & 0x0f) << 4) | ((v1Bytes[7] >> 4) & 0x0f), ((v1Bytes[7] & 0x0f) << 4) | ((v1Bytes[4] & 0xf0) >> 4), ((v1Bytes[4] & 0x0f) << 4) | ((v1Bytes[5] & 0xf0) >> 4), ((v1Bytes[5] & 0x0f) << 4) | ((v1Bytes[0] & 0xf0) >> 4), ((v1Bytes[0] & 0x0f) << 4) | ((v1Bytes[1] & 0xf0) >> 4), ((v1Bytes[1] & 0x0f) << 4) | ((v1Bytes[2] & 0xf0) >> 4), 0x60 | (v1Bytes[2] & 0x0f), v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);\n}\n","function md5(bytes) {\n    const words = uint8ToUint32(bytes);\n    const md5Bytes = wordsToMd5(words, bytes.length * 8);\n    return uint32ToUint8(md5Bytes);\n}\nfunction uint32ToUint8(input) {\n    const bytes = new Uint8Array(input.length * 4);\n    for (let i = 0; i < input.length * 4; i++) {\n        bytes[i] = (input[i >> 2] >>> ((i % 4) * 8)) & 0xff;\n    }\n    return bytes;\n}\nfunction getOutputLength(inputLength8) {\n    return (((inputLength8 + 64) >>> 9) << 4) + 14 + 1;\n}\nfunction wordsToMd5(x, len) {\n    const xpad = new Uint32Array(getOutputLength(len)).fill(0);\n    xpad.set(x);\n    xpad[len >> 5] |= 0x80 << len % 32;\n    xpad[xpad.length - 1] = len;\n    x = xpad;\n    let a = 1732584193;\n    let b = -271733879;\n    let c = -1732584194;\n    let d = 271733878;\n    for (let i = 0; i < x.length; i += 16) {\n        const olda = a;\n        const oldb = b;\n        const oldc = c;\n        const oldd = d;\n        a = md5ff(a, b, c, d, x[i], 7, -680876936);\n        d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n        c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n        b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n        a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n        d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n        c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n        b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n        a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n        d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n        c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n        b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n        a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n        d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n        c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n        b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n        a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n        d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n        c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n        b = md5gg(b, c, d, a, x[i], 20, -373897302);\n        a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n        d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n        c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n        b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n        a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n        d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n        c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n        b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n        a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n        d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n        c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n        b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n        a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n        d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n        c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n        b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n        a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n        d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n        c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n        b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n        a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n        d = md5hh(d, a, b, c, x[i], 11, -358537222);\n        c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n        b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n        a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n        d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n        c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n        b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n        a = md5ii(a, b, c, d, x[i], 6, -198630844);\n        d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n        c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n        b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n        a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n        d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n        c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n        b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n        a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n        d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n        c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n        b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n        a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n        d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n        c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n        b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n        a = safeAdd(a, olda);\n        b = safeAdd(b, oldb);\n        c = safeAdd(c, oldc);\n        d = safeAdd(d, oldd);\n    }\n    return Uint32Array.of(a, b, c, d);\n}\nfunction uint8ToUint32(input) {\n    if (input.length === 0) {\n        return new Uint32Array();\n    }\n    const output = new Uint32Array(getOutputLength(input.length * 8)).fill(0);\n    for (let i = 0; i < input.length; i++) {\n        output[i >> 2] |= (input[i] & 0xff) << ((i % 4) * 8);\n    }\n    return output;\n}\nfunction safeAdd(x, y) {\n    const lsw = (x & 0xffff) + (y & 0xffff);\n    const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xffff);\n}\nfunction bitRotateLeft(num, cnt) {\n    return (num << cnt) | (num >>> (32 - cnt));\n}\nfunction md5cmn(q, a, b, x, s, t) {\n    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n    return md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n    return md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n    return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n    return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nexport default md5;\n","import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\nexport function stringToBytes(str) {\n    str = unescape(encodeURIComponent(str));\n    const bytes = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; ++i) {\n        bytes[i] = str.charCodeAt(i);\n    }\n    return bytes;\n}\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(version, hash, value, namespace, buf, offset) {\n    const valueBytes = typeof value === 'string' ? stringToBytes(value) : value;\n    const namespaceBytes = typeof namespace === 'string' ? parse(namespace) : namespace;\n    if (typeof namespace === 'string') {\n        namespace = parse(namespace);\n    }\n    if (namespace?.length !== 16) {\n        throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n    let bytes = new Uint8Array(16 + valueBytes.length);\n    bytes.set(namespaceBytes);\n    bytes.set(valueBytes, namespaceBytes.length);\n    bytes = hash(bytes);\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = bytes[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(bytes);\n}\n","import md5 from './md5.js';\nimport v35, { DNS, URL } from './v35.js';\nexport { DNS, URL } from './v35.js';\nfunction v3(value, namespace, buf, offset) {\n    return v35(0x30, md5, value, namespace, buf, offset);\n}\nv3.DNS = DNS;\nv3.URL = URL;\nexport default v3;\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","function f(s, x, y, z) {\n    switch (s) {\n        case 0:\n            return (x & y) ^ (~x & z);\n        case 1:\n            return x ^ y ^ z;\n        case 2:\n            return (x & y) ^ (x & z) ^ (y & z);\n        case 3:\n            return x ^ y ^ z;\n    }\n}\nfunction ROTL(x, n) {\n    return (x << n) | (x >>> (32 - n));\n}\nfunction sha1(bytes) {\n    const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n    const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    const newBytes = new Uint8Array(bytes.length + 1);\n    newBytes.set(bytes);\n    newBytes[bytes.length] = 0x80;\n    bytes = newBytes;\n    const l = bytes.length / 4 + 2;\n    const N = Math.ceil(l / 16);\n    const M = new Array(N);\n    for (let i = 0; i < N; ++i) {\n        const arr = new Uint32Array(16);\n        for (let j = 0; j < 16; ++j) {\n            arr[j] =\n                (bytes[i * 64 + j * 4] << 24) |\n                    (bytes[i * 64 + j * 4 + 1] << 16) |\n                    (bytes[i * 64 + j * 4 + 2] << 8) |\n                    bytes[i * 64 + j * 4 + 3];\n        }\n        M[i] = arr;\n    }\n    M[N - 1][14] = ((bytes.length - 1) * 8) / Math.pow(2, 32);\n    M[N - 1][14] = Math.floor(M[N - 1][14]);\n    M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;\n    for (let i = 0; i < N; ++i) {\n        const W = new Uint32Array(80);\n        for (let t = 0; t < 16; ++t) {\n            W[t] = M[i][t];\n        }\n        for (let t = 16; t < 80; ++t) {\n            W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n        }\n        let a = H[0];\n        let b = H[1];\n        let c = H[2];\n        let d = H[3];\n        let e = H[4];\n        for (let t = 0; t < 80; ++t) {\n            const s = Math.floor(t / 20);\n            const T = (ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t]) >>> 0;\n            e = d;\n            d = c;\n            c = ROTL(b, 30) >>> 0;\n            b = a;\n            a = T;\n        }\n        H[0] = (H[0] + a) >>> 0;\n        H[1] = (H[1] + b) >>> 0;\n        H[2] = (H[2] + c) >>> 0;\n        H[3] = (H[3] + d) >>> 0;\n        H[4] = (H[4] + e) >>> 0;\n    }\n    return Uint8Array.of(H[0] >> 24, H[0] >> 16, H[0] >> 8, H[0], H[1] >> 24, H[1] >> 16, H[1] >> 8, H[1], H[2] >> 24, H[2] >> 16, H[2] >> 8, H[2], H[3] >> 24, H[3] >> 16, H[3] >> 8, H[3], H[4] >> 24, H[4] >> 16, H[4] >> 8, H[4]);\n}\nexport default sha1;\n","import sha1 from './sha1.js';\nimport v35, { DNS, URL } from './v35.js';\nexport { DNS, URL } from './v35.js';\nfunction v5(value, namespace, buf, offset) {\n    return v35(0x50, sha1, value, namespace, buf, offset);\n}\nv5.DNS = DNS;\nv5.URL = URL;\nexport default v5;\n","import { unsafeStringify } from './stringify.js';\nimport v1 from './v1.js';\nimport v1ToV6 from './v1ToV6.js';\nfunction v6(options, buf, offset) {\n    options ??= {};\n    offset ??= 0;\n    let bytes = v1({ ...options, _v6: true }, new Uint8Array(16));\n    bytes = v1ToV6(bytes);\n    if (buf) {\n        for (let i = 0; i < 16; i++) {\n            buf[offset + i] = bytes[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(bytes);\n}\nexport default v6;\n","import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\nexport default function v6ToV1(uuid) {\n    const v6Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;\n    const v1Bytes = _v6ToV1(v6Bytes);\n    return typeof uuid === 'string' ? unsafeStringify(v1Bytes) : v1Bytes;\n}\nfunction _v6ToV1(v6Bytes) {\n    return Uint8Array.of(((v6Bytes[3] & 0x0f) << 4) | ((v6Bytes[4] >> 4) & 0x0f), ((v6Bytes[4] & 0x0f) << 4) | ((v6Bytes[5] & 0xf0) >> 4), ((v6Bytes[5] & 0x0f) << 4) | (v6Bytes[6] & 0x0f), v6Bytes[7], ((v6Bytes[1] & 0x0f) << 4) | ((v6Bytes[2] & 0xf0) >> 4), ((v6Bytes[2] & 0x0f) << 4) | ((v6Bytes[3] & 0xf0) >> 4), 0x10 | ((v6Bytes[0] & 0xf0) >> 4), ((v6Bytes[0] & 0x0f) << 4) | ((v6Bytes[1] & 0xf0) >> 4), v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);\n}\n","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nconst _state = {};\nfunction v7(options, buf, offset) {\n    let bytes;\n    if (options) {\n        bytes = v7Bytes(options.random ?? options.rng?.() ?? rng(), options.msecs, options.seq, buf, offset);\n    }\n    else {\n        const now = Date.now();\n        const rnds = rng();\n        updateV7State(_state, now, rnds);\n        bytes = v7Bytes(rnds, _state.msecs, _state.seq, buf, offset);\n    }\n    return buf ?? unsafeStringify(bytes);\n}\nexport function updateV7State(state, now, rnds) {\n    state.msecs ??= -Infinity;\n    state.seq ??= 0;\n    if (now > state.msecs) {\n        state.seq = (rnds[6] << 23) | (rnds[7] << 16) | (rnds[8] << 8) | rnds[9];\n        state.msecs = now;\n    }\n    else {\n        state.seq = (state.seq + 1) | 0;\n        if (state.seq === 0) {\n            state.msecs++;\n        }\n    }\n    return state;\n}\nfunction v7Bytes(rnds, msecs, seq, buf, offset = 0) {\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    if (!buf) {\n        buf = new Uint8Array(16);\n        offset = 0;\n    }\n    else {\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n    }\n    msecs ??= Date.now();\n    seq ??= ((rnds[6] * 0x7f) << 24) | (rnds[7] << 16) | (rnds[8] << 8) | rnds[9];\n    buf[offset++] = (msecs / 0x10000000000) & 0xff;\n    buf[offset++] = (msecs / 0x100000000) & 0xff;\n    buf[offset++] = (msecs / 0x1000000) & 0xff;\n    buf[offset++] = (msecs / 0x10000) & 0xff;\n    buf[offset++] = (msecs / 0x100) & 0xff;\n    buf[offset++] = msecs & 0xff;\n    buf[offset++] = 0x70 | ((seq >>> 28) & 0x0f);\n    buf[offset++] = (seq >>> 20) & 0xff;\n    buf[offset++] = 0x80 | ((seq >>> 14) & 0x3f);\n    buf[offset++] = (seq >>> 6) & 0xff;\n    buf[offset++] = ((seq << 2) & 0xff) | (rnds[10] & 0x03);\n    buf[offset++] = rnds[11];\n    buf[offset++] = rnds[12];\n    buf[offset++] = rnds[13];\n    buf[offset++] = rnds[14];\n    buf[offset++] = rnds[15];\n    return buf;\n}\nexport default v7;\n","import validate from './validate.js';\nfunction version(uuid) {\n    if (!validate(uuid)) {\n        throw TypeError('Invalid UUID');\n    }\n    return parseInt(uuid.slice(14, 15), 16);\n}\nexport default version;\n","export class MetadataHelpers {\n  static findAllReferencingProperties(\n    metadata: Record<string, any>,\n    currentFileName: string,\n  ): string[] {\n    const properties: string[] = [];\n    for (const [key, value] of Object.entries(metadata)) {\n      if (this.containsReference(value, currentFileName)) {\n        properties.push(key);\n      }\n    }\n    return properties;\n  }\n\n  static findReferencingProperty(\n    metadata: Record<string, any>,\n    currentFileName: string,\n  ): string | undefined {\n    for (const [key, value] of Object.entries(metadata)) {\n      if (this.containsReference(value, currentFileName)) {\n        return key;\n      }\n    }\n    return undefined;\n  }\n\n  static containsReference(value: any, fileName: string): boolean {\n    if (!value) return false;\n\n    const cleanName = fileName.replace(/\\.md$/, \"\");\n\n    if (typeof value === \"string\") {\n      return value.includes(`[[${cleanName}]]`) || value.includes(cleanName);\n    }\n\n    if (Array.isArray(value)) {\n      return value.some((v) => this.containsReference(v, fileName));\n    }\n\n    return false;\n  }\n\n  static isAssetArchived(metadata: Record<string, any>): boolean {\n    if (metadata?.exo__Asset_isArchived === true) {\n      return true;\n    }\n\n    const archivedValue = metadata?.archived;\n\n    if (archivedValue === undefined || archivedValue === null) {\n      return false;\n    }\n\n    if (typeof archivedValue === \"boolean\") {\n      return archivedValue;\n    }\n\n    if (typeof archivedValue === \"number\") {\n      return archivedValue !== 0;\n    }\n\n    if (typeof archivedValue === \"string\") {\n      const normalized = archivedValue.toLowerCase().trim();\n      return (\n        normalized === \"true\" || normalized === \"yes\" || normalized === \"1\"\n      );\n    }\n\n    return false;\n  }\n\n  static getPropertyValue(\n    relation: { title: string; created: number; modified: number; path: string; metadata?: Record<string, any> },\n    propertyName: string,\n  ): any {\n    if (propertyName === \"Name\") return relation.title;\n    if (propertyName === \"title\") return relation.title;\n    if (propertyName === \"created\") return relation.created;\n    if (propertyName === \"modified\") return relation.modified;\n    if (propertyName === \"path\") return relation.path;\n    return relation.metadata?.[propertyName];\n  }\n\n  static ensureQuoted(value: string): string {\n    if (!value || value === '\"\"') return '\"\"';\n    if (value.startsWith('\"') && value.endsWith('\"')) return value;\n    return `\"${value}\"`;\n  }\n\n  static buildFileContent(frontmatter: Record<string, any>, bodyContent?: string): string {\n    const frontmatterLines = Object.entries(frontmatter)\n      .map(([key, value]) => {\n        if (Array.isArray(value)) {\n          const arrayItems = value.map((item) => `  - ${item}`).join(\"\\n\");\n          return `${key}:\\n${arrayItems}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(\"\\n\");\n\n    const body = bodyContent ? `\\n${bodyContent}\\n` : \"\\n\";\n    return `---\\n${frontmatterLines}\\n---\\n${body}`;\n  }\n}\n","/**\n * DateFormatter Utility\n *\n * Centralized date formatting utilities to eliminate code duplication.\n * Follows DRY principle by providing reusable date formatting functions.\n *\n * @module infrastructure/utilities\n * @since 1.0.0\n */\n\n/**\n * Utility class for consistent date formatting across the application.\n *\n * Provides standardized formats for:\n * - ISO 8601 local timestamps (for frontmatter metadata)\n * - Obsidian wikilink date format (for date references)\n *\n * @example\n * ```typescript\n * const now = new Date();\n *\n * // For timestamp metadata\n * const timestamp = DateFormatter.toLocalTimestamp(now);\n * // \"2025-10-24T14:30:45\"\n *\n * // For date wikilinks\n * const wikilink = DateFormatter.toDateWikilink(now);\n * // \"[[2025-10-24]]\"\n *\n * // Get current date as wikilink\n * const today = DateFormatter.getTodayWikilink();\n * // \"[[2025-10-24]]\"\n * ```\n */\nexport class DateFormatter {\n  /**\n   * Format date to local timestamp string in ISO 8601 format (without timezone).\n   *\n   * Format: `YYYY-MM-DDTHH:MM:SS`\n   *\n   * Used for frontmatter properties like:\n   * - `ems__Effort_created`\n   * - `ems__Effort_modified`\n   * - `ems__Effort_archived`\n   *\n   * @param date - Date object to format\n   * @returns ISO 8601 local timestamp string\n   *\n   * @example\n   * ```typescript\n   * const date = new Date('2025-10-24T14:30:45Z');\n   * const timestamp = DateFormatter.toLocalTimestamp(date);\n   * // \"2025-10-24T14:30:45\"\n   * ```\n   */\n  static toLocalTimestamp(date: Date): string {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const hours = String(date.getHours()).padStart(2, \"0\");\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\n    const seconds = String(date.getSeconds()).padStart(2, \"0\");\n\n    return `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`;\n  }\n\n  /**\n   * Format date to Obsidian wikilink format (quoted).\n   *\n   * Format: `\"[[YYYY-MM-DD]]\"`\n   *\n   * Used for frontmatter properties like:\n   * - `ems__Effort_day` (daily note reference)\n   * - `pn__DailyNote_day` (daily note date)\n   *\n   * Note: Returns quoted string ready for YAML frontmatter.\n   *\n   * @param date - Date object to format\n   * @returns Quoted wikilink string\n   *\n   * @example\n   * ```typescript\n   * const date = new Date('2025-10-24T14:30:45Z');\n   * const wikilink = DateFormatter.toDateWikilink(date);\n   * // \"[[2025-10-24]]\"\n   * ```\n   */\n  static toDateWikilink(date: Date): string {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n\n    return `\"[[${year}-${month}-${day}]]\"`;\n  }\n\n  /**\n   * Get current date as wikilink format.\n   *\n   * Convenience method equivalent to `toDateWikilink(new Date())`.\n   *\n   * @returns Today's date as quoted wikilink\n   *\n   * @example\n   * ```typescript\n   * const today = DateFormatter.getTodayWikilink();\n   * // \"[[2025-10-24]]\"\n   * ```\n   */\n  static getTodayWikilink(): string {\n    return DateFormatter.toDateWikilink(new Date());\n  }\n\n  /**\n   * Format date to simple date string (no brackets, no quotes).\n   *\n   * Format: `YYYY-MM-DD`\n   *\n   * Used for generating default labels or simple date formatting.\n   *\n   * @param date - Date object to format\n   * @returns Simple date string\n   *\n   * @example\n   * ```typescript\n   * const date = new Date('2025-10-24T14:30:45Z');\n   * const dateStr = DateFormatter.toDateString(date);\n   * // \"2025-10-24\"\n   * ```\n   */\n  static toDateString(date: Date): string {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n\n    return `${year}-${month}-${day}`;\n  }\n\n  /**\n   * Parse wikilink format back to date string (without quotes).\n   *\n   * Extracts date from `\"[[YYYY-MM-DD]]\"` or `[[YYYY-MM-DD]]` format.\n   *\n   * @param wikilink - Wikilink string (with or without quotes)\n   * @returns Date string in YYYY-MM-DD format, or null if invalid\n   *\n   * @example\n   * ```typescript\n   * const date1 = DateFormatter.parseWikilink('\"[[2025-10-24]]\"');\n   * // \"2025-10-24\"\n   *\n   * const date2 = DateFormatter.parseWikilink('[[2025-10-24]]');\n   * // \"2025-10-24\"\n   *\n   * const invalid = DateFormatter.parseWikilink('invalid');\n   * // null\n   * ```\n   */\n  static parseWikilink(wikilink: string): string | null {\n    // Remove quotes if present\n    const cleaned = wikilink.replace(/^[\"']|[\"']$/g, \"\");\n\n    // Extract date from [[YYYY-MM-DD]]\n    const match = cleaned.match(/\\[\\[(\\d{4}-\\d{2}-\\d{2})\\]\\]/);\n    return match ? match[1] : null;\n  }\n\n  /**\n   * Add days to a date and return new date.\n   *\n   * @param date - Starting date\n   * @param days - Number of days to add (negative for subtraction)\n   * @returns New date object with days added\n   *\n   * @example\n   * ```typescript\n   * const today = new Date('2025-10-24');\n   * const tomorrow = DateFormatter.addDays(today, 1);\n   * const yesterday = DateFormatter.addDays(today, -1);\n   * ```\n   */\n  static addDays(date: Date, days: number): Date {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  /**\n   * Check if two dates are on the same day (ignoring time).\n   *\n   * @param date1 - First date\n   * @param date2 - Second date\n   * @returns True if dates are on same day\n   *\n   * @example\n   * ```typescript\n   * const morning = new Date('2025-10-24T08:00:00');\n   * const evening = new Date('2025-10-24T20:00:00');\n   * const isSameDay = DateFormatter.isSameDay(morning, evening);\n   * // true\n   * ```\n   */\n  static isSameDay(date1: Date, date2: Date): boolean {\n    return (\n      date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate()\n    );\n  }\n}\n","import { TFile, MetadataCache, CachedMetadata } from \"obsidian\";\nimport { CommandVisibilityContext } from \"../domain/commands/CommandVisibility\";\n\nexport class MetadataExtractor {\n  constructor(private metadataCache: MetadataCache) {}\n\n  extractMetadata(file: TFile | null): Record<string, any> {\n    if (!file) return {};\n\n    const cache = this.metadataCache.getFileCache(file);\n    return cache?.frontmatter || {};\n  }\n\n  extractInstanceClass(metadata: Record<string, any>): string | string[] | null {\n    return metadata.exo__Instance_class || null;\n  }\n\n  extractStatus(metadata: Record<string, any>): string | string[] | null {\n    return metadata.ems__Effort_status || null;\n  }\n\n  extractIsArchived(metadata: Record<string, any>): boolean {\n    const archived = metadata.exo__Asset_isArchived;\n    if (archived === true || archived === 1) return true;\n    if (typeof archived === \"string\") {\n      const lowerValue = archived.toLowerCase();\n      return lowerValue === \"true\" || lowerValue === \"yes\";\n    }\n    return false;\n  }\n\n  static extractIsDefinedBy(sourceMetadata: Record<string, any>): string {\n    let isDefinedBy = sourceMetadata.exo__Asset_isDefinedBy || '\"\"';\n    if (Array.isArray(isDefinedBy)) {\n      isDefinedBy = isDefinedBy[0] || '\"\"';\n    }\n    return isDefinedBy;\n  }\n\n  extractExpectedFolder(metadata: Record<string, any>): string | null {\n    const isDefinedBy = metadata.exo__Asset_isDefinedBy;\n    if (!isDefinedBy) return null;\n\n    const definedByValue = Array.isArray(isDefinedBy) ? isDefinedBy[0] : isDefinedBy;\n    if (!definedByValue || typeof definedByValue !== \"string\") return null;\n\n    const cleanValue = definedByValue.replace(/[\"'[\\]]/g, \"\").trim();\n    if (!cleanValue) return null;\n\n    const parts = cleanValue.split(\"/\");\n    parts.pop();\n    return parts.join(\"/\");\n  }\n\n  extractCommandVisibilityContext(file: TFile): CommandVisibilityContext {\n    const metadata = this.extractMetadata(file);\n    const instanceClass = this.extractInstanceClass(metadata);\n    const currentStatus = this.extractStatus(metadata);\n    const isArchived = this.extractIsArchived(metadata);\n    const currentFolder = file.parent?.path || \"\";\n    const expectedFolder = this.extractExpectedFolder(metadata);\n\n    return {\n      instanceClass,\n      currentStatus,\n      metadata,\n      isArchived,\n      currentFolder,\n      expectedFolder,\n    };\n  }\n\n  extractCache(file: TFile | null): CachedMetadata | null {\n    if (!file) return null;\n    return this.metadataCache.getFileCache(file);\n  }\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport { DateFormatter } from \"../utilities/DateFormatter\";\nimport { WikiLinkHelpers } from \"../utilities/WikiLinkHelpers\";\nimport { MetadataExtractor } from \"../utilities/MetadataExtractor\";\nimport { MetadataHelpers } from \"../utilities/MetadataHelpers\";\nimport { AssetClass } from '../domain/constants';\n\nconst EFFORT_PROPERTY_MAP: Record<string, string> = {\n  [AssetClass.AREA]: \"ems__Effort_area\",\n  [AssetClass.PROJECT]: \"ems__Effort_parent\",\n  [AssetClass.TASK_PROTOTYPE]: \"ems__Effort_prototype\",\n  [AssetClass.MEETING_PROTOTYPE]: \"ems__Effort_prototype\",\n};\n\nconst INSTANCE_CLASS_MAP: Record<string, string> = {\n  [AssetClass.AREA]: AssetClass.TASK,\n  [AssetClass.PROJECT]: AssetClass.TASK,\n  [AssetClass.TASK_PROTOTYPE]: AssetClass.TASK,\n  [AssetClass.MEETING_PROTOTYPE]: AssetClass.MEETING,\n};\n\nexport class TaskFrontmatterGenerator {\n  generateTaskFrontmatter(\n    sourceMetadata: Record<string, any>,\n    sourceName: string,\n    sourceClass: string,\n    label?: string,\n    uid?: string,\n    taskSize?: string | null,\n  ): Record<string, any> {\n    const now = new Date();\n    const timestamp = DateFormatter.toLocalTimestamp(now);\n\n    const isDefinedBy = MetadataExtractor.extractIsDefinedBy(sourceMetadata);\n\n    const cleanSourceClass = WikiLinkHelpers.normalize(sourceClass);\n    const effortProperty =\n      EFFORT_PROPERTY_MAP[cleanSourceClass] || \"ems__Effort_area\";\n    const instanceClass =\n      INSTANCE_CLASS_MAP[cleanSourceClass] || AssetClass.TASK;\n\n    const frontmatter: Record<string, any> = {};\n    frontmatter[\"exo__Asset_isDefinedBy\"] = MetadataHelpers.ensureQuoted(isDefinedBy);\n    frontmatter[\"exo__Asset_uid\"] = uid || uuidv4();\n    frontmatter[\"exo__Asset_createdAt\"] = timestamp;\n    frontmatter[\"exo__Instance_class\"] = [`\"[[${instanceClass}]]\"`];\n    frontmatter[\"ems__Effort_status\"] = '\"[[ems__EffortStatusDraft]]\"';\n    frontmatter[effortProperty] = `\"[[${sourceName}]]\"`;\n\n    let finalLabel = label;\n    if (instanceClass === AssetClass.MEETING && (!label || label.trim() === \"\")) {\n      const baseLabel = sourceMetadata.exo__Asset_label || sourceName;\n      const dateStr = DateFormatter.toDateString(now);\n      finalLabel = `${baseLabel} ${dateStr}`;\n    }\n\n    if (finalLabel && finalLabel.trim() !== \"\") {\n      const trimmedLabel = finalLabel.trim();\n      frontmatter[\"exo__Asset_label\"] = trimmedLabel;\n      frontmatter[\"aliases\"] = [trimmedLabel];\n    }\n\n    if (taskSize) {\n      frontmatter[\"ems__Task_size\"] = taskSize;\n    }\n\n    return frontmatter;\n  }\n\n  generateRelatedTaskFrontmatter(\n    sourceMetadata: Record<string, any>,\n    sourceName: string,\n    label?: string,\n    uid?: string,\n    taskSize?: string | null,\n  ): Record<string, any> {\n    const now = new Date();\n    const timestamp = DateFormatter.toLocalTimestamp(now);\n\n    const isDefinedBy = MetadataExtractor.extractIsDefinedBy(sourceMetadata);\n\n    const frontmatter: Record<string, any> = {};\n    frontmatter[\"exo__Asset_isDefinedBy\"] = MetadataHelpers.ensureQuoted(isDefinedBy);\n    frontmatter[\"exo__Asset_uid\"] = uid || uuidv4();\n    frontmatter[\"exo__Asset_createdAt\"] = timestamp;\n    frontmatter[\"exo__Instance_class\"] = [`\"[[${AssetClass.TASK}]]\"`];\n    frontmatter[\"ems__Effort_status\"] = '\"[[ems__EffortStatusDraft]]\"';\n    frontmatter[\"exo__Asset_relates\"] = [`\"[[${sourceName}]]\"`];\n\n    if (label && label.trim() !== \"\") {\n      const trimmedLabel = label.trim();\n      frontmatter[\"exo__Asset_label\"] = trimmedLabel;\n      frontmatter[\"aliases\"] = [trimmedLabel];\n    }\n\n    if (taskSize) {\n      frontmatter[\"ems__Task_size\"] = taskSize;\n    }\n\n    return frontmatter;\n  }\n}\n","export class AlgorithmExtractor {\n  extractH2Section(content: string, heading: string): string | null {\n    const lines = content.split(\"\\n\");\n    const targetHeading = `## ${heading}`;\n    let inSection = false;\n    const sectionContent: string[] = [];\n\n    for (const line of lines) {\n      if (line.trim() === targetHeading) {\n        inSection = true;\n        continue;\n      }\n\n      if (inSection) {\n        if (line.startsWith(\"## \") || line.startsWith(\"# \")) {\n          break;\n        }\n        sectionContent.push(line);\n      }\n    }\n\n    if (sectionContent.length === 0) {\n      return null;\n    }\n\n    const content_text = sectionContent.join(\"\\n\").trim();\n    return content_text || null;\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { WikiLinkHelpers } from \"../utilities/WikiLinkHelpers\";\nimport { MetadataHelpers } from \"../utilities/MetadataHelpers\";\nimport { AssetClass } from '../domain/constants';\nimport { TaskFrontmatterGenerator } from \"./TaskFrontmatterGenerator\";\nimport { AlgorithmExtractor } from \"./AlgorithmExtractor\";\n\nexport class TaskCreationService {\n  private frontmatterGenerator: TaskFrontmatterGenerator;\n  private algorithmExtractor: AlgorithmExtractor;\n\n  constructor(private vault: Vault) {\n    this.frontmatterGenerator = new TaskFrontmatterGenerator();\n    this.algorithmExtractor = new AlgorithmExtractor();\n  }\n\n  async createTask(\n    sourceFile: TFile,\n    sourceMetadata: Record<string, any>,\n    sourceClass: string,\n    label?: string,\n    taskSize?: string | null,\n  ): Promise<TFile> {\n    const uid = uuidv4();\n    const fileName = `${uid}.md`;\n    const frontmatter = this.frontmatterGenerator.generateTaskFrontmatter(\n      sourceMetadata,\n      sourceFile.basename,\n      sourceClass,\n      label,\n      uid,\n      taskSize,\n    );\n\n    let bodyContent = \"\";\n    const cleanSourceClass = WikiLinkHelpers.normalize(sourceClass);\n    if (cleanSourceClass === AssetClass.TASK_PROTOTYPE) {\n      const prototypeContent = await this.vault.read(sourceFile);\n      const algorithmSection = this.algorithmExtractor.extractH2Section(\n        prototypeContent,\n        \"Algorithm\",\n      );\n      if (algorithmSection) {\n        bodyContent = `## Algorithm\\n\\n${algorithmSection}`;\n      }\n    }\n\n    const fileContent = MetadataHelpers.buildFileContent(frontmatter, bodyContent);\n\n    const folderPath = sourceFile.parent?.path || \"\";\n    const filePath = folderPath ? `${folderPath}/${fileName}` : fileName;\n\n    const createdFile = await this.vault.create(filePath, fileContent);\n\n    return createdFile;\n  }\n\n  async createRelatedTask(\n    sourceFile: TFile,\n    sourceMetadata: Record<string, any>,\n    label?: string,\n    taskSize?: string | null,\n  ): Promise<TFile> {\n    const uid = uuidv4();\n    const fileName = `${uid}.md`;\n\n    const frontmatter = this.frontmatterGenerator.generateRelatedTaskFrontmatter(\n      sourceMetadata,\n      sourceFile.basename,\n      label,\n      uid,\n      taskSize,\n    );\n\n    const fileContent = MetadataHelpers.buildFileContent(frontmatter);\n\n    const folderPath = sourceFile.parent?.path || \"\";\n    const filePath = folderPath ? `${folderPath}/${fileName}` : fileName;\n\n    const createdFile = await this.vault.create(filePath, fileContent);\n\n    await this.addRelationToSourceFile(sourceFile, uid);\n\n    return createdFile;\n  }\n\n  generateTaskFrontmatter(\n    sourceMetadata: Record<string, any>,\n    sourceName: string,\n    sourceClass: string,\n    label?: string,\n    uid?: string,\n    taskSize?: string | null,\n  ): Record<string, any> {\n    return this.frontmatterGenerator.generateTaskFrontmatter(\n      sourceMetadata,\n      sourceName,\n      sourceClass,\n      label,\n      uid,\n      taskSize,\n    );\n  }\n\n  // Used only by unit tests via (service as any).generateRelatedTaskFrontmatter\n  private generateRelatedTaskFrontmatter(\n    sourceMetadata: Record<string, any>,\n    sourceName: string,\n    label?: string,\n    uid?: string,\n    taskSize?: string | null,\n  ): Record<string, any> {\n    return this.frontmatterGenerator.generateRelatedTaskFrontmatter(\n      sourceMetadata,\n      sourceName,\n      label,\n      uid,\n      taskSize,\n    );\n  }\n\n  // Used only by unit tests via (service as any).extractH2Section\n  private extractH2Section(content: string, heading: string): string | null {\n    return this.algorithmExtractor.extractH2Section(content, heading);\n  }\n\n  private async addRelationToSourceFile(\n    sourceFile: TFile,\n    newTaskUid: string,\n  ): Promise<void> {\n    const content = await this.vault.read(sourceFile);\n    const updatedContent = this.addRelationToFrontmatter(content, newTaskUid);\n    await this.vault.modify(sourceFile, updatedContent);\n  }\n\n  private addRelationToFrontmatter(\n    content: string,\n    relatedTaskUid: string,\n  ): string {\n    const frontmatterRegex = /^---\\r?\\n([\\s\\S]*?)\\r?\\n---/;\n    const match = content.match(frontmatterRegex);\n\n    const lineEnding = content.includes('\\r\\n') ? '\\r\\n' : '\\n';\n\n    if (!match) {\n      const newFrontmatter = `---${lineEnding}exo__Asset_relates:${lineEnding}  - \"[[${relatedTaskUid}]]\"${lineEnding}---${lineEnding}${content}`;\n      return newFrontmatter;\n    }\n\n    const frontmatterContent = match[1];\n    let updatedFrontmatter = frontmatterContent;\n\n    if (updatedFrontmatter.includes(\"exo__Asset_relates:\")) {\n      const relatesMatch = updatedFrontmatter.match(/exo__Asset_relates:\\r?\\n((?: {2}- .*\\r?\\n)*)/);\n      if (relatesMatch) {\n        const existingItems = relatesMatch[1];\n        const newItem = `  - \"[[${relatedTaskUid}]]\"${lineEnding}`;\n        updatedFrontmatter = updatedFrontmatter.replace(\n          /exo__Asset_relates:\\r?\\n((?: {2}- .*\\r?\\n)*)/,\n          `exo__Asset_relates:${lineEnding}${existingItems}${newItem}`,\n        );\n      }\n    } else {\n      updatedFrontmatter += `${lineEnding}exo__Asset_relates:${lineEnding}  - \"[[${relatedTaskUid}]]\"`;\n    }\n\n    return content.replace(\n      frontmatterRegex,\n      `---${lineEnding}${updatedFrontmatter}${lineEnding}---`,\n    );\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { WikiLinkHelpers } from \"../utilities/WikiLinkHelpers\";\nimport { AssetClass } from '../domain/constants';\nimport { DateFormatter } from \"../utilities/DateFormatter\";\nimport { MetadataExtractor } from \"../utilities/MetadataExtractor\";\nimport { MetadataHelpers } from \"../utilities/MetadataHelpers\";\n\n/**\n * Mapping of source class to effort property name\n * Implements Strategy pattern for property selection\n */\nconst EFFORT_PROPERTY_MAP: Record<string, string> = {\n  [AssetClass.AREA]: \"ems__Effort_area\",\n  [AssetClass.INITIATIVE]: \"ems__Effort_parent\",\n  [AssetClass.PROJECT]: \"ems__Effort_parent\",\n};\n\nexport class ProjectCreationService {\n  constructor(private vault: Vault) {}\n\n  async createProject(\n    sourceFile: TFile,\n    sourceMetadata: Record<string, any>,\n    sourceClass: string,\n    label?: string,\n  ): Promise<TFile> {\n    const uid = uuidv4();\n    const fileName = `${uid}.md`;\n    const frontmatter = this.generateProjectFrontmatter(\n      sourceMetadata,\n      sourceFile.basename,\n      sourceClass,\n      label,\n      uid,\n    );\n    const fileContent = MetadataHelpers.buildFileContent(frontmatter);\n\n    const folderPath = sourceFile.parent?.path || \"\";\n    const filePath = folderPath ? `${folderPath}/${fileName}` : fileName;\n\n    const createdFile = await this.vault.create(filePath, fileContent);\n\n    return createdFile;\n  }\n\n  generateProjectFrontmatter(\n    sourceMetadata: Record<string, any>,\n    sourceName: string,\n    sourceClass: string,\n    label?: string,\n    uid?: string,\n  ): Record<string, any> {\n    const now = new Date();\n    const timestamp = DateFormatter.toLocalTimestamp(now);\n\n    const isDefinedBy = MetadataExtractor.extractIsDefinedBy(sourceMetadata);\n\n    // Get appropriate effort property name based on source class\n    const cleanSourceClass = WikiLinkHelpers.normalize(sourceClass);\n    const effortProperty =\n      EFFORT_PROPERTY_MAP[cleanSourceClass] || \"ems__Effort_area\";\n\n    const frontmatter: Record<string, any> = {};\n    frontmatter[\"exo__Asset_isDefinedBy\"] = MetadataHelpers.ensureQuoted(isDefinedBy);\n    frontmatter[\"exo__Asset_uid\"] = uid || uuidv4();\n    frontmatter[\"exo__Asset_createdAt\"] = timestamp;\n    frontmatter[\"exo__Instance_class\"] = [`\"[[${AssetClass.PROJECT}]]\"`];\n    frontmatter[\"ems__Effort_status\"] = '\"[[ems__EffortStatusDraft]]\"';\n    frontmatter[effortProperty] = `\"[[${sourceName}]]\"`;\n\n    if (label && label.trim() !== \"\") {\n      const trimmedLabel = label.trim();\n      frontmatter[\"exo__Asset_label\"] = trimmedLabel;\n      frontmatter[\"aliases\"] = [trimmedLabel];\n    }\n\n    return frontmatter;\n  }\n}\n","/**\n * FrontmatterService\n *\n * Centralized service for YAML frontmatter manipulation in Markdown files.\n * Follows DRY principle by eliminating duplication across 15+ locations.\n *\n * @module infrastructure/services\n * @since 1.0.0\n */\n\n/**\n * Result of frontmatter parsing operation\n */\nexport interface FrontmatterParseResult {\n  /** Whether frontmatter block exists */\n  exists: boolean;\n  /** Parsed frontmatter content (without --- delimiters) */\n  content: string;\n  /** Original full file content */\n  originalContent: string;\n}\n\n/**\n * Service for manipulating YAML frontmatter in Markdown files.\n *\n * Handles common operations like:\n * - Adding/updating/removing properties\n * - Creating frontmatter blocks when missing\n * - Preserving existing properties\n * - Maintaining YAML formatting\n *\n * @example\n * ```typescript\n * const service = new FrontmatterService();\n *\n * // Update existing property\n * const updated = service.updateProperty(\n *   content,\n *   'status',\n *   '\"[[StatusDone]]\"'\n * );\n *\n * // Add new property\n * const withNew = service.addProperty(content, 'priority', 'high');\n *\n * // Remove property\n * const removed = service.removeProperty(content, 'archived');\n * ```\n */\nexport class FrontmatterService {\n  /**\n   * Regex pattern for matching YAML frontmatter blocks.\n   * Matches: ---\\n[content]\\n---\n   */\n  private static readonly FRONTMATTER_REGEX = /^---\\n([\\s\\S]*?)\\n---/;\n\n  /**\n   * Parse frontmatter from markdown content.\n   *\n   * @param content - Full markdown file content\n   * @returns Parse result with existence flag and content\n   *\n   * @example\n   * ```typescript\n   * const result = service.parse('---\\nfoo: bar\\n---\\nBody');\n   * // result.exists === true\n   * // result.content === 'foo: bar'\n   * ```\n   */\n  parse(content: string): FrontmatterParseResult {\n    const match = content.match(FrontmatterService.FRONTMATTER_REGEX);\n\n    if (!match) {\n      return {\n        exists: false,\n        content: \"\",\n        originalContent: content,\n      };\n    }\n\n    return {\n      exists: true,\n      content: match[1],\n      originalContent: content,\n    };\n  }\n\n  /**\n   * Update or add a property in frontmatter.\n   *\n   * - If frontmatter exists and has the property: updates value\n   * - If frontmatter exists but lacks property: adds property\n   * - If no frontmatter exists: creates frontmatter with property\n   *\n   * @param content - Full markdown file content\n   * @param property - Property name (e.g., 'status', 'ems__Effort_status')\n   * @param value - Property value (e.g., '\"[[StatusDone]]\"', 'true', '42')\n   * @returns Updated content with modified frontmatter\n   *\n   * @example\n   * ```typescript\n   * // Update existing\n   * const result1 = service.updateProperty(\n   *   '---\\nstatus: draft\\n---\\nBody',\n   *   'status',\n   *   'published'\n   * );\n   * // result1 === '---\\nstatus: published\\n---\\nBody'\n   *\n   * // Add new property\n   * const result2 = service.updateProperty(\n   *   '---\\nfoo: bar\\n---\\nBody',\n   *   'status',\n   *   'draft'\n   * );\n   * // result2 === '---\\nfoo: bar\\nstatus: draft\\n---\\nBody'\n   *\n   * // Create frontmatter if missing\n   * const result3 = service.updateProperty(\n   *   'Body content',\n   *   'status',\n   *   'draft'\n   * );\n   * // result3 === '---\\nstatus: draft\\n---\\nBody content'\n   * ```\n   */\n  updateProperty(content: string, property: string, value: any): string {\n    const parsed = this.parse(content);\n\n    // No frontmatter exists - create new block\n    if (!parsed.exists) {\n      return this.createFrontmatter(content, { [property]: value });\n    }\n\n    // Frontmatter exists - update or add property\n    let updatedFrontmatter = parsed.content;\n\n    // Property already exists - replace value\n    if (this.hasProperty(updatedFrontmatter, property)) {\n      const propertyRegex = new RegExp(`${this.escapeRegex(property)}:.*$`, \"m\");\n      updatedFrontmatter = updatedFrontmatter.replace(\n        propertyRegex,\n        `${property}: ${value}`,\n      );\n    } else {\n      // Property doesn't exist - append to frontmatter\n      // Add newline separator only if frontmatter is not empty\n      const separator = updatedFrontmatter.length > 0 ? \"\\n\" : \"\";\n      updatedFrontmatter += `${separator}${property}: ${value}`;\n    }\n\n    // Replace frontmatter block in original content\n    return content.replace(\n      FrontmatterService.FRONTMATTER_REGEX,\n      `---\\n${updatedFrontmatter}\\n---`,\n    );\n  }\n\n  /**\n   * Add a new property to frontmatter (alias for updateProperty).\n   *\n   * Convenience method with clearer semantics for adding new properties.\n   *\n   * @param content - Full markdown file content\n   * @param property - Property name\n   * @param value - Property value\n   * @returns Updated content\n   */\n  addProperty(content: string, property: string, value: any): string {\n    return this.updateProperty(content, property, value);\n  }\n\n  /**\n   * Remove a property from frontmatter.\n   *\n   * - If property exists: removes the line\n   * - If property doesn't exist: returns content unchanged\n   * - If no frontmatter exists: returns content unchanged\n   *\n   * @param content - Full markdown file content\n   * @param property - Property name to remove\n   * @returns Updated content with property removed\n   *\n   * @example\n   * ```typescript\n   * const result = service.removeProperty(\n   *   '---\\nfoo: bar\\nstatus: draft\\n---\\nBody',\n   *   'status'\n   * );\n   * // result === '---\\nfoo: bar\\n---\\nBody'\n   * ```\n   */\n  removeProperty(content: string, property: string): string {\n    const parsed = this.parse(content);\n\n    // No frontmatter or property doesn't exist - return unchanged\n    if (!parsed.exists || !this.hasProperty(parsed.content, property)) {\n      return content;\n    }\n\n    // Remove property line (including trailing newline if present)\n    const propertyLineRegex = new RegExp(\n      `\\n?${this.escapeRegex(property)}:.*$`,\n      \"m\",\n    );\n    const updatedFrontmatter = parsed.content.replace(propertyLineRegex, \"\");\n\n    // Replace frontmatter block in original content\n    return content.replace(\n      FrontmatterService.FRONTMATTER_REGEX,\n      `---\\n${updatedFrontmatter}\\n---`,\n    );\n  }\n\n  /**\n   * Check if frontmatter contains a specific property.\n   *\n   * @param frontmatterContent - Frontmatter content (without --- delimiters)\n   * @param property - Property name to check\n   * @returns True if property exists\n   *\n   * @example\n   * ```typescript\n   * const hasStatus = service.hasProperty('foo: bar\\nstatus: draft', 'status');\n   * // hasStatus === true\n   * ```\n   */\n  hasProperty(frontmatterContent: string, property: string): boolean {\n    return frontmatterContent.includes(`${property}:`);\n  }\n\n  /**\n   * Create new frontmatter block with given properties.\n   *\n   * @param content - Original markdown content (without frontmatter)\n   * @param properties - Object with property-value pairs\n   * @returns Content with new frontmatter prepended\n   *\n   * @example\n   * ```typescript\n   * const result = service.createFrontmatter(\n   *   'Body content',\n   *   { status: 'draft', priority: 'high' }\n   * );\n   * // result === '---\\nstatus: draft\\npriority: high\\n---\\nBody content'\n   * ```\n   */\n  createFrontmatter(\n    content: string,\n    properties: Record<string, any>,\n  ): string {\n    const frontmatterLines = Object.entries(properties).map(\n      ([key, value]) => `${key}: ${value}`,\n    );\n\n    const frontmatterBlock = `---\\n${frontmatterLines.join(\"\\n\")}\\n---`;\n\n    // Preserve leading newline if original content starts with one\n    const separator = content.startsWith(\"\\n\") ? \"\" : \"\\n\";\n    return `${frontmatterBlock}${separator}${content}`;\n  }\n\n  /**\n   * Get property value from frontmatter content.\n   *\n   * @param frontmatterContent - Frontmatter content (without --- delimiters)\n   * @param property - Property name\n   * @returns Property value or null if not found\n   *\n   * @example\n   * ```typescript\n   * const value = service.getPropertyValue(\n   *   'foo: bar\\nstatus: draft',\n   *   'status'\n   * );\n   * // value === 'draft'\n   * ```\n   */\n  getPropertyValue(\n    frontmatterContent: string,\n    property: string,\n  ): string | null {\n    const propertyRegex = new RegExp(\n      `${this.escapeRegex(property)}:\\\\s*(.*)$`,\n      \"m\",\n    );\n    const match = frontmatterContent.match(propertyRegex);\n    return match ? match[1].trim() : null;\n  }\n\n  /**\n   * Escape special regex characters in property names.\n   *\n   * Handles property names with special characters like dots, underscores, etc.\n   *\n   * @param str - String to escape\n   * @returns Escaped string safe for use in RegExp\n   * @private\n   */\n  private escapeRegex(str: string): string {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n}\n","import { AssetClass, EffortStatus } from '../domain/constants';\n\nexport class EffortStatusWorkflow {\n  getPreviousStatus(\n    currentStatus: string,\n    instanceClass: string | string[] | null,\n  ): string | null | undefined {\n    const normalizedStatus = this.normalizeStatus(currentStatus);\n\n    if (normalizedStatus === EffortStatus.DRAFT) {\n      return null;\n    }\n\n    if (normalizedStatus === EffortStatus.BACKLOG) {\n      return this.wrapStatus(EffortStatus.DRAFT);\n    }\n\n    if (normalizedStatus === EffortStatus.ANALYSIS) {\n      return this.wrapStatus(EffortStatus.BACKLOG);\n    }\n\n    if (normalizedStatus === EffortStatus.TODO) {\n      return this.wrapStatus(EffortStatus.ANALYSIS);\n    }\n\n    if (normalizedStatus === EffortStatus.DOING) {\n      const isProject = this.hasInstanceClass(instanceClass, AssetClass.PROJECT);\n      return isProject\n        ? this.wrapStatus(EffortStatus.TODO)\n        : this.wrapStatus(EffortStatus.BACKLOG);\n    }\n\n    if (normalizedStatus === EffortStatus.DONE) {\n      return this.wrapStatus(EffortStatus.DOING);\n    }\n\n    return undefined;\n  }\n\n  normalizeStatus(status: string): string {\n    return status.replace(/[\"'[\\]]/g, \"\").trim();\n  }\n\n  wrapStatus(status: string): string {\n    return `\"[[${status}]]\"`;\n  }\n\n  private hasInstanceClass(\n    instanceClass: string | string[] | null,\n    targetClass: AssetClass,\n  ): boolean {\n    if (!instanceClass) return false;\n\n    const classes = Array.isArray(instanceClass)\n      ? instanceClass\n      : [instanceClass];\n    return classes.some(\n      (cls) => cls.replace(/[\"'[\\]]/g, \"\").trim() === targetClass,\n    );\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\nimport { FrontmatterService } from \"./FrontmatterService\";\nimport { DateFormatter } from \"../utilities/DateFormatter\";\n\nexport class StatusTimestampService {\n  private frontmatterService: FrontmatterService;\n\n  constructor(private vault: Vault) {\n    this.frontmatterService = new FrontmatterService();\n  }\n\n  async addStartTimestamp(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const timestamp = DateFormatter.toLocalTimestamp(new Date());\n\n    const updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_startTimestamp\",\n      timestamp,\n    );\n\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async addEndTimestamp(taskFile: TFile, date?: Date): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const targetDate = date || new Date();\n    const timestamp = DateFormatter.toLocalTimestamp(targetDate);\n\n    const updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_endTimestamp\",\n      timestamp,\n    );\n\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async addResolutionTimestamp(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const timestamp = DateFormatter.toLocalTimestamp(new Date());\n\n    const updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_resolutionTimestamp\",\n      timestamp,\n    );\n\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async addEndAndResolutionTimestamps(\n    taskFile: TFile,\n    date?: Date,\n  ): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const targetDate = date || new Date();\n    const timestamp = DateFormatter.toLocalTimestamp(targetDate);\n\n    let updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_endTimestamp\",\n      timestamp,\n    );\n    updated = this.frontmatterService.updateProperty(\n      updated,\n      \"ems__Effort_resolutionTimestamp\",\n      timestamp,\n    );\n\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async removeStartTimestamp(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const updated = this.frontmatterService.removeProperty(\n      content,\n      \"ems__Effort_startTimestamp\",\n    );\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async removeEndTimestamp(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const updated = this.frontmatterService.removeProperty(\n      content,\n      \"ems__Effort_endTimestamp\",\n    );\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async removeResolutionTimestamp(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const updated = this.frontmatterService.removeProperty(\n      content,\n      \"ems__Effort_resolutionTimestamp\",\n    );\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async removeEndAndResolutionTimestamps(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    let updated = this.frontmatterService.removeProperty(\n      content,\n      \"ems__Effort_endTimestamp\",\n    );\n    updated = this.frontmatterService.removeProperty(\n      updated,\n      \"ems__Effort_resolutionTimestamp\",\n    );\n    await this.vault.modify(taskFile, updated);\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\nimport { FrontmatterService } from \"./FrontmatterService\";\nimport { DateFormatter } from \"../utilities/DateFormatter\";\nimport { EffortStatusWorkflow } from \"./EffortStatusWorkflow\";\nimport { StatusTimestampService } from \"./StatusTimestampService\";\n\nexport class TaskStatusService {\n  private frontmatterService: FrontmatterService;\n  private workflow: EffortStatusWorkflow;\n  private timestampService: StatusTimestampService;\n\n  constructor(private vault: Vault) {\n    this.frontmatterService = new FrontmatterService();\n    this.workflow = new EffortStatusWorkflow();\n    this.timestampService = new StatusTimestampService(vault);\n  }\n\n  async setDraftStatus(taskFile: TFile): Promise<void> {\n    await this.updateStatus(taskFile, \"ems__EffortStatusDraft\");\n  }\n\n  async moveToBacklog(taskFile: TFile): Promise<void> {\n    await this.updateStatus(taskFile, \"ems__EffortStatusBacklog\");\n  }\n\n  async moveToAnalysis(projectFile: TFile): Promise<void> {\n    await this.updateStatus(projectFile, \"ems__EffortStatusAnalysis\");\n  }\n\n  async moveToToDo(projectFile: TFile): Promise<void> {\n    await this.updateStatus(projectFile, \"ems__EffortStatusToDo\");\n  }\n\n  async startEffort(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const timestamp = DateFormatter.toLocalTimestamp(new Date());\n\n    let updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_status\",\n      '\"[[ems__EffortStatusDoing]]\"',\n    );\n    updated = this.frontmatterService.updateProperty(\n      updated,\n      \"ems__Effort_startTimestamp\",\n      timestamp,\n    );\n\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async markTaskAsDone(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const timestamp = DateFormatter.toLocalTimestamp(new Date());\n\n    let updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_status\",\n      '\"[[ems__EffortStatusDone]]\"',\n    );\n    updated = this.frontmatterService.updateProperty(\n      updated,\n      \"ems__Effort_endTimestamp\",\n      timestamp,\n    );\n    updated = this.frontmatterService.updateProperty(\n      updated,\n      \"ems__Effort_resolutionTimestamp\",\n      timestamp,\n    );\n\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async syncEffortEndTimestamp(\n    taskFile: TFile,\n    date?: Date,\n  ): Promise<void> {\n    await this.timestampService.addEndAndResolutionTimestamps(taskFile, date);\n  }\n\n  async trashEffort(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const timestamp = DateFormatter.toLocalTimestamp(new Date());\n\n    let updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_status\",\n      '\"[[ems__EffortStatusTrashed]]\"',\n    );\n    updated = this.frontmatterService.updateProperty(\n      updated,\n      \"ems__Effort_resolutionTimestamp\",\n      timestamp,\n    );\n\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async archiveTask(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const updated = this.frontmatterService.updateProperty(\n      content,\n      \"archived\",\n      \"true\",\n    );\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async planOnToday(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const todayWikilink = DateFormatter.getTodayWikilink();\n    const updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_day\",\n      todayWikilink,\n    );\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async planForEvening(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const evening = new Date();\n    evening.setHours(19, 0, 0, 0);\n    const eveningTimestamp = DateFormatter.toLocalTimestamp(evening);\n\n    const updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_plannedStartTimestamp\",\n      eveningTimestamp,\n    );\n    await this.vault.modify(taskFile, updated);\n  }\n\n  async shiftDayBackward(taskFile: TFile): Promise<void> {\n    await this.shiftDay(taskFile, -1);\n  }\n\n  async shiftDayForward(taskFile: TFile): Promise<void> {\n    await this.shiftDay(taskFile, 1);\n  }\n\n  async rollbackStatus(taskFile: TFile): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const currentStatus = this.extractCurrentStatus(content);\n    const instanceClass = this.extractInstanceClass(content);\n\n    if (!currentStatus) {\n      throw new Error(\"No current status to rollback from\");\n    }\n\n    const previousStatus = this.workflow.getPreviousStatus(\n      currentStatus,\n      instanceClass,\n    );\n\n    if (previousStatus === undefined) {\n      throw new Error(\"Cannot rollback from current status\");\n    }\n\n    let updated = content;\n\n    if (previousStatus === null) {\n      updated = this.frontmatterService.removeProperty(\n        updated,\n        \"ems__Effort_status\",\n      );\n    } else {\n      updated = this.frontmatterService.updateProperty(\n        updated,\n        \"ems__Effort_status\",\n        previousStatus,\n      );\n    }\n\n    const normalizedStatus = this.workflow.normalizeStatus(currentStatus);\n\n    if (normalizedStatus === \"ems__EffortStatusDone\") {\n      updated = this.frontmatterService.removeProperty(\n        updated,\n        \"ems__Effort_endTimestamp\",\n      );\n      updated = this.frontmatterService.removeProperty(\n        updated,\n        \"ems__Effort_resolutionTimestamp\",\n      );\n    } else if (normalizedStatus === \"ems__EffortStatusDoing\") {\n      updated = this.frontmatterService.removeProperty(\n        updated,\n        \"ems__Effort_startTimestamp\",\n      );\n    }\n\n    await this.vault.modify(taskFile, updated);\n  }\n\n  private async updateStatus(\n    taskFile: TFile,\n    statusValue: string,\n  ): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_status\",\n      `\"[[${statusValue}]]\"`,\n    );\n    await this.vault.modify(taskFile, updated);\n  }\n\n  private async shiftDay(taskFile: TFile, days: number): Promise<void> {\n    const content = await this.vault.read(taskFile);\n    const currentEffortDay = this.extractEffortDay(content);\n\n    if (!currentEffortDay) {\n      throw new Error(\"ems__Effort_day property not found\");\n    }\n\n    const currentDate = this.parseDateFromWikilink(currentEffortDay);\n\n    if (!currentDate) {\n      throw new Error(\"Invalid date format in ems__Effort_day\");\n    }\n\n    const newDate = DateFormatter.addDays(currentDate, days);\n    const newWikilink = DateFormatter.toDateWikilink(newDate);\n\n    const updated = this.frontmatterService.updateProperty(\n      content,\n      \"ems__Effort_day\",\n      newWikilink,\n    );\n    await this.vault.modify(taskFile, updated);\n  }\n\n  private parseDateFromWikilink(wikilink: string): Date | null {\n    const cleanValue = wikilink.replace(/[\"'[\\]]/g, \"\").trim();\n    const date = new Date(cleanValue);\n\n    if (isNaN(date.getTime())) {\n      return null;\n    }\n\n    return date;\n  }\n\n  private extractEffortDay(content: string): string | null {\n    const parsed = this.frontmatterService.parse(content);\n    if (!parsed.exists) return null;\n\n    return this.frontmatterService.getPropertyValue(\n      parsed.content,\n      \"ems__Effort_day\",\n    );\n  }\n\n  private extractCurrentStatus(content: string): string | null {\n    const parsed = this.frontmatterService.parse(content);\n    if (!parsed.exists) return null;\n\n    return this.frontmatterService.getPropertyValue(\n      parsed.content,\n      \"ems__Effort_status\",\n    );\n  }\n\n  private extractInstanceClass(content: string): string | string[] | null {\n    const parsed = this.frontmatterService.parse(content);\n    if (!parsed.exists) return null;\n\n    const arrayMatch = parsed.content.match(\n      /exo__Instance_class:\\s*\\n((?:\\s*-\\s*.*\\n?)+)/,\n    );\n\n    if (arrayMatch) {\n      const lines = arrayMatch[1].split(\"\\n\").filter(l => l.trim());\n      return lines.map((line) => line.replace(/^\\s*-\\s*/, \"\").trim());\n    }\n\n    return this.frontmatterService.getPropertyValue(\n      parsed.content,\n      \"exo__Instance_class\",\n    );\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { AssetClass } from '../domain/constants';\nimport { DateFormatter } from \"../utilities/DateFormatter\";\nimport { MetadataExtractor } from \"../utilities/MetadataExtractor\";\nimport { MetadataHelpers } from \"../utilities/MetadataHelpers\";\n\nexport class AreaCreationService {\n  constructor(private vault: Vault) {}\n\n  async createChildArea(\n    sourceFile: TFile,\n    sourceMetadata: Record<string, any>,\n    label?: string,\n  ): Promise<TFile> {\n    const uid = uuidv4();\n    const fileName = `${uid}.md`;\n    const frontmatter = this.generateChildAreaFrontmatter(\n      sourceMetadata,\n      sourceFile.basename,\n      label,\n      uid,\n    );\n    const fileContent = MetadataHelpers.buildFileContent(frontmatter);\n\n    const folderPath = sourceFile.parent?.path || \"\";\n    const filePath = folderPath ? `${folderPath}/${fileName}` : fileName;\n\n    const createdFile = await this.vault.create(filePath, fileContent);\n\n    return createdFile;\n  }\n\n  generateChildAreaFrontmatter(\n    sourceMetadata: Record<string, any>,\n    sourceName: string,\n    label?: string,\n    uid?: string,\n  ): Record<string, any> {\n    const now = new Date();\n    const timestamp = DateFormatter.toLocalTimestamp(now);\n\n    const isDefinedBy = MetadataExtractor.extractIsDefinedBy(sourceMetadata);\n\n    const frontmatter: Record<string, any> = {};\n    frontmatter[\"exo__Asset_isDefinedBy\"] = MetadataHelpers.ensureQuoted(isDefinedBy);\n    frontmatter[\"exo__Asset_uid\"] = uid || uuidv4();\n    frontmatter[\"exo__Asset_createdAt\"] = timestamp;\n    frontmatter[\"exo__Instance_class\"] = [`\"[[${AssetClass.AREA}]]\"`];\n    frontmatter[\"ems__Area_parent\"] = `\"[[${sourceName}]]\"`;\n\n    if (label && label.trim() !== \"\") {\n      const trimmedLabel = label.trim();\n      frontmatter[\"exo__Asset_label\"] = trimmedLabel;\n      frontmatter[\"aliases\"] = [trimmedLabel];\n    }\n\n    return frontmatter;\n  }\n}\n","// Add Obsidian-specific methods to HTMLElement globally\ndeclare global {\n  interface HTMLElement {\n    createEl?: (tag: string, options?: any) => HTMLElement;\n    createDiv?: (options?: any) => HTMLElement;\n    createSpan?: (options?: any) => HTMLElement;\n    empty?: () => void;\n    addClass?: (cls: string) => void;\n    removeClass?: (cls: string) => void;\n    hasClass?: (cls: string) => boolean;\n  }\n}\n\n// Setup DOM extensions\nif (typeof document !== \"undefined\") {\n  const proto = HTMLElement.prototype as any;\n  if (!proto.createEl) {\n    proto.createEl = function (tag: string, options?: any) {\n      const el = document.createElement(tag);\n      if (options?.text) el.textContent = options.text;\n      if (options?.cls) el.className = options.cls;\n      if (options?.attr) {\n        for (const [key, value] of Object.entries(options.attr)) {\n          el.setAttribute(key, String(value));\n        }\n      }\n      this.appendChild(el);\n      return el;\n    };\n  }\n  if (!proto.createDiv) {\n    proto.createDiv = function (options?: any) {\n      const el = document.createElement(\"div\");\n      if (options?.cls) el.className = options.cls;\n      if (options?.text) el.textContent = options.text;\n      this.appendChild(el);\n      return el;\n    };\n  }\n  if (!proto.createSpan) {\n    proto.createSpan = function (options?: any) {\n      const el = document.createElement(\"span\");\n      if (options?.cls) el.className = options.cls;\n      if (options?.text) el.textContent = options.text;\n      if (options?.attr) {\n        for (const [key, value] of Object.entries(options.attr)) {\n          el.setAttribute(key, String(value));\n        }\n      }\n      this.appendChild(el);\n      return el;\n    };\n  }\n  if (!proto.empty) {\n    proto.empty = function () {\n      while (this.firstChild) {\n        this.removeChild(this.firstChild);\n      }\n    };\n  }\n  if (!proto.addClass) {\n    proto.addClass = function (cls: string) {\n      this.classList.add(cls);\n    };\n  }\n  if (!proto.removeClass) {\n    proto.removeClass = function (cls: string) {\n      this.classList.remove(cls);\n    };\n  }\n  if (!proto.hasClass) {\n    proto.hasClass = function (cls: string) {\n      return this.classList.contains(cls);\n    };\n  }\n}\n\nexport class Plugin {\n  app: App;\n  manifest: any;\n\n  constructor(app: App, manifest: any) {\n    this.app = app;\n    this.manifest = manifest;\n  }\n\n  async loadData(): Promise<any> {\n    return {};\n  }\n\n  async saveData(data: any): Promise<void> {}\n\n  addCommand(command: any): void {}\n\n  addRibbonIcon(\n    icon: string,\n    title: string,\n    callback: (evt: MouseEvent) => void,\n  ): HTMLElement {\n    const el = document.createElement(\"div\");\n    el.addClass = jest.fn();\n    return el;\n  }\n\n  addSettingTab(settingTab: any): void {}\n\n  registerEvent(event: any): void {}\n\n  registerInterval(interval: number): number {\n    return interval;\n  }\n\n  registerMarkdownCodeBlockProcessor(\n    language: string,\n    handler: Function,\n  ): void {\n    // Mock implementation for SPARQL processor registration\n    // Store the handler for potential testing\n    (this as any).codeBlockProcessor = handler;\n  }\n\n  registerMarkdownPostProcessor(processor: Function): void {\n    (this as any).markdownPostProcessor = processor;\n  }\n\n  registerView(type: string, viewCreator: Function): void {\n    (this as any).registeredViews = (this as any).registeredViews || {};\n    (this as any).registeredViews[type] = viewCreator;\n  }\n\n  addStatusBarItem(): HTMLElement {\n    return document.createElement(\"div\");\n  }\n\n  async onload(): Promise<void> {\n    // Override in actual plugin\n  }\n\n  async onunload(): Promise<void> {\n    // Override in actual plugin\n  }\n}\n\nexport class Modal {\n  app: App;\n  contentEl: HTMLElement;\n  modalEl: HTMLElement;\n  private backdrop?: HTMLElement;\n\n  constructor(app: App) {\n    this.app = app;\n    this.contentEl = document.createElement(\"div\");\n    this.modalEl = document.createElement(\"div\");\n\n    // Set up Obsidian-style DOM methods on modalEl\n    this.setupObsidianMethods(this.contentEl);\n    this.setupObsidianMethods(this.modalEl);\n  }\n\n  private setupObsidianMethods(el: HTMLElement): void {\n    if (!el.addClass) {\n      (el as any).addClass = function (cls: string) {\n        this.classList.add(cls);\n      };\n    }\n    if (!el.removeClass) {\n      (el as any).removeClass = function (cls: string) {\n        this.classList.remove(cls);\n      };\n    }\n    if (!el.hasClass) {\n      (el as any).hasClass = function (cls: string) {\n        return this.classList.contains(cls);\n      };\n    }\n    if (!el.createEl) {\n      (el as any).createEl = function (tag: string, options?: any) {\n        const element = document.createElement(tag);\n        if (options?.text) element.textContent = options.text;\n        if (options?.cls) element.className = options.cls;\n        if (options?.attr) {\n          for (const [key, value] of Object.entries(options.attr)) {\n            element.setAttribute(key, String(value));\n          }\n        }\n        this.appendChild(element);\n        return element;\n      };\n    }\n    if (!el.empty) {\n      (el as any).empty = function () {\n        while (this.firstChild) {\n          this.removeChild(this.firstChild);\n        }\n      };\n    }\n  }\n\n  open(): void {\n    // Create backdrop and add modal to DOM\n    this.backdrop = document.createElement(\"div\");\n    this.backdrop.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: rgba(0, 0, 0, 0.5);\n      z-index: 1000;\n      display: flex;\n      align-items: flex-end;\n      justify-content: center;\n      transition: opacity 0.3s ease;\n    `;\n    document.body.appendChild(this.backdrop);\n    this.backdrop.appendChild(this.modalEl);\n    this.onOpen();\n  }\n\n  close(): void {\n    this.onClose();\n    if (this.backdrop) {\n      document.body.removeChild(this.backdrop);\n      this.backdrop = undefined;\n    }\n  }\n\n  onOpen(): void {}\n  onClose(): void {}\n}\n\nexport class PluginSettingTab {\n  app: App;\n  containerEl: HTMLElement;\n\n  constructor(app: App, plugin: any) {\n    this.app = app;\n    this.containerEl = document.createElement(\"div\");\n  }\n\n  display(): void {}\n  hide(): void {}\n}\n\nexport class Setting {\n  containerEl: HTMLElement;\n  nameEl: HTMLElement;\n  descEl: HTMLElement;\n  controlEl: HTMLElement;\n\n  constructor(containerEl: HTMLElement) {\n    this.containerEl = containerEl;\n    this.nameEl = document.createElement(\"div\");\n    this.descEl = document.createElement(\"div\");\n    this.controlEl = document.createElement(\"div\");\n\n    // Add Obsidian-specific methods to container\n    this.setupContainerMethods(containerEl);\n  }\n\n  private setupContainerMethods(el: HTMLElement): void {\n    if (!el.createEl) {\n      (el as any).createEl = function (tag: string, options?: any) {\n        const element = document.createElement(tag);\n        if (options?.text) element.textContent = options.text;\n        if (options?.cls) element.className = options.cls;\n        this.appendChild(element);\n        return element;\n      };\n    }\n    if (!el.createDiv) {\n      (el as any).createDiv = function (options?: any) {\n        const element = document.createElement(\"div\");\n        if (options?.cls) element.className = options.cls;\n        this.appendChild(element);\n        return element;\n      };\n    }\n    if (!el.empty) {\n      (el as any).empty = function () {\n        while (this.firstChild) {\n          this.removeChild(this.firstChild);\n        }\n      };\n    }\n  }\n\n  setName(name: string): this {\n    return this;\n  }\n\n  setDesc(desc: string): this {\n    return this;\n  }\n\n  addText(cb: (text: TextComponent) => void): this {\n    cb(new TextComponent(this.containerEl));\n    return this;\n  }\n\n  addTextArea(cb: (text: TextAreaComponent) => void): this {\n    cb(new TextAreaComponent(this.containerEl));\n    return this;\n  }\n\n  addToggle(cb: (toggle: ToggleComponent) => void): this {\n    cb(new ToggleComponent(this.containerEl));\n    return this;\n  }\n\n  addButton(cb: (button: ButtonComponent) => void): this {\n    cb(new ButtonComponent(this.containerEl));\n    return this;\n  }\n\n  addDropdown(cb: (dropdown: DropdownComponent) => void): this {\n    cb(new DropdownComponent(this.containerEl));\n    return this;\n  }\n}\n\nexport class TextComponent {\n  containerEl: HTMLElement;\n  inputEl: HTMLInputElement;\n\n  constructor(containerEl: HTMLElement) {\n    this.containerEl = containerEl;\n    this.inputEl = document.createElement(\"input\");\n  }\n\n  setPlaceholder(placeholder: string): this {\n    return this;\n  }\n\n  setValue(value: string): this {\n    this.inputEl.value = value;\n    return this;\n  }\n\n  onChange(callback: (value: string) => void): this {\n    return this;\n  }\n}\n\nexport class TextAreaComponent {\n  containerEl: HTMLElement;\n  inputEl: HTMLTextAreaElement;\n\n  constructor(containerEl: HTMLElement) {\n    this.containerEl = containerEl;\n    this.inputEl = document.createElement(\"textarea\");\n  }\n\n  setPlaceholder(placeholder: string): this {\n    return this;\n  }\n\n  setValue(value: string): this {\n    this.inputEl.value = value;\n    return this;\n  }\n\n  onChange(callback: (value: string) => void): this {\n    return this;\n  }\n}\n\nexport class ToggleComponent {\n  containerEl: HTMLElement;\n  toggleEl: HTMLElement;\n\n  constructor(containerEl: HTMLElement) {\n    this.containerEl = containerEl;\n    this.toggleEl = document.createElement(\"input\");\n  }\n\n  setValue(value: boolean): this {\n    return this;\n  }\n\n  onChange(callback: (value: boolean) => void): this {\n    return this;\n  }\n}\n\nexport class ButtonComponent {\n  containerEl: HTMLElement;\n  buttonEl: HTMLButtonElement;\n\n  constructor(containerEl: HTMLElement) {\n    this.containerEl = containerEl;\n    this.buttonEl = document.createElement(\"button\");\n\n    // Add Obsidian DOM extensions to button element\n    if (!this.buttonEl.addClass) {\n      (this.buttonEl as any).addClass = function (cls: string) {\n        this.classList.add(cls);\n      };\n    }\n    if (!this.buttonEl.removeClass) {\n      (this.buttonEl as any).removeClass = function (cls: string) {\n        this.classList.remove(cls);\n      };\n    }\n\n    containerEl.appendChild(this.buttonEl);\n  }\n\n  setButtonText(text: string): this {\n    this.buttonEl.textContent = text;\n    return this;\n  }\n\n  setCta(): this {\n    this.buttonEl.addClass(\"mod-cta\");\n    return this;\n  }\n\n  onClick(callback: () => void): this {\n    this.buttonEl.addEventListener(\"click\", callback);\n    return this;\n  }\n\n  setTooltip(tooltip: string): this {\n    this.buttonEl.setAttribute(\"title\", tooltip);\n    return this;\n  }\n\n  setClass(cls: string): this {\n    this.buttonEl.className = cls;\n    return this;\n  }\n}\n\nexport class DropdownComponent {\n  containerEl: HTMLElement;\n  selectEl: HTMLSelectElement;\n\n  constructor(containerEl: HTMLElement) {\n    this.containerEl = containerEl;\n    this.selectEl = document.createElement(\"select\");\n    containerEl.appendChild(this.selectEl);\n  }\n\n  addOption(value: string, display: string): this {\n    const option = document.createElement(\"option\");\n    option.value = value;\n    option.textContent = display || value;\n    this.selectEl.appendChild(option);\n    return this;\n  }\n\n  setValue(value: string): this {\n    this.selectEl.value = value;\n    return this;\n  }\n\n  onChange(callback: (value: string) => void): this {\n    this.selectEl.addEventListener(\"change\", () =>\n      callback(this.selectEl.value),\n    );\n    return this;\n  }\n}\n\nexport class Notice {\n  constructor(message: string) {}\n}\n\nexport class MarkdownView {\n  previewMode: {\n    rerender: (force: boolean) => void;\n  };\n\n  constructor() {\n    this.previewMode = {\n      rerender: jest.fn(),\n    };\n  }\n}\n\nexport class TFile {\n  path: string;\n  basename: string;\n  extension: string;\n\n  constructor(path?: string) {\n    this.path = path || \"\";\n    this.basename = path\n      ? path\n          .split(\"/\")\n          .pop()\n          ?.replace(/\\.[^/.]+$/, \"\") || \"\"\n      : \"\";\n    this.extension = path ? path.split(\".\").pop() || \"\" : \"\";\n  }\n}\n\nexport class WorkspaceLeaf {\n  view: any;\n\n  constructor() {\n    this.view = null;\n  }\n\n  openFile(file: TFile): Promise<void> {\n    return Promise.resolve();\n  }\n}\n\nexport class App {\n  vault: Vault;\n  workspace: Workspace;\n  metadataCache: MetadataCache;\n  fileManager: FileManager;\n\n  constructor() {\n    this.vault = new Vault();\n    this.workspace = new Workspace();\n    this.metadataCache = new MetadataCache();\n    this.fileManager = new FileManager(this.vault);\n  }\n}\n\nexport class Vault {\n  private mockFiles: TFile[] = [];\n  adapter: any = {\n    read: jest.fn().mockRejectedValue(new Error(\"File not found\")),\n    write: jest.fn().mockResolvedValue(undefined),\n    exists: jest.fn().mockResolvedValue(false),\n    mkdir: jest.fn().mockResolvedValue(undefined),\n    remove: jest.fn().mockResolvedValue(undefined),\n    list: jest.fn().mockResolvedValue({ files: [], folders: [] }),\n  };\n\n  getFiles(): TFile[] {\n    return this.mockFiles;\n  }\n\n  getMarkdownFiles(): TFile[] {\n    return this.mockFiles.filter((file) => file.extension === \"md\");\n  }\n\n  getAbstractFileByPath(path: string): TFile | null {\n    return this.mockFiles.find((file) => file.path === path) || null;\n  }\n\n  create(path: string, content: string): Promise<TFile> {\n    const file = new TFile(path);\n    this.mockFiles.push(file);\n    return Promise.resolve(file);\n  }\n\n  async read(file: TFile | string): Promise<string> {\n    if (typeof file === \"string\") {\n      // Mock reading by path\n      return Promise.resolve(\"Mock file content\");\n    }\n    // Mock reading from TFile\n    return Promise.resolve(\"Mock file content\");\n  }\n\n  async modify(file: TFile, content: string): Promise<void> {\n    // Mock file modification\n    return Promise.resolve();\n  }\n\n  async delete(file: TFile): Promise<void> {\n    const index = this.mockFiles.indexOf(file);\n    if (index > -1) {\n      this.mockFiles.splice(index, 1);\n    }\n    return Promise.resolve();\n  }\n\n  async rename(file: TFile, newPath: string): Promise<void> {\n    const targetFile = this.mockFiles.find((f) => f === file);\n    if (targetFile) {\n      targetFile.path = newPath;\n      targetFile.name = newPath.split(\"/\").pop() || \"\";\n    }\n    return Promise.resolve();\n  }\n\n  getAllLoadedFiles(): TFile[] {\n    return this.mockFiles;\n  }\n\n  async createFolder(path: string): Promise<void> {\n    // Mock folder creation\n    return Promise.resolve();\n  }\n\n  async exists(path: string): Promise<boolean> {\n    return this.mockFiles.some((file) => file.path === path);\n  }\n\n  on(event: string, callback: any): any {\n    // Return an EventRef-like object that registerEvent expects\n    return {\n      e: {\n        target: this,\n        fn: callback,\n        event: event,\n      },\n    };\n  }\n\n  off(event: string, callback: any): void {\n    // Mock implementation for removing event listeners\n  }\n\n  // Helper method for testing\n  __addMockFile(path: string, content?: string): TFile {\n    const file = new TFile(path);\n    this.mockFiles.push(file);\n    return file;\n  }\n\n  // Helper method to clear mock files for tests\n  __clearMockFiles(): void {\n    this.mockFiles = [];\n  }\n}\n\nexport class Workspace {\n  private activeFile: TFile | null = null;\n  private leaves: WorkspaceLeaf[] = [];\n\n  getActiveFile(): TFile | null {\n    return this.activeFile;\n  }\n\n  getLeaf(newLeaf?: boolean): WorkspaceLeaf {\n    if (newLeaf || this.leaves.length === 0) {\n      const leaf = new WorkspaceLeaf();\n      this.leaves.push(leaf);\n      return leaf;\n    }\n    return this.leaves[0];\n  }\n\n  iterateAllLeaves(callback: (leaf: WorkspaceLeaf) => void): void {\n    this.leaves.forEach(callback);\n  }\n\n  getActiveViewOfType<T>(type: any): T | null {\n    return null;\n  }\n\n  openLinkText(linkText: string, sourcePath: string): void {\n    // Mock implementation for opening links\n  }\n\n  on(name: string, callback: Function): void {\n    // Mock event listener\n  }\n\n  off(name: string, callback: Function): void {\n    // Mock event listener removal\n  }\n\n  trigger(name: string, ...data: any[]): void {\n    // Mock event triggering\n  }\n\n  // Helper method for testing\n  __setActiveFile(file: TFile | null): void {\n    this.activeFile = file;\n  }\n}\n\nexport class MetadataCache {\n  private cache: Map<string, any> = new Map();\n\n  getFileCache(file: TFile): any {\n    return (\n      this.cache.get(file.path) || {\n        frontmatter: {},\n        sections: [],\n        headings: [],\n        links: [],\n        embeds: [],\n        tags: [],\n      }\n    );\n  }\n\n  getBacklinksForFile(file: TFile): any {\n    return {\n      data: new Map(),\n      count: () => 0,\n      keys: () => [],\n    };\n  }\n\n  getFrontmatterPropertyValue(file: TFile, property: string): any {\n    const cache = this.getFileCache(file);\n    return cache.frontmatter?.[property];\n  }\n\n  on(name: string, callback: Function): void {\n    // Mock event listener\n  }\n\n  off(name: string, callback: Function): void {\n    // Mock event listener removal\n  }\n\n  // Helper method for testing\n  __setFileCache(path: string, cache: any): void {\n    this.cache.set(path, cache);\n  }\n\n  // Helper method to clear cache for tests\n  __clearCache(): void {\n    this.cache.clear();\n  }\n}\n\nexport interface Editor {}\n\nexport interface MarkdownPostProcessorContext {\n  sourcePath: string;\n  frontmatter?: any;\n  addChild(component: any): void;\n  getSectionInfo(el: HTMLElement): any;\n}\n\n// Additional commonly used types and interfaces\nexport interface FileSystemAdapter {\n  path: {\n    join(...paths: string[]): string;\n    dirname(path: string): string;\n    basename(path: string): string;\n  };\n}\n\nexport class Component {\n  load(): void {}\n  onload(): void {}\n  unload(): void {}\n  onunload(): void {}\n  addChild<T extends Component>(component: T): T {\n    return component;\n  }\n  removeChild<T extends Component>(component: T): T {\n    return component;\n  }\n}\n\nexport class MarkdownRenderer {\n  static renderMarkdown(\n    markdown: string,\n    el: HTMLElement,\n    sourcePath: string,\n    component: Component,\n  ): Promise<void> {\n    el.innerHTML = markdown;\n    return Promise.resolve();\n  }\n}\n\nexport class FileManager {\n  constructor(private vault: Vault) {}\n\n  generateMarkdownLink(file: TFile, sourcePath: string): string {\n    return `[[${file.basename}]]`;\n  }\n\n  async renameFile(file: TFile, newPath: string): Promise<void> {\n    await this.vault.rename(file, newPath);\n  }\n}\n\n// Mock normalizePath function\nexport function normalizePath(path: string): string {\n  return path.replace(/\\\\/g, \"/\");\n}\n\n// Mock requestUrl function\nexport function requestUrl(request: {\n  url: string;\n  [key: string]: any;\n}): Promise<any> {\n  return Promise.resolve({\n    status: 200,\n    json: {},\n    text: \"\",\n    arrayBuffer: new ArrayBuffer(0),\n  });\n}\n\n// Mock debounce function\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number,\n  immediate?: boolean,\n): T {\n  return func; // Simplified mock - just return the function as-is for testing\n}\n\n// Mock moment if needed\nexport const moment = {\n  now: () => Date.now(),\n  unix: (timestamp: number) => ({\n    format: (format?: string) => new Date(timestamp * 1000).toISOString(),\n  }),\n};\n\n// Mock Platform API - Enhanced for Mobile Testing\nexport const Platform = {\n  isMobile: process.env.TEST_PLATFORM === \"mobile\" || false,\n  isMobileApp: process.env.TEST_PLATFORM === \"mobile\" || false,\n  isIosApp: process.env.TEST_PLATFORM === \"ios\" || false,\n  isAndroidApp: process.env.TEST_PLATFORM === \"android\" || false,\n  isTablet: process.env.TEST_PLATFORM === \"tablet\" || false,\n  isDesktop:\n    process.env.TEST_PLATFORM !== \"mobile\" &&\n    process.env.TEST_PLATFORM !== \"tablet\",\n  isWin: false,\n  isMacOS: true,\n  isLinux: false,\n};\n\n// Mobile Environment Mocks\ndeclare global {\n  interface Window {\n    TouchEvent: typeof TouchEvent;\n    PointerEvent?: typeof PointerEvent;\n    Capacitor?: any;\n    ObsidianMobile?: any;\n  }\n\n  interface Navigator {\n    vibrate?: (pattern: number | number[]) => boolean;\n    deviceMemory?: number;\n    connection?: {\n      effectiveType?: string;\n      type?: string;\n      downlink?: number;\n    };\n    maxTouchPoints: number;\n    msMaxTouchPoints?: number;\n    getBattery?: () => Promise<{\n      level: number;\n      charging: boolean;\n      chargingTime: number;\n      dischargingTime: number;\n    }>;\n  }\n}\n\n// Setup mobile environment mocks\nif (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\n  // Touch Event Support\n  if (!window.TouchEvent) {\n    class MockTouchEvent extends Event {\n      touches: TouchList;\n      changedTouches: TouchList;\n      targetTouches: TouchList;\n\n      constructor(type: string, eventInitDict?: TouchEventInit) {\n        super(type, eventInitDict);\n\n        const createTouchList = (touches?: Touch[]): TouchList => {\n          const list = (touches || []) as any;\n          list.item = (index: number) => list[index] || null;\n          return list as TouchList;\n        };\n\n        this.touches = createTouchList(eventInitDict?.touches as Touch[]);\n        this.changedTouches = createTouchList(\n          eventInitDict?.changedTouches as Touch[],\n        );\n        this.targetTouches = createTouchList(\n          eventInitDict?.targetTouches as Touch[],\n        );\n      }\n    }\n\n    window.TouchEvent = MockTouchEvent as any;\n  }\n\n  // Pointer Event Support\n  if (!window.PointerEvent) {\n    class MockPointerEvent extends Event {\n      pointerId: number;\n      pointerType: string;\n      clientX: number;\n      clientY: number;\n\n      constructor(type: string, eventInitDict?: PointerEventInit) {\n        super(type, eventInitDict);\n        this.pointerId = eventInitDict?.pointerId || 0;\n        this.pointerType = eventInitDict?.pointerType || \"touch\";\n        this.clientX = eventInitDict?.clientX || 0;\n        this.clientY = eventInitDict?.clientY || 0;\n      }\n    }\n\n    window.PointerEvent = MockPointerEvent as any;\n  }\n\n  // Touch capability detection\n  if (!(\"ontouchstart\" in window)) {\n    Object.defineProperty(window, \"ontouchstart\", {\n      value: null,\n      configurable: true,\n      writable: true,\n    });\n  }\n\n  // Navigator enhancements for mobile testing\n  Object.defineProperty(navigator, \"maxTouchPoints\", {\n    value: process.env.TEST_PLATFORM === \"mobile\" ? 10 : 0,\n    configurable: true,\n  });\n\n  Object.defineProperty(navigator, \"msMaxTouchPoints\", {\n    value: process.env.TEST_PLATFORM === \"mobile\" ? 10 : 0,\n    configurable: true,\n  });\n\n  // Vibration API mock\n  if (!navigator.vibrate) {\n    Object.defineProperty(navigator, \"vibrate\", {\n      value: jest.fn((pattern: number | number[]) => {\n        console.log(`Mock vibrate called with:`, pattern);\n        return true;\n      }),\n      configurable: true,\n      writable: true,\n    });\n  }\n\n  // Device Memory API mock\n  Object.defineProperty(navigator, \"deviceMemory\", {\n    value: process.env.TEST_PLATFORM === \"mobile\" ? 4 : 8, // 4GB for mobile, 8GB for desktop\n    configurable: true,\n  });\n\n  // Network Information API mock\n  Object.defineProperty(navigator, \"connection\", {\n    value: {\n      effectiveType: process.env.TEST_PLATFORM === \"mobile\" ? \"3g\" : \"4g\",\n      type: \"cellular\",\n      downlink: process.env.TEST_PLATFORM === \"mobile\" ? 1.5 : 10,\n    },\n    configurable: true,\n  });\n\n  // Battery API mock\n  Object.defineProperty(navigator, \"getBattery\", {\n    value: () =>\n      Promise.resolve({\n        level: 0.75,\n        charging: false,\n        chargingTime: Infinity,\n        dischargingTime: 7200,\n      }),\n    configurable: true,\n  });\n\n  // Mock Capacitor for Obsidian mobile detection\n  if (process.env.TEST_PLATFORM === \"mobile\") {\n    window.Capacitor = {\n      platform: process.env.TEST_PLATFORM === \"ios\" ? \"ios\" : \"android\",\n      isNative: true,\n    };\n\n    window.ObsidianMobile = {\n      version: \"1.0.0\",\n      platform: process.env.TEST_PLATFORM === \"ios\" ? \"ios\" : \"android\",\n    };\n  }\n\n  // Performance memory mock\n  if (!performance.memory && process.env.TEST_PLATFORM === \"mobile\") {\n    Object.defineProperty(performance, \"memory\", {\n      value: {\n        usedJSHeapSize: 50 * 1024 * 1024, // 50MB\n        totalJSHeapSize: 100 * 1024 * 1024, // 100MB\n        jsHeapSizeLimit: 512 * 1024 * 1024, // 512MB for mobile\n      },\n      configurable: true,\n    });\n  }\n\n  // Mock requestAnimationFrame and cancelAnimationFrame if not present\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = jest.fn((callback: FrameRequestCallback) => {\n      const id = setTimeout(() => callback(performance.now()), 16);\n      return id;\n    }) as any;\n  }\n\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = jest.fn((id: number) => {\n      clearTimeout(id);\n    });\n  }\n\n  // Mock screen orientation API\n  if (!screen.orientation) {\n    Object.defineProperty(screen, \"orientation\", {\n      value: {\n        angle: 0,\n        type: \"portrait-primary\",\n        addEventListener: jest.fn(),\n        removeEventListener: jest.fn(),\n      },\n      configurable: true,\n    });\n  }\n\n  // Mock matchMedia for responsive design tests\n  if (!window.matchMedia) {\n    window.matchMedia = jest.fn((query: string) => ({\n      matches: query.includes(\"max-width: 768px\")\n        ? process.env.TEST_PLATFORM === \"mobile\"\n        : false,\n      media: query,\n      onchange: null,\n      addListener: jest.fn(),\n      removeListener: jest.fn(),\n      addEventListener: jest.fn(),\n      removeEventListener: jest.fn(),\n      dispatchEvent: jest.fn(),\n    }));\n  }\n\n  // Mock CSS support detection\n  if (!window.CSS) {\n    Object.defineProperty(window, \"CSS\", {\n      value: {\n        supports: jest.fn((property: string) => {\n          // Mock support for safe-area CSS\n          return property.includes(\"safe-area\") || property.includes(\"env(\");\n        }),\n      },\n      configurable: true,\n    });\n  }\n\n  // Mock computed style for safe area detection\n  const originalGetComputedStyle = window.getComputedStyle;\n  window.getComputedStyle = jest.fn((element: Element) => {\n    const mockStyle = {\n      getPropertyValue: jest.fn((prop: string) => {\n        // Mock safe area insets for iOS\n        const safeAreaMap: { [key: string]: string } = {\n          \"env(safe-area-inset-top)\":\n            process.env.TEST_PLATFORM === \"ios\" ? \"44px\" : \"0px\",\n          \"env(safe-area-inset-bottom)\":\n            process.env.TEST_PLATFORM === \"ios\" ? \"34px\" : \"0px\",\n          \"env(safe-area-inset-left)\": \"0px\",\n          \"env(safe-area-inset-right)\": \"0px\",\n        };\n        return safeAreaMap[prop] || \"0px\";\n      }),\n      ...(originalGetComputedStyle ? originalGetComputedStyle(element) : {}),\n    };\n    return mockStyle as any;\n  });\n\n  // Mock user agent for mobile detection\n  const mobileUserAgents = {\n    ios: \"Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.0 Mobile/15E148 Safari/604.1\",\n    android:\n      \"Mozilla/5.0 (Linux; Android 12; Pixel 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Mobile Safari/537.36\",\n    tablet:\n      \"Mozilla/5.0 (iPad; CPU OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.0 Mobile/15E148 Safari/604.1\",\n    desktop:\n      \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36\",\n  };\n\n  if (\n    process.env.TEST_PLATFORM &&\n    process.env.TEST_PLATFORM in mobileUserAgents\n  ) {\n    Object.defineProperty(navigator, \"userAgent\", {\n      value:\n        mobileUserAgents[\n          process.env.TEST_PLATFORM as keyof typeof mobileUserAgents\n        ],\n      configurable: true,\n    });\n  }\n\n  // Mock platform for mobile detection\n  const platformMap: { [key: string]: string } = {\n    ios: \"iPhone\",\n    android: \"Linux armv8l\",\n    tablet: \"iPad\",\n    desktop: \"MacIntel\",\n  };\n\n  if (process.env.TEST_PLATFORM && process.env.TEST_PLATFORM in platformMap) {\n    Object.defineProperty(navigator, \"platform\", {\n      value: platformMap[process.env.TEST_PLATFORM],\n      configurable: true,\n    });\n  }\n\n  // Mock inner dimensions for different screen sizes\n  const screenDimensions = {\n    mobile: { width: 375, height: 667 },\n    ios: { width: 375, height: 667 },\n    android: { width: 412, height: 892 },\n    tablet: { width: 768, height: 1024 },\n    desktop: { width: 1920, height: 1080 },\n  };\n\n  if (\n    process.env.TEST_PLATFORM &&\n    process.env.TEST_PLATFORM in screenDimensions\n  ) {\n    const dimensions =\n      screenDimensions[\n        process.env.TEST_PLATFORM as keyof typeof screenDimensions\n      ];\n    Object.defineProperty(window, \"innerWidth\", {\n      value: dimensions.width,\n      configurable: true,\n    });\n    Object.defineProperty(window, \"innerHeight\", {\n      value: dimensions.height,\n      configurable: true,\n    });\n    Object.defineProperty(screen, \"width\", {\n      value: dimensions.width,\n      configurable: true,\n    });\n    Object.defineProperty(screen, \"height\", {\n      value: dimensions.height,\n      configurable: true,\n    });\n  }\n}\n\n// Export mobile testing utilities\nexport const MobileTestUtils = {\n  /**\n   * Set the test platform for mobile tests\n   */\n  setPlatform(platform: \"mobile\" | \"ios\" | \"android\" | \"tablet\" | \"desktop\") {\n    process.env.TEST_PLATFORM = platform;\n    // Force refresh of cached values\n    if (typeof window !== \"undefined\") {\n      // Trigger platform detection refresh if available\n      (window as any).__PLATFORM_REFRESH__?.();\n    }\n  },\n\n  /**\n   * Create a mock touch event for testing\n   */\n  createTouchEvent(\n    type: string,\n    touches: Array<{ x: number; y: number; id?: number }>,\n    target?: Element,\n  ): TouchEvent {\n    const touchList = touches.map((touch, index) => ({\n      identifier: touch.id || index,\n      clientX: touch.x,\n      clientY: touch.y,\n      pageX: touch.x,\n      pageY: touch.y,\n      screenX: touch.x,\n      screenY: touch.y,\n      target: target || document.body,\n    }));\n\n    const event = new TouchEvent(type, {\n      touches:\n        type === \"touchend\" || type === \"touchcancel\" ? [] : (touchList as any),\n      changedTouches: touchList as any,\n      targetTouches:\n        type === \"touchend\" || type === \"touchcancel\" ? [] : (touchList as any),\n      bubbles: true,\n      cancelable: true,\n    });\n\n    (event as any).preventDefault = jest.fn();\n    (event as any).stopPropagation = jest.fn();\n\n    return event;\n  },\n\n  /**\n   * Mock device capabilities for testing\n   */\n  mockDeviceCapabilities(capabilities: {\n    vibration?: boolean;\n    geolocation?: boolean;\n    battery?: boolean;\n    memory?: number;\n    connection?: string;\n  }) {\n    if (capabilities.vibration !== undefined) {\n      Object.defineProperty(navigator, \"vibrate\", {\n        value: capabilities.vibration ? jest.fn() : undefined,\n        configurable: true,\n      });\n    }\n\n    if (capabilities.geolocation !== undefined) {\n      Object.defineProperty(navigator, \"geolocation\", {\n        value: capabilities.geolocation\n          ? {\n              getCurrentPosition: jest.fn(),\n              watchPosition: jest.fn(),\n              clearWatch: jest.fn(),\n            }\n          : undefined,\n        configurable: true,\n      });\n    }\n\n    if (capabilities.memory !== undefined) {\n      Object.defineProperty(navigator, \"deviceMemory\", {\n        value: capabilities.memory,\n        configurable: true,\n      });\n    }\n\n    if (capabilities.connection !== undefined) {\n      Object.defineProperty(navigator, \"connection\", {\n        value: {\n          effectiveType: capabilities.connection,\n          type: \"cellular\",\n          downlink: capabilities.connection === \"4g\" ? 10 : 1.5,\n        },\n        configurable: true,\n      });\n    }\n  },\n\n  /**\n   * Reset all mobile mocks to default state\n   */\n  reset() {\n    delete process.env.TEST_PLATFORM;\n    // Reset other mock states as needed\n  },\n};\n","import { TFile, Vault, MetadataCache } from \"obsidian\";\nimport { AreaNode, AreaNodeData } from '../domain/models/AreaNode';\nimport { AssetClass } from '../domain/constants';\n\nexport interface AssetRelation {\n  path: string;\n  title: string;\n  propertyName?: string;\n  isArchived?: boolean;\n  metadata: Record<string, any>;\n}\n\nexport class AreaHierarchyBuilder {\n  constructor(\n    private vault: Vault,\n    private metadataCache: MetadataCache,\n  ) {}\n\n  buildHierarchy(\n    currentAreaPath: string,\n    _relations: AssetRelation[],\n  ): AreaNode | null {\n    const currentFile = this.vault.getAbstractFileByPath(currentAreaPath);\n    if (!this.isFile(currentFile)) {\n      return null;\n    }\n\n    // eslint-disable-next-line obsidianmd/no-tfile-tfolder-cast\n    const cache = this.metadataCache.getFileCache(currentFile as TFile);\n    const metadata = cache?.frontmatter || {};\n    const instanceClass = this.extractInstanceClass(metadata);\n\n    if (instanceClass !== AssetClass.AREA) {\n      return null;\n    }\n\n    const allAreas = this.collectAllAreasFromVault();\n    const visited = new Set<string>();\n    return this.buildTree(currentAreaPath, allAreas, visited, 0);\n  }\n\n  private isFile(file: any): boolean {\n    if (file instanceof TFile) {\n      return true;\n    }\n    return (\n      file &&\n      typeof file === \"object\" &&\n      \"basename\" in file &&\n      \"path\" in file &&\n      \"stat\" in file\n    );\n  }\n\n  private extractInstanceClass(metadata: Record<string, any>): string {\n    const instanceClass = metadata.exo__Instance_class || \"\";\n    if (Array.isArray(instanceClass)) {\n      return this.cleanWikiLink(instanceClass[0] || \"\");\n    }\n    return this.cleanWikiLink(instanceClass);\n  }\n\n  private cleanWikiLink(value: string): string {\n    if (typeof value !== \"string\") return \"\";\n    return value.replace(/^\\[\\[|\\]\\]$/g, \"\").trim();\n  }\n\n  private collectAllAreasFromVault(): Map<string, AreaNodeData> {\n    const areas = new Map<string, AreaNodeData>();\n    const pathByBasename = new Map<string, string>();\n\n    const allFiles = this.vault.getMarkdownFiles();\n\n    for (const file of allFiles) {\n      const cache = this.metadataCache.getFileCache(file);\n      const metadata = cache?.frontmatter || {};\n      const instanceClass = this.extractInstanceClass(metadata);\n\n      if (instanceClass === AssetClass.AREA) {\n        const parentPath = this.extractParentPath(metadata);\n        areas.set(file.path, {\n          path: file.path,\n          title: file.basename,\n          label: metadata.exo__Asset_label || undefined,\n          isArchived: this.isArchived(metadata),\n          depth: 0,\n          parentPath: parentPath || undefined,\n        });\n        pathByBasename.set(file.basename, file.path);\n      }\n    }\n\n    for (const [, area] of areas.entries()) {\n      if (area.parentPath && pathByBasename.has(area.parentPath)) {\n        area.parentPath = pathByBasename.get(area.parentPath);\n      }\n    }\n\n    return areas;\n  }\n\n  private extractParentPath(metadata: Record<string, any>): string | null {\n    const parentProperty = metadata.ems__Area_parent;\n    if (!parentProperty) {\n      return null;\n    }\n\n    if (Array.isArray(parentProperty)) {\n      const firstParent = parentProperty[0] || \"\";\n      return this.cleanWikiLink(firstParent);\n    }\n\n    return this.cleanWikiLink(parentProperty);\n  }\n\n  private isArchived(metadata: Record<string, any>): boolean {\n    const archivedProp = metadata.exo__Asset_archived;\n    if (archivedProp === true || archivedProp === \"true\") {\n      return true;\n    }\n    if (Array.isArray(archivedProp) && archivedProp.length > 0) {\n      const first = archivedProp[0];\n      return first === true || first === \"true\";\n    }\n    return false;\n  }\n\n  private buildTree(\n    path: string,\n    areas: Map<string, AreaNodeData>,\n    visited: Set<string>,\n    depth: number,\n  ): AreaNode | null {\n    if (visited.has(path)) {\n      return null;\n    }\n\n    visited.add(path);\n\n    const area = areas.get(path);\n    if (!area) {\n      return null;\n    }\n\n    const children: AreaNode[] = [];\n    for (const [childPath, childData] of areas.entries()) {\n      if (childData.parentPath === path) {\n        const childNode = this.buildTree(childPath, areas, visited, depth + 1);\n        if (childNode) {\n          children.push(childNode);\n        }\n      }\n    }\n\n    children.sort((a, b) => {\n      const aLabel = a.label || a.title;\n      const bLabel = b.label || b.title;\n      return aLabel.localeCompare(bLabel);\n    });\n\n    return {\n      path: area.path,\n      title: area.title,\n      label: area.label,\n      isArchived: area.isArchived,\n      depth,\n      parentPath: area.parentPath,\n      children,\n    };\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { DateFormatter } from \"../utilities/DateFormatter\";\nimport { MetadataHelpers } from \"../utilities/MetadataHelpers\";\nimport { AssetClass } from '../domain/constants';\n\nexport class ConceptCreationService {\n  constructor(private vault: Vault) {}\n\n  async createNarrowerConcept(\n    parentFile: TFile,\n    fileName: string,\n    definition: string,\n    aliases: string[],\n  ): Promise<TFile> {\n    const uid = uuidv4();\n    const fullFileName = fileName.endsWith(\".md\") ? fileName : `${fileName}.md`;\n\n    const frontmatter = this.generateConceptFrontmatter(\n      parentFile.basename,\n      definition,\n      aliases,\n      uid,\n    );\n\n    const fileContent = MetadataHelpers.buildFileContent(frontmatter);\n\n    const folderPath = \"concepts\";\n    const filePath = `${folderPath}/${fullFileName}`;\n\n    const folder = this.vault.getAbstractFileByPath(folderPath);\n    if (!folder) {\n      await this.vault.createFolder(folderPath);\n    }\n\n    const createdFile = await this.vault.create(filePath, fileContent);\n\n    return createdFile;\n  }\n\n  private generateConceptFrontmatter(\n    parentConceptName: string,\n    definition: string,\n    aliases: string[],\n    uid: string,\n  ): Record<string, any> {\n    const now = new Date();\n    const timestamp = DateFormatter.toLocalTimestamp(now);\n\n    const frontmatter: Record<string, any> = {};\n    frontmatter[\"exo__Asset_isDefinedBy\"] = '\"[[!concepts]]\"';\n    frontmatter[\"exo__Asset_uid\"] = uid;\n    frontmatter[\"exo__Asset_createdAt\"] = timestamp;\n    frontmatter[\"exo__Instance_class\"] = [`\"[[${AssetClass.CONCEPT}]]\"`];\n    frontmatter[\"ims__Concept_broader\"] = `\"[[${parentConceptName}]]\"`;\n    frontmatter[\"ims__Concept_definition\"] = definition;\n\n    if (aliases.length > 0) {\n      frontmatter[\"aliases\"] = aliases;\n    }\n\n    return frontmatter;\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\n\n/**\n * Service for managing effort voting functionality\n * Handles incrementing ems__Effort_votes property on Tasks/Projects\n */\nexport class EffortVotingService {\n  constructor(private vault: Vault) {}\n\n  /**\n   * Increment the vote count for an effort\n   * Creates property if it doesn't exist (starts at 1)\n   * @param effortFile - The file representing the effort (Task or Project)\n   * @returns The new vote count after increment\n   */\n  async incrementEffortVotes(effortFile: TFile): Promise<number> {\n    const fileContent = await this.vault.read(effortFile);\n    const currentVotes = this.extractVoteCount(fileContent);\n    const newVoteCount = currentVotes + 1;\n\n    const updatedContent = this.updateFrontmatterWithVotes(\n      fileContent,\n      newVoteCount,\n    );\n    await this.vault.modify(effortFile, updatedContent);\n\n    return newVoteCount;\n  }\n\n  /**\n   * Extract current vote count from file content\n   * Returns 0 if property doesn't exist\n   * @param content - The file content to parse\n   * @returns Current vote count (0 if property doesn't exist)\n   */\n  private extractVoteCount(content: string): number {\n    // Support both Unix (\\n) and Windows (\\r\\n) line endings\n    const frontmatterRegex = /^---\\r?\\n([\\s\\S]*?)\\r?\\n---/;\n    const match = content.match(frontmatterRegex);\n\n    if (!match) return 0;\n\n    const frontmatterContent = match[1];\n    const votesMatch = frontmatterContent.match(/ems__Effort_votes:\\s*(\\d+)/);\n\n    if (votesMatch && votesMatch[1]) {\n      return parseInt(votesMatch[1], 10);\n    }\n\n    return 0;\n  }\n\n  /**\n   * Update frontmatter with new vote count\n   * Creates frontmatter if it doesn't exist\n   * Adds or updates ems__Effort_votes property\n   * @param content - Original file content\n   * @param voteCount - New vote count to set\n   * @returns Updated file content with new vote count\n   */\n  private updateFrontmatterWithVotes(\n    content: string,\n    voteCount: number,\n  ): string {\n    // Support both Unix (\\n) and Windows (\\r\\n) line endings\n    const frontmatterRegex = /^---\\r?\\n([\\s\\S]*?)\\r?\\n---/;\n    const match = content.match(frontmatterRegex);\n\n    // Detect line ending style from original content\n    const lineEnding = content.includes('\\r\\n') ? '\\r\\n' : '\\n';\n\n    if (!match) {\n      // No frontmatter - create it\n      const newFrontmatter = `---${lineEnding}ems__Effort_votes: ${voteCount}${lineEnding}---${lineEnding}${content}`;\n      return newFrontmatter;\n    }\n\n    // Update existing frontmatter\n    const frontmatterContent = match[1];\n    let updatedFrontmatter = frontmatterContent;\n\n    if (updatedFrontmatter.includes(\"ems__Effort_votes:\")) {\n      // Update existing property\n      updatedFrontmatter = updatedFrontmatter.replace(\n        /ems__Effort_votes:.*$/m,\n        `ems__Effort_votes: ${voteCount}`,\n      );\n    } else {\n      // Add new property (preserving line ending style)\n      updatedFrontmatter += `${lineEnding}ems__Effort_votes: ${voteCount}`;\n    }\n\n    return content.replace(\n      frontmatterRegex,\n      `---${lineEnding}${updatedFrontmatter}${lineEnding}---`,\n    );\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\n\n/**\n * Service for repairing asset folder locations based on exo__Asset_isDefinedBy references\n */\nexport class FolderRepairService {\n  constructor(\n    private vault: Vault,\n     \n    private app: any,\n  ) {}\n\n  /**\n   * Get the expected folder for an asset based on its exo__Asset_isDefinedBy property\n   * Returns null if no expected folder can be determined\n   */\n  async getExpectedFolder(\n    file: TFile,\n    metadata: Record<string, any>,\n  ): Promise<string | null> {\n    const isDefinedBy = metadata?.exo__Asset_isDefinedBy;\n\n    if (!isDefinedBy) {\n      return null;\n    }\n\n    // Extract the reference (handle both [[Reference]] and \"[[Reference]]\" formats)\n    const reference = this.extractReference(isDefinedBy);\n    if (!reference) {\n      return null;\n    }\n\n    // Find the referenced file\n    const referencedFile = this.app.metadataCache.getFirstLinkpathDest(\n      reference,\n      file.path,\n    );\n\n    if (!referencedFile) {\n      return null;\n    }\n\n    // Get the folder of the referenced file\n    return this.getFileFolder(referencedFile);\n  }\n\n  /**\n   * Move asset to its expected folder based on exo__Asset_isDefinedBy\n   */\n  async repairFolder(file: TFile, expectedFolder: string): Promise<void> {\n    // Construct new path\n    const newPath = `${expectedFolder}/${file.name}`;\n\n    // Check if target path already exists\n    const existingFile = this.vault.getAbstractFileByPath(newPath);\n    if (existingFile) {\n      throw new Error(\n        `Cannot move file: ${newPath} already exists`,\n      );\n    }\n\n    // Ensure target folder exists\n    await this.ensureFolderExists(expectedFolder);\n\n    // Move the file\n    await this.vault.rename(file, newPath);\n  }\n\n  /**\n   * Get the folder path for a file\n   */\n  private getFileFolder(file: TFile): string {\n    const folderPath = file.parent?.path || \"\";\n    return folderPath;\n  }\n\n  /**\n   * Extract reference from various formats:\n   * - [[Reference]] -> Reference\n   * - \"[[Reference]]\" -> Reference\n   * - Reference -> Reference\n   */\n  private extractReference(value: any): string | null {\n    if (typeof value !== \"string\") {\n      return null;\n    }\n\n    // Remove quotes if present\n    let cleaned = value.trim().replace(/^[\"']|[\"']$/g, \"\");\n\n    // Remove wiki-link brackets if present\n    cleaned = cleaned.replace(/^\\[\\[|\\]\\]$/g, \"\");\n\n    return cleaned || null;\n  }\n\n  /**\n   * Ensure a folder exists, creating it if necessary\n   */\n  private async ensureFolderExists(folderPath: string): Promise<void> {\n    if (!folderPath) {\n      return;\n    }\n\n    const folder = this.vault.getAbstractFileByPath(folderPath);\n    // Duck typing: Check if it's a folder (has children property, no extension)\n    if (folder && \"children\" in folder) {\n      return;\n    }\n\n    // Create folder recursively\n    await this.vault.createFolder(folderPath);\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\n\nexport class LabelToAliasService {\n  constructor(private vault: Vault) {}\n\n  async copyLabelToAliases(file: TFile): Promise<void> {\n    const fileContent = await this.vault.read(file);\n    const label = this.extractLabel(fileContent);\n\n    if (!label) {\n      throw new Error(\"No exo__Asset_label found in file\");\n    }\n\n    const updatedContent = this.addLabelToAliases(fileContent, label);\n    await this.vault.modify(file, updatedContent);\n  }\n\n  private extractLabel(content: string): string | null {\n    const frontmatterRegex = /^---\\r?\\n([\\s\\S]*?)\\r?\\n---/;\n    const match = content.match(frontmatterRegex);\n\n    if (!match) return null;\n\n    const frontmatterContent = match[1];\n    const labelMatch = frontmatterContent.match(/exo__Asset_label:\\s*[\"']?([^\"'\\r\\n]+)[\"']?/);\n\n    if (labelMatch && labelMatch[1]) {\n      return labelMatch[1].trim();\n    }\n\n    return null;\n  }\n\n  private addLabelToAliases(content: string, label: string): string {\n    const frontmatterRegex = /^---\\r?\\n([\\s\\S]*?)\\r?\\n---/;\n    const match = content.match(frontmatterRegex);\n\n    const lineEnding = content.includes('\\r\\n') ? '\\r\\n' : '\\n';\n\n    if (!match) {\n      const newFrontmatter = `---${lineEnding}aliases:${lineEnding}  - \"${label}\"${lineEnding}---${lineEnding}${content}`;\n      return newFrontmatter;\n    }\n\n    const frontmatterContent = match[1];\n    let updatedFrontmatter = frontmatterContent;\n\n    if (updatedFrontmatter.includes(\"aliases:\")) {\n      const aliasesMatch = updatedFrontmatter.match(/(aliases:\\r?\\n(?: {2}- .*\\r?\\n)*)/);\n      if (aliasesMatch) {\n        updatedFrontmatter = updatedFrontmatter.replace(\n          /(aliases:\\r?\\n(?: {2}- .*\\r?\\n)*)/,\n          `$1  - \"${label}\"${lineEnding}`,\n        );\n      }\n    } else {\n      updatedFrontmatter += `${lineEnding}aliases:${lineEnding}  - \"${label}\"`;\n    }\n\n    return content.replace(\n      frontmatterRegex,\n      `---${lineEnding}${updatedFrontmatter}${lineEnding}---`,\n    );\n  }\n}\n","export class LoggingService {\n  private static isVerbose = false;\n\n  static setVerbose(verbose: boolean): void {\n    this.isVerbose = verbose;\n  }\n\n  static debug(message: string, context?: unknown): void {\n    if (this.isVerbose) {\n      console.debug(`[Exocortex] ${message}`, context ?? '');\n    }\n  }\n\n  static info(message: string, context?: unknown): void {\n    // eslint-disable-next-line no-console\n    console.log(`[Exocortex] ${message}`, context ?? '');\n  }\n\n  static warn(message: string, context?: unknown): void {\n    console.warn(`[Exocortex] ${message}`, context ?? '');\n  }\n\n  static error(message: string, error?: Error): void {\n    console.error(`[Exocortex ERROR] ${message}`, error ?? '');\n    if (error?.stack) {\n      console.error(error.stack);\n    }\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\n\n/**\n * Service for cleaning empty properties from file frontmatter\n */\nexport class PropertyCleanupService {\n  constructor(private vault: Vault) {}\n\n  /**\n   * Remove all empty properties from file frontmatter\n   * Empty properties are: null, undefined, \"\", [], {}\n   */\n  async cleanEmptyProperties(file: TFile): Promise<void> {\n    const fileContent = await this.vault.read(file);\n    const updatedContent = this.removeEmptyPropertiesFromContent(fileContent);\n    await this.vault.modify(file, updatedContent);\n  }\n\n  /**\n   * Remove empty properties from file content\n   */\n  private removeEmptyPropertiesFromContent(content: string): string {\n    const frontmatterRegex = /^---\\n([\\s\\S]*?)\\n---/;\n    const match = content.match(frontmatterRegex);\n\n    if (!match) {\n      return content;\n    }\n\n    const frontmatterContent = match[1];\n    const lines = frontmatterContent.split(\"\\n\");\n    const cleanedLines: string[] = [];\n\n    let i = 0;\n    while (i < lines.length) {\n      const line = lines[i];\n      const trimmed = line.trim();\n\n      // Skip empty lines\n      if (trimmed === \"\") {\n        cleanedLines.push(line);\n        i++;\n        continue;\n      }\n\n      // Check if this is a property line (key: value)\n      const propertyMatch = trimmed.match(/^([^:]+):\\s*(.*)$/);\n      if (propertyMatch) {\n        const value = propertyMatch[2];\n\n        // Check if this is a list property (value is empty and next lines are indented)\n        if (value === \"\" && i + 1 < lines.length) {\n          const nextLine = lines[i + 1];\n          if (nextLine.match(/^\\s+- /)) {\n            // This is a list property, collect all list items\n            const listItems: string[] = [];\n            let j = i + 1;\n            while (j < lines.length && lines[j].match(/^\\s+- /)) {\n              listItems.push(lines[j]);\n              j++;\n            }\n\n            // Check if all list items are empty\n            const allEmpty = listItems.every((item) => {\n              const itemValue = item.replace(/^\\s+- /, \"\").trim();\n              return this.isEmptyValue(itemValue);\n            });\n\n            if (allEmpty) {\n              // Skip the property key and all list items\n              i = j;\n              continue;\n            } else {\n              // Keep the property and its list items\n              cleanedLines.push(line);\n              for (let k = i + 1; k < j; k++) {\n                cleanedLines.push(lines[k]);\n              }\n              i = j;\n              continue;\n            }\n          }\n        }\n\n        // Check if value is empty (but not a list)\n        if (this.isEmptyValue(value)) {\n          // Skip this line (remove empty property)\n          i++;\n          continue;\n        }\n\n        // Keep non-empty property\n        cleanedLines.push(line);\n        i++;\n      } else if (trimmed.match(/^\\s*- /)) {\n        // This is a list item without a property key (orphaned)\n        // This shouldn't happen in valid YAML, but skip it\n        i++;\n      } else {\n        // Not a property line (might be continuation), keep it\n        cleanedLines.push(line);\n        i++;\n      }\n    }\n\n    const cleanedFrontmatter = cleanedLines.join(\"\\n\");\n    return content.replace(frontmatterRegex, `---\\n${cleanedFrontmatter}\\n---`);\n  }\n\n  /**\n   * Check if a value string represents an empty value\n   */\n  private isEmptyValue(value: string): boolean {\n    const trimmed = value.trim();\n\n    // Empty string\n    if (trimmed === \"\") return true;\n\n    // null or undefined\n    if (trimmed === \"null\" || trimmed === \"undefined\") return true;\n\n    // Empty array []\n    if (trimmed === \"[]\") return true;\n\n    // Empty object {}\n    if (trimmed === \"{}\") return true;\n\n    // Quoted empty string\n    if (trimmed === '\"\"' || trimmed === \"''\") return true;\n\n    return false;\n  }\n}\n","import { TFile, App } from \"obsidian\";\n\nexport class RenameToUidService {\n  constructor(private app: App) {}\n\n  async renameToUid(file: TFile, metadata: Record<string, any>): Promise<void> {\n    const uid = metadata.exo__Asset_uid;\n\n    if (!uid) {\n      throw new Error(\"Asset has no exo__Asset_uid property\");\n    }\n\n    const currentBasename = file.basename;\n    const targetBasename = uid;\n\n    if (currentBasename === targetBasename) {\n      throw new Error(\"File is already named according to UID\");\n    }\n\n    const currentLabel = metadata.exo__Asset_label;\n    const needsLabelUpdate = !currentLabel || currentLabel.trim() === \"\";\n\n    if (needsLabelUpdate) {\n      await this.updateLabel(file, currentBasename);\n    }\n\n    const folderPath = file.parent?.path || \"\";\n    const newPath = folderPath ? `${folderPath}/${targetBasename}.md` : `${targetBasename}.md`;\n\n    await this.app.fileManager.renameFile(file, newPath);\n  }\n\n  private async updateLabel(file: TFile, label: string): Promise<void> {\n    await this.app.vault.process(file, (content) => {\n      const frontmatterRegex = /^---\\n([\\s\\S]*?)\\n---/;\n      const match = content.match(frontmatterRegex);\n\n      if (!match) {\n        return content;\n      }\n\n      const frontmatterContent = match[1];\n      const newFrontmatter = `${frontmatterContent}\\nexo__Asset_label: ${label}\\naliases:\\n  - ${label}`;\n\n      return content.replace(frontmatterRegex, `---\\n${newFrontmatter}\\n---`);\n    });\n  }\n}\n","import { TFile, Vault } from \"obsidian\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SupervisionFormData } from \"../types/SupervisionFormData\";\nimport { DateFormatter } from \"../utilities/DateFormatter\";\n\nexport class SupervisionCreationService {\n  constructor(private vault: Vault) {}\n\n  async createSupervision(formData: SupervisionFormData): Promise<TFile> {\n    const uid = uuidv4();\n    const fileName = `${uid}.md`;\n    const frontmatter = this.generateFrontmatter(uid);\n    const body = this.generateBody(formData);\n    const fileContent = this.buildFileContent(frontmatter, body);\n\n    const filePath = `01 Inbox/${fileName}`;\n\n    const createdFile = await this.vault.create(filePath, fileContent);\n\n    return createdFile;\n  }\n\n  generateFrontmatter(uid: string): Record<string, any> {\n    const now = new Date();\n    const timestamp = DateFormatter.toLocalTimestamp(now);\n\n    return {\n      exo__Asset_isDefinedBy: '\"[[!kitelev]]\"',\n      exo__Asset_uid: uid,\n      exo__Asset_createdAt: timestamp,\n      exo__Instance_class: ['\"[[ztlk__FleetingNote]]\"'],\n      ztlk__FleetingNote_type: '\"[[CBT-Diary Record]]\"',\n    };\n  }\n\n  generateBody(formData: SupervisionFormData): string {\n    const fields = [\n      { label: \"Ситуация/триггер\", value: formData.situation },\n      { label: \"Эмоции\", value: formData.emotions },\n      { label: \"Мысли\", value: formData.thoughts },\n      { label: \"Поведение\", value: formData.behavior },\n      {\n        label: \"Краткосрочные последствия поведения\",\n        value: formData.shortTermConsequences,\n      },\n      {\n        label: \"Долгосрочные последствия поведения\",\n        value: formData.longTermConsequences,\n      },\n    ];\n\n    return fields.map((field) => `- ${field.label}: ${field.value}`).join(\"\\n\");\n  }\n\n  private buildFileContent(\n    frontmatter: Record<string, any>,\n    body: string,\n  ): string {\n    const frontmatterLines = Object.entries(frontmatter)\n      .map(([key, value]) => {\n        if (Array.isArray(value)) {\n          const arrayItems = value.map((item) => `  - ${item}`).join(\"\\n\");\n          return `${key}:\\n${arrayItems}`;\n        }\n        return `${key}: ${value}`;\n      })\n      .join(\"\\n\");\n\n    return `---\\n${frontmatterLines}\\n---\\n\\n${body}\\n`;\n  }\n}\n","/**\n * FrontmatterService\n *\n * Centralized service for YAML frontmatter manipulation in Markdown files.\n * Follows DRY principle by eliminating duplication across 15+ locations.\n *\n * @module infrastructure/services\n * @since 1.0.0\n */\n\n/**\n * Result of frontmatter parsing operation\n */\nexport interface FrontmatterParseResult {\n  /** Whether frontmatter block exists */\n  exists: boolean;\n  /** Parsed frontmatter content (without --- delimiters) */\n  content: string;\n  /** Original full file content */\n  originalContent: string;\n}\n\n/**\n * Service for manipulating YAML frontmatter in Markdown files.\n *\n * Handles common operations like:\n * - Adding/updating/removing properties\n * - Creating frontmatter blocks when missing\n * - Preserving existing properties\n * - Maintaining YAML formatting\n *\n * @example\n * ```typescript\n * const service = new FrontmatterService();\n *\n * // Update existing property\n * const updated = service.updateProperty(\n *   content,\n *   'status',\n *   '\"[[StatusDone]]\"'\n * );\n *\n * // Add new property\n * const withNew = service.addProperty(content, 'priority', 'high');\n *\n * // Remove property\n * const removed = service.removeProperty(content, 'archived');\n * ```\n */\nexport class FrontmatterService {\n  /**\n   * Regex pattern for matching YAML frontmatter blocks.\n   * Matches: ---\\n[content]\\n---\n   */\n  private static readonly FRONTMATTER_REGEX = /^---\\n([\\s\\S]*?)\\n---/;\n\n  /**\n   * Parse frontmatter from markdown content.\n   *\n   * @param content - Full markdown file content\n   * @returns Parse result with existence flag and content\n   *\n   * @example\n   * ```typescript\n   * const result = service.parse('---\\nfoo: bar\\n---\\nBody');\n   * // result.exists === true\n   * // result.content === 'foo: bar'\n   * ```\n   */\n  parse(content: string): FrontmatterParseResult {\n    const match = content.match(FrontmatterService.FRONTMATTER_REGEX);\n\n    if (!match) {\n      return {\n        exists: false,\n        content: \"\",\n        originalContent: content,\n      };\n    }\n\n    return {\n      exists: true,\n      content: match[1],\n      originalContent: content,\n    };\n  }\n\n  /**\n   * Update or add a property in frontmatter.\n   *\n   * - If frontmatter exists and has the property: updates value\n   * - If frontmatter exists but lacks property: adds property\n   * - If no frontmatter exists: creates frontmatter with property\n   *\n   * @param content - Full markdown file content\n   * @param property - Property name (e.g., 'status', 'ems__Effort_status')\n   * @param value - Property value (e.g., '\"[[StatusDone]]\"', 'true', '42')\n   * @returns Updated content with modified frontmatter\n   *\n   * @example\n   * ```typescript\n   * // Update existing\n   * const result1 = service.updateProperty(\n   *   '---\\nstatus: draft\\n---\\nBody',\n   *   'status',\n   *   'published'\n   * );\n   * // result1 === '---\\nstatus: published\\n---\\nBody'\n   *\n   * // Add new property\n   * const result2 = service.updateProperty(\n   *   '---\\nfoo: bar\\n---\\nBody',\n   *   'status',\n   *   'draft'\n   * );\n   * // result2 === '---\\nfoo: bar\\nstatus: draft\\n---\\nBody'\n   *\n   * // Create frontmatter if missing\n   * const result3 = service.updateProperty(\n   *   'Body content',\n   *   'status',\n   *   'draft'\n   * );\n   * // result3 === '---\\nstatus: draft\\n---\\nBody content'\n   * ```\n   */\n  updateProperty(content: string, property: string, value: any): string {\n    const parsed = this.parse(content);\n\n    // No frontmatter exists - create new block\n    if (!parsed.exists) {\n      return this.createFrontmatter(content, { [property]: value });\n    }\n\n    // Frontmatter exists - update or add property\n    let updatedFrontmatter = parsed.content;\n\n    // Property already exists - replace value\n    if (this.hasProperty(updatedFrontmatter, property)) {\n      const propertyRegex = new RegExp(`${this.escapeRegex(property)}:.*$`, \"m\");\n      updatedFrontmatter = updatedFrontmatter.replace(\n        propertyRegex,\n        `${property}: ${value}`,\n      );\n    } else {\n      // Property doesn't exist - append to frontmatter\n      // Add newline separator only if frontmatter is not empty\n      const separator = updatedFrontmatter.length > 0 ? \"\\n\" : \"\";\n      updatedFrontmatter += `${separator}${property}: ${value}`;\n    }\n\n    // Replace frontmatter block in original content\n    return content.replace(\n      FrontmatterService.FRONTMATTER_REGEX,\n      `---\\n${updatedFrontmatter}\\n---`,\n    );\n  }\n\n  /**\n   * Add a new property to frontmatter (alias for updateProperty).\n   *\n   * Convenience method with clearer semantics for adding new properties.\n   *\n   * @param content - Full markdown file content\n   * @param property - Property name\n   * @param value - Property value\n   * @returns Updated content\n   */\n  addProperty(content: string, property: string, value: any): string {\n    return this.updateProperty(content, property, value);\n  }\n\n  /**\n   * Remove a property from frontmatter.\n   *\n   * - If property exists: removes the line\n   * - If property doesn't exist: returns content unchanged\n   * - If no frontmatter exists: returns content unchanged\n   *\n   * @param content - Full markdown file content\n   * @param property - Property name to remove\n   * @returns Updated content with property removed\n   *\n   * @example\n   * ```typescript\n   * const result = service.removeProperty(\n   *   '---\\nfoo: bar\\nstatus: draft\\n---\\nBody',\n   *   'status'\n   * );\n   * // result === '---\\nfoo: bar\\n---\\nBody'\n   * ```\n   */\n  removeProperty(content: string, property: string): string {\n    const parsed = this.parse(content);\n\n    // No frontmatter or property doesn't exist - return unchanged\n    if (!parsed.exists || !this.hasProperty(parsed.content, property)) {\n      return content;\n    }\n\n    // Remove property line (including trailing newline if present)\n    const propertyLineRegex = new RegExp(\n      `\\n?${this.escapeRegex(property)}:.*$`,\n      \"m\",\n    );\n    const updatedFrontmatter = parsed.content.replace(propertyLineRegex, \"\");\n\n    // Replace frontmatter block in original content\n    return content.replace(\n      FrontmatterService.FRONTMATTER_REGEX,\n      `---\\n${updatedFrontmatter}\\n---`,\n    );\n  }\n\n  /**\n   * Check if frontmatter contains a specific property.\n   *\n   * @param frontmatterContent - Frontmatter content (without --- delimiters)\n   * @param property - Property name to check\n   * @returns True if property exists\n   *\n   * @example\n   * ```typescript\n   * const hasStatus = service.hasProperty('foo: bar\\nstatus: draft', 'status');\n   * // hasStatus === true\n   * ```\n   */\n  hasProperty(frontmatterContent: string, property: string): boolean {\n    return frontmatterContent.includes(`${property}:`);\n  }\n\n  /**\n   * Create new frontmatter block with given properties.\n   *\n   * @param content - Original markdown content (without frontmatter)\n   * @param properties - Object with property-value pairs\n   * @returns Content with new frontmatter prepended\n   *\n   * @example\n   * ```typescript\n   * const result = service.createFrontmatter(\n   *   'Body content',\n   *   { status: 'draft', priority: 'high' }\n   * );\n   * // result === '---\\nstatus: draft\\npriority: high\\n---\\nBody content'\n   * ```\n   */\n  createFrontmatter(\n    content: string,\n    properties: Record<string, any>,\n  ): string {\n    const frontmatterLines = Object.entries(properties).map(\n      ([key, value]) => `${key}: ${value}`,\n    );\n\n    const frontmatterBlock = `---\\n${frontmatterLines.join(\"\\n\")}\\n---`;\n\n    // Preserve leading newline if original content starts with one\n    const separator = content.startsWith(\"\\n\") ? \"\" : \"\\n\";\n    return `${frontmatterBlock}${separator}${content}`;\n  }\n\n  /**\n   * Get property value from frontmatter content.\n   *\n   * @param frontmatterContent - Frontmatter content (without --- delimiters)\n   * @param property - Property name\n   * @returns Property value or null if not found\n   *\n   * @example\n   * ```typescript\n   * const value = service.getPropertyValue(\n   *   'foo: bar\\nstatus: draft',\n   *   'status'\n   * );\n   * // value === 'draft'\n   * ```\n   */\n  getPropertyValue(\n    frontmatterContent: string,\n    property: string,\n  ): string | null {\n    const propertyRegex = new RegExp(\n      `${this.escapeRegex(property)}:\\\\s*(.*)$`,\n      \"m\",\n    );\n    const match = frontmatterContent.match(propertyRegex);\n    return match ? match[1].trim() : null;\n  }\n\n  /**\n   * Escape special regex characters in property names.\n   *\n   * Handles property names with special characters like dots, underscores, etc.\n   *\n   * @param str - String to escape\n   * @returns Escaped string safe for use in RegExp\n   * @private\n   */\n  private escapeRegex(str: string): string {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n}\n","interface EffortItem {\n  isTrashed: boolean;\n  isDone: boolean;\n  metadata: Record<string, any>;\n  startTime?: string;\n}\n\nexport class EffortSortingHelpers {\n  static sortByPriority<T extends EffortItem>(a: T, b: T): number {\n    if (a.isTrashed !== b.isTrashed) {\n      return a.isTrashed ? 1 : -1;\n    }\n\n    if (a.isDone !== b.isDone) {\n      return a.isDone ? 1 : -1;\n    }\n\n    const aVotes =\n      typeof a.metadata.ems__Effort_votes === \"number\"\n        ? a.metadata.ems__Effort_votes\n        : 0;\n    const bVotes =\n      typeof b.metadata.ems__Effort_votes === \"number\"\n        ? b.metadata.ems__Effort_votes\n        : 0;\n\n    if (aVotes !== bVotes) {\n      return bVotes - aVotes;\n    }\n\n    if (a.startTime && b.startTime) {\n      return a.startTime.localeCompare(b.startTime);\n    }\n\n    if (a.startTime) return -1;\n    if (b.startTime) return 1;\n\n    return 0;\n  }\n}\n","export interface IFileSystemAdapter {\n  readFile(path: string): Promise<string>;\n  fileExists(path: string): Promise<boolean>;\n  getFileMetadata(path: string): Promise<Record<string, any>>;\n  createFile(path: string, content: string): Promise<string>;\n  updateFile(path: string, content: string): Promise<void>;\n  writeFile(path: string, content: string): Promise<void>;\n  deleteFile(path: string): Promise<void>;\n  renameFile(oldPath: string, newPath: string): Promise<void>;\n  createDirectory(path: string): Promise<void>;\n  directoryExists(path: string): Promise<boolean>;\n  getMarkdownFiles(rootPath?: string): Promise<string[]>;\n  findFilesByMetadata(query: Record<string, any>): Promise<string[]>;\n  findFileByUID(uid: string): Promise<string | null>;\n}\n\nexport class FileNotFoundError extends Error {\n  constructor(path: string) {\n    super(`File not found: ${path}`);\n    this.name = 'FileNotFoundError';\n  }\n}\n\nexport class FileAlreadyExistsError extends Error {\n  constructor(path: string) {\n    super(`File already exists: ${path}`);\n    this.name = 'FileAlreadyExistsError';\n  }\n}\n"],"names":["AssetClass","EffortStatus","_state","EFFORT_PROPERTY_MAP","uuidv4","FrontmatterService"],"mappings":"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","x_google_ignoreList":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}