{"version":3,"file":"DailyTasksTable-cRkqSZQf.js","sources":["../../../src/presentation/components/DailyTasksTable.tsx"],"sourcesContent":["import React from \"react\";\n\nexport interface DailyTask {\n  file: {\n    path: string;\n    basename: string;\n  };\n  path: string;\n  title: string;\n  label: string;\n  startTime: string;\n  endTime: string;\n  status: string;\n  metadata: Record<string, unknown>;\n  isDone: boolean;\n  isTrashed: boolean;\n  isDoing: boolean;\n  isMeeting: boolean;\n  isBlocked: boolean;\n}\n\nexport interface DailyTasksTableProps {\n  tasks: DailyTask[];\n  onTaskClick?: (path: string, event: React.MouseEvent) => void;\n  getAssetLabel?: (path: string) => string | null;\n  getEffortArea?: (metadata: Record<string, unknown>) => string | null;\n  showEffortArea?: boolean;\n  showEffortVotes?: boolean;\n}\n\nexport const DailyTasksTable: React.FC<DailyTasksTableProps> = ({\n  tasks,\n  onTaskClick,\n  getAssetLabel,\n  getEffortArea,\n  showEffortArea = false,\n  showEffortVotes = false,\n}) => {\n  interface WikiLink {\n    target: string;\n    alias?: string;\n  }\n\n  const parseWikiLink = (value: string): WikiLink => {\n    // Remove [[ and ]]\n    const content = value.replace(/^\\[\\[|\\]\\]$/g, \"\");\n\n    // Check if there's an alias (format: target|alias)\n    const pipeIndex = content.indexOf(\"|\");\n\n    if (pipeIndex !== -1) {\n      return {\n        target: content.substring(0, pipeIndex).trim(),\n        alias: content.substring(pipeIndex + 1).trim()\n      };\n    }\n\n    return {\n      target: content.trim()\n    };\n  };\n\n  const getDisplayName = (task: DailyTask): string => {\n    const blockerIcon = task.isBlocked ? \"üö© \" : \"\";\n    const icon = (task.isDone && task.isMeeting) ? \"‚úÖ üë• \" : task.isDone ? \"‚úÖ \" : task.isTrashed ? \"‚ùå \" : task.isDoing ? \"üîÑ \" : task.isMeeting ? \"üë• \" : \"\";\n\n    let displayText = task.label || task.title;\n\n    // Check if getAssetLabel function is provided\n    if (typeof getAssetLabel === 'function') {\n      const customLabel = getAssetLabel(task.path);\n      // Only use custom label if it's a non-null, non-empty string\n      if (customLabel !== null && customLabel !== undefined && customLabel !== '') {\n        displayText = customLabel;\n      }\n    }\n\n    return blockerIcon + icon + displayText;\n  };\n\n  return (\n    <div className=\"exocortex-daily-tasks\">\n      <table className=\"exocortex-tasks-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Start</th>\n            <th>End</th>\n            <th>Status</th>\n            {showEffortArea && <th>Effort Area</th>}\n            {showEffortVotes && <th>Votes</th>}\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task, index) => (\n            <tr key={`${task.path}-${index}`} data-path={task.path}>\n              <td className=\"task-name\">\n                <a\n                  data-href={task.path}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onTaskClick?.(task.path, e);\n                  }}\n                  className=\"internal-link\"\n                  style={{ cursor: \"pointer\" }}\n                >\n                  {getDisplayName(task)}\n                </a>\n              </td>\n              <td className=\"task-start\">{task.startTime || \"-\"}</td>\n              <td className=\"task-end\">{task.endTime || \"-\"}</td>\n              <td className=\"task-status\">\n                {task.status ? (() => {\n                  const isWikiLink = typeof task.status === \"string\" && /\\[\\[.*?\\]\\]/.test(task.status);\n                  const parsed = isWikiLink ? parseWikiLink(task.status) : { target: task.status };\n                  const displayText = parsed.alias || parsed.target;\n\n                  return (\n                    <a\n                      data-href={parsed.target}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        onTaskClick?.(parsed.target, e);\n                      }}\n                      className=\"internal-link\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {displayText}\n                    </a>\n                  );\n                })() : \"-\"}\n              </td>\n              {showEffortArea && (\n                <td className=\"task-effort-area\">\n                  {(() => {\n                    const effortArea = getEffortArea?.(task.metadata) || task.metadata.ems__Effort_area;\n                    if (!effortArea) return \"-\";\n\n                    // Parse both formats: [[UID|Alias]] and UID|Alias\n                    let parsed: WikiLink;\n                    const effortAreaStr = String(effortArea);\n\n                    if (/\\[\\[.*?\\]\\]/.test(effortAreaStr)) {\n                      // Format: [[UID|Alias]]\n                      parsed = parseWikiLink(effortAreaStr);\n                    } else if (effortAreaStr.includes(\"|\")) {\n                      // Format: UID|Alias (already extracted from wikilink)\n                      const parts = effortAreaStr.split(\"|\");\n                      parsed = {\n                        target: parts[0].trim(),\n                        alias: parts[1]?.trim()\n                      };\n                    } else {\n                      // Plain value\n                      parsed = { target: effortAreaStr.trim() };\n                    }\n\n                    const displayText = parsed.alias || parsed.target;\n\n                    return (\n                      <a\n                        data-href={parsed.target}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          onTaskClick?.(parsed.target, e);\n                        }}\n                        className=\"internal-link\"\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        {getAssetLabel?.(parsed.target) || displayText}\n                      </a>\n                    );\n                  })()}\n                </td>\n              )}\n              {showEffortVotes && (\n                <td className=\"task-effort-votes\">\n                  {typeof task.metadata.ems__Effort_votes === \"number\" ? task.metadata.ems__Effort_votes : \"-\"}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport interface DailyTasksTableWithToggleProps extends Omit<DailyTasksTableProps, 'showEffortArea' | 'showEffortVotes'> {\n  showEffortArea: boolean;\n  onToggleEffortArea: () => void;\n  showEffortVotes: boolean;\n  onToggleEffortVotes: () => void;\n}\n\nexport const DailyTasksTableWithToggle: React.FC<DailyTasksTableWithToggleProps> = ({\n  showEffortArea,\n  onToggleEffortArea,\n  showEffortVotes,\n  onToggleEffortVotes,\n  ...props\n}) => {\n  return (\n    <div className=\"exocortex-daily-tasks-wrapper\">\n      <div className=\"exocortex-daily-tasks-controls\">\n        <button\n          className=\"exocortex-toggle-effort-area\"\n          onClick={onToggleEffortArea}\n          style={{\n            marginBottom: \"8px\",\n            marginRight: \"8px\",\n            padding: \"4px 8px\",\n            cursor: \"pointer\",\n            fontSize: \"12px\",\n          }}\n        >\n          {showEffortArea ? \"Hide\" : \"Show\"} Effort Area\n        </button>\n        <button\n          className=\"exocortex-toggle-effort-votes\"\n          onClick={onToggleEffortVotes}\n          style={{\n            marginBottom: \"8px\",\n            padding: \"4px 8px\",\n            cursor: \"pointer\",\n            fontSize: \"12px\",\n          }}\n        >\n          {showEffortVotes ? \"Hide\" : \"Show\"} Votes\n        </button>\n      </div>\n      <DailyTasksTable {...props} showEffortArea={showEffortArea} showEffortVotes={showEffortVotes} />\n    </div>\n  );\n};\n"],"names":["jsxs","jsx"],"mappings":";;;;AA8BO,MAAM,kBAAkD,CAAC;AAAA,EAC9D,KAAA;AAAA,EACA,WAAA;AAAA,EACA,aAAA;AAAA,EACA,aAAA;AAAA,EACA,cAAA,GAAiB,KAAA;AAAA,EACjB,eAAA,GAAkB;AACpB,CAAA,KAAM;AAMJ,EAAA,MAAM,aAAA,GAAgB,CAAC,KAAA,KAA4B;AAEjD,IAAA,MAAM,OAAA,GAAU,KAAA,CAAM,OAAA,CAAQ,cAAA,EAAgB,EAAE,CAAA;AAGhD,IAAA,MAAM,SAAA,GAAY,OAAA,CAAQ,OAAA,CAAQ,GAAG,CAAA;AAErC,IAAA,IAAI,cAAc,CAAA,CAAA,EAAI;AACpB,MAAA,OAAO;AAAA,QACL,QAAQ,OAAA,CAAQ,SAAA,CAAU,CAAA,EAAG,SAAS,EAAE,IAAA,EAAK;AAAA,QAC7C,OAAO,OAAA,CAAQ,SAAA,CAAU,SAAA,GAAY,CAAC,EAAE,IAAA;AAAK,OAC/C;AAAA,IACF;AAEA,IAAA,OAAO;AAAA,MACL,MAAA,EAAQ,QAAQ,IAAA;AAAK,KACvB;AAAA,EACF,CAAA;AAEA,EAAA,MAAM,cAAA,GAAiB,CAAC,IAAA,KAA4B;AAClD,IAAA,MAAM,WAAA,GAAc,IAAA,CAAK,SAAA,GAAY,KAAA,GAAQ,EAAA;AAC7C,IAAA,MAAM,OAAQ,IAAA,CAAK,MAAA,IAAU,IAAA,CAAK,SAAA,GAAa,UAAU,IAAA,CAAK,MAAA,GAAS,IAAA,GAAO,IAAA,CAAK,YAAY,IAAA,GAAO,IAAA,CAAK,UAAU,KAAA,GAAQ,IAAA,CAAK,YAAY,KAAA,GAAQ,EAAA;AAEtJ,IAAA,IAAI,WAAA,GAAc,IAAA,CAAK,KAAA,IAAS,IAAA,CAAK,KAAA;AAGrC,IAAA,IAAI,OAAO,kBAAkB,UAAA,EAAY;AACvC,MAAA,MAAM,WAAA,GAAc,aAAA,CAAc,IAAA,CAAK,IAAI,CAAA;AAE3C,MAAA,IAAI,WAAA,KAAgB,IAAA,IAAQ,WAAA,KAAgB,KAAA,CAAA,IAAa,gBAAgB,EAAA,EAAI;AAC3E,QAAA,WAAA,GAAc,WAAA;AAAA,MAChB;AAAA,IACF;AAEA,IAAA,OAAO,cAAc,IAAA,GAAO,WAAA;AAAA,EAC9B,CAAA;AAEA,EAAA,6CACG,KAAA,EAAA,EAAI,SAAA,EAAU,yBACb,QAAA,kBAAAA,sBAAA,CAAC,OAAA,EAAA,EAAM,WAAU,uBAAA,EACf,QAAA,EAAA;AAAA,oBAAAC,qBAAA,CAAC,OAAA,EAAA,EACC,iDAAC,IAAA,EAAA,EACC,QAAA,EAAA;AAAA,sBAAAA,qBAAA,CAAC,QAAG,QAAA,EAAA,MAAA,EAAI,CAAA;AAAA,sBACRA,qBAAA,CAAC,QAAG,QAAA,EAAA,OAAA,EAAK,CAAA;AAAA,sBACTA,qBAAA,CAAC,QAAG,QAAA,EAAA,KAAA,EAAG,CAAA;AAAA,sBACPA,qBAAA,CAAC,QAAG,QAAA,EAAA,QAAA,EAAM,CAAA;AAAA,MACT,cAAA,oBAAkBA,qBAAA,CAAC,IAAA,EAAA,EAAG,QAAA,EAAA,aAAA,EAAW,CAAA;AAAA,MACjC,eAAA,oBAAmBA,qBAAA,CAAC,IAAA,EAAA,EAAG,QAAA,EAAA,OAAA,EAAK;AAAA,KAAA,EAC/B,CAAA,EACF,CAAA;AAAA,oBACAA,qBAAA,CAAC,OAAA,EAAA,EACE,QAAA,EAAA,KAAA,CAAM,GAAA,CAAI,CAAC,IAAA,EAAM,KAAA,qBAChBD,sBAAA,CAAC,IAAA,EAAA,EAAiC,WAAA,EAAW,IAAA,CAAK,IAAA,EAChD,QAAA,EAAA;AAAA,sBAAAC,qBAAA,CAAC,IAAA,EAAA,EAAG,WAAU,WAAA,EACZ,QAAA,kBAAAA,qBAAA;AAAA,QAAC,GAAA;AAAA,QAAA;AAAA,UACC,aAAW,IAAA,CAAK,IAAA;AAAA,UAChB,OAAA,EAAS,CAAC,CAAA,KAAM;AACd,YAAA,CAAA,CAAE,cAAA,EAAe;AACjB,YAAA,CAAA,CAAE,eAAA,EAAgB;AAClB,YAAA,WAAA,GAAc,IAAA,CAAK,MAAM,CAAC,CAAA;AAAA,UAC5B,CAAA;AAAA,UACA,SAAA,EAAU,eAAA;AAAA,UACV,KAAA,EAAO,EAAE,MAAA,EAAQ,SAAA,EAAU;AAAA,UAE1B,yBAAe,IAAI;AAAA;AAAA,OACtB,EACF,CAAA;AAAA,4CACC,IAAA,EAAA,EAAG,SAAA,EAAU,YAAA,EAAc,QAAA,EAAA,IAAA,CAAK,aAAa,GAAA,EAAI,CAAA;AAAA,4CACjD,IAAA,EAAA,EAAG,SAAA,EAAU,UAAA,EAAY,QAAA,EAAA,IAAA,CAAK,WAAW,GAAA,EAAI,CAAA;AAAA,4CAC7C,IAAA,EAAA,EAAG,SAAA,EAAU,aAAA,EACX,QAAA,EAAA,IAAA,CAAK,UAAU,MAAM;AACpB,QAAA,MAAM,UAAA,GAAa,OAAO,IAAA,CAAK,MAAA,KAAW,YAAY,aAAA,CAAc,IAAA,CAAK,KAAK,MAAM,CAAA;AACpF,QAAA,MAAM,MAAA,GAAS,aAAa,aAAA,CAAc,IAAA,CAAK,MAAM,CAAA,GAAI,EAAE,MAAA,EAAQ,IAAA,CAAK,MAAA,EAAO;AAC/E,QAAA,MAAM,WAAA,GAAc,MAAA,CAAO,KAAA,IAAS,MAAA,CAAO,MAAA;AAE3C,QAAA,uBACEA,qBAAA;AAAA,UAAC,GAAA;AAAA,UAAA;AAAA,YACC,aAAW,MAAA,CAAO,MAAA;AAAA,YAClB,OAAA,EAAS,CAAC,CAAA,KAAM;AACd,cAAA,CAAA,CAAE,cAAA,EAAe;AACjB,cAAA,CAAA,CAAE,eAAA,EAAgB;AAClB,cAAA,WAAA,GAAc,MAAA,CAAO,QAAQ,CAAC,CAAA;AAAA,YAChC,CAAA;AAAA,YACA,SAAA,EAAU,eAAA;AAAA,YACV,KAAA,EAAO,EAAE,MAAA,EAAQ,SAAA,EAAU;AAAA,YAE1B,QAAA,EAAA;AAAA;AAAA,SACH;AAAA,MAEJ,CAAA,MAAO,GAAA,EACT,CAAA;AAAA,MACC,cAAA,oBACCA,qBAAA,CAAC,IAAA,EAAA,EAAG,SAAA,EAAU,oBACV,QAAA,EAAA,CAAA,MAAM;AACN,QAAA,MAAM,aAAa,aAAA,GAAgB,IAAA,CAAK,QAAQ,CAAA,IAAK,KAAK,QAAA,CAAS,gBAAA;AACnE,QAAA,IAAI,CAAC,YAAY,OAAO,GAAA;AAGxB,QAAA,IAAI,MAAA;AACJ,QAAA,MAAM,aAAA,GAAgB,OAAO,UAAU,CAAA;AAEvC,QAAA,IAAI,aAAA,CAAc,IAAA,CAAK,aAAa,CAAA,EAAG;AAErC,UAAA,MAAA,GAAS,cAAc,aAAa,CAAA;AAAA,QACtC,CAAA,MAAA,IAAW,aAAA,CAAc,QAAA,CAAS,GAAG,CAAA,EAAG;AAEtC,UAAA,MAAM,KAAA,GAAQ,aAAA,CAAc,KAAA,CAAM,GAAG,CAAA;AACrC,UAAA,MAAA,GAAS;AAAA,YACP,MAAA,EAAQ,KAAA,CAAM,CAAC,CAAA,CAAE,IAAA,EAAK;AAAA,YACtB,KAAA,EAAO,KAAA,CAAM,CAAC,CAAA,EAAG,IAAA;AAAK,WACxB;AAAA,QACF,CAAA,MAAO;AAEL,UAAA,MAAA,GAAS,EAAE,MAAA,EAAQ,aAAA,CAAc,IAAA,EAAK,EAAE;AAAA,QAC1C;AAEA,QAAA,MAAM,WAAA,GAAc,MAAA,CAAO,KAAA,IAAS,MAAA,CAAO,MAAA;AAE3C,QAAA,uBACEA,qBAAA;AAAA,UAAC,GAAA;AAAA,UAAA;AAAA,YACC,aAAW,MAAA,CAAO,MAAA;AAAA,YAClB,OAAA,EAAS,CAAC,CAAA,KAAM;AACd,cAAA,CAAA,CAAE,cAAA,EAAe;AACjB,cAAA,CAAA,CAAE,eAAA,EAAgB;AAClB,cAAA,WAAA,GAAc,MAAA,CAAO,QAAQ,CAAC,CAAA;AAAA,YAChC,CAAA;AAAA,YACA,SAAA,EAAU,eAAA;AAAA,YACV,KAAA,EAAO,EAAE,MAAA,EAAQ,SAAA,EAAU;AAAA,YAE1B,QAAA,EAAA,aAAA,GAAgB,MAAA,CAAO,MAAM,CAAA,IAAK;AAAA;AAAA,SACrC;AAAA,MAEJ,IAAG,EACL,CAAA;AAAA,MAED,eAAA,oBACCA,qBAAA,CAAC,IAAA,EAAA,EAAG,SAAA,EAAU,mBAAA,EACX,QAAA,EAAA,OAAO,IAAA,CAAK,QAAA,CAAS,iBAAA,KAAsB,QAAA,GAAW,IAAA,CAAK,QAAA,CAAS,oBAAoB,GAAA,EAC3F;AAAA,KAAA,EAAA,EAtFK,GAAG,IAAA,CAAK,IAAI,IAAI,KAAK,CAAA,CAwF9B,CACD,CAAA,EACH;AAAA,GAAA,EACF,CAAA,EACF,CAAA;AAEJ;AASO,MAAM,4BAAsE,CAAC;AAAA,EAClF,cAAA;AAAA,EACA,kBAAA;AAAA,EACA,eAAA;AAAA,EACA,mBAAA;AAAA,EACA,GAAG;AACL,CAAA,KAAM;AACJ,EAAA,uBACED,sBAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,+BAAA,EACb,QAAA,EAAA;AAAA,oBAAAA,sBAAA,CAAC,KAAA,EAAA,EAAI,WAAU,gCAAA,EACb,QAAA,EAAA;AAAA,sBAAAA,sBAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,SAAA,EAAU,8BAAA;AAAA,UACV,OAAA,EAAS,kBAAA;AAAA,UACT,KAAA,EAAO;AAAA,YACL,YAAA,EAAc,KAAA;AAAA,YACd,WAAA,EAAa,KAAA;AAAA,YACb,OAAA,EAAS,SAAA;AAAA,YACT,MAAA,EAAQ,SAAA;AAAA,YACR,QAAA,EAAU;AAAA,WACZ;AAAA,UAEC,QAAA,EAAA;AAAA,YAAA,cAAA,GAAiB,MAAA,GAAS,MAAA;AAAA,YAAO;AAAA;AAAA;AAAA,OACpC;AAAA,sBACAA,sBAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,SAAA,EAAU,+BAAA;AAAA,UACV,OAAA,EAAS,mBAAA;AAAA,UACT,KAAA,EAAO;AAAA,YACL,YAAA,EAAc,KAAA;AAAA,YACd,OAAA,EAAS,SAAA;AAAA,YACT,MAAA,EAAQ,SAAA;AAAA,YACR,QAAA,EAAU;AAAA,WACZ;AAAA,UAEC,QAAA,EAAA;AAAA,YAAA,eAAA,GAAkB,MAAA,GAAS,MAAA;AAAA,YAAO;AAAA;AAAA;AAAA;AACrC,KAAA,EACF,CAAA;AAAA,oBACAC,qBAAA,CAAC,eAAA,EAAA,EAAiB,GAAG,KAAA,EAAO,gBAAgC,eAAA,EAAkC;AAAA,GAAA,EAChG,CAAA;AAEJ;;;;"}