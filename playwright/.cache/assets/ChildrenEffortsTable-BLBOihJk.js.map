{"version":3,"file":"ChildrenEffortsTable-BLBOihJk.js","sources":["../../../src/presentation/components/ChildrenEffortsTable.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nexport interface ChildEffort {\n  path: string;\n  title: string;\n  status?: string;\n  priority?: string;\n  effort?: number;\n  progress?: number;\n  metadata: Record<string, any>;\n}\n\nexport interface ChildrenEffortsTableProps {\n  children: ChildEffort[];\n  showStatus?: boolean;\n  showPriority?: boolean;\n  showEffort?: boolean;\n  showProgress?: boolean;\n  onChildClick?: (path: string) => void;\n}\n\nconst STATUS_COLORS: Record<string, string> = {\n  active: 'status-active',\n  completed: 'status-completed',\n  blocked: 'status-blocked',\n  pending: 'status-pending',\n};\n\nconst PRIORITY_COLORS: Record<string, string> = {\n  high: 'priority-high',\n  medium: 'priority-medium',\n  low: 'priority-low',\n};\n\nexport const ChildrenEffortsTable: React.FC<ChildrenEffortsTableProps> = ({\n  children,\n  showStatus = true,\n  showPriority = true,\n  showEffort = true,\n  showProgress = true,\n  onChildClick,\n}) => {\n  const totals = useMemo(() => {\n    return children.reduce(\n      (acc, child) => ({\n        effort: acc.effort + (child.effort || 0),\n        progress: acc.progress + (child.progress || 0),\n      }),\n      { effort: 0, progress: 0 }\n    );\n  }, [children]);\n\n  const averageProgress = children.length > 0 ? totals.progress / children.length : 0;\n\n  const renderStatusBadge = (status?: string) => {\n    if (!status) return <span className=\"status-badge\">-</span>;\n    const colorClass = STATUS_COLORS[status.toLowerCase()] || 'status-default';\n    return <span className={`status-badge ${colorClass}`}>{status}</span>;\n  };\n\n  const renderPriorityBadge = (priority?: string) => {\n    if (!priority) return <span className=\"priority-badge\">-</span>;\n    const colorClass = PRIORITY_COLORS[priority.toLowerCase()] || 'priority-default';\n    return <span className={`priority-badge ${colorClass}`}>{priority}</span>;\n  };\n\n  const renderProgressBar = (progress?: number) => {\n    if (progress === undefined) return <span>-</span>;\n    return (\n      <div className=\"progress-bar-container\">\n        <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\n          <span className=\"progress-text\">{progress}%</span>\n        </div>\n      </div>\n    );\n  };\n\n  if (children.length === 0) {\n    return <div className=\"no-children\">No child efforts found</div>;\n  }\n\n  return (\n    <div className=\"exocortex-children-efforts\">\n      <table className=\"children-efforts-table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            {showStatus && <th>Status</th>}\n            {showPriority && <th>Priority</th>}\n            {showEffort && <th>Effort</th>}\n            {showProgress && <th>Progress</th>}\n          </tr>\n        </thead>\n        <tbody>\n          {children.map(child => (\n            <tr key={child.path} data-path={child.path}>\n              <td>\n                <a\n                  href=\"#\"\n                  onClick={e => {\n                    e.preventDefault();\n                    onChildClick?.(child.path);\n                  }}\n                  className=\"internal-link\"\n                >\n                  {child.title}\n                </a>\n              </td>\n              {showStatus && <td>{renderStatusBadge(child.status)}</td>}\n              {showPriority && <td>{renderPriorityBadge(child.priority)}</td>}\n              {showEffort && <td>{child.effort || '-'}</td>}\n              {showProgress && <td>{renderProgressBar(child.progress)}</td>}\n            </tr>\n          ))}\n        </tbody>\n        <tfoot>\n          <tr className=\"totals-row\">\n            <td>\n              <strong>Totals ({children.length} items)</strong>\n            </td>\n            {showStatus && <td>-</td>}\n            {showPriority && <td>-</td>}\n            {showEffort && (\n              <td>\n                <strong>{totals.effort}</strong>\n              </td>\n            )}\n            {showProgress && (\n              <td>\n                <strong>{averageProgress.toFixed(1)}%</strong>\n              </td>\n            )}\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  );\n};\n"],"names":["useMemo","jsx","jsxs"],"mappings":"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"}