# Stage 1: Base image with Obsidian (cached for long time)
FROM mcr.microsoft.com/playwright:v1.55.1-jammy AS obsidian-base

# Install xvfb and dependencies for headless Obsidian
RUN apt-get update && apt-get install -y \
    xvfb \
    libgbm1 \
    libnss3 \
    libxss1 \
    libasound2 \
    libgtk-3-0 \
    libgdk-pixbuf2.0-0 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxi6 \
    libxrandr2 \
    libxtst6 \
    wget \
    unzip \
    squashfs-tools \
    zlib1g \
    libfuse2 \
    && rm -rf /var/lib/apt/lists/*

# Download and extract Obsidian (cached until version changes)
WORKDIR /opt
RUN ARCH=$(uname -m) && \
    if [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then \
        OBSIDIAN_FILE="obsidian-1.9.14-arm64.tar.gz"; \
        OBSIDIAN_DIR="obsidian-1.9.14-arm64"; \
    else \
        OBSIDIAN_FILE="obsidian-1.9.14.tar.gz"; \
        OBSIDIAN_DIR="obsidian-1.9.14"; \
    fi && \
    wget -q https://github.com/obsidianmd/obsidian-releases/releases/download/v1.9.14/$OBSIDIAN_FILE \
    && tar -xzf $OBSIDIAN_FILE \
    && mv $OBSIDIAN_DIR obsidian \
    && rm $OBSIDIAN_FILE

# Stage 2: Dependencies (cached until package.json changes)
FROM obsidian-base AS dependencies

WORKDIR /app

# Copy only package files for npm cache
COPY package*.json ./
RUN npm ci --prefer-offline --no-audit

# Stage 3: Application (rebuilt on code changes)
FROM dependencies AS app

# Copy entrypoint first (rarely changes)
COPY docker-entrypoint-e2e.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Copy source code
COPY . .

# Build plugin
RUN npm run build

# Create test vault and install plugin
RUN mkdir -p tests/e2e/test-vault/.obsidian/plugins/exocortex \
    && cp main.js manifest.json tests/e2e/test-vault/.obsidian/plugins/exocortex/

# Environment variables
# DISPLAY will be set automatically by xvfb-run
ENV OBSIDIAN_PATH=/opt/obsidian/obsidian
ENV OBSIDIAN_VAULT=/app/tests/e2e/test-vault

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["npm", "run", "test:e2e"]
