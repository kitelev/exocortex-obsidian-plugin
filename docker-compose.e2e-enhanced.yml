version: '3.8'

services:
  # Main Enhanced E2E Test Runner
  e2e-enhanced-tests:
    build:
      context: .
      dockerfile: Dockerfile.e2e-enhanced
      args:
        NODE_VERSION: "20"
        OBSIDIAN_VERSION: "1.5.12"
    container_name: exocortex-e2e-enhanced
    environment:
      - NODE_ENV=test
      - CI=true
      - DISPLAY=:99
      - FORCE_COLOR=1
      - OBSIDIAN_VAULT_PATH=/home/obsidian/vault
      - TEST_TIMEOUT=300000
      - SCREENSHOT_PATH=/workspace/test-results/screenshots
      - VIDEO_PATH=/workspace/test-results/videos
    volumes:
      # Source code and tests (read-only for isolation)
      - ./src:/workspace/src:ro
      - ./tests:/workspace/tests:ro
      - ./package.json:/workspace/package.json:ro
      - ./tsconfig.json:/workspace/tsconfig.json:ro
      - ./playwright.config.ts:/workspace/playwright.config.ts:ro
      - ./wdio.conf.ts:/workspace/wdio.conf.ts:ro
      # Built plugin files
      - ./main.js:/workspace/main.js:ro
      - ./manifest.json:/workspace/manifest.json:ro
      - ./styles.css:/workspace/styles.css:ro
      # Test results (writable)
      - ./test-results:/workspace/test-results
      - ./playwright-report:/workspace/playwright-report
      - ./wdio-logs:/workspace/wdio-logs
      # Shared memory for browser performance
      - /dev/shm:/dev/shm
    shm_size: 2gb
    # Resource limits for consistent performance
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    # Security settings
    security_opt:
      - seccomp:unconfined
    # Networking
    networks:
      - e2e-enhanced-network
    # Health check
    healthcheck:
      test: ["CMD", "pgrep", "Xvfb"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Real Obsidian Remote Instance (Alternative approach)
  obsidian-remote-enhanced:
    image: ghcr.io/sytone/obsidian-remote:latest
    platform: linux/amd64
    container_name: obsidian-remote-enhanced
    ports:
      - "8085:8080"
    volumes:
      # Enhanced test vault
      - ./tests/e2e/test-vault:/vaults/test-vault:ro
      # Plugin files directly mounted
      - ./main.js:/config/plugins/exocortex/main.js:ro
      - ./manifest.json:/config/plugins/exocortex/manifest.json:ro
      - ./styles.css:/config/plugins/exocortex/styles.css:ro
      # Configuration
      - ./tests/e2e/docker/obsidian-config:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - CUSTOM_PORT=8080
      - WEBPAGE_TITLE=Exocortex Enhanced E2E Tests
      - OBSIDIAN_VERSION=1.5.12
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - e2e-enhanced-network
    restart: unless-stopped

  # Test Result Analyzer
  test-analyzer:
    build:
      context: tests/e2e/docker
      dockerfile: Dockerfile.analyzer
    container_name: test-analyzer-enhanced
    depends_on:
      e2e-enhanced-tests:
        condition: service_completed_successfully
    volumes:
      - ./test-results:/workspace/test-results
      - ./playwright-report:/workspace/playwright-report
      - ./wdio-logs:/workspace/wdio-logs
    environment:
      - ANALYSIS_MODE=comprehensive
      - GENERATE_VISUAL_DIFF=true
      - CREATE_VIDEO_SUMMARY=true
    networks:
      - e2e-enhanced-network

  # Performance Monitor
  performance-monitor:
    image: prom/prometheus:latest
    container_name: performance-monitor
    ports:
      - "9090:9090"
    volumes:
      - ./tests/e2e/docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=1h'
      - '--web.enable-lifecycle'
    networks:
      - e2e-enhanced-network
    profiles:
      - monitoring

  # VNC Server for debugging (optional)
  vnc-server:
    build:
      context: tests/e2e/docker
      dockerfile: Dockerfile.vnc
    container_name: vnc-debug-server
    ports:
      - "5900:5900"  # VNC
      - "6080:6080"  # noVNC web interface
    volumes:
      - /dev/shm:/dev/shm
    environment:
      - VNC_PW=exocortex123
      - DISPLAY=:99
    networks:
      - e2e-enhanced-network
    profiles:
      - debug

volumes:
  test-results-enhanced:
    driver: local
  playwright-reports:
    driver: local
  obsidian-config-enhanced:
    driver: local

networks:
  e2e-enhanced-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
    driver_opts:
      com.docker.network.bridge.name: e2e-enhanced

# Named configurations for different test scenarios
# Usage examples:
# docker-compose -f docker-compose.e2e-enhanced.yml up e2e-enhanced-tests
# docker-compose -f docker-compose.e2e-enhanced.yml --profile debug up  # With VNC debugging
# docker-compose -f docker-compose.e2e-enhanced.yml --profile monitoring up  # With performance monitoring