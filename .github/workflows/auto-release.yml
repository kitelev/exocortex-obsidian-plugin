name: Auto Release

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: write

jobs:
  auto-release:
    runs-on: ubuntu-latest
    # Only run if CI workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if release needed
        id: check
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Check if tag already exists
          if git tag -l "v$CURRENT_VERSION" | grep -q "v$CURRENT_VERSION"; then
            echo "Tag v$CURRENT_VERSION already exists, skipping release"
            echo "needs_release=false" >> $GITHUB_OUTPUT
          else
            echo "Tag v$CURRENT_VERSION does not exist, will create release"
            echo "needs_release=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        if: steps.check.outputs.needs_release == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        if: steps.check.outputs.needs_release == 'true'
        run: npm ci

      - name: Build plugin
        if: steps.check.outputs.needs_release == 'true'
        run: npm run build

      - name: Create release package
        if: steps.check.outputs.needs_release == 'true'
        run: |
          mkdir release-files
          cp main.js manifest.json release-files/
          [ -f styles.css ] && cp styles.css release-files/ || true
          cd release-files
          zip -r ../${{ github.event.repository.name }}.zip ./*

      - name: Extract changelog for version
        if: steps.check.outputs.needs_release == 'true'
        id: changelog
        run: |
          VERSION="${{ steps.check.outputs.version }}"
          CHANGELOG=$(awk "/## \[$VERSION\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md)
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details."
          fi
          echo "$CHANGELOG" > release_notes.md

      - name: Create GitHub Release
        if: steps.check.outputs.needs_release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.check.outputs.version }}
          files: |
            main.js
            manifest.json
            ${{ github.event.repository.name }}.zip
          body_path: release_notes.md
          draft: false
          prerelease: false
