name: CI Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        # Install additional dependencies that might be needed in CI
        npm install --save-dev jsdom
        
    - name: Build project
      run: npm run build
      
    - name: Run unit tests
      run: npm run test:unit
      env:
        CI: true
        
    - name: Run integration tests
      run: npm run test:integration
      env:
        CI: true
        
    - name: Run E2E tests
      run: npm run test:e2e:all
      env:
        CI: true
        
    - name: Generate test coverage
      run: npm run test:coverage
      env:
        CI: true
        
    - name: Upload coverage to Codecov
      if: matrix.node-version == '18.x'
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check TypeScript compilation
      run: npx tsc --noEmit --skipLibCheck
      
    - name: Build plugin before verification
      run: npm run build
      
    - name: Verify build artifacts
      run: |
        # Ensure main.js is built and not empty
        test -f main.js
        test -s main.js
        echo "✅ Build artifacts verified"
        
    - name: Validate Obsidian plugin
      run: |
        # Run plugin validation script
        npm run validate
        echo "✅ Plugin validation passed"
        
  ui-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Install system dependencies for UI tests
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          xvfb \
          herbstluftwm \
          libnss3-dev \
          libatk-bridge2.0-dev \
          libgtk-3-dev \
          libgbm-dev \
          libasound2-dev
      
    - name: Cache Obsidian versions
      uses: actions/cache@v4
      with:
        path: ~/.cache/wdio-obsidian-service
        key: obsidian-${{ runner.os }}-${{ hashFiles('wdio.conf.ci.ts') }}
        restore-keys: |
          obsidian-${{ runner.os }}-
    
    - name: Setup virtual display for Linux
      run: |
        export DISPLAY=:99.0
        Xvfb :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset &
        sleep 3
        herbstluftwm &
        sleep 1
        echo "DISPLAY=:99.0" >> $GITHUB_ENV
    
    - name: Run UI tests
      run: npm run test:ui:ci
      env:
        CI: true
        DISPLAY: :99.0
        NODE_OPTIONS: --max-old-space-size=4096
        WDIO_LOG_LEVEL: warn
      timeout-minutes: 30
      
    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: ui-test-artifacts-${{ github.run_number }}
        path: |
          screenshots/
          wdio-logs/
        retention-days: 7

  test-build-install:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build plugin
      run: npm run build
      
    - name: Test plugin loading in minimal environment
      run: |
        # Create minimal test environment
        mkdir -p test-vault/.obsidian/plugins/exocortex
        cp main.js manifest.json test-vault/.obsidian/plugins/exocortex/
        
        # Verify plugin files are valid
        node -e "
          const fs = require('fs');
          const path = require('path');
          
          // Test manifest
          const manifest = JSON.parse(fs.readFileSync('manifest.json', 'utf8'));
          console.log('✅ Manifest valid:', manifest.id);
          
          // Test main.js syntax
          const mainJs = fs.readFileSync('main.js', 'utf8');
          new Function('module', 'exports', 'require', mainJs);
          console.log('✅ Plugin code syntactically valid');
          
          console.log('✅ Plugin ready for installation');
        "