name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload built plugin
        uses: actions/upload-artifact@v4
        with:
          name: plugin-build
          path: |
            packages/obsidian-plugin/main.js
            packages/obsidian-plugin/manifest.json
          retention-days: 1

  typecheck:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run check:types

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint
        continue-on-error: true

  test-unit:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image: mcr.microsoft.com/playwright:v1.55.1-jammy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit and UI tests only (component tests have separate job)
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          npm run test:unit && npm run test:ui

  test-coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image: mcr.microsoft.com/playwright:v1.55.1-jammy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          export COVERAGE=true
          ./scripts/test-ci-batched.sh || exit 1

      - name: Generate coverage summary
        if: always()
        run: |
          if [ -f coverage/lcov.info ]; then
            echo "## Code Coverage Report" > coverage-summary.md
            echo "" >> coverage-summary.md
            cat coverage/lcov-report/index.html | grep -A 5 "class='fraction'" | head -20 >> coverage-summary.md || true
            echo "" >> coverage-summary.md
            echo "Full report available in coverage artifacts" >> coverage-summary.md
          fi

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage/
            coverage-summary.md
          retention-days: 30
          if-no-files-found: ignore

  test-bdd:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check BDD Coverage
        run: npm run bdd:check
        continue-on-error: false

      - name: Generate BDD Coverage Report
        if: always()
        run: npm run bdd:report

      - name: Upload BDD Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bdd-coverage-report
          path: bdd-coverage-report.md
          retention-days: 30
          if-no-files-found: ignore

  test-component:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container:
      image: mcr.microsoft.com/playwright:v1.55.1-jammy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run component tests
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          npm run test:component

      - name: Upload component test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: component-test-report
          path: playwright-report-ct/
          retention-days: 30
          if-no-files-found: ignore

      - name: Upload component test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: component-test-results
          path: test-results/
          retention-days: 7
          if-no-files-found: ignore

  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built plugin
        uses: actions/download-artifact@v4
        with:
          name: plugin-build
          path: .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build E2E Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: packages/obsidian-plugin/Dockerfile.e2e
          load: true
          tags: exocortex-e2e:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run E2E tests
        run: |
          mkdir -p test-results-e2e playwright-report-e2e
          docker run --init --rm \
            -v $PWD/test-results-e2e:/app/test-results \
            -v $PWD/playwright-report-e2e:/app/playwright-report-e2e \
            exocortex-e2e npm run test:e2e

      - name: Upload E2E test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-report
          path: playwright-report-e2e/
          retention-days: 30
          if-no-files-found: ignore

      - name: Upload E2E test results (screenshots)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: test-results-e2e/
          retention-days: 7
          if-no-files-found: ignore

  build-and-test:
    runs-on: ubuntu-latest
    needs: [build, typecheck, lint, test-unit, test-coverage, test-bdd, test-component]
    steps:
      - name: All checks passed
        run: echo "All parallel checks completed successfully"
