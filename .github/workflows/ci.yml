name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.1-jammy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run check:types

      - name: Lint
        run: npm run lint
        continue-on-error: true

      - name: Build
        run: npm run build

      - name: Run all tests (unit + BDD + component)
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          timeout 180s npm test || exit 1

      - name: Check BDD Coverage
        run: npm run bdd:check
        continue-on-error: false

      - name: Generate BDD Coverage Report
        if: always()
        run: npm run bdd:report

      - name: Upload BDD Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bdd-coverage-report
          path: bdd-coverage-report.md
          retention-days: 30
          if-no-files-found: ignore

      - name: Upload component test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: component-test-report
          path: playwright-report-ct/
          retention-days: 30
          if-no-files-found: ignore

      - name: Upload component test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: component-test-results
          path: test-results/
          retention-days: 7
          if-no-files-found: ignore

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build plugin
        run: npm run build

      - name: Build E2E Docker image
        run: docker build -f Dockerfile.e2e -t exocortex-e2e .

      - name: Run E2E tests
        run: docker run --rm exocortex-e2e npm run test:e2e

      - name: Upload E2E test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-report
          path: playwright-report-e2e/
          retention-days: 30
          if-no-files-found: ignore
