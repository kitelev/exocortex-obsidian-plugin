name: Fast Feedback CI

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

concurrency:
  group: fast-feedback-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20.x'
  CACHE_VERSION: v1

jobs:
  # Stage 1: Quick validation (30s)
  validation:
    name: Quick Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      build-cache-key: ${{ steps.build-cache.outputs.cache-key }}
      deps-cache-key: ${{ steps.deps-cache.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Dependencies
        id: deps-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .jest-cache
          key: deps-${{ runner.os }}-${{ hashFiles('package-lock.json') }}-${{ env.CACHE_VERSION }}
          restore-keys: |
            deps-${{ runner.os }}-${{ hashFiles('package-lock.json') }}-
            deps-${{ runner.os }}-

      - name: Install Dependencies
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit

      - name: TypeScript Check
        run: npx tsc --noEmit

      - name: Build Plugin
        run: npm run build

      - name: Cache Build Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            main.js
            manifest.json
            styles.css
            dist/
            .tsbuildinfo
          key: build-${{ runner.os }}-${{ github.sha }}-${{ env.CACHE_VERSION }}

      - name: Validate Manifest
        run: |
          if [ ! -f manifest.json ]; then
            echo "‚ùå manifest.json not found"
            exit 1
          fi
          
          # Check required fields
          node -e "
            const manifest = require('./manifest.json');
            const required = ['id', 'name', 'version', 'minAppVersion', 'description', 'author'];
            const missing = required.filter(field => !manifest[field]);
            if (missing.length > 0) {
              console.error('‚ùå Missing required fields:', missing.join(', '));
              process.exit(1);
            }
            console.log('‚úÖ Manifest validation passed');
          "

      - name: Check Bundle Size
        run: |
          SIZE=$(stat -f%z main.js 2>/dev/null || stat -c%s main.js)
          SIZE_MB=$(echo "scale=2; $SIZE / 1048576" | bc)
          echo "üì¶ Bundle size: ${SIZE_MB}MB"
          
          if (( $(echo "$SIZE_MB > 5" | bc -l) )); then
            echo "‚ö†Ô∏è Warning: Bundle size exceeds 5MB"
          fi

  # Stage 2: Parallel test execution (2-3 minutes)
  test-matrix:
    name: Test Suite - ${{ matrix.test-type }}
    needs: validation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        test-type: [unit, integration, lint]
        include:
          - test-type: unit
            command: "npm run test:unit -- --maxWorkers=2"
            coverage: true
          - test-type: integration  
            command: "npm run test:integration -- --maxWorkers=1"
            coverage: true
          - test-type: lint
            command: "npm run lint"
            coverage: false
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore Dependencies Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .jest-cache
          key: deps-${{ runner.os }}-${{ hashFiles('package-lock.json') }}-${{ env.CACHE_VERSION }}
          restore-keys: |
            deps-${{ runner.os }}-${{ hashFiles('package-lock.json') }}-
            deps-${{ runner.os }}-

      - name: Restore Build Cache
        if: matrix.test-type != 'lint'
        uses: actions/cache@v4
        with:
          path: |
            main.js
            manifest.json
            styles.css
            dist/
            .tsbuildinfo
          key: build-${{ runner.os }}-${{ github.sha }}-${{ env.CACHE_VERSION }}

      - name: Install Dependencies
        run: |
          if [ ! -d "node_modules" ]; then
            npm ci --prefer-offline --no-audit
          fi

      - name: Run ${{ matrix.test-type }} Tests
        run: ${{ matrix.command }}
        env:
          NODE_OPTIONS: --max-old-space-size=4096
          CI: true

      - name: Upload Coverage
        if: matrix.coverage && success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.test-type }}
          name: ${{ matrix.test-type }}-coverage
          fail_ci_if_error: false

  # Stage 3: Quick UI smoke test (1 minute)
  ui-smoke-test:
    name: UI Smoke Test
    needs: validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore Dependencies Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .jest-cache
          key: deps-${{ runner.os }}-${{ hashFiles('package-lock.json') }}-${{ env.CACHE_VERSION }}

      - name: Install Dependencies
        run: |
          if [ ! -d "node_modules" ]; then
            npm ci --prefer-offline --no-audit
          fi

      - name: Setup Display
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3

      - name: Run UI Smoke Tests
        run: |
          export DISPLAY=:99
          npm run test:ui:smoke || true
        env:
          CI: true
          DISPLAY: :99

  # Final status check
  status-check:
    name: CI Status
    needs: [validation, test-matrix, ui-smoke-test]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Check Status
        run: |
          if [[ "${{ needs.validation.result }}" != "success" || 
                "${{ needs.test-matrix.result }}" != "success" ]]; then
            echo "‚ùå CI Failed"
            echo "Validation: ${{ needs.validation.result }}"
            echo "Tests: ${{ needs.test-matrix.result }}"
            echo "UI: ${{ needs.ui-smoke-test.result }}"
            exit 1
          fi
          echo "‚úÖ All checks passed!"
          echo "‚è±Ô∏è Fast feedback complete"