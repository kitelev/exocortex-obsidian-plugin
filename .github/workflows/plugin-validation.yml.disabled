name: Plugin Validation

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  validate-plugin:
    name: Validate Obsidian Plugin
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build plugin
        run: npm run build
        
      - name: Run comprehensive plugin validation
        run: npm run validate
        
      - name: Test changelog generation
        run: |
          # Test changelog generation doesn't break
          npm run generate-changelog --help || echo "Changelog help ok"
          
      - name: Test release preparation (dry run)
        run: |
          # Test release preparation without actually making changes
          npm run prepare-release -- --skip-git-checks --help || echo "Release prep help ok"
          
      - name: Validate plugin loading syntax
        run: |
          # Basic JavaScript syntax validation
          node -c main.js
          echo "‚úÖ Plugin JavaScript syntax is valid"
          
      - name: Check plugin file sizes
        run: |
          # Ensure build outputs are reasonable
          MAIN_SIZE=$(stat -c%s main.js 2>/dev/null || stat -f%z main.js 2>/dev/null)
          echo "main.js size: ${MAIN_SIZE} bytes"
          
          if [ "$MAIN_SIZE" -gt 5242880 ]; then  # 5MB
            echo "‚ö†Ô∏è main.js is larger than 5MB (${MAIN_SIZE} bytes)"
            exit 1
          fi
          
          if [ "$MAIN_SIZE" -lt 1000 ]; then
            echo "‚ùå main.js seems too small (${MAIN_SIZE} bytes)"
            exit 1
          fi
          
          echo "‚úÖ main.js size is acceptable"
          
      - name: Validate manifest compatibility
        run: |
          # Check manifest against Obsidian standards
          node -e "
            const manifest = require('./manifest.json');
            
            // Check required fields
            const required = ['id', 'name', 'version', 'minAppVersion'];
            for (const field of required) {
              if (!manifest[field]) {
                console.error('Missing required field:', field);
                process.exit(1);
              }
            }
            
            // Check ID format
            if (!/^[a-z0-9-]+$/.test(manifest.id)) {
              console.error('Plugin ID must only contain lowercase letters, numbers, and hyphens');
              process.exit(1);
            }
            
            // Check version format
            if (!/^\d+\.\d+\.\d+(-[a-zA-Z0-9-.]+)?$/.test(manifest.version)) {
              console.error('Version must follow semantic versioning');
              process.exit(1);
            }
            
            // Check minAppVersion format  
            if (!/^\d+\.\d+\.\d+$/.test(manifest.minAppVersion)) {
              console.error('minAppVersion must follow semantic versioning');
              process.exit(1);
            }
            
            console.log('‚úÖ Manifest validation passed');
            console.log('Plugin ID:', manifest.id);
            console.log('Version:', manifest.version);
            console.log('Min Obsidian version:', manifest.minAppVersion);
          "
          
      - name: Check versions.json compatibility
        run: |
          # Validate versions.json structure
          node -e "
            const versions = require('./versions.json');
            const manifest = require('./manifest.json');
            
            if (typeof versions !== 'object' || Array.isArray(versions)) {
              console.error('versions.json must be an object');
              process.exit(1);
            }
            
            // Check if current version exists in versions.json
            if (!versions[manifest.version]) {
              console.error('Current version not found in versions.json');
              process.exit(1);
            }
            
            console.log('‚úÖ versions.json validation passed');
            console.log('Supported versions:', Object.keys(versions).length);
          "
          
      - name: Test plugin in minimal environment
        run: |
          # Create a minimal test setup
          mkdir -p test-env/.obsidian/plugins/exocortex
          cp main.js manifest.json test-env/.obsidian/plugins/exocortex/
          if [ -f styles.css ]; then
            cp styles.css test-env/.obsidian/plugins/exocortex/
          fi
          
          # Basic plugin structure validation
          cd test-env/.obsidian/plugins/exocortex
          
          # Check all required files are present
          test -f main.js || exit 1
          test -f manifest.json || exit 1
          
          # Check manifest can be loaded
          node -e "console.log('Plugin:', require('./manifest.json').name)"
          
          echo "‚úÖ Plugin files ready for Obsidian installation"
          
      - name: Summary
        if: always()
        run: |
          echo "üéâ Plugin validation completed!"
          echo "The plugin follows Obsidian community standards and is ready for release."