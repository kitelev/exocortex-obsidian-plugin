# Enhanced Dockerfile for Real E2E Tests with Latest Obsidian + Xvfb
FROM node:20-bullseye

# Set up environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    DISPLAY=:99 \
    OBSIDIAN_VERSION=1.5.12 \
    NODE_ENV=test \
    CI=true \
    FORCE_COLOR=1

# Install system dependencies for Electron, Xvfb, and UI testing
RUN apt-get update && apt-get install -y \
    # X11 and display server
    xvfb \
    x11vnc \
    fluxbox \
    x11-utils \
    x11-xserver-utils \
    xauth \
    # Electron dependencies
    libnss3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libxss1 \
    libasound2 \
    # Fonts and rendering
    fonts-liberation \
    fonts-dejavu-core \
    fontconfig \
    # System utilities
    curl \
    wget \
    bash \
    git \
    jq \
    unzip \
    # Desktop environment
    dbus-x11 \
    # AppImage support
    fuse3 \
    && rm -rf /var/lib/apt/lists/* \
    && fc-cache -f -v

# Install latest Obsidian AppImage
WORKDIR /opt
RUN wget -O obsidian.AppImage "https://github.com/obsidianmd/obsidian-releases/releases/download/v${OBSIDIAN_VERSION}/Obsidian-${OBSIDIAN_VERSION}.AppImage" \
    && chmod +x obsidian.AppImage \
    && ./obsidian.AppImage --appimage-extract \
    && rm obsidian.AppImage \
    && mv squashfs-root obsidian \
    && ln -sf /opt/obsidian/obsidian /usr/local/bin/obsidian

# Create obsidian user for security
RUN useradd -m -s /bin/bash obsidian \
    && usermod -a -G audio,video obsidian \
    && mkdir -p /home/obsidian/.config /home/obsidian/.local/share \
    && chown -R obsidian:obsidian /home/obsidian

# Set up workspace
WORKDIR /workspace
COPY package*.json ./

# Install Node.js dependencies with comprehensive testing libraries
RUN npm ci --include=dev && npm install --save-dev \
    puppeteer@23.11.1 \
    playwright@1.45.0 \
    @playwright/test@1.45.0 \
    webdriverio@8.38.0 \
    @wdio/cli@8.38.0 \
    @wdio/local-runner@8.38.0 \
    @wdio/mocha-framework@8.38.0 \
    @wdio/spec-reporter@8.38.0 \
    @wdio/allure-reporter@8.38.0 \
    chai@5.3.3 \
    sharp@0.33.4 \
    && npm cache clean --force

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p \
    /workspace/test-results/screenshots \
    /workspace/test-results/videos \
    /workspace/test-results/allure-results \
    /workspace/test-results/html-reports \
    /workspace/wdio-logs \
    /workspace/playwright-report \
    /home/obsidian/.obsidian \
    /home/obsidian/vault

# Set up test vault with plugin configuration
COPY tests/e2e/test-vault/ /home/obsidian/vault/
RUN mkdir -p /home/obsidian/vault/.obsidian/plugins/exocortex \
    && chown -R obsidian:obsidian /home/obsidian

# Copy built plugin files
RUN if [ -f main.js ]; then cp main.js /home/obsidian/vault/.obsidian/plugins/exocortex/; fi \
    && if [ -f manifest.json ]; then cp manifest.json /home/obsidian/vault/.obsidian/plugins/exocortex/; fi \
    && if [ -f styles.css ]; then cp styles.css /home/obsidian/vault/.obsidian/plugins/exocortex/; fi

# Create comprehensive test runner script with proper escaping
RUN echo '#!/bin/bash' > /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'set -e' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'echo "🚀 Starting Enhanced E2E Tests with Real Obsidian"' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'echo "================================================="' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '# Start D-Bus' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'service dbus start' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '# Start X virtual framebuffer with comprehensive configuration' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'Xvfb :99 -screen 0 1920x1080x24 -ac +extension GLX +render -noreset -nolisten tcp -dpi 96 &' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'XVFB_PID=$!' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'export DISPLAY=:99' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '# Wait for X server and validate display' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'echo "⏳ Waiting for Xvfb to start..."' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'timeout=10' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'while [ $timeout -gt 0 ]; do' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    if xdpyinfo -display :99 >/dev/null 2>&1; then' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '        echo "✅ Xvfb display :99 is ready"' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '        break' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    fi' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    sleep 1' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    timeout=$((timeout - 1))' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'done' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'if [ $timeout -eq 0 ]; then' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    echo "❌ Xvfb failed to start properly"' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    exit 1' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'fi' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '# Verify screen resolution' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'xwininfo -root -display :99 || echo "⚠️ xwininfo not available"' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '# Start window manager' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'fluxbox -display :99 &' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'WM_PID=$!' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '# Cleanup function' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'cleanup() {' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    echo "🧹 Cleaning up processes..."' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    kill $XVFB_PID $WM_PID 2>/dev/null || true' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    pkill -f obsidian 2>/dev/null || true' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '}' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'trap cleanup EXIT' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '# Enhanced test runner with comprehensive functionality' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'cd /workspace' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'su obsidian -c "' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    export DISPLAY=:99' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    export HOME=/home/obsidian' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    cd /workspace' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    echo \"📱 Starting Obsidian...\"' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    obsidian --no-sandbox --disable-dev-shm-usage --disable-gpu --remote-debugging-port=9222 /home/obsidian/vault &' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    sleep 10' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    echo \"🧪 Running E2E tests...\"' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    node tests/e2e/docker/debug-display-test.js || echo \"Debug test failed\"' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '    node tests/e2e/docker/enhanced-plugin-test.js || true' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '"' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo '' >> /usr/local/bin/run-e2e-enhanced.sh && \
    echo 'echo "✅ Enhanced E2E tests completed"' >> /usr/local/bin/run-e2e-enhanced.sh

RUN chmod +x /usr/local/bin/run-e2e-enhanced.sh

# Create enhanced health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD pgrep Xvfb > /dev/null && pgrep obsidian > /dev/null || exit 1

# Set permissions
RUN chown -R obsidian:obsidian /workspace/test-results /workspace/wdio-logs /workspace/playwright-report

# Default command
CMD ["/usr/local/bin/run-e2e-enhanced.sh"]